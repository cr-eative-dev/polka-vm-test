{
	"id": "0a9bb9a389abdffc094d6ef1d18c6cad",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MagicWordInteractive.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.8.2 <0.9.0;\n\n/**\n * @title MagicWord\n * @dev Store za magic word and get za magic sentence\n * @custom:dev-run-script ./scripts/deploy_with_ethers.ts\n */\ncontract MagicWord {\n\n    string private magicWord;\n    string[] private adjectives;\n    uint256 private nonce;\n    \n    constructor() {\n        adjectives = [\n            \"amazing\", \"awesome\", \"brilliant\", \"beautiful\", \"brave\", \n            \"bold\", \"bright\", \"calm\", \"charming\", \"cheerful\", \n            \"clever\", \"colorful\", \"comfortable\", \"confident\", \"considerate\", \n            \"cool\", \"courageous\", \"creative\", \"curious\", \"daring\", \n            \"dazzling\", \"delightful\", \"determined\", \"diligent\", \"dynamic\", \n            \"eager\", \"elegant\", \"enchanting\", \"energetic\", \"enthusiastic\", \n            \"excellent\", \"exceptional\", \"exciting\", \"extraordinary\", \"fabulous\", \n            \"fantastic\", \"fearless\", \"friendly\", \"fun\", \"funny\", \n            \"generous\", \"gentle\", \"glorious\", \"good\", \"gorgeous\", \n            \"graceful\", \"great\", \"happy\", \"harmonious\", \"helpful\", \n            \"honest\", \"honorable\", \"humorous\", \"imaginative\", \"impressive\", \n            \"independent\", \"innovative\"\n        ];\n    }\n\n    function inputMagicWord(string memory word) public {\n        magicWord = word;\n    }\n\n    function makeMagicBaby() public returns (string memory) {\n        require(bytes(magicWord).length > 0, \"No magic word has been stored yet\");\n        \n        nonce++;\n        \n        uint256 randomIndex = uint256(keccak256(abi.encodePacked(block.timestamp, block.prevrandao, nonce, msg.sender))) % adjectives.length;\n        \n        return string(abi.encodePacked(magicWord, \" is \", adjectives[randomIndex], \"!\"));\n    }\n    \n    function getCurrentMagicWord() public view returns (string memory) {\n        return magicWord;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.deployedBytecode",
						"evm.methodIdentifiers"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/MagicWordInteractive.sol": {
				"MagicWord": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "getCurrentMagicWord",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "word",
									"type": "string"
								}
							],
							"name": "inputMagicWord",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "makeMagicBaby",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"metadata": {
						"optimizer_settings": {
							"is_debug_logging_enabled": false,
							"is_fallback_to_size_enabled": false,
							"is_verify_each_enabled": false,
							"level_back_end": "Aggressive",
							"level_middle_end": "Aggressive",
							"level_middle_end_size": "Zero"
						},
						"revive_pallet_version": null,
						"revive_version": "0.1.0-dev.12+commit.66f9a4d.llvm-18.1.8",
						"solc_metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getCurrentMagicWord\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"word\",\"type\":\"string\"}],\"name\":\"inputMagicWord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"makeMagicBaby\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:dev-run-script\":\"./scripts/deploy_with_ethers.ts\",\"details\":\"Store za magic word and get za magic sentence\",\"kind\":\"dev\",\"methods\":{},\"title\":\"MagicWord\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MagicWordInteractive.sol\":\"MagicWord\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MagicWordInteractive.sol\":{\"keccak256\":\"0x2134ba56276efe95067512de03bfb44b79ac4a2c5688d74d46cc3fcc7aff7831\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ac68ceef0357df684ed950121949c5717801e920859f4597ebd23b5f9ad98bbe\",\"dweb:/ipfs/QmX5xBTvkwHSMeCLZDn7gbdEJR2kGfMCDNdDPXEvaatXo6\"]}},\"version\":1}",
						"solc_version": "0.8.28+commit.7893614a.Emscripten.clang"
					},
					"devdoc": {
						"custom:dev-run-script": "./scripts/deploy_with_ethers.ts",
						"details": "Store za magic word and get za magic sentence",
						"kind": "dev",
						"methods": {},
						"title": "MagicWord",
						"version": 1
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					},
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "contracts/MagicWordInteractive.sol:MagicWord",
								"label": "magicWord",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 7,
								"contract": "contracts/MagicWordInteractive.sol:MagicWord",
								"label": "adjectives",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_string_storage)dyn_storage"
							},
							{
								"astId": 9,
								"contract": "contracts/MagicWordInteractive.sol:MagicWord",
								"label": "nonce",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_array(t_string_storage)dyn_storage": {
								"base": "t_string_storage",
								"encoding": "dynamic_array",
								"label": "string[]",
								"numberOfBytes": "32"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"evm": {
						"assembly": "// RO data = 0/0 bytes\n// RW data = 0/65552 bytes\n// Stack size = 16384 bytes\n\n// Instructions = 22932\n// Code size = 73501 bytes\n\n      : @0 (gas: 2)\n     0: i32 a2 = a0 >> 0x10\n     3: jump @6 if a2 != 0\n      : @1 (gas: 2)\n     6: a2 = 0x10001\n    11: jump @6 if a1 >=u a2\n      : @2 (gas: 4)\n    14: a1 = a1 + a0\n    17: i32 a1 = a1 + 0x1f\n    20: a1 = a1 & 0xffffffffffffffe0\n    23: jump @7 if a1 >=u 65537\n      : @3 (gas: 2)\n    29: a3 = i32 [0x20000]\n    34: jump @5 if a3 >=u a1\n      : @4 (gas: 4)\n    37: u32 [0x20000] = a1\n    42: a1 = 0x20010\n    47: a0 = a0 + a1\n    50: ret\n      : @5 (gas: 3)\n    52: a1 = 0x20010\n    57: a0 = a0 + a1\n    60: ret\n      : @6 (gas: 1)\n    62: trap\n      : @7 (gas: 1)\n    63: trap\n      : @8 (gas: 1)\n    64: jump @22 if a0 == a1\n      : @9 (gas: 9)\n    67: a3 = a1 << 0x20\n    70: a3 = a3 >> 0x20\n    73: a4 = a0 << 0x20\n    76: a4 = a4 >> 0x20\n    79: a4 = a4 + a2\n    82: a3 = a3 - a4\n    85: a4 = a2 << 0x1\n    88: a4 = -a4\n    90: jump @15 if a4 >=u a3\n      : @10 (gas: 1)\n    93: jump @19 if a0 >=u a1\n      : @11 (gas: 1)\n    96: jump @22 if a2 == 0\n      : @12 (gas: 3)\n    99: a2 = a2 + a0\n   102: a3 = a0\n   104: fallthrough\n      : @13 (gas: 6)\n   105: a4 = u8 [a1]\n   107: a1 = a1 + 0x1\n   110: a5 = a3 + 0x1\n   113: u8 [a3] = a4\n   115: a3 = a5\n   117: jump @13 if a5 != a2\n      : @14 (gas: 1)\n   120: jump @22\n      : @15 (gas: 1)\n   122: jump @22 if a2 == 0\n      : @16 (gas: 3)\n   125: a2 = a2 + a0\n   128: a3 = a0\n   130: fallthrough\n      : @17 (gas: 6)\n   131: a4 = u8 [a1]\n   133: a1 = a1 + 0x1\n   136: a5 = a3 + 0x1\n   139: u8 [a3] = a4\n   141: a3 = a5\n   143: jump @17 if a5 != a2\n      : @18 (gas: 1)\n   146: jump @22\n      : @19 (gas: 1)\n   148: jump @22 if a2 == 0\n      : @20 (gas: 2)\n   151: i32 a3 = a2 + 0xffffffffffffffff\n   154: fallthrough\n      : @21 (gas: 7)\n   155: a4 = a1 + a3\n   158: a4 = u8 [a4]\n   160: a2 = a2 + 0xffffffffffffffff\n   163: a5 = a0 + a3\n   166: u8 [a5] = a4\n   168: i32 a3 = a3 + 0xffffffffffffffff\n   171: jump @21 if a2 != 0\n      : @22 (gas: 1)\n   174: ret\n      : @23 (gas: 13)\n   176: sp = sp + 0xffffffffffffffd8\n   179: u64 [sp + 0x20] = ra\n   182: u64 [sp + 0x18] = s0\n   185: u64 [sp + 0x10] = s1\n   188: a2 = u64 [a1]\n   190: u64 [sp + 0x8] = a2\n   193: a2 = u64 [a1 + 0x8]\n   196: u64 [sp] = a2\n   198: s0 = u64 [a1 + 0x10]\n   201: s1 = u64 [a1 + 0x18]\n   204: i32 a0 = a0 + 0\n   206: a1 = 0x20\n   209: ra = 2, jump @0\n      : @24 [@dyn 1] (gas: 71)\n   214: a1 = reverse s1\n   216: a2 = reverse s0\n   218: a3 = u64 [sp]\n   220: a3 = reverse a3\n   222: a4 = u64 [sp + 0x8]\n   225: a4 = reverse a4\n   227: u8 [a0 + 0x18] = a4\n   230: u8 [a0 + 0x10] = a3\n   233: u8 [a0 + 0x8] = a2\n   236: u8 [a0] = a1\n   238: a5 = a4 >> 0x38\n   241: u8 [a0 + 0x1f] = a5\n   244: a5 = a4 >> 0x30\n   247: u8 [a0 + 0x1e] = a5\n   250: a5 = a4 >> 0x28\n   253: u8 [a0 + 0x1d] = a5\n   256: a5 = a4 >> 0x20\n   259: u8 [a0 + 0x1c] = a5\n   262: a5 = a4 >> 0x18\n   265: u8 [a0 + 0x1b] = a5\n   268: a5 = a4 >> 0x10\n   271: u8 [a0 + 0x1a] = a5\n   274: a4 = a4 >> 0x8\n   277: u8 [a0 + 0x19] = a4\n   280: a4 = a3 >> 0x38\n   283: u8 [a0 + 0x17] = a4\n   286: a4 = a3 >> 0x30\n   289: u8 [a0 + 0x16] = a4\n   292: a4 = a3 >> 0x28\n   295: u8 [a0 + 0x15] = a4\n   298: a4 = a3 >> 0x20\n   301: u8 [a0 + 0x14] = a4\n   304: a4 = a3 >> 0x18\n   307: u8 [a0 + 0x13] = a4\n   310: a4 = a3 >> 0x10\n   313: u8 [a0 + 0x12] = a4\n   316: a3 = a3 >> 0x8\n   319: u8 [a0 + 0x11] = a3\n   322: a3 = a2 >> 0x38\n   325: u8 [a0 + 0xf] = a3\n   328: a3 = a2 >> 0x30\n   331: u8 [a0 + 0xe] = a3\n   334: a3 = a2 >> 0x28\n   337: u8 [a0 + 0xd] = a3\n   340: a3 = a2 >> 0x20\n   343: u8 [a0 + 0xc] = a3\n   346: a3 = a2 >> 0x18\n   349: u8 [a0 + 0xb] = a3\n   352: a3 = a2 >> 0x10\n   355: u8 [a0 + 0xa] = a3\n   358: a2 = a2 >> 0x8\n   361: u8 [a0 + 0x9] = a2\n   364: a2 = a1 >> 0x38\n   367: u8 [a0 + 0x7] = a2\n   370: a2 = a1 >> 0x30\n   373: u8 [a0 + 0x6] = a2\n   376: a2 = a1 >> 0x28\n   379: u8 [a0 + 0x5] = a2\n   382: a2 = a1 >> 0x20\n   385: u8 [a0 + 0x4] = a2\n   388: a2 = a1 >> 0x18\n   391: u8 [a0 + 0x3] = a2\n   394: a2 = a1 >> 0x10\n   397: u8 [a0 + 0x2] = a2\n   400: a1 = a1 >> 0x8\n   403: u8 [a0 + 0x1] = a1\n   406: ra = u64 [sp + 0x20]\n   409: s0 = u64 [sp + 0x18]\n   412: s1 = u64 [sp + 0x10]\n   415: sp = sp + 0x28\n   418: ret\n      : @25 (gas: 6)\n   420: sp = sp + 0xfffffffffffffff0\n   423: u64 [sp + 0x8] = ra\n   426: u64 [sp] = s0\n   428: s0 = a0 & 0x1\n   431: ecalli 2 // 'call_data_size'\n   433: fallthrough\n      : @26 (gas: 2)\n   434: u32 [0x20004] = a0\n   439: jump @28 if s0 == 0\n      : @27 (gas: 1)\n   442: ra = 4, jump @29\n      : @28 [@dyn 2] (gas: 1)\n   446: ra = 6, jump @44\n      : @29 [@dyn 3] (gas: 9)\n   451: sp = sp + 0xffffffffffffffc0\n   454: u64 [sp + 0x38] = ra\n   457: u64 [sp + 0x30] = s0\n   460: u64 [sp + 0x28] = s1\n   463: s0 = sp + 0x40\n   466: sp = sp & 0xffffffffffffffe0\n   469: a0 = 0x40\n   472: a1 = 0x20\n   475: ra = 8, jump @0\n      : @30 [@dyn 4] (gas: 39)\n   480: u8 [a0 + 31] = 0x80\n   485: u8 [a0 + 30] = 0\n   488: u8 [a0 + 29] = 0\n   491: u8 [a0 + 28] = 0\n   494: u8 [a0 + 27] = 0\n   497: u8 [a0 + 26] = 0\n   500: u8 [a0 + 25] = 0\n   503: u8 [a0 + 24] = 0\n   506: u8 [a0 + 23] = 0\n   509: u8 [a0 + 22] = 0\n   512: u8 [a0 + 21] = 0\n   515: u8 [a0 + 20] = 0\n   518: u8 [a0 + 19] = 0\n   521: u8 [a0 + 18] = 0\n   524: u8 [a0 + 17] = 0\n   527: u8 [a0 + 16] = 0\n   530: u8 [a0 + 15] = 0\n   533: u8 [a0 + 14] = 0\n   536: u8 [a0 + 13] = 0\n   539: u8 [a0 + 12] = 0\n   542: u8 [a0 + 11] = 0\n   545: u8 [a0 + 10] = 0\n   548: u8 [a0 + 9] = 0\n   551: u8 [a0 + 8] = 0\n   554: u8 [a0 + 7] = 0\n   557: u8 [a0 + 6] = 0\n   560: u8 [a0 + 5] = 0\n   563: u8 [a0 + 4] = 0\n   566: u8 [a0 + 3] = 0\n   569: u8 [a0 + 2] = 0\n   572: u8 [a0 + 1] = 0\n   575: u8 [a0 + 0] = 0\n   577: u64 [sp + 24] = 0\n   580: u64 [sp + 0] = 0\n   582: u64 [sp + 8] = 0\n   585: u64 [sp + 16] = 0\n   588: i32 a0 = sp + 0\n   590: ecalli 10 // 'value_transferred'\n   592: fallthrough\n      : @31 (gas: 8)\n   593: a0 = u64 [sp + 0x10]\n   596: a1 = u64 [sp + 0x18]\n   599: a2 = u64 [sp + 0x8]\n   602: a3 = u64 [sp]\n   604: a1 = a1 | a2\n   607: a0 = a0 | a3\n   610: a0 = a0 | a1\n   613: jump @36 if a0 != 0\n      : @32 (gas: 19)\n   617: ra = 0xa\n   620: sp = sp + 0xfffffffffffff808\n   624: u64 [sp + 0x7f0] = ra\n   628: u64 [sp + 0x7e8] = s0\n   632: u64 [sp + 0x7e0] = s1\n   636: s0 = sp + 0x7f8\n   640: sp = sp + 0xfffffffffffff8a8\n   644: sp = sp & 0xfffffffffffffff0\n   647: s1 = sp + 0x7e8\n   651: u64 [s1 + 1824] = 0\n   655: u64 [s1 + 1816] = 0\n   659: u64 [s1 + 1800] = 0x720\n   665: a0 = sp + 0x7ff\n   669: a0 = a0 + 0x711\n   673: a1 = sp + 0x7ff\n   677: a1 = a1 + 0x6f1\n   681: u64 [s1 + 1808] = 0\n   685: ra = 0xb4\n   689: jump @56\n      : @33 [@dyn 5] (gas: 3)\n   692: a0 = 0x40\n   695: a1 = 0x20\n   698: ra = 12, jump @0\n      : @34 [@dyn 6] (gas: 100)\n   703: a1 = u8 [a0 + 0x11]\n   706: a2 = u8 [a0 + 0x10]\n   709: a3 = u8 [a0 + 0x12]\n   712: a4 = u8 [a0 + 0x13]\n   715: a1 = a1 << 0x8\n   718: a1 = a1 | a2\n   721: a3 = a3 << 0x10\n   724: a4 = a4 << 0x18\n   727: a3 = a3 | a4\n   730: a1 = a1 | a3\n   733: a2 = u8 [a0 + 0x15]\n   736: a3 = u8 [a0 + 0x14]\n   739: a4 = u8 [a0 + 0x16]\n   742: a5 = u8 [a0 + 0x17]\n   745: a2 = a2 << 0x8\n   748: a2 = a2 | a3\n   751: a4 = a4 << 0x10\n   754: a5 = a5 << 0x18\n   757: a4 = a4 | a5\n   760: a2 = a2 | a4\n   763: a2 = a2 << 0x20\n   766: t0 = a2 | a1\n   769: a2 = u8 [a0 + 0x1]\n   772: a3 = u8 [a0]\n   774: a4 = u8 [a0 + 0x2]\n   777: a5 = u8 [a0 + 0x3]\n   780: a2 = a2 << 0x8\n   783: a2 = a2 | a3\n   786: a4 = a4 << 0x10\n   789: a5 = a5 << 0x18\n   792: a4 = a4 | a5\n   795: a2 = a2 | a4\n   798: a3 = u8 [a0 + 0x5]\n   801: a4 = u8 [a0 + 0x4]\n   804: a5 = u8 [a0 + 0x6]\n   807: s1 = u8 [a0 + 0x7]\n   810: a3 = a3 << 0x8\n   813: a3 = a3 | a4\n   816: a5 = a5 << 0x10\n   819: s1 = s1 << 0x18\n   822: a5 = a5 | s1\n   825: a3 = a3 | a5\n   828: a3 = a3 << 0x20\n   831: a2 = a2 | a3\n   834: a3 = u8 [a0 + 0x19]\n   837: a4 = u8 [a0 + 0x18]\n   840: a5 = u8 [a0 + 0x1a]\n   843: s1 = u8 [a0 + 0x1b]\n   846: a3 = a3 << 0x8\n   849: a3 = a3 | a4\n   852: a5 = a5 << 0x10\n   855: s1 = s1 << 0x18\n   858: a5 = a5 | s1\n   861: a3 = a3 | a5\n   864: a4 = u8 [a0 + 0x1d]\n   867: a5 = u8 [a0 + 0x1c]\n   870: s1 = u8 [a0 + 0x1e]\n   873: a1 = u8 [a0 + 0x1f]\n   876: a4 = a4 << 0x8\n   879: a4 = a4 | a5\n   882: s1 = s1 << 0x10\n   885: a1 = a1 << 0x18\n   888: a1 = a1 | s1\n   891: a1 = a1 | a4\n   894: a1 = a1 << 0x20\n   897: a3 = a3 | a1\n   900: a1 = u8 [a0 + 0x9]\n   903: a4 = u8 [a0 + 0x8]\n   906: a5 = u8 [a0 + 0xa]\n   909: s1 = u8 [a0 + 0xb]\n   912: a1 = a1 << 0x8\n   915: a1 = a1 | a4\n   918: a5 = a5 << 0x10\n   921: s1 = s1 << 0x18\n   924: a5 = a5 | s1\n   927: a1 = a1 | a5\n   930: a4 = u8 [a0 + 0xd]\n   933: a5 = u8 [a0 + 0xc]\n   936: s1 = u8 [a0 + 0xe]\n   939: a0 = u8 [a0 + 0xf]\n   942: a4 = a4 << 0x8\n   945: a4 = a4 | a5\n   948: s1 = s1 << 0x10\n   951: a0 = a0 << 0x18\n   954: a0 = a0 | s1\n   957: a0 = a0 | a4\n   960: a0 = a0 << 0x20\n   963: a0 = a0 | a1\n   966: a0 = reverse a0\n   968: s1 = reverse a3\n   970: a1 = reverse a2\n   972: a2 = reverse t0\n   974: a1 = a1 | a2\n   977: a2 = s1 | a0\n   980: a2 = a2 | a1\n   983: a2 = a2 >> 0x20\n   986: a0 = a0 | a1\n   989: a0 = a0 << 0x20\n   992: a0 = a0 | a2\n   995: jump @38 if a0 == 0\n      : @35 (gas: 1)\n   998: trap\n      : @36 (gas: 3)\n   999: a0 = 0\n  1001: a1 = 0\n  1003: ra = 14, jump @0\n      : @37 [@dyn 7] (gas: 5)\n  1008: i32 a1 = a0 + 0\n  1010: a0 = 0x1\n  1013: a2 = 0\n  1015: ecalli 7 // 'seal_return'\n  1017: fallthrough\n      : @38 (gas: 4)\n  1018: i32 s1 = s1 + 0\n  1020: a0 = s1\n  1022: a1 = 0\n  1024: ra = 16, jump @0\n      : @39 [@dyn 8] (gas: 5)\n  1029: i32 a0 = a0 + 0\n  1031: a1 = 0\n  1033: a2 = 0\n  1035: ecalli 0 // 'call_data_copy'\n  1036: fallthrough\n      : @40 (gas: 2)\n  1037: a1 = i32 [0x20008]\n  1042: jump @42 if a1 == 0\n      : @41 (gas: 4)\n  1045: a0 = 0x30010\n  1050: i32 a0 = a0 + 0\n  1052: ecalli 8 // 'set_immutable_data'\n  1054: fallthrough\n      : @42 (gas: 3)\n  1055: a0 = s1\n  1057: a1 = 0\n  1059: ra = 18, jump @0\n      : @43 [@dyn 9] (gas: 6)\n  1064: i32 a1 = a0 + 0\n  1066: a0 = 0\n  1068: a2 = 0\n  1070: ra = 0x14\n  1073: ecalli 7 // 'seal_return'\n  1075: fallthrough\n      : @44 [@dyn 10] (gas: 8)\n  1076: sp = sp + 0xffffffffffffffc0\n  1079: u64 [sp + 0x38] = ra\n  1082: u64 [sp + 0x30] = s0\n  1085: s0 = sp + 0x40\n  1088: sp = sp & 0xffffffffffffffe0\n  1091: a0 = 0x40\n  1094: a1 = 0x20\n  1097: ra = 22, jump @0\n      : @45 [@dyn 11] (gas: 34)\n  1102: u8 [a0 + 31] = 0x80\n  1107: u8 [a0 + 30] = 0\n  1110: u8 [a0 + 29] = 0\n  1113: u8 [a0 + 28] = 0\n  1116: u8 [a0 + 27] = 0\n  1119: u8 [a0 + 26] = 0\n  1122: u8 [a0 + 25] = 0\n  1125: u8 [a0 + 24] = 0\n  1128: u8 [a0 + 23] = 0\n  1131: u8 [a0 + 22] = 0\n  1134: u8 [a0 + 21] = 0\n  1137: u8 [a0 + 20] = 0\n  1140: u8 [a0 + 19] = 0\n  1143: u8 [a0 + 18] = 0\n  1146: u8 [a0 + 17] = 0\n  1149: u8 [a0 + 16] = 0\n  1152: u8 [a0 + 15] = 0\n  1155: u8 [a0 + 14] = 0\n  1158: u8 [a0 + 13] = 0\n  1161: u8 [a0 + 12] = 0\n  1164: u8 [a0 + 11] = 0\n  1167: u8 [a0 + 10] = 0\n  1170: u8 [a0 + 9] = 0\n  1173: u8 [a0 + 8] = 0\n  1176: u8 [a0 + 7] = 0\n  1179: u8 [a0 + 3] = 0\n  1182: u8 [a0 + 2] = 0\n  1185: u8 [a0 + 1] = 0\n  1188: u8 [a0 + 0] = 0\n  1190: a1 = i32 [0x20004]\n  1195: u8 [a0 + 6] = 0\n  1198: u8 [a0 + 5] = 0\n  1201: u8 [a0 + 4] = 0\n  1204: jump @51 if a1 <u 4\n      : @46 (gas: 4)\n  1208: i32 a0 = sp + 0\n  1210: a1 = 0\n  1212: ecalli 1 // 'call_data_load'\n  1214: fallthrough\n      : @47 (gas: 2)\n  1215: a0 = i32 [sp + 0x1c]\n  1218: jump @53 if a0 == 2225898444\n      : @48 (gas: 1)\n  1225: jump @52 if a0 == 3209044583\n      : @49 (gas: 1)\n  1232: jump @51 if a0 != 1755367785\n      : @50 (gas: 14)\n  1239: ra = 0x18\n  1242: sp = sp + 0xfffffffffffffec0\n  1246: u64 [sp + 0x138] = ra\n  1250: u64 [sp + 0x130] = s0\n  1254: u64 [sp + 0x128] = s1\n  1258: s0 = sp + 0x140\n  1262: sp = sp & 0xffffffffffffffe0\n  1265: u64 [sp + 280] = 0\n  1269: u64 [sp + 272] = 0\n  1273: u64 [sp + 264] = 0\n  1277: u64 [sp + 256] = 0\n  1281: i32 a0 = sp + 0x100\n  1285: ecalli 10 // 'value_transferred'\n  1287: jump @796\n      : @51 [@dyn 12] (gas: 1)\n  1291: ra = 26, jump @823\n      : @52 [@dyn 13] (gas: 13)\n  1297: ra = 0x1c\n  1300: sp = sp + 0xffffffffffffff20\n  1304: u64 [sp + 0xd8] = ra\n  1308: u64 [sp + 0xd0] = s0\n  1312: s0 = sp + 0xe0\n  1316: sp = sp & 0xffffffffffffffe0\n  1319: u64 [sp + 184] = 0\n  1323: u64 [sp + 176] = 0\n  1327: u64 [sp + 168] = 0\n  1331: u64 [sp + 160] = 0\n  1335: i32 a0 = sp + 0xa0\n  1339: ecalli 10 // 'value_transferred'\n  1341: jump @874\n      : @53 [@dyn 14] (gas: 1)\n  1345: ra = 30, jump @809\n      : @54 [@dyn 15] (gas: 7)\n  1351: sp = sp + 0xfffffffffffffff0\n  1354: u64 [sp + 0x8] = ra\n  1357: u64 [sp] = s0\n  1359: s0 = a0\n  1361: a0 = 0x40\n  1364: a1 = 0x20\n  1367: ra = 32, jump @0\n      : @55 [@dyn 16] (gas: 100)\n  1372: a1 = u8 [a0 + 0x1]\n  1375: a2 = u8 [a0]\n  1377: a3 = u8 [a0 + 0x2]\n  1380: a4 = u8 [a0 + 0x3]\n  1383: a1 = a1 << 0x8\n  1386: a1 = a1 | a2\n  1389: a3 = a3 << 0x10\n  1392: a4 = a4 << 0x18\n  1395: a3 = a3 | a4\n  1398: a1 = a1 | a3\n  1401: a2 = u8 [a0 + 0x5]\n  1404: a3 = u8 [a0 + 0x4]\n  1407: a4 = u8 [a0 + 0x6]\n  1410: a5 = u8 [a0 + 0x7]\n  1413: a2 = a2 << 0x8\n  1416: a2 = a2 | a3\n  1419: a4 = a4 << 0x10\n  1422: a5 = a5 << 0x18\n  1425: a4 = a4 | a5\n  1428: a2 = a2 | a4\n  1431: a2 = a2 << 0x20\n  1434: t0 = a2 | a1\n  1437: a2 = u8 [a0 + 0x9]\n  1440: a3 = u8 [a0 + 0x8]\n  1443: a4 = u8 [a0 + 0xa]\n  1446: a5 = u8 [a0 + 0xb]\n  1449: a2 = a2 << 0x8\n  1452: a2 = a2 | a3\n  1455: a4 = a4 << 0x10\n  1458: a5 = a5 << 0x18\n  1461: a4 = a4 | a5\n  1464: a2 = a2 | a4\n  1467: a3 = u8 [a0 + 0xd]\n  1470: a4 = u8 [a0 + 0xc]\n  1473: a5 = u8 [a0 + 0xe]\n  1476: a1 = u8 [a0 + 0xf]\n  1479: a3 = a3 << 0x8\n  1482: a3 = a3 | a4\n  1485: a5 = a5 << 0x10\n  1488: a1 = a1 << 0x18\n  1491: a1 = a1 | a5\n  1494: a1 = a1 | a3\n  1497: a1 = a1 << 0x20\n  1500: t1 = a1 | a2\n  1503: a1 = u8 [a0 + 0x11]\n  1506: a3 = u8 [a0 + 0x10]\n  1509: a4 = u8 [a0 + 0x12]\n  1512: a5 = u8 [a0 + 0x13]\n  1515: a1 = a1 << 0x8\n  1518: a1 = a1 | a3\n  1521: a4 = a4 << 0x10\n  1524: a5 = a5 << 0x18\n  1527: a4 = a4 | a5\n  1530: a1 = a1 | a4\n  1533: a3 = u8 [a0 + 0x15]\n  1536: a4 = u8 [a0 + 0x14]\n  1539: a5 = u8 [a0 + 0x16]\n  1542: a2 = u8 [a0 + 0x17]\n  1545: a3 = a3 << 0x8\n  1548: a3 = a3 | a4\n  1551: a5 = a5 << 0x10\n  1554: a2 = a2 << 0x18\n  1557: a2 = a2 | a5\n  1560: a2 = a2 | a3\n  1563: a2 = a2 << 0x20\n  1566: a3 = a2 | a1\n  1569: a1 = u8 [a0 + 0x19]\n  1572: a2 = u8 [a0 + 0x18]\n  1575: a4 = u8 [a0 + 0x1a]\n  1578: a5 = u8 [a0 + 0x1b]\n  1581: a1 = a1 << 0x8\n  1584: a1 = a1 | a2\n  1587: a4 = a4 << 0x10\n  1590: a5 = a5 << 0x18\n  1593: a4 = a4 | a5\n  1596: a1 = a1 | a4\n  1599: a2 = u8 [a0 + 0x1d]\n  1602: a4 = u8 [a0 + 0x1c]\n  1605: a5 = u8 [a0 + 0x1e]\n  1608: a0 = u8 [a0 + 0x1f]\n  1611: a2 = a2 << 0x8\n  1614: a2 = a2 | a4\n  1617: a5 = a5 << 0x10\n  1620: a0 = a0 << 0x18\n  1623: a0 = a0 | a5\n  1626: a0 = a0 | a2\n  1629: a0 = a0 << 0x20\n  1632: a0 = a0 | a1\n  1635: a0 = reverse a0\n  1637: a1 = reverse a3\n  1639: a2 = reverse t1\n  1641: a3 = reverse t0\n  1643: u64 [s0 + 0x18] = a3\n  1646: u64 [s0 + 0x10] = a2\n  1649: u64 [s0 + 0x8] = a1\n  1652: u64 [s0] = a0\n  1654: ra = u64 [sp + 0x8]\n  1657: s0 = u64 [sp]\n  1659: sp = sp + 0x10\n  1662: ret\n      : @56 (gas: 18)\n  1664: sp = sp + 0xffffffffffffff60\n  1668: u64 [sp + 0x98] = ra\n  1672: u64 [sp + 0x90] = s0\n  1676: u64 [sp + 0x88] = s1\n  1680: s0 = sp + 0xa0\n  1684: sp = sp & 0xfffffffffffffff0\n  1687: a2 = u64 [a1 + 0x18]\n  1690: u64 [sp + 0x30] = a2\n  1693: a2 = u64 [a1 + 0x10]\n  1696: u64 [sp + 0x28] = a2\n  1699: a2 = u64 [a1 + 0x8]\n  1702: u64 [sp + 0x20] = a2\n  1705: a1 = u64 [a1]\n  1707: u64 [sp + 0x18] = a1\n  1710: u64 [sp + 0x38] = a0\n  1713: a0 = 0x40\n  1716: a1 = 0x20\n  1719: ra = 34, jump @0\n      : @57 [@dyn 17] (gas: 130)\n  1724: a1 = u8 [a0 + 0x19]\n  1727: a2 = u8 [a0 + 0x18]\n  1730: a3 = u8 [a0 + 0x1a]\n  1733: a4 = u8 [a0 + 0x1b]\n  1736: a1 = a1 << 0x8\n  1739: a1 = a1 | a2\n  1742: a3 = a3 << 0x10\n  1745: a4 = a4 << 0x18\n  1748: a3 = a3 | a4\n  1751: a1 = a1 | a3\n  1754: a2 = u8 [a0 + 0x1d]\n  1757: a3 = u8 [a0 + 0x1c]\n  1760: a4 = u8 [a0 + 0x1e]\n  1763: a5 = u8 [a0 + 0x1f]\n  1766: a2 = a2 << 0x8\n  1769: a2 = a2 | a3\n  1772: a4 = a4 << 0x10\n  1775: a5 = a5 << 0x18\n  1778: a4 = a4 | a5\n  1781: a2 = a2 | a4\n  1784: a2 = a2 << 0x20\n  1787: t0 = a2 | a1\n  1790: a2 = u8 [a0 + 0x11]\n  1793: a3 = u8 [a0 + 0x10]\n  1796: a4 = u8 [a0 + 0x12]\n  1799: a5 = u8 [a0 + 0x13]\n  1802: a2 = a2 << 0x8\n  1805: a2 = a2 | a3\n  1808: a4 = a4 << 0x10\n  1811: a5 = a5 << 0x18\n  1814: a4 = a4 | a5\n  1817: a2 = a2 | a4\n  1820: a3 = u8 [a0 + 0x15]\n  1823: a4 = u8 [a0 + 0x14]\n  1826: a5 = u8 [a0 + 0x16]\n  1829: s1 = u8 [a0 + 0x17]\n  1832: a3 = a3 << 0x8\n  1835: a3 = a3 | a4\n  1838: a5 = a5 << 0x10\n  1841: s1 = s1 << 0x18\n  1844: a5 = a5 | s1\n  1847: a3 = a3 | a5\n  1850: a3 = a3 << 0x20\n  1853: a2 = a2 | a3\n  1856: a3 = u8 [a0 + 0x9]\n  1859: a4 = u8 [a0 + 0x8]\n  1862: a5 = u8 [a0 + 0xa]\n  1865: s1 = u8 [a0 + 0xb]\n  1868: a3 = a3 << 0x8\n  1871: a3 = a3 | a4\n  1874: a5 = a5 << 0x10\n  1877: s1 = s1 << 0x18\n  1880: a5 = a5 | s1\n  1883: a3 = a3 | a5\n  1886: a4 = u8 [a0 + 0xd]\n  1889: a5 = u8 [a0 + 0xc]\n  1892: s1 = u8 [a0 + 0xe]\n  1895: a1 = u8 [a0 + 0xf]\n  1898: a4 = a4 << 0x8\n  1901: a4 = a4 | a5\n  1904: s1 = s1 << 0x10\n  1907: a1 = a1 << 0x18\n  1910: a1 = a1 | s1\n  1913: a1 = a1 | a4\n  1916: a1 = a1 << 0x20\n  1919: a3 = a3 | a1\n  1922: a1 = u8 [a0 + 0x1]\n  1925: a4 = u8 [a0]\n  1927: a5 = u8 [a0 + 0x2]\n  1930: s1 = u8 [a0 + 0x3]\n  1933: a1 = a1 << 0x8\n  1936: a1 = a1 | a4\n  1939: a5 = a5 << 0x10\n  1942: s1 = s1 << 0x18\n  1945: a5 = a5 | s1\n  1948: a1 = a1 | a5\n  1951: a4 = u8 [a0 + 0x5]\n  1954: a5 = u8 [a0 + 0x4]\n  1957: s1 = u8 [a0 + 0x6]\n  1960: a0 = u8 [a0 + 0x7]\n  1963: a4 = a4 << 0x8\n  1966: a4 = a4 | a5\n  1969: s1 = s1 << 0x10\n  1972: a0 = a0 << 0x18\n  1975: a0 = a0 | s1\n  1978: a0 = a0 | a4\n  1981: a0 = a0 << 0x20\n  1984: a0 = a0 | a1\n  1987: t1 = reverse a0\n  1989: t2 = reverse a3\n  1991: s1 = reverse a2\n  1993: a5 = reverse t0\n  1995: a1 = u64 [sp + 0x18]\n  1998: a0 = a1 + 0x1f\n  2001: a1 = a0 <u a1\n  2004: a3 = u64 [sp + 0x20]\n  2007: a2 = a3 + a1\n  2010: a3 = a2 <u a3\n  2013: a3 = a1 if a1 == 0\n  2016: a1 = u64 [sp + 0x28]\n  2019: a3 = a3 + a1\n  2022: a1 = a3 <u a1\n  2025: a4 = u64 [sp + 0x30]\n  2028: a1 = a1 + a4\n  2031: a0 = a0 & 0xffffffffffffffe0\n  2034: a0 = a0 + a5\n  2037: u64 [sp + 0x28] = a5\n  2040: u64 [sp + 0x10] = a0\n  2043: a4 = a0 <u a5\n  2046: a2 = a2 + s1\n  2049: a5 = a2 + a4\n  2052: a2 = a5 ^ s1\n  2055: u64 [sp + 0x30] = s1\n  2058: a0 = a5 <u s1\n  2061: a0 = a4 if a2 == 0\n  2064: a3 = a3 + t2\n  2067: a4 = a3 + a0\n  2070: s1 = a4 <u a3\n  2073: a2 = a3 <u t2\n  2076: a1 = a1 + t1\n  2079: a1 = a1 + a2\n  2082: s1 = s1 + a1\n  2085: a1 = a4 >u 0\n  2087: a2 = s1 >u 0\n  2089: a2 = a1 if s1 == 0\n  2092: a1 = a4 | s1\n  2095: u64 [sp + 0x8] = a5\n  2098: a3 = a5 >u 0\n  2100: a3 = a2 if a1 != 0\n  2103: jump @61 if a3 != 0\n      : @58 (gas: 8)\n  2107: a1 = a4 <u t2\n  2110: a2 = s1 ^ t1\n  2113: a3 = s1 <u t1\n  2116: a3 = a1 if a2 == 0\n  2119: a1 = a4 ^ t2\n  2122: a1 = a1 | a2\n  2125: a0 = a3 if a1 != 0\n  2128: jump @61 if a0 != 0\n      : @59 (gas: 6)\n  2132: a0 = 0x40\n  2135: a1 = 0x20\n  2138: u64 [sp + 0x20] = t2\n  2141: u64 [sp + 0x18] = t1\n  2144: u64 [sp] = a4\n  2146: ra = 36, jump @0\n      : @60 [@dyn 18] (gas: 82)\n  2151: a1 = reverse s1\n  2153: a2 = u64 [sp]\n  2155: a2 = reverse a2\n  2157: a3 = u64 [sp + 0x8]\n  2160: a3 = reverse a3\n  2162: a4 = u64 [sp + 0x10]\n  2165: a4 = reverse a4\n  2167: u8 [a0 + 0x18] = a4\n  2170: a5 = a4 >> 0x38\n  2173: u8 [a0 + 0x1f] = a5\n  2176: a5 = a4 >> 0x30\n  2179: u8 [a0 + 0x1e] = a5\n  2182: a5 = a4 >> 0x28\n  2185: u8 [a0 + 0x1d] = a5\n  2188: a5 = a4 >> 0x20\n  2191: u8 [a0 + 0x1c] = a5\n  2194: a5 = a4 >> 0x18\n  2197: u8 [a0 + 0x1b] = a5\n  2200: a5 = a4 >> 0x10\n  2203: u8 [a0 + 0x1a] = a5\n  2206: a4 = a4 >> 0x8\n  2209: u8 [a0 + 0x19] = a4\n  2212: u8 [a0 + 0x10] = a3\n  2215: a4 = a3 >> 0x38\n  2218: u8 [a0 + 0x17] = a4\n  2221: a4 = a3 >> 0x30\n  2224: u8 [a0 + 0x16] = a4\n  2227: a4 = a3 >> 0x28\n  2230: u8 [a0 + 0x15] = a4\n  2233: a4 = a3 >> 0x20\n  2236: u8 [a0 + 0x14] = a4\n  2239: a4 = a3 >> 0x18\n  2242: u8 [a0 + 0x13] = a4\n  2245: a4 = a3 >> 0x10\n  2248: u8 [a0 + 0x12] = a4\n  2251: a3 = a3 >> 0x8\n  2254: u8 [a0 + 0x11] = a3\n  2257: u8 [a0 + 0x8] = a2\n  2260: a3 = a2 >> 0x38\n  2263: u8 [a0 + 0xf] = a3\n  2266: a3 = a2 >> 0x30\n  2269: u8 [a0 + 0xe] = a3\n  2272: a3 = a2 >> 0x28\n  2275: u8 [a0 + 0xd] = a3\n  2278: a3 = a2 >> 0x20\n  2281: u8 [a0 + 0xc] = a3\n  2284: a3 = a2 >> 0x18\n  2287: u8 [a0 + 0xb] = a3\n  2290: a3 = a2 >> 0x10\n  2293: u8 [a0 + 0xa] = a3\n  2296: a2 = a2 >> 0x8\n  2299: u8 [a0 + 0x9] = a2\n  2302: u8 [a0] = a1\n  2304: a2 = a1 >> 0x38\n  2307: u8 [a0 + 0x7] = a2\n  2310: a2 = a1 >> 0x30\n  2313: u8 [a0 + 0x6] = a2\n  2316: a2 = a1 >> 0x28\n  2319: u8 [a0 + 0x5] = a2\n  2322: a2 = a1 >> 0x20\n  2325: u8 [a0 + 0x4] = a2\n  2328: a2 = a1 >> 0x18\n  2331: u8 [a0 + 0x3] = a2\n  2334: a2 = a1 >> 0x10\n  2337: u8 [a0 + 0x2] = a2\n  2340: a1 = a1 >> 0x8\n  2343: u8 [a0 + 0x1] = a1\n  2346: a0 = u64 [sp + 0x38]\n  2349: a1 = u64 [sp + 0x28]\n  2352: u64 [a0] = a1\n  2354: a1 = u64 [sp + 0x18]\n  2357: u64 [a0 + 0x18] = a1\n  2360: a1 = u64 [sp + 0x30]\n  2363: u64 [a0 + 0x8] = a1\n  2366: a1 = u64 [sp + 0x20]\n  2369: u64 [a0 + 0x10] = a1\n  2372: sp = s0 + 0xffffffffffffff60\n  2376: ra = u64 [sp + 0x98]\n  2380: s0 = u64 [sp + 0x90]\n  2384: s1 = u64 [sp + 0x88]\n  2388: sp = sp + 0xa0\n  2392: ret\n      : @61 (gas: 8)\n  2394: u64 [sp + 112] = 0\n  2397: u64 [sp + 104] = 0\n  2400: u64 [sp + 96] = 0\n  2403: a0 = 0x4e487b7100000000\n  2413: a1 = sp + 0x60\n  2416: u64 [sp + 0x78] = a0\n  2419: a0 = 0\n  2421: ra = 38, jump @23\n      : @62 [@dyn 19] (gas: 7)\n  2426: u64 [sp + 88] = 0\n  2429: u64 [sp + 80] = 0\n  2432: u64 [sp + 64] = 0x41\n  2436: a0 = 0x4\n  2439: a1 = sp + 0x40\n  2442: u64 [sp + 72] = 0\n  2445: ra = 40, jump @23\n      : @63 [@dyn 20] (gas: 3)\n  2450: a1 = 0x24\n  2453: a0 = 0\n  2455: ra = 42, jump @0\n      : @64 [@dyn 21] (gas: 6)\n  2460: i32 a1 = a0 + 0\n  2462: a0 = 0x1\n  2465: a2 = 0x24\n  2468: ra = 0x2c\n  2471: ecalli 7 // 'seal_return'\n  2473: fallthrough\n      : @65 [@dyn 22] (gas: 7)\n  2474: a4 = u64 [a1 + 0x18]\n  2477: a3 = u64 [a1 + 0x10]\n  2480: a2 = u64 [a1 + 0x8]\n  2483: t0 = a3 | a4\n  2486: a5 = a2 <u 0x1\n  2489: a5 = 0 if t0 != 0\n  2491: jump @67 if a5 == 0\n      : @66 (gas: 16)\n  2494: a1 = u64 [a1]\n  2496: a5 = a3 >> 0x3b\n  2499: a4 = a4 << 0x5\n  2502: a4 = a4 | a5\n  2505: a5 = a2 >> 0x3b\n  2508: a3 = a3 << 0x5\n  2511: a3 = a3 | a5\n  2514: a5 = a1 >> 0x3b\n  2517: a2 = a2 << 0x5\n  2520: a2 = a2 | a5\n  2523: a1 = a1 << 0x5\n  2526: u64 [a0] = a1\n  2528: u64 [a0 + 0x8] = a2\n  2531: u64 [a0 + 0x10] = a3\n  2534: u64 [a0 + 0x18] = a4\n  2537: ret\n      : @67 (gas: 13)\n  2539: sp = sp + 0xffffffffffffffb0\n  2542: u64 [sp + 0x48] = ra\n  2545: u64 [sp + 0x40] = s0\n  2548: s0 = sp + 0x50\n  2551: sp = sp & 0xfffffffffffffff0\n  2554: u64 [sp + 48] = 0\n  2557: u64 [sp + 40] = 0\n  2560: u64 [sp + 32] = 0\n  2563: a0 = 0x4e487b7100000000\n  2573: a1 = sp + 0x20\n  2576: u64 [sp + 0x38] = a0\n  2579: a0 = 0\n  2581: ra = 46, jump @23\n      : @68 [@dyn 23] (gas: 7)\n  2586: u64 [sp + 24] = 0\n  2589: u64 [sp + 16] = 0\n  2592: u64 [sp + 0] = 0x41\n  2595: a0 = 0x4\n  2598: a1 = sp\n  2600: u64 [sp + 8] = 0\n  2603: ra = 48, jump @23\n      : @69 [@dyn 24] (gas: 3)\n  2608: a1 = 0x24\n  2611: a0 = 0\n  2613: ra = 50, jump @0\n      : @70 [@dyn 25] (gas: 6)\n  2618: i32 a1 = a0 + 0\n  2620: a0 = 0x1\n  2623: a2 = 0x24\n  2626: ra = 0x34\n  2629: ecalli 7 // 'seal_return'\n  2631: fallthrough\n      : @71 [@dyn 26] (gas: 13)\n  2632: sp = sp + 0xffffffffffffff60\n  2636: u64 [sp + 0x98] = ra\n  2640: u64 [sp + 0x90] = s0\n  2644: u64 [sp + 0x88] = s1\n  2648: s0 = sp + 0xa0\n  2652: sp = sp & 0xfffffffffffffff0\n  2655: a4 = u64 [a1 + 0x18]\n  2658: a3 = u64 [a1 + 0x10]\n  2661: a2 = u64 [a1 + 0x8]\n  2664: s1 = a3 | a4\n  2667: a5 = a2 <u 0x1\n  2670: a5 = 0 if s1 != 0\n  2672: jump @74 if a5 == 0\n      : @72 (gas: 19)\n  2675: s1 = a0\n  2677: a0 = u64 [a1]\n  2679: a1 = a3 >> 0x3b\n  2682: a4 = a4 << 0x5\n  2685: a4 = a4 | a1\n  2688: a1 = a2 >> 0x3b\n  2691: a3 = a3 << 0x5\n  2694: a1 = a1 | a3\n  2697: a3 = a0 >> 0x3b\n  2700: a2 = a2 << 0x5\n  2703: a2 = a2 | a3\n  2706: a0 = a0 << 0x5\n  2709: u64 [sp + 0x40] = a0\n  2712: u64 [sp + 0x48] = a2\n  2715: u64 [sp + 0x50] = a1\n  2718: a0 = sp + 0x60\n  2721: a1 = sp + 0x40\n  2724: u64 [sp + 0x58] = a4\n  2727: ra = 54, jump @56\n      : @73 [@dyn 27] (gas: 14)\n  2732: a0 = u64 [sp + 0x70]\n  2735: a1 = u64 [sp + 0x78]\n  2738: a2 = u64 [sp + 0x60]\n  2741: a3 = u64 [sp + 0x68]\n  2744: u64 [s1 + 0x10] = a0\n  2747: u64 [s1 + 0x18] = a1\n  2750: u64 [s1] = a2\n  2752: u64 [s1 + 0x8] = a3\n  2755: sp = s0 + 0xffffffffffffff60\n  2759: ra = u64 [sp + 0x98]\n  2763: s0 = u64 [sp + 0x90]\n  2767: s1 = u64 [sp + 0x88]\n  2771: sp = sp + 0xa0\n  2775: ret\n      : @74 (gas: 8)\n  2777: u64 [sp + 48] = 0\n  2780: u64 [sp + 40] = 0\n  2783: u64 [sp + 32] = 0\n  2786: a0 = 0x4e487b7100000000\n  2796: a1 = sp + 0x20\n  2799: u64 [sp + 0x38] = a0\n  2802: a0 = 0\n  2804: ra = 56, jump @23\n      : @75 [@dyn 28] (gas: 7)\n  2809: u64 [sp + 24] = 0\n  2812: u64 [sp + 16] = 0\n  2815: u64 [sp + 0] = 0x41\n  2818: a0 = 0x4\n  2821: a1 = sp\n  2823: u64 [sp + 8] = 0\n  2826: ra = 58, jump @23\n      : @76 [@dyn 29] (gas: 3)\n  2831: a1 = 0x24\n  2834: a0 = 0\n  2836: ra = 60, jump @0\n      : @77 [@dyn 30] (gas: 6)\n  2841: i32 a1 = a0 + 0\n  2843: a0 = 0x1\n  2846: a2 = 0x24\n  2849: ra = 0x3e\n  2852: ecalli 7 // 'seal_return'\n  2854: fallthrough\n      : @78 [@dyn 31] (gas: 7)\n  2855: a3 = u64 [a1 + 0x18]\n  2858: a4 = u64 [a1 + 0x10]\n  2861: a2 = u64 [a1 + 0x8]\n  2864: a3 = a3 | a4\n  2867: a4 = a2 <u 0x1\n  2870: a4 = 0 if a3 != 0\n  2872: jump @80 if a4 == 0\n      : @79 (gas: 16)\n  2875: a1 = u64 [a1]\n  2877: a3 = a1 + 0x1f\n  2880: a1 = a3 <u a1\n  2883: a1 = a1 + a2\n  2886: a1 = a1 & 0x1\n  2889: a3 = a3 & 0xffffffffffffffe0\n  2892: a2 = a3 + 0x20\n  2895: a3 = a2 <u a3\n  2898: a4 = a1 + a3\n  2901: a1 = a4 <u a1\n  2904: a1 = a3 if a3 == 0\n  2907: u64 [a0 + 24] = 0\n  2910: u64 [a0] = a2\n  2912: u64 [a0 + 0x8] = a4\n  2915: u64 [a0 + 0x10] = a1\n  2918: ret\n      : @80 (gas: 13)\n  2920: sp = sp + 0xffffffffffffffb0\n  2923: u64 [sp + 0x48] = ra\n  2926: u64 [sp + 0x40] = s0\n  2929: s0 = sp + 0x50\n  2932: sp = sp & 0xfffffffffffffff0\n  2935: u64 [sp + 48] = 0\n  2938: u64 [sp + 40] = 0\n  2941: u64 [sp + 32] = 0\n  2944: a0 = 0x4e487b7100000000\n  2954: a1 = sp + 0x20\n  2957: u64 [sp + 0x38] = a0\n  2960: a0 = 0\n  2962: ra = 64, jump @23\n      : @81 [@dyn 32] (gas: 7)\n  2967: u64 [sp + 24] = 0\n  2970: u64 [sp + 16] = 0\n  2973: u64 [sp + 0] = 0x41\n  2976: a0 = 0x4\n  2979: a1 = sp\n  2981: u64 [sp + 8] = 0\n  2984: ra = 66, jump @23\n      : @82 [@dyn 33] (gas: 3)\n  2989: a1 = 0x24\n  2992: a0 = 0\n  2994: ra = 68, jump @0\n      : @83 [@dyn 34] (gas: 6)\n  2999: i32 a1 = a0 + 0\n  3001: a0 = 0x1\n  3004: a2 = 0x24\n  3007: ra = 0x46\n  3010: ecalli 7 // 'seal_return'\n  3012: fallthrough\n      : @84 [@dyn 35] (gas: 16)\n  3013: sp = sp + 0xffffffffffffff20\n  3017: u64 [sp + 0xd8] = ra\n  3021: u64 [sp + 0xd0] = s0\n  3025: u64 [sp + 0xc8] = s1\n  3029: s0 = sp + 0xe0\n  3033: sp = sp & 0xfffffffffffffff0\n  3036: a3 = u64 [a1 + 0x18]\n  3039: a2 = u64 [a1 + 0x10]\n  3042: a4 = u64 [a1 + 0x8]\n  3045: u64 [sp + 0x10] = a2\n  3048: u64 [sp + 0x8] = a3\n  3051: a2 = a2 | a3\n  3054: a3 = a4 <u 0x1\n  3057: a3 = 0 if a2 != 0\n  3059: u64 [sp + 0x38] = a0\n  3062: jump @90 if a3 == 0\n      : @85 (gas: 19)\n  3066: s1 = u64 [a1]\n  3068: a0 = s1 + 0x1f\n  3071: a1 = a0 <u s1\n  3074: u64 [sp + 0x18] = a4\n  3077: a1 = a1 + a4\n  3080: a1 = a1 & 0x1\n  3083: a0 = a0 & 0xffffffffffffffe0\n  3086: a2 = a0 + 0x20\n  3089: a0 = a2 <u a0\n  3092: a3 = a1 + a0\n  3095: a4 = a3 <u a1\n  3098: a4 = a0 if a0 == 0\n  3101: u64 [sp + 152] = 0\n  3105: u64 [sp + 0x80] = a2\n  3109: u64 [sp + 0x88] = a3\n  3113: a0 = sp + 0xa0\n  3117: a1 = sp + 0x80\n  3121: u64 [sp + 0x90] = a4\n  3125: ra = 72, jump @56\n      : @86 [@dyn 36] (gas: 15)\n  3130: a0 = u64 [sp + 0xb8]\n  3134: a2 = u64 [sp + 0xb0]\n  3138: a1 = u64 [sp + 0xa8]\n  3142: a3 = u64 [sp + 0xa0]\n  3146: u64 [sp + 0x28] = a0\n  3149: u64 [sp + 0x20] = a1\n  3152: a0 = a0 | a1\n  3155: a1 = a3 | a2\n  3158: a1 = a1 | a0\n  3161: a1 = a1 >> 0x20\n  3164: u64 [sp + 0x30] = a2\n  3167: a0 = a0 | a2\n  3170: a0 = a0 << 0x20\n  3173: a0 = a0 | a1\n  3176: jump @89 if a0 != 0\n      : @87 (gas: 4)\n  3180: i32 a0 = a3 + 0\n  3182: a1 = 0x20\n  3185: u64 [sp] = a3\n  3187: ra = 74, jump @0\n      : @88 [@dyn 37] (gas: 82)\n  3192: a1 = u64 [sp + 0x8]\n  3195: a1 = reverse a1\n  3197: a2 = u64 [sp + 0x10]\n  3200: a2 = reverse a2\n  3202: a3 = u64 [sp + 0x18]\n  3205: a3 = reverse a3\n  3207: a4 = reverse s1\n  3209: a5 = a4 >> 0x38\n  3212: u8 [a0 + 0x1f] = a5\n  3215: a5 = a4 >> 0x30\n  3218: u8 [a0 + 0x1e] = a5\n  3221: a5 = a4 >> 0x28\n  3224: u8 [a0 + 0x1d] = a5\n  3227: a5 = a4 >> 0x20\n  3230: u8 [a0 + 0x1c] = a5\n  3233: a5 = a4 >> 0x18\n  3236: u8 [a0 + 0x1b] = a5\n  3239: a5 = a4 >> 0x10\n  3242: u8 [a0 + 0x1a] = a5\n  3245: a5 = a4 >> 0x8\n  3248: u8 [a0 + 0x19] = a5\n  3251: u8 [a0 + 0x18] = a4\n  3254: u8 [a0 + 0x10] = a3\n  3257: a4 = a3 >> 0x38\n  3260: u8 [a0 + 0x17] = a4\n  3263: a4 = a3 >> 0x30\n  3266: u8 [a0 + 0x16] = a4\n  3269: a4 = a3 >> 0x28\n  3272: u8 [a0 + 0x15] = a4\n  3275: a4 = a3 >> 0x20\n  3278: u8 [a0 + 0x14] = a4\n  3281: a4 = a3 >> 0x18\n  3284: u8 [a0 + 0x13] = a4\n  3287: a4 = a3 >> 0x10\n  3290: u8 [a0 + 0x12] = a4\n  3293: a3 = a3 >> 0x8\n  3296: u8 [a0 + 0x11] = a3\n  3299: u8 [a0 + 0x8] = a2\n  3302: a3 = a2 >> 0x38\n  3305: u8 [a0 + 0xf] = a3\n  3308: a3 = a2 >> 0x30\n  3311: u8 [a0 + 0xe] = a3\n  3314: a3 = a2 >> 0x28\n  3317: u8 [a0 + 0xd] = a3\n  3320: a3 = a2 >> 0x20\n  3323: u8 [a0 + 0xc] = a3\n  3326: a3 = a2 >> 0x18\n  3329: u8 [a0 + 0xb] = a3\n  3332: a3 = a2 >> 0x10\n  3335: u8 [a0 + 0xa] = a3\n  3338: a2 = a2 >> 0x8\n  3341: u8 [a0 + 0x9] = a2\n  3344: u8 [a0] = a1\n  3346: a2 = a1 >> 0x38\n  3349: u8 [a0 + 0x7] = a2\n  3352: a2 = a1 >> 0x30\n  3355: u8 [a0 + 0x6] = a2\n  3358: a2 = a1 >> 0x28\n  3361: u8 [a0 + 0x5] = a2\n  3364: a2 = a1 >> 0x20\n  3367: u8 [a0 + 0x4] = a2\n  3370: a2 = a1 >> 0x18\n  3373: u8 [a0 + 0x3] = a2\n  3376: a2 = a1 >> 0x10\n  3379: u8 [a0 + 0x2] = a2\n  3382: a1 = a1 >> 0x8\n  3385: u8 [a0 + 0x1] = a1\n  3388: a0 = u64 [sp + 0x38]\n  3391: a1 = u64 [sp]\n  3393: u64 [a0] = a1\n  3395: a1 = u64 [sp + 0x28]\n  3398: u64 [a0 + 0x18] = a1\n  3401: a1 = u64 [sp + 0x20]\n  3404: u64 [a0 + 0x8] = a1\n  3407: a1 = u64 [sp + 0x30]\n  3410: u64 [a0 + 0x10] = a1\n  3413: sp = s0 + 0xffffffffffffff20\n  3417: ra = u64 [sp + 0xd8]\n  3421: s0 = u64 [sp + 0xd0]\n  3425: s1 = u64 [sp + 0xc8]\n  3429: sp = sp + 0xe0\n  3433: ret\n      : @89 (gas: 1)\n  3435: trap\n      : @90 (gas: 8)\n  3436: u64 [sp + 112] = 0\n  3439: u64 [sp + 104] = 0\n  3442: u64 [sp + 96] = 0\n  3445: a0 = 0x4e487b7100000000\n  3455: a1 = sp + 0x60\n  3458: u64 [sp + 0x78] = a0\n  3461: a0 = 0\n  3463: ra = 76, jump @23\n      : @91 [@dyn 38] (gas: 7)\n  3468: u64 [sp + 88] = 0\n  3471: u64 [sp + 80] = 0\n  3474: u64 [sp + 64] = 0x41\n  3478: a0 = 0x4\n  3481: a1 = sp + 0x40\n  3484: u64 [sp + 72] = 0\n  3487: ra = 78, jump @23\n      : @92 [@dyn 39] (gas: 3)\n  3492: a1 = 0x24\n  3495: a0 = 0\n  3497: ra = 80, jump @0\n      : @93 [@dyn 40] (gas: 6)\n  3502: i32 a1 = a0 + 0\n  3504: a0 = 0x1\n  3507: a2 = 0x24\n  3510: ra = 0x52\n  3513: ecalli 7 // 'seal_return'\n  3515: fallthrough\n      : @94 [@dyn 41] (gas: 12)\n  3516: a1 = u64 [a0 + 0x10]\n  3519: a2 = u64 [a0 + 0x18]\n  3522: a3 = u64 [a0 + 0x8]\n  3525: a0 = u64 [a0]\n  3527: a2 = a2 | a3\n  3530: a3 = a0 | a1\n  3533: a3 = a3 | a2\n  3536: a3 = a3 >> 0x20\n  3539: a1 = a1 | a2\n  3542: a1 = a1 << 0x20\n  3545: a1 = a1 | a3\n  3548: jump @97 if a1 != 0\n      : @95 (gas: 5)\n  3552: sp = sp + 0xfffffffffffffff8\n  3555: u64 [sp] = ra\n  3557: i32 a0 = a0 + 0\n  3559: a1 = 0x20\n  3562: ra = 84, jump @0\n      : @96 [@dyn 42] (gas: 37)\n  3567: u8 [a0 + 31] = 0\n  3570: u8 [a0 + 30] = 0\n  3573: u8 [a0 + 29] = 0\n  3576: u8 [a0 + 28] = 0\n  3579: u8 [a0 + 27] = 0\n  3582: u8 [a0 + 26] = 0\n  3585: u8 [a0 + 25] = 0\n  3588: u8 [a0 + 24] = 0\n  3591: u8 [a0 + 23] = 0\n  3594: u8 [a0 + 22] = 0\n  3597: u8 [a0 + 21] = 0\n  3600: u8 [a0 + 20] = 0\n  3603: u8 [a0 + 19] = 0\n  3606: u8 [a0 + 18] = 0\n  3609: u8 [a0 + 17] = 0\n  3612: u8 [a0 + 16] = 0\n  3615: u8 [a0 + 15] = 0\n  3618: u8 [a0 + 14] = 0\n  3621: u8 [a0 + 13] = 0\n  3624: u8 [a0 + 12] = 0\n  3627: u8 [a0 + 11] = 0\n  3630: u8 [a0 + 10] = 0\n  3633: u8 [a0 + 9] = 0\n  3636: u8 [a0 + 8] = 0\n  3639: u8 [a0 + 7] = 0\n  3642: u8 [a0 + 6] = 0x67\n  3646: u8 [a0 + 5] = 0x6e\n  3650: u8 [a0 + 4] = 0x69\n  3654: u8 [a0 + 3] = 0x7a\n  3658: a1 = 0x61\n  3661: u8 [a0 + 0x2] = a1\n  3664: a2 = 0x6d\n  3667: u8 [a0 + 0x1] = a2\n  3670: u8 [a0] = a1\n  3672: ra = u64 [sp]\n  3674: sp = sp + 0x8\n  3677: ret\n      : @97 (gas: 1)\n  3679: trap\n      : @98 [@dyn 43] (gas: 70)\n  3680: a1 = reverse s1\n  3682: a2 = u64 [sp + 0x68]\n  3685: a2 = reverse a2\n  3687: a3 = u64 [sp + 0x70]\n  3690: a3 = reverse a3\n  3692: a4 = u64 [sp + 0x78]\n  3695: a4 = reverse a4\n  3697: u8 [a0 + 0x18] = a4\n  3700: u8 [a0 + 0x10] = a3\n  3703: u8 [a0 + 0x8] = a2\n  3706: u8 [a0] = a1\n  3708: a5 = a4 >> 0x38\n  3711: u8 [a0 + 0x1f] = a5\n  3714: a5 = a4 >> 0x30\n  3717: u8 [a0 + 0x1e] = a5\n  3720: a5 = a4 >> 0x28\n  3723: u8 [a0 + 0x1d] = a5\n  3726: a5 = a4 >> 0x20\n  3729: u8 [a0 + 0x1c] = a5\n  3732: a5 = a4 >> 0x18\n  3735: u8 [a0 + 0x1b] = a5\n  3738: a5 = a4 >> 0x10\n  3741: u8 [a0 + 0x1a] = a5\n  3744: a4 = a4 >> 0x8\n  3747: u8 [a0 + 0x19] = a4\n  3750: a4 = a3 >> 0x38\n  3753: u8 [a0 + 0x17] = a4\n  3756: a4 = a3 >> 0x30\n  3759: u8 [a0 + 0x16] = a4\n  3762: a4 = a3 >> 0x28\n  3765: u8 [a0 + 0x15] = a4\n  3768: a4 = a3 >> 0x20\n  3771: u8 [a0 + 0x14] = a4\n  3774: a4 = a3 >> 0x18\n  3777: u8 [a0 + 0x13] = a4\n  3780: a4 = a3 >> 0x10\n  3783: u8 [a0 + 0x12] = a4\n  3786: a3 = a3 >> 0x8\n  3789: u8 [a0 + 0x11] = a3\n  3792: a3 = a2 >> 0x38\n  3795: u8 [a0 + 0xf] = a3\n  3798: a3 = a2 >> 0x30\n  3801: u8 [a0 + 0xe] = a3\n  3804: a3 = a2 >> 0x28\n  3807: u8 [a0 + 0xd] = a3\n  3810: a3 = a2 >> 0x20\n  3813: u8 [a0 + 0xc] = a3\n  3816: a3 = a2 >> 0x18\n  3819: u8 [a0 + 0xb] = a3\n  3822: a3 = a2 >> 0x10\n  3825: u8 [a0 + 0xa] = a3\n  3828: a2 = a2 >> 0x8\n  3831: u8 [a0 + 0x9] = a2\n  3834: a2 = a1 >> 0x38\n  3837: u8 [a0 + 0x7] = a2\n  3840: a2 = a1 >> 0x30\n  3843: u8 [a0 + 0x6] = a2\n  3846: a2 = a1 >> 0x28\n  3849: u8 [a0 + 0x5] = a2\n  3852: a2 = a1 >> 0x20\n  3855: u8 [a0 + 0x4] = a2\n  3858: a2 = a1 >> 0x18\n  3861: u8 [a0 + 0x3] = a2\n  3864: a2 = a1 >> 0x10\n  3867: u8 [a0 + 0x2] = a2\n  3870: a1 = a1 >> 0x8\n  3873: u8 [a0 + 0x1] = a1\n  3876: a1 = 0x20\n  3879: a0 = 0\n  3881: ra = 88, jump @0\n      : @99 [@dyn 44] (gas: 291)\n  3886: i32 a0 = a0 + 0\n  3888: i32 a2 = sp + 0x100\n  3892: a1 = 0x20\n  3895: ecalli 5 // 'hash_keccak_256'\n  3897: a0 = u64 [sp + 0x118]\n  3901: a1 = u64 [sp + 0x110]\n  3905: a2 = u64 [sp + 0x108]\n  3909: a3 = u64 [sp + 0x100]\n  3913: a0 = reverse a0\n  3915: u64 [sp + 0x48] = a0\n  3918: a1 = reverse a1\n  3920: u64 [sp + 0x40] = a1\n  3923: a2 = reverse a2\n  3925: u64 [sp + 0x38] = a2\n  3928: a3 = reverse a3\n  3930: u64 [sp + 0x30] = a3\n  3933: u64 [sp + 0xf8] = a3\n  3937: u64 [sp + 0xf0] = a2\n  3941: u64 [sp + 0xe8] = a1\n  3945: u64 [sp + 0xe0] = a0\n  3949: u64 [sp + 280] = 0\n  3953: u64 [sp + 272] = 0\n  3957: u64 [sp + 264] = 0\n  3961: u64 [sp + 256] = 0\n  3965: u32 [sp + 192] = 0x20\n  3970: i32 a1 = sp + 0xe0\n  3974: i32 a3 = sp + 0x100\n  3978: i32 a4 = sp + 0xc0\n  3982: a2 = 0xffffffffffffffff\n  3985: a0 = 0\n  3987: ecalli 4 // 'get_storage'\n  3989: ra = u64 [sp]\n  3991: a0 = ra >> 0x3d\n  3994: a3 = u64 [sp + 0x58]\n  3997: a1 = a3 << 0x3\n  4000: a1 = a1 | a0\n  4003: a0 = ra << 0x3\n  4006: a0 = a0 <u 0x100\n  4010: t0 = a0 ^ 0x1\n  4013: a2 = a1 >u 0\n  4015: t0 = a2 if a1 != 0\n  4018: a1 = a3 >> 0x3d\n  4021: s1 = u64 [sp + 0x8]\n  4024: a2 = s1 << 0x3\n  4027: a1 = a1 | a2\n  4030: a2 = s1 >> 0x3d\n  4033: a3 = u64 [sp + 0x60]\n  4036: a3 = a3 << 0x3\n  4039: a2 = a2 | a3\n  4042: a3 = a2 >u 0\n  4044: a4 = a1 >u 0\n  4046: a4 = a3 if a2 != 0\n  4049: a1 = a1 | a2\n  4052: t0 = a4 if a1 != 0\n  4055: a0 = u64 [sp + 0x100]\n  4059: u64 [sp + 0x28] = a0\n  4062: a0 = u64 [sp + 0x108]\n  4066: u64 [sp + 0x20] = a0\n  4069: a0 = u64 [sp + 0x110]\n  4073: u64 [sp + 0x18] = a0\n  4076: a0 = u64 [sp + 0x118]\n  4080: u64 [sp + 0x10] = a0\n  4083: u8 [sp + 159] = 0xff\n  4089: u8 [sp + 158] = 0xff\n  4095: u8 [sp + 157] = 0xff\n  4101: u8 [sp + 156] = 0xff\n  4107: u8 [sp + 155] = 0xff\n  4113: u8 [sp + 154] = 0xff\n  4119: u8 [sp + 153] = 0xff\n  4125: u8 [sp + 152] = 0xff\n  4131: u8 [sp + 151] = 0xff\n  4137: u8 [sp + 150] = 0xff\n  4143: u8 [sp + 149] = 0xff\n  4149: u8 [sp + 148] = 0xff\n  4155: u8 [sp + 147] = 0xff\n  4161: u8 [sp + 146] = 0xff\n  4167: u8 [sp + 145] = 0xff\n  4173: u8 [sp + 144] = 0xff\n  4179: u8 [sp + 143] = 0xff\n  4185: u8 [sp + 142] = 0xff\n  4191: u8 [sp + 141] = 0xff\n  4197: u8 [sp + 140] = 0xff\n  4203: u8 [sp + 139] = 0xff\n  4209: u8 [sp + 138] = 0xff\n  4215: u8 [sp + 137] = 0xff\n  4221: u8 [sp + 136] = 0xff\n  4227: u8 [sp + 135] = 0xff\n  4233: u8 [sp + 134] = 0xff\n  4239: u8 [sp + 133] = 0xff\n  4245: u8 [sp + 132] = 0xff\n  4251: u8 [sp + 131] = 0xff\n  4257: u8 [sp + 130] = 0xff\n  4263: u8 [sp + 129] = 0xff\n  4269: u8 [sp + 128] = 0xff\n  4275: a5 = ra & 0x1f\n  4278: a1 = sp + 0x80\n  4282: a5 = a5 + a1\n  4285: u8 [sp + 191] = 0\n  4289: u8 [sp + 190] = 0\n  4293: u8 [sp + 189] = 0\n  4297: u8 [sp + 188] = 0\n  4301: u8 [sp + 187] = 0\n  4305: u8 [sp + 186] = 0\n  4309: u8 [sp + 185] = 0\n  4313: u8 [sp + 184] = 0\n  4317: u8 [sp + 183] = 0\n  4321: u8 [sp + 182] = 0\n  4325: u8 [sp + 181] = 0\n  4329: u8 [sp + 180] = 0\n  4333: u8 [sp + 179] = 0\n  4337: u8 [sp + 178] = 0\n  4341: u8 [sp + 177] = 0\n  4345: u8 [sp + 176] = 0\n  4349: u8 [sp + 175] = 0\n  4353: u8 [sp + 174] = 0\n  4357: u8 [sp + 173] = 0\n  4361: u8 [sp + 172] = 0\n  4365: u8 [sp + 171] = 0\n  4369: u8 [sp + 170] = 0\n  4373: u8 [sp + 169] = 0\n  4377: u8 [sp + 168] = 0\n  4381: u8 [sp + 167] = 0\n  4385: u8 [sp + 166] = 0\n  4389: u8 [sp + 165] = 0\n  4393: u8 [sp + 164] = 0\n  4397: u8 [sp + 163] = 0\n  4401: u8 [sp + 162] = 0\n  4405: u8 [sp + 161] = 0\n  4409: u8 [sp + 160] = 0\n  4413: a1 = u8 [a5 + 0x1]\n  4416: a2 = u8 [a5]\n  4418: a3 = u8 [a5 + 0x2]\n  4421: a4 = u8 [a5 + 0x3]\n  4424: a1 = a1 << 0x8\n  4427: a1 = a1 | a2\n  4430: a3 = a3 << 0x10\n  4433: a4 = a4 << 0x18\n  4436: a3 = a3 | a4\n  4439: a1 = a1 | a3\n  4442: a2 = u8 [a5 + 0x5]\n  4445: a3 = u8 [a5 + 0x4]\n  4448: a4 = u8 [a5 + 0x6]\n  4451: a0 = u8 [a5 + 0x7]\n  4454: a2 = a2 << 0x8\n  4457: a2 = a2 | a3\n  4460: a4 = a4 << 0x10\n  4463: a0 = a0 << 0x18\n  4466: a0 = a0 | a4\n  4469: a0 = a0 | a2\n  4472: a0 = a0 << 0x20\n  4475: t2 = a0 | a1\n  4478: a0 = u8 [a5 + 0x9]\n  4481: a2 = u8 [a5 + 0x8]\n  4484: a3 = u8 [a5 + 0xa]\n  4487: a4 = u8 [a5 + 0xb]\n  4490: a0 = a0 << 0x8\n  4493: a0 = a0 | a2\n  4496: a3 = a3 << 0x10\n  4499: a4 = a4 << 0x18\n  4502: a3 = a3 | a4\n  4505: a1 = a3 | a0\n  4508: a2 = u8 [a5 + 0xd]\n  4511: a3 = u8 [a5 + 0xc]\n  4514: a4 = u8 [a5 + 0xe]\n  4517: a0 = u8 [a5 + 0xf]\n  4520: a2 = a2 << 0x8\n  4523: a2 = a2 | a3\n  4526: a4 = a4 << 0x10\n  4529: a0 = a0 << 0x18\n  4532: a0 = a0 | a4\n  4535: a0 = a0 | a2\n  4538: a0 = a0 << 0x20\n  4541: t1 = a0 | a1\n  4544: a0 = u8 [a5 + 0x11]\n  4547: a1 = u8 [a5 + 0x10]\n  4550: a3 = u8 [a5 + 0x12]\n  4553: a4 = u8 [a5 + 0x13]\n  4556: a0 = a0 << 0x8\n  4559: a0 = a0 | a1\n  4562: a3 = a3 << 0x10\n  4565: a4 = a4 << 0x18\n  4568: a3 = a3 | a4\n  4571: a2 = a3 | a0\n  4574: a1 = u8 [a5 + 0x15]\n  4577: a3 = u8 [a5 + 0x14]\n  4580: a4 = u8 [a5 + 0x16]\n  4583: a0 = u8 [a5 + 0x17]\n  4586: a1 = a1 << 0x8\n  4589: a1 = a1 | a3\n  4592: a4 = a4 << 0x10\n  4595: a0 = a0 << 0x18\n  4598: a0 = a0 | a4\n  4601: a0 = a0 | a1\n  4604: a0 = a0 << 0x20\n  4607: a3 = a0 | a2\n  4610: a0 = u8 [a5 + 0x19]\n  4613: a1 = u8 [a5 + 0x18]\n  4616: a2 = u8 [a5 + 0x1a]\n  4619: a4 = u8 [a5 + 0x1b]\n  4622: a0 = a0 << 0x8\n  4625: a0 = a0 | a1\n  4628: a2 = a2 << 0x10\n  4631: a4 = a4 << 0x18\n  4634: a2 = a2 | a4\n  4637: a0 = a0 | a2\n  4640: a1 = u8 [a5 + 0x1d]\n  4643: a2 = u8 [a5 + 0x1c]\n  4646: a4 = u8 [a5 + 0x1e]\n  4649: a5 = u8 [a5 + 0x1f]\n  4652: a1 = a1 << 0x8\n  4655: a1 = a1 | a2\n  4658: a4 = a4 << 0x10\n  4661: a5 = a5 << 0x18\n  4664: a4 = a4 | a5\n  4667: a1 = a1 | a4\n  4670: a1 = a1 << 0x20\n  4673: a0 = a0 | a1\n  4676: a0 = a0 ^ 0xffffffffffffffff\n  4679: a1 = a3 ^ 0xffffffffffffffff\n  4682: a2 = t1 ^ 0xffffffffffffffff\n  4685: a3 = t2 ^ 0xffffffffffffffff\n  4688: a3 = 0xffffffffffffffff if t0 != 0\n  4691: a2 = 0xffffffffffffffff if t0 != 0\n  4694: a1 = 0xffffffffffffffff if t0 != 0\n  4697: a0 = 0xffffffffffffffff if t0 != 0\n  4700: a4 = u64 [sp + 0x10]\n  4703: t0 = a4 & a0\n  4706: a0 = u64 [sp + 0x18]\n  4709: a1 = a1 & a0\n  4712: a0 = u64 [sp + 0x20]\n  4715: a2 = a2 & a0\n  4718: a0 = u64 [sp + 0x28]\n  4721: a3 = a3 & a0\n  4724: a4 = u64 [sp + 0x60]\n  4727: a4 = a4 << 0x1\n  4730: a5 = s1 >> 0x3f\n  4733: a4 = a4 | a5\n  4736: a5 = s1 << 0x1\n  4739: a0 = u64 [sp + 0x58]\n  4742: s1 = a0 >> 0x3f\n  4745: a5 = a5 | s1\n  4748: s1 = a0 << 0x1\n  4751: a0 = ra >> 0x3f\n  4754: a0 = a0 | s1\n  4757: s1 = ra << 0x1\n  4760: a3 = a3 | s1\n  4763: a0 = a0 | a2\n  4766: a1 = a1 | a5\n  4769: a2 = t0 | a4\n  4772: a4 = u64 [sp + 0x50]\n  4775: u64 [sp + 0xf8] = a4\n  4779: a4 = u64 [sp + 0x68]\n  4782: u64 [sp + 0xf0] = a4\n  4786: a4 = u64 [sp + 0x70]\n  4789: u64 [sp + 0xe8] = a4\n  4793: a4 = u64 [sp + 0x78]\n  4796: u64 [sp + 0xe0] = a4\n  4800: u64 [sp + 0x118] = a2\n  4804: u64 [sp + 0x110] = a1\n  4808: u64 [sp + 0x108] = a0\n  4812: u64 [sp + 0x100] = a3\n  4816: i32 a1 = sp + 0xe0\n  4820: i32 a3 = sp + 0x100\n  4824: a2 = 0xffffffffffffffff\n  4827: a4 = 0x20\n  4830: a0 = 0\n  4832: ecalli 9 // 'set_storage'\n  4834: a0 = u64 [sp + 0x30]\n  4837: u64 [sp + 0xf8] = a0\n  4841: a0 = u64 [sp + 0x38]\n  4844: u64 [sp + 0xf0] = a0\n  4848: a0 = u64 [sp + 0x40]\n  4851: u64 [sp + 0xe8] = a0\n  4855: a0 = u64 [sp + 0x48]\n  4858: u64 [sp + 0xe0] = a0\n  4862: u64 [sp + 280] = 0\n  4866: u64 [sp + 272] = 0\n  4870: u64 [sp + 264] = 0\n  4874: u64 [sp + 256] = 0\n  4878: i32 a1 = sp + 0xe0\n  4882: i32 a3 = sp + 0x100\n  4886: a2 = 0xffffffffffffffff\n  4889: a4 = 0x20\n  4892: a0 = 0\n  4894: ecalli 9 // 'set_storage'\n  4896: sp = s0 + 0xfffffffffffffec0\n  4900: ra = u64 [sp + 0x138]\n  4904: s0 = u64 [sp + 0x130]\n  4908: s1 = u64 [sp + 0x128]\n  4912: sp = sp + 0x140\n  4916: ret\n      : @100 (gas: 37)\n  4918: sp = sp + 0xfffffffffffffde0\n  4922: u64 [sp + 0x218] = ra\n  4926: u64 [sp + 0x210] = s0\n  4930: u64 [sp + 0x208] = s1\n  4934: s0 = sp + 0x220\n  4938: sp = sp & 0xffffffffffffffe0\n  4941: a4 = u64 [a2 + 0x18]\n  4944: u64 [sp + 0xc0] = a4\n  4948: s1 = u64 [a3 + 0x18]\n  4951: t2 = u64 [a3 + 0x10]\n  4954: a5 = u64 [a3]\n  4956: a3 = u64 [a3 + 0x8]\n  4959: t0 = s1 >u 0\n  4961: a4 = t2 >u 0\n  4963: a4 = t0 if s1 != 0\n  4966: t1 = a3 >u 0\n  4968: u64 [sp + 0x78] = a5\n  4971: a5 = a5 <u 0x20\n  4974: a5 = a5 ^ 0x1\n  4977: a5 = t1 if a3 != 0\n  4980: t1 = u64 [a2 + 0x10]\n  4983: t0 = u64 [a2 + 0x8]\n  4986: ra = u64 [a2]\n  4988: a2 = u64 [a0 + 0x18]\n  4991: u64 [sp + 0x88] = a2\n  4995: a2 = u64 [a0 + 0x10]\n  4998: u64 [sp + 0x80] = a2\n  5002: a2 = u64 [a0 + 0x8]\n  5005: u64 [sp + 0x70] = a2\n  5008: a2 = u64 [a0]\n  5010: a0 = t2 | s1\n  5013: a5 = a4 if a0 != 0\n  5016: u64 [sp + 0x60] = a3\n  5019: u64 [sp + 0x68] = a2\n  5022: u64 [sp + 0x58] = t2\n  5025: u64 [sp + 0x50] = s1\n  5028: jump @111 if a5 == 0\n      : @101 (gas: 6)\n  5032: u64 [sp + 0xa8] = ra\n  5036: u64 [sp + 0xb0] = t0\n  5040: u64 [sp + 0xb8] = t1\n  5044: a1 = 0x20\n  5047: a0 = 0\n  5049: ra = 90, jump @0\n      : @102 [@dyn 45] (gas: 71)\n  5054: a1 = u64 [sp + 0x88]\n  5058: a1 = reverse a1\n  5060: a2 = u64 [sp + 0x80]\n  5064: a2 = reverse a2\n  5066: a3 = u64 [sp + 0x70]\n  5069: a3 = reverse a3\n  5071: a4 = u64 [sp + 0x68]\n  5074: a4 = reverse a4\n  5076: a5 = a4 >> 0x38\n  5079: u8 [a0 + 0x1f] = a5\n  5082: a5 = a4 >> 0x30\n  5085: u8 [a0 + 0x1e] = a5\n  5088: a5 = a4 >> 0x28\n  5091: u8 [a0 + 0x1d] = a5\n  5094: a5 = a4 >> 0x20\n  5097: u8 [a0 + 0x1c] = a5\n  5100: a5 = a4 >> 0x18\n  5103: u8 [a0 + 0x1b] = a5\n  5106: a5 = a4 >> 0x10\n  5109: u8 [a0 + 0x1a] = a5\n  5112: a5 = a4 >> 0x8\n  5115: u8 [a0 + 0x19] = a5\n  5118: u8 [a0 + 0x18] = a4\n  5121: u8 [a0 + 0x10] = a3\n  5124: a4 = a3 >> 0x38\n  5127: u8 [a0 + 0x17] = a4\n  5130: a4 = a3 >> 0x30\n  5133: u8 [a0 + 0x16] = a4\n  5136: a4 = a3 >> 0x28\n  5139: u8 [a0 + 0x15] = a4\n  5142: a4 = a3 >> 0x20\n  5145: u8 [a0 + 0x14] = a4\n  5148: a4 = a3 >> 0x18\n  5151: u8 [a0 + 0x13] = a4\n  5154: a4 = a3 >> 0x10\n  5157: u8 [a0 + 0x12] = a4\n  5160: a3 = a3 >> 0x8\n  5163: u8 [a0 + 0x11] = a3\n  5166: u8 [a0 + 0x8] = a2\n  5169: a3 = a2 >> 0x38\n  5172: u8 [a0 + 0xf] = a3\n  5175: a3 = a2 >> 0x30\n  5178: u8 [a0 + 0xe] = a3\n  5181: a3 = a2 >> 0x28\n  5184: u8 [a0 + 0xd] = a3\n  5187: a3 = a2 >> 0x20\n  5190: u8 [a0 + 0xc] = a3\n  5193: a3 = a2 >> 0x18\n  5196: u8 [a0 + 0xb] = a3\n  5199: a3 = a2 >> 0x10\n  5202: u8 [a0 + 0xa] = a3\n  5205: a2 = a2 >> 0x8\n  5208: u8 [a0 + 0x9] = a2\n  5211: u8 [a0] = a1\n  5213: a2 = a1 >> 0x38\n  5216: u8 [a0 + 0x7] = a2\n  5219: a2 = a1 >> 0x30\n  5222: u8 [a0 + 0x6] = a2\n  5225: a2 = a1 >> 0x28\n  5228: u8 [a0 + 0x5] = a2\n  5231: a2 = a1 >> 0x20\n  5234: u8 [a0 + 0x4] = a2\n  5237: a2 = a1 >> 0x18\n  5240: u8 [a0 + 0x3] = a2\n  5243: a2 = a1 >> 0x10\n  5246: u8 [a0 + 0x2] = a2\n  5249: a1 = a1 >> 0x8\n  5252: u8 [a0 + 0x1] = a1\n  5255: a1 = 0x20\n  5258: a0 = 0\n  5260: ra = 92, jump @0\n      : @103 [@dyn 46] (gas: 5)\n  5265: i32 a0 = a0 + 0\n  5267: i32 a2 = sp + 0x1e0\n  5271: a1 = 0x20\n  5274: ecalli 5 // 'hash_keccak_256'\n  5276: fallthrough\n      : @104 (gas: 52)\n  5277: a0 = u64 [sp + 0x1e0]\n  5281: a1 = u64 [sp + 0x1e8]\n  5285: a2 = u64 [sp + 0x1f8]\n  5289: a3 = u64 [sp + 0x1f0]\n  5293: a0 = reverse a0\n  5295: u64 [sp + 0x90] = a0\n  5299: t1 = reverse a1\n  5301: s1 = reverse a2\n  5303: a5 = reverse a3\n  5305: ra = u64 [sp + 0x78]\n  5308: a1 = ra + 0x1f\n  5311: a0 = a1 <u ra\n  5314: a3 = u64 [sp + 0x60]\n  5317: a2 = a3 + a0\n  5320: a3 = a2 <u a3\n  5323: a3 = a0 if a0 == 0\n  5326: t2 = u64 [sp + 0x58]\n  5329: a0 = t2 + a3\n  5332: a3 = a0 << 0x3b\n  5335: a4 = a2 >> 0x5\n  5338: a3 = a3 | a4\n  5341: a2 = a2 << 0x3b\n  5344: a1 = a1 >> 0x5\n  5347: a1 = a1 | a2\n  5350: t0 = s1 + a1\n  5353: u64 [sp + 0x98] = s1\n  5357: a1 = t0 <u s1\n  5360: s1 = a5 + a1\n  5363: a3 = a3 + s1\n  5366: a2 = a3 ^ a5\n  5369: u64 [sp + 0xd8] = a3\n  5373: u64 [sp + 0x40] = a5\n  5376: a3 = a3 <u a5\n  5379: a3 = a1 if a2 == 0\n  5382: a1 = a0 <u t2\n  5385: a2 = u64 [sp + 0x50]\n  5388: a1 = a1 + a2\n  5391: a0 = a0 >> 0x5\n  5394: a2 = a1 << 0x3b\n  5397: a0 = a0 | a2\n  5400: a1 = a1 >> 0x5\n  5403: a0 = a0 + t1\n  5406: t2 = a0 + a3\n  5409: a2 = t2 <u a0\n  5412: u64 [sp + 0x48] = t1\n  5415: a0 = a0 <u t1\n  5418: a3 = u64 [sp + 0x90]\n  5422: a1 = a1 + a3\n  5425: a1 = a1 + a0\n  5428: a0 = ra & 0x1f\n  5431: t1 = a1 + a2\n  5434: jump @106 if a0 == 0\n      : @105 (gas: 228)\n  5438: u8 [sp + 287] = 0\n  5442: u8 [sp + 286] = 0\n  5446: u8 [sp + 285] = 0\n  5450: u8 [sp + 284] = 0\n  5454: u8 [sp + 283] = 0\n  5458: u8 [sp + 282] = 0\n  5462: u8 [sp + 281] = 0\n  5466: u8 [sp + 280] = 0\n  5470: u8 [sp + 279] = 0\n  5474: u8 [sp + 278] = 0\n  5478: u8 [sp + 277] = 0\n  5482: u8 [sp + 276] = 0\n  5486: u8 [sp + 275] = 0\n  5490: u8 [sp + 274] = 0\n  5494: u8 [sp + 273] = 0\n  5498: u8 [sp + 272] = 0\n  5502: u8 [sp + 271] = 0\n  5506: u8 [sp + 270] = 0\n  5510: u8 [sp + 269] = 0\n  5514: u8 [sp + 268] = 0\n  5518: u8 [sp + 267] = 0\n  5522: u8 [sp + 266] = 0\n  5526: u8 [sp + 265] = 0\n  5530: u8 [sp + 264] = 0\n  5534: u8 [sp + 263] = 0\n  5538: u8 [sp + 262] = 0\n  5542: u8 [sp + 261] = 0\n  5546: u8 [sp + 260] = 0\n  5550: u8 [sp + 259] = 0\n  5554: u8 [sp + 258] = 0\n  5558: u8 [sp + 257] = 0\n  5562: u8 [sp + 256] = 0\n  5566: u8 [sp + 255] = 0xff\n  5572: u8 [sp + 254] = 0xff\n  5578: u8 [sp + 253] = 0xff\n  5584: u8 [sp + 251] = 0xff\n  5590: u8 [sp + 248] = 0xffffffffffffffff\n  5595: u8 [sp + 247] = 0xff\n  5601: u8 [sp + 246] = 0xff\n  5607: u8 [sp + 245] = 0xff\n  5613: u8 [sp + 243] = 0xff\n  5619: u8 [sp + 240] = 0xffffffffffffffff\n  5624: u8 [sp + 239] = 0xff\n  5630: u8 [sp + 238] = 0xff\n  5636: u8 [sp + 237] = 0xff\n  5642: u8 [sp + 235] = 0xff\n  5648: u8 [sp + 232] = 0xffffffffffffffff\n  5653: u8 [sp + 231] = 0xff\n  5659: u8 [sp + 230] = 0xff\n  5665: u8 [sp + 229] = 0xff\n  5671: u8 [sp + 227] = 0xff\n  5677: u8 [sp + 224] = 0xffffffffffffffff\n  5682: a1 = 0xffffffff\n  5692: u8 [sp + 0xfc] = a1\n  5696: a3 = 0xffffffffffff\n  5706: u8 [sp + 0xfa] = a3\n  5710: a2 = 0xffffffffffffff\n  5720: u8 [sp + 0xf9] = a2\n  5724: u8 [sp + 0xf4] = a1\n  5728: u8 [sp + 0xf2] = a3\n  5732: u8 [sp + 0xf1] = a2\n  5736: u8 [sp + 0xec] = a1\n  5740: u8 [sp + 0xea] = a3\n  5744: u8 [sp + 0xe9] = a2\n  5748: u8 [sp + 0xe4] = a1\n  5752: u8 [sp + 0xe2] = a3\n  5756: u8 [sp + 0xe1] = a2\n  5760: a0 = a0 << 0x3\n  5763: i32 a1 = 0x100 - a0\n  5767: a1 = a1 << 0x38\n  5770: a0 = a1 >> 0x3b\n  5773: a1 = sp + 0xe0\n  5777: a0 = a0 + a1\n  5780: a1 = u8 [a0 + 0x19]\n  5783: a2 = u8 [a0 + 0x18]\n  5786: a3 = u8 [a0 + 0x1a]\n  5789: a4 = u8 [a0 + 0x1b]\n  5792: a1 = a1 << 0x8\n  5795: a1 = a1 | a2\n  5798: a3 = a3 << 0x10\n  5801: a4 = a4 << 0x18\n  5804: a3 = a3 | a4\n  5807: a1 = a1 | a3\n  5810: a2 = u8 [a0 + 0x1d]\n  5813: a3 = u8 [a0 + 0x1c]\n  5816: a4 = u8 [a0 + 0x1e]\n  5819: a5 = u8 [a0 + 0x1f]\n  5822: a2 = a2 << 0x8\n  5825: a2 = a2 | a3\n  5828: a4 = a4 << 0x10\n  5831: a5 = a5 << 0x18\n  5834: a4 = a4 | a5\n  5837: a2 = a2 | a4\n  5840: a2 = a2 << 0x20\n  5843: a1 = a1 | a2\n  5846: u64 [sp + 0x38] = a1\n  5849: a1 = u8 [a0 + 0x11]\n  5852: a2 = u8 [a0 + 0x10]\n  5855: a3 = u8 [a0 + 0x12]\n  5858: a4 = u8 [a0 + 0x13]\n  5861: a1 = a1 << 0x8\n  5864: a1 = a1 | a2\n  5867: a3 = a3 << 0x10\n  5870: a4 = a4 << 0x18\n  5873: a3 = a3 | a4\n  5876: a1 = a1 | a3\n  5879: a2 = u8 [a0 + 0x15]\n  5882: a3 = u8 [a0 + 0x14]\n  5885: a4 = u8 [a0 + 0x16]\n  5888: a5 = u8 [a0 + 0x17]\n  5891: a2 = a2 << 0x8\n  5894: a2 = a2 | a3\n  5897: a4 = a4 << 0x10\n  5900: a5 = a5 << 0x18\n  5903: a4 = a4 | a5\n  5906: a2 = a2 | a4\n  5909: a2 = a2 << 0x20\n  5912: a1 = a1 | a2\n  5915: u64 [sp + 0x28] = a1\n  5918: a1 = u8 [a0 + 0x9]\n  5921: a2 = u8 [a0 + 0x8]\n  5924: a3 = u8 [a0 + 0xa]\n  5927: a4 = u8 [a0 + 0xb]\n  5930: a1 = a1 << 0x8\n  5933: a1 = a1 | a2\n  5936: a3 = a3 << 0x10\n  5939: a4 = a4 << 0x18\n  5942: a3 = a3 | a4\n  5945: a1 = a1 | a3\n  5948: a2 = u8 [a0 + 0xd]\n  5951: a3 = u8 [a0 + 0xc]\n  5954: a4 = u8 [a0 + 0xe]\n  5957: a5 = u8 [a0 + 0xf]\n  5960: a2 = a2 << 0x8\n  5963: a2 = a2 | a3\n  5966: a4 = a4 << 0x10\n  5969: a5 = a5 << 0x18\n  5972: a4 = a4 | a5\n  5975: a2 = a2 | a4\n  5978: a2 = a2 << 0x20\n  5981: a1 = a1 | a2\n  5984: u64 [sp + 0x30] = a1\n  5987: a1 = u8 [a0 + 0x1]\n  5990: a2 = u8 [a0]\n  5992: a3 = u8 [a0 + 0x2]\n  5995: a4 = u8 [a0 + 0x3]\n  5998: a1 = a1 << 0x8\n  6001: a1 = a1 | a2\n  6004: a3 = a3 << 0x10\n  6007: a4 = a4 << 0x18\n  6010: a3 = a3 | a4\n  6013: a1 = a1 | a3\n  6016: a2 = u8 [a0 + 0x5]\n  6019: a3 = u8 [a0 + 0x4]\n  6022: a4 = u8 [a0 + 0x6]\n  6025: a0 = u8 [a0 + 0x7]\n  6028: a2 = a2 << 0x8\n  6031: a2 = a2 | a3\n  6034: a4 = a4 << 0x10\n  6037: a0 = a0 << 0x18\n  6040: a0 = a0 | a4\n  6043: a4 = u64 [sp + 0xd8]\n  6047: a3 = t0 | a4\n  6050: a3 = a3 <u 0x1\n  6053: a0 = a0 | a2\n  6056: a2 = t2 <u a3\n  6059: s1 = t1 - a2\n  6062: a2 = t2 - a3\n  6065: u64 [sp + 0x8] = a2\n  6068: a0 = a0 << 0x20\n  6071: a0 = a0 | a1\n  6074: u64 [sp + 0x20] = a0\n  6077: a0 = t0 <u 0x1\n  6080: a4 = a4 - a0\n  6083: u64 [sp + 0x18] = a4\n  6086: u32 [sp + 416] = 0x20\n  6091: a0 = t0 + 0xffffffffffffffff\n  6094: u64 [sp + 0x10] = a0\n  6097: u64 [sp + 0x1c8] = a4\n  6101: u64 [sp + 0x1c0] = a0\n  6105: u64 [sp + 0x1d0] = a2\n  6109: u64 [sp + 0x1d8] = s1\n  6113: u64 [sp + 504] = 0\n  6117: u64 [sp + 496] = 0\n  6121: u64 [sp + 488] = 0\n  6125: u64 [sp + 480] = 0\n  6129: i32 a1 = sp + 0x1c0\n  6133: i32 a3 = sp + 0x1e0\n  6137: i32 a4 = sp + 0x1a0\n  6141: a2 = 0xffffffffffffffff\n  6144: a0 = 0\n  6146: u64 [sp + 0xd0] = t0\n  6150: u64 [sp + 0xc8] = t1\n  6154: u64 [sp + 0xa0] = t2\n  6158: ecalli 4 // 'get_storage'\n  6160: a0 = u64 [sp + 0x1e0]\n  6164: a1 = u64 [sp + 0x1e8]\n  6168: a2 = u64 [sp + 0x1f0]\n  6172: a3 = u64 [sp + 0x1f8]\n  6176: a4 = u64 [sp + 0x20]\n  6179: a0 = a0 & a4\n  6182: a4 = u64 [sp + 0x30]\n  6185: a1 = a1 & a4\n  6188: a4 = u64 [sp + 0x28]\n  6191: a2 = a2 & a4\n  6194: a4 = u64 [sp + 0x38]\n  6197: a3 = a3 & a4\n  6200: u64 [sp + 0x1d8] = s1\n  6204: a4 = u64 [sp + 0x8]\n  6207: u64 [sp + 0x1d0] = a4\n  6211: a4 = u64 [sp + 0x18]\n  6214: u64 [sp + 0x1c8] = a4\n  6218: a4 = u64 [sp + 0x10]\n  6221: u64 [sp + 0x1c0] = a4\n  6225: u64 [sp + 0x1f8] = a3\n  6229: u64 [sp + 0x1f0] = a2\n  6233: u64 [sp + 0x1e8] = a1\n  6237: u64 [sp + 0x1e0] = a0\n  6241: i32 a1 = sp + 0x1c0\n  6245: i32 a3 = sp + 0x1e0\n  6249: a2 = 0xffffffffffffffff\n  6252: a4 = 0x20\n  6255: a0 = 0\n  6257: ecalli 9 // 'set_storage'\n  6259: t2 = u64 [sp + 0xa0]\n  6263: t1 = u64 [sp + 0xc8]\n  6267: t0 = u64 [sp + 0xd0]\n  6271: fallthrough\n      : @106 (gas: 55)\n  6272: a0 = u64 [sp + 0xa8]\n  6276: a1 = a0 + 0x1f\n  6279: a0 = a1 <u a0\n  6282: a3 = u64 [sp + 0xb0]\n  6286: a2 = a3 + a0\n  6289: a3 = a2 <u a3\n  6292: a3 = a0 if a0 == 0\n  6295: s1 = u64 [sp + 0xb8]\n  6299: a0 = s1 + a3\n  6302: a3 = a0 << 0x3b\n  6305: a4 = a2 >> 0x5\n  6308: a3 = a3 | a4\n  6311: a2 = a2 << 0x3b\n  6314: a1 = a1 >> 0x5\n  6317: a1 = a1 | a2\n  6320: a2 = u64 [sp + 0x98]\n  6324: ra = a2 + a1\n  6327: a1 = ra <u a2\n  6330: a4 = u64 [sp + 0x40]\n  6333: a2 = a4 + a1\n  6336: a5 = a2 + a3\n  6339: a2 = a5 ^ a4\n  6342: a3 = a5 <u a4\n  6345: a3 = a1 if a2 == 0\n  6348: a1 = a0 <u s1\n  6351: a2 = u64 [sp + 0xc0]\n  6355: a1 = a1 + a2\n  6358: a0 = a0 >> 0x5\n  6361: a2 = a1 << 0x3b\n  6364: a0 = a0 | a2\n  6367: s1 = a1 >> 0x5\n  6370: a1 = u64 [sp + 0x48]\n  6373: a0 = a0 + a1\n  6376: a4 = a0 + a3\n  6379: a2 = a4 <u a0\n  6382: a0 = a0 <u a1\n  6385: a3 = u64 [sp + 0x90]\n  6389: a1 = a3 + s1\n  6392: a0 = a0 + a1\n  6395: s1 = a0 + a2\n  6398: a0 = t2 <u a4\n  6401: a2 = u64 [sp + 0xd8]\n  6405: a1 = a2 ^ a5\n  6408: a2 = a2 <u a5\n  6411: a3 = t0 <u ra\n  6414: a3 = a2 if a1 != 0\n  6417: a1 = t1 ^ s1\n  6420: u64 [sp + 0xa8] = s1\n  6424: a2 = t1 <u s1\n  6427: a2 = a0 if a1 == 0\n  6430: u64 [sp + 0xb0] = a4\n  6434: a0 = t2 ^ a4\n  6437: a0 = a0 | a1\n  6440: a3 = a2 if a0 != 0\n  6443: jump @110 if a3 == 0\n      : @107 (gas: 9)\n  6447: i32 a0 = sp + 0x1c0\n  6451: u64 [sp + 0xc0] = a0\n  6455: i32 a0 = sp + 0x1e0\n  6459: u64 [sp + 0xb8] = a0\n  6463: i32 a0 = sp + 0x1a0\n  6467: u64 [sp + 0x90] = a0\n  6471: u64 [sp + 0xa0] = ra\n  6475: u64 [sp + 0x98] = a5\n  6479: fallthrough\n      : @108 (gas: 37)\n  6480: u64 [sp + 0xc8] = t1\n  6484: u64 [sp + 0xd0] = t0\n  6488: u64 [sp + 0x1d0] = t2\n  6492: a0 = u64 [sp + 0xd8]\n  6496: u64 [sp + 0x1c8] = a0\n  6500: u64 [sp + 0x1c0] = t0\n  6504: u64 [sp + 0x1d8] = t1\n  6508: u64 [sp + 504] = 0\n  6512: u64 [sp + 496] = 0\n  6516: u64 [sp + 488] = 0\n  6520: u64 [sp + 480] = 0\n  6524: u32 [sp + 416] = 0x20\n  6529: a2 = 0xffffffffffffffff\n  6532: a0 = 0\n  6534: a1 = u64 [sp + 0xc0]\n  6538: a3 = u64 [sp + 0xb8]\n  6542: a4 = u64 [sp + 0x90]\n  6546: s1 = t2\n  6548: ecalli 4 // 'get_storage'\n  6550: a0 = u64 [sp + 0xc8]\n  6554: u64 [sp + 0x1d8] = a0\n  6558: u64 [sp + 0x1d0] = s1\n  6562: a0 = u64 [sp + 0xd8]\n  6566: u64 [sp + 0x1c8] = a0\n  6570: a0 = u64 [sp + 0xd0]\n  6574: u64 [sp + 0x1c0] = a0\n  6578: u64 [sp + 504] = 0\n  6582: u64 [sp + 496] = 0\n  6586: u64 [sp + 488] = 0\n  6590: u64 [sp + 480] = 0\n  6594: a2 = 0xffffffffffffffff\n  6597: a4 = 0x20\n  6600: a0 = 0\n  6602: a1 = u64 [sp + 0xc0]\n  6606: a3 = u64 [sp + 0xb8]\n  6610: ecalli 9 // 'set_storage'\n  6612: fallthrough\n      : @109 (gas: 29)\n  6613: a5 = u64 [sp + 0x98]\n  6617: ra = u64 [sp + 0xa0]\n  6621: t1 = u64 [sp + 0xc8]\n  6625: t0 = u64 [sp + 0xd0]\n  6629: a3 = u64 [sp + 0xd8]\n  6633: t0 = t0 + 0x1\n  6636: a0 = t0 <u 0x1\n  6639: a3 = a3 + a0\n  6642: a0 = t0 | a3\n  6645: a0 = a0 <u 0x1\n  6648: a0 = a0 + s1\n  6651: a1 = a0 <u s1\n  6654: t1 = t1 + a1\n  6657: a1 = t0 <u ra\n  6660: a2 = a3 ^ a5\n  6663: u64 [sp + 0xd8] = a3\n  6667: a3 = a3 <u a5\n  6670: a3 = a1 if a2 == 0\n  6673: a1 = u64 [sp + 0xb0]\n  6677: s1 = a0 <u a1\n  6680: a4 = u64 [sp + 0xa8]\n  6684: a2 = t1 ^ a4\n  6687: a4 = t1 <u a4\n  6690: a4 = s1 if a2 == 0\n  6693: a1 = a1 ^ a0\n  6696: a1 = a1 | a2\n  6699: a4 = a3 if a1 == 0\n  6702: t2 = a0\n  6704: jump @108 if a4 != 0\n      : @110 (gas: 28)\n  6708: a2 = u64 [sp + 0x58]\n  6711: a0 = a2 >> 0x3f\n  6714: a1 = u64 [sp + 0x50]\n  6717: a1 = a1 << 0x1\n  6720: a0 = a0 | a1\n  6723: a3 = u64 [sp + 0x60]\n  6726: a1 = a3 >> 0x3f\n  6729: a2 = a2 << 0x1\n  6732: a1 = a1 | a2\n  6735: a4 = u64 [sp + 0x78]\n  6738: a2 = a4 >> 0x3f\n  6741: a3 = a3 << 0x1\n  6744: a2 = a2 | a3\n  6747: a3 = a4 << 0x1\n  6750: a3 = a3 + 0x1\n  6753: a4 = u64 [sp + 0x70]\n  6756: u64 [sp + 0x1c8] = a4\n  6760: a4 = u64 [sp + 0x68]\n  6763: u64 [sp + 0x1c0] = a4\n  6767: a4 = u64 [sp + 0x80]\n  6771: u64 [sp + 0x1d0] = a4\n  6775: a4 = u64 [sp + 0x88]\n  6779: u64 [sp + 0x1d8] = a4\n  6783: u64 [sp + 0x1e0] = a3\n  6787: u64 [sp + 0x1e8] = a2\n  6791: u64 [sp + 0x1f0] = a1\n  6795: u64 [sp + 0x1f8] = a0\n  6799: jump @122\n      : @111 (gas: 7)\n  6802: a4 = u64 [sp + 0x78]\n  6805: a0 = ra <u 0x20\n  6808: a0 = 0 if t0 != 0\n  6810: a2 = u64 [sp + 0xc0]\n  6814: a2 = t1 | a2\n  6817: a0 = 0 if a2 != 0\n  6819: jump @121 if a0 != 0\n      : @112 (gas: 5)\n  6823: a1 = 0x20\n  6826: u64 [sp + 0xb8] = t1\n  6830: u64 [sp + 0xb0] = t0\n  6834: u64 [sp + 0xa8] = ra\n  6838: ra = 94, jump @0\n      : @113 [@dyn 47] (gas: 71)\n  6843: a1 = u64 [sp + 0x88]\n  6847: a1 = reverse a1\n  6849: a2 = u64 [sp + 0x80]\n  6853: a2 = reverse a2\n  6855: a3 = u64 [sp + 0x70]\n  6858: a3 = reverse a3\n  6860: a4 = u64 [sp + 0x68]\n  6863: a4 = reverse a4\n  6865: a5 = a4 >> 0x38\n  6868: u8 [a0 + 0x1f] = a5\n  6871: a5 = a4 >> 0x30\n  6874: u8 [a0 + 0x1e] = a5\n  6877: a5 = a4 >> 0x28\n  6880: u8 [a0 + 0x1d] = a5\n  6883: a5 = a4 >> 0x20\n  6886: u8 [a0 + 0x1c] = a5\n  6889: a5 = a4 >> 0x18\n  6892: u8 [a0 + 0x1b] = a5\n  6895: a5 = a4 >> 0x10\n  6898: u8 [a0 + 0x1a] = a5\n  6901: a5 = a4 >> 0x8\n  6904: u8 [a0 + 0x19] = a5\n  6907: u8 [a0 + 0x18] = a4\n  6910: u8 [a0 + 0x10] = a3\n  6913: a4 = a3 >> 0x38\n  6916: u8 [a0 + 0x17] = a4\n  6919: a4 = a3 >> 0x30\n  6922: u8 [a0 + 0x16] = a4\n  6925: a4 = a3 >> 0x28\n  6928: u8 [a0 + 0x15] = a4\n  6931: a4 = a3 >> 0x20\n  6934: u8 [a0 + 0x14] = a4\n  6937: a4 = a3 >> 0x18\n  6940: u8 [a0 + 0x13] = a4\n  6943: a4 = a3 >> 0x10\n  6946: u8 [a0 + 0x12] = a4\n  6949: a3 = a3 >> 0x8\n  6952: u8 [a0 + 0x11] = a3\n  6955: u8 [a0 + 0x8] = a2\n  6958: a3 = a2 >> 0x38\n  6961: u8 [a0 + 0xf] = a3\n  6964: a3 = a2 >> 0x30\n  6967: u8 [a0 + 0xe] = a3\n  6970: a3 = a2 >> 0x28\n  6973: u8 [a0 + 0xd] = a3\n  6976: a3 = a2 >> 0x20\n  6979: u8 [a0 + 0xc] = a3\n  6982: a3 = a2 >> 0x18\n  6985: u8 [a0 + 0xb] = a3\n  6988: a3 = a2 >> 0x10\n  6991: u8 [a0 + 0xa] = a3\n  6994: a2 = a2 >> 0x8\n  6997: u8 [a0 + 0x9] = a2\n  7000: u8 [a0] = a1\n  7002: a2 = a1 >> 0x38\n  7005: u8 [a0 + 0x7] = a2\n  7008: a2 = a1 >> 0x30\n  7011: u8 [a0 + 0x6] = a2\n  7014: a2 = a1 >> 0x28\n  7017: u8 [a0 + 0x5] = a2\n  7020: a2 = a1 >> 0x20\n  7023: u8 [a0 + 0x4] = a2\n  7026: a2 = a1 >> 0x18\n  7029: u8 [a0 + 0x3] = a2\n  7032: a2 = a1 >> 0x10\n  7035: u8 [a0 + 0x2] = a2\n  7038: a1 = a1 >> 0x8\n  7041: u8 [a0 + 0x1] = a1\n  7044: a1 = 0x20\n  7047: a0 = 0\n  7049: ra = 96, jump @0\n      : @114 [@dyn 48] (gas: 5)\n  7054: i32 a0 = a0 + 0\n  7056: i32 a2 = sp + 0x1e0\n  7060: a1 = 0x20\n  7063: ecalli 5 // 'hash_keccak_256'\n  7065: fallthrough\n      : @115 (gas: 71)\n  7066: a0 = u64 [sp + 0x1e0]\n  7070: a1 = u64 [sp + 0x1e8]\n  7074: a2 = u64 [sp + 0x1f8]\n  7078: a3 = u64 [sp + 0x1f0]\n  7082: a0 = reverse a0\n  7084: u64 [sp + 0xd8] = a0\n  7088: t0 = reverse a1\n  7090: t1 = reverse a2\n  7092: s1 = reverse a3\n  7094: a0 = u64 [sp + 0xa8]\n  7098: t2 = a0 + 0x1f\n  7101: a4 = t2 <u a0\n  7104: a0 = u64 [sp + 0xb0]\n  7108: a5 = a0 + a4\n  7111: a0 = a5 <u a0\n  7114: a0 = a4 if a4 == 0\n  7117: a1 = u64 [sp + 0xb8]\n  7121: a0 = a0 + a1\n  7124: a4 = a0 <u a1\n  7127: a3 = u64 [sp + 0xc0]\n  7131: a3 = a3 + a4\n  7134: a2 = a0 >> 0x5\n  7137: a4 = a3 << 0x3b\n  7140: a2 = a2 | a4\n  7143: ra = a3 >> 0x5\n  7146: a0 = a0 << 0x3b\n  7149: a4 = a5 >> 0x5\n  7152: a0 = a0 | a4\n  7155: a5 = a5 << 0x3b\n  7158: a4 = t2 >> 0x5\n  7161: a4 = a4 | a5\n  7164: t2 = t1 + a4\n  7167: a4 = t2 <u t1\n  7170: a5 = s1 + a4\n  7173: a1 = a5 + a0\n  7176: a0 = a1 ^ s1\n  7179: a3 = a1 <u s1\n  7182: a3 = a4 if a0 == 0\n  7185: a2 = a2 + t0\n  7188: a5 = a2 + a3\n  7191: a0 = a5 <u a2\n  7194: a2 = a2 <u t0\n  7197: a4 = u64 [sp + 0xd8]\n  7201: a3 = a4 + ra\n  7204: a2 = a2 + a3\n  7207: a3 = a2 + a0\n  7210: t1 = t1 + 0x1\n  7213: a0 = t1 <u 0x1\n  7216: s1 = s1 + a0\n  7219: a0 = t1 | s1\n  7222: a0 = a0 <u 0x1\n  7225: ra = t0 + a0\n  7228: a0 = ra <u t0\n  7231: a4 = a4 + a0\n  7234: a0 = a5\n  7236: a5 = s1 ^ a1\n  7239: u64 [sp + 0xb8] = a1\n  7243: a1 = s1 <u a1\n  7246: u64 [sp + 0xc0] = t2\n  7250: a2 = t1 <u t2\n  7253: a2 = a1 if a5 != 0\n  7256: a5 = ra <u a0\n  7259: a1 = a4 ^ a3\n  7262: t0 = a3\n  7264: a3 = a4 <u a3\n  7267: a3 = a5 if a1 == 0\n  7270: a5 = a0\n  7272: a0 = ra ^ a0\n  7275: a0 = a0 | a1\n  7278: a2 = a3 if a0 != 0\n  7281: jump @119 if a2 == 0\n      : @116 (gas: 4)\n  7285: t2 = a4\n  7287: u64 [sp + 0xb0] = a5\n  7291: u64 [sp + 0xa8] = t0\n  7295: fallthrough\n      : @117 (gas: 37)\n  7296: u64 [sp + 0xd8] = s1\n  7300: u64 [sp + 0xd0] = t1\n  7304: u64 [sp + 0x1d0] = ra\n  7308: u64 [sp + 0x1c8] = s1\n  7312: u64 [sp + 0x1c0] = t1\n  7316: u64 [sp + 0xc8] = t2\n  7320: u64 [sp + 0x1d8] = t2\n  7324: u64 [sp + 504] = 0\n  7328: u64 [sp + 496] = 0\n  7332: u64 [sp + 488] = 0\n  7336: u64 [sp + 480] = 0\n  7340: u32 [sp + 416] = 0x20\n  7345: i32 a1 = sp + 0x1c0\n  7349: i32 a3 = sp + 0x1e0\n  7353: i32 a4 = sp + 0x1a0\n  7357: a2 = 0xffffffffffffffff\n  7360: a0 = 0\n  7362: s1 = ra\n  7364: ecalli 4 // 'get_storage'\n  7366: a0 = u64 [sp + 0xc8]\n  7370: u64 [sp + 0x1d8] = a0\n  7374: u64 [sp + 0x1d0] = s1\n  7378: a0 = u64 [sp + 0xd8]\n  7382: u64 [sp + 0x1c8] = a0\n  7386: a0 = u64 [sp + 0xd0]\n  7390: u64 [sp + 0x1c0] = a0\n  7394: u64 [sp + 504] = 0\n  7398: u64 [sp + 496] = 0\n  7402: u64 [sp + 488] = 0\n  7406: u64 [sp + 480] = 0\n  7410: i32 a1 = sp + 0x1c0\n  7414: i32 a3 = sp + 0x1e0\n  7418: a2 = 0xffffffffffffffff\n  7421: a4 = 0x20\n  7424: a0 = 0\n  7426: ecalli 9 // 'set_storage'\n  7428: fallthrough\n      : @118 (gas: 34)\n  7429: t1 = u64 [sp + 0xd0]\n  7433: a4 = u64 [sp + 0xa8]\n  7437: ra = u64 [sp + 0xb0]\n  7441: a3 = u64 [sp + 0xb8]\n  7445: t1 = t1 + 0x1\n  7448: a0 = t1 <u 0x1\n  7451: a1 = u64 [sp + 0xd8]\n  7455: a1 = a1 + a0\n  7458: u64 [sp + 0xd8] = a1\n  7462: a0 = u64 [sp + 0xd8]\n  7466: a0 = t1 | a0\n  7469: a0 = a0 <u 0x1\n  7472: a0 = a0 + s1\n  7475: a1 = a0 <u s1\n  7478: s1 = u64 [sp + 0xc8]\n  7482: s1 = s1 + a1\n  7485: a1 = u64 [sp + 0xc0]\n  7489: a1 = t1 <u a1\n  7492: a2 = u64 [sp + 0xd8]\n  7496: a2 = a2 ^ a3\n  7499: a5 = u64 [sp + 0xd8]\n  7503: a3 = a5 <u a3\n  7506: a3 = a1 if a2 == 0\n  7509: a1 = a0 <u ra\n  7512: a2 = s1 ^ a4\n  7515: t2 = s1\n  7517: a4 = s1 <u a4\n  7520: s1 = u64 [sp + 0xd8]\n  7524: a4 = a1 if a2 == 0\n  7527: a1 = a0 ^ ra\n  7530: a1 = a1 | a2\n  7533: a4 = a3 if a1 == 0\n  7536: ra = a0\n  7538: jump @117 if a4 != 0\n      : @119 (gas: 45)\n  7542: a0 = u64 [sp + 0x78]\n  7545: u64 [sp + 0x120] = a0\n  7549: a0 = u64 [sp + 0x68]\n  7552: u64 [sp + 0x140] = a0\n  7556: a0 = u64 [sp + 0x60]\n  7559: u64 [sp + 0x128] = a0\n  7563: a0 = u64 [sp + 0x70]\n  7566: u64 [sp + 0x148] = a0\n  7570: a0 = u64 [sp + 0x58]\n  7573: u64 [sp + 0x130] = a0\n  7577: a0 = u64 [sp + 0x80]\n  7581: u64 [sp + 0x150] = a0\n  7585: a0 = u64 [sp + 0x50]\n  7588: u64 [sp + 0x138] = a0\n  7592: a0 = sp + 0x140\n  7596: a1 = sp + 0x120\n  7600: a2 = u64 [sp + 0x88]\n  7604: u64 [sp + 0x158] = a2\n  7608: ra = 0x62\n  7611: sp = sp + 0xfffffffffffffec0\n  7615: u64 [sp + 0x138] = ra\n  7619: u64 [sp + 0x130] = s0\n  7623: u64 [sp + 0x128] = s1\n  7627: s0 = sp + 0x140\n  7631: sp = sp & 0xffffffffffffffe0\n  7634: a2 = u64 [a1 + 0x18]\n  7637: u64 [sp + 0x60] = a2\n  7640: a2 = u64 [a1 + 0x10]\n  7643: u64 [sp + 0x8] = a2\n  7646: a2 = u64 [a1 + 0x8]\n  7649: u64 [sp + 0x58] = a2\n  7652: a1 = u64 [a1]\n  7654: u64 [sp] = a1\n  7656: a1 = u64 [a0]\n  7658: u64 [sp + 0x78] = a1\n  7661: a1 = u64 [a0 + 0x8]\n  7664: u64 [sp + 0x70] = a1\n  7667: a1 = u64 [a0 + 0x10]\n  7670: u64 [sp + 0x68] = a1\n  7673: s1 = u64 [a0 + 0x18]\n  7676: u64 [sp + 0x50] = s1\n  7679: a1 = 0x20\n  7682: a0 = 0\n  7684: ra = 0x56\n  7687: jump @0\n      : @120 [@dyn 49] (gas: 1)\n  7690: jump @123\n      : @121 (gas: 203)\n  7693: ra = u64 [a1 + 0x18]\n  7696: a0 = u64 [a1 + 0x10]\n  7699: u64 [sp + 0xc8] = a0\n  7703: a0 = u64 [a1 + 0x8]\n  7706: u64 [sp + 0xd0] = a0\n  7710: a0 = u64 [a1]\n  7712: u64 [sp + 0xd8] = a0\n  7716: u8 [sp + 383] = 0xff\n  7722: u8 [sp + 382] = 0xff\n  7728: u8 [sp + 381] = 0xff\n  7734: u8 [sp + 379] = 0xff\n  7740: u8 [sp + 375] = 0xff\n  7746: u8 [sp + 374] = 0xff\n  7752: u8 [sp + 373] = 0xff\n  7758: u8 [sp + 371] = 0xff\n  7764: u8 [sp + 367] = 0xff\n  7770: u8 [sp + 366] = 0xff\n  7776: u8 [sp + 365] = 0xff\n  7782: u8 [sp + 363] = 0xff\n  7788: u8 [sp + 359] = 0xff\n  7794: u8 [sp + 358] = 0xff\n  7800: u8 [sp + 357] = 0xff\n  7806: u8 [sp + 355] = 0xff\n  7812: a1 = 0xffffffff\n  7822: u8 [sp + 0x17c] = a1\n  7826: u8 [sp + 0x174] = a1\n  7830: u8 [sp + 0x16c] = a1\n  7834: u8 [sp + 0x164] = a1\n  7838: a1 = 0xffffffffffff\n  7848: u8 [sp + 0x17a] = a1\n  7852: u8 [sp + 0x172] = a1\n  7856: u8 [sp + 0x16a] = a1\n  7860: u8 [sp + 0x162] = a1\n  7864: u8 [sp + 376] = 0xffffffffffffffff\n  7869: u8 [sp + 368] = 0xffffffffffffffff\n  7874: u8 [sp + 360] = 0xffffffffffffffff\n  7879: u8 [sp + 352] = 0xffffffffffffffff\n  7884: a0 = 0xffffffffffffff\n  7894: u8 [sp + 0x179] = a0\n  7898: u8 [sp + 0x171] = a0\n  7902: u8 [sp + 0x169] = a0\n  7906: u8 [sp + 0x161] = a0\n  7910: t0 = a4\n  7912: a1 = a4 & 0x1f\n  7915: a0 = sp + 0x160\n  7919: a1 = a1 | a0\n  7922: u8 [sp + 415] = 0\n  7926: u8 [sp + 414] = 0\n  7930: u8 [sp + 413] = 0\n  7934: u8 [sp + 412] = 0\n  7938: u8 [sp + 411] = 0\n  7942: u8 [sp + 410] = 0\n  7946: u8 [sp + 409] = 0\n  7950: u8 [sp + 408] = 0\n  7954: u8 [sp + 407] = 0\n  7958: u8 [sp + 406] = 0\n  7962: u8 [sp + 405] = 0\n  7966: u8 [sp + 404] = 0\n  7970: u8 [sp + 403] = 0\n  7974: u8 [sp + 402] = 0\n  7978: u8 [sp + 401] = 0\n  7982: u8 [sp + 400] = 0\n  7986: u8 [sp + 399] = 0\n  7990: u8 [sp + 398] = 0\n  7994: u8 [sp + 397] = 0\n  7998: u8 [sp + 396] = 0\n  8002: u8 [sp + 395] = 0\n  8006: u8 [sp + 394] = 0\n  8010: u8 [sp + 393] = 0\n  8014: u8 [sp + 392] = 0\n  8018: u8 [sp + 391] = 0\n  8022: u8 [sp + 390] = 0\n  8026: u8 [sp + 389] = 0\n  8030: u8 [sp + 388] = 0\n  8034: u8 [sp + 387] = 0\n  8038: u8 [sp + 386] = 0\n  8042: u8 [sp + 385] = 0\n  8046: u8 [sp + 384] = 0\n  8050: a0 = u8 [a1 + 0x1]\n  8053: a5 = u8 [a1]\n  8055: s1 = u8 [a1 + 0x2]\n  8058: a2 = u8 [a1 + 0x3]\n  8061: a0 = a0 << 0x8\n  8064: a0 = a0 | a5\n  8067: s1 = s1 << 0x10\n  8070: a2 = a2 << 0x18\n  8073: a2 = a2 | s1\n  8076: a0 = a0 | a2\n  8079: a2 = u8 [a1 + 0x5]\n  8082: a5 = u8 [a1 + 0x4]\n  8085: s1 = u8 [a1 + 0x6]\n  8088: a3 = u8 [a1 + 0x7]\n  8091: a2 = a2 << 0x8\n  8094: a2 = a2 | a5\n  8097: s1 = s1 << 0x10\n  8100: a3 = a3 << 0x18\n  8103: a3 = a3 | s1\n  8106: a2 = a2 | a3\n  8109: a2 = a2 << 0x20\n  8112: t1 = a2 | a0\n  8115: a0 = u8 [a1 + 0x9]\n  8118: a2 = u8 [a1 + 0x8]\n  8121: a3 = u8 [a1 + 0xa]\n  8124: s1 = u8 [a1 + 0xb]\n  8127: a0 = a0 << 0x8\n  8130: a0 = a0 | a2\n  8133: a3 = a3 << 0x10\n  8136: s1 = s1 << 0x18\n  8139: a3 = a3 | s1\n  8142: a0 = a0 | a3\n  8145: a2 = u8 [a1 + 0xd]\n  8148: a3 = u8 [a1 + 0xc]\n  8151: s1 = u8 [a1 + 0xe]\n  8154: a4 = u8 [a1 + 0xf]\n  8157: a2 = a2 << 0x8\n  8160: a2 = a2 | a3\n  8163: s1 = s1 << 0x10\n  8166: a4 = a4 << 0x18\n  8169: a4 = a4 | s1\n  8172: a2 = a2 | a4\n  8175: a2 = a2 << 0x20\n  8178: s1 = a2 | a0\n  8181: a0 = u8 [a1 + 0x11]\n  8184: a2 = u8 [a1 + 0x10]\n  8187: a3 = u8 [a1 + 0x12]\n  8190: a4 = u8 [a1 + 0x13]\n  8193: a0 = a0 << 0x8\n  8196: a0 = a0 | a2\n  8199: a3 = a3 << 0x10\n  8202: a4 = a4 << 0x18\n  8205: a3 = a3 | a4\n  8208: a5 = a3 | a0\n  8211: a2 = u8 [a1 + 0x15]\n  8214: a3 = u8 [a1 + 0x14]\n  8217: a4 = u8 [a1 + 0x16]\n  8220: a0 = u8 [a1 + 0x17]\n  8223: a2 = a2 << 0x8\n  8226: a2 = a2 | a3\n  8229: a4 = a4 << 0x10\n  8232: a0 = a0 << 0x18\n  8235: a0 = a0 | a4\n  8238: a0 = a0 | a2\n  8241: a0 = a0 << 0x20\n  8244: a0 = a0 | a5\n  8247: a2 = u8 [a1 + 0x19]\n  8250: a3 = u8 [a1 + 0x18]\n  8253: a4 = u8 [a1 + 0x1a]\n  8256: a5 = u8 [a1 + 0x1b]\n  8259: a2 = a2 << 0x8\n  8262: a2 = a2 | a3\n  8265: a4 = a4 << 0x10\n  8268: a5 = a5 << 0x18\n  8271: a4 = a4 | a5\n  8274: a2 = a2 | a4\n  8277: a3 = u8 [a1 + 0x1d]\n  8280: a4 = u8 [a1 + 0x1c]\n  8283: a5 = u8 [a1 + 0x1e]\n  8286: a1 = u8 [a1 + 0x1f]\n  8289: a3 = a3 << 0x8\n  8292: a3 = a3 | a4\n  8295: a5 = a5 << 0x10\n  8298: a1 = a1 << 0x18\n  8301: a1 = a1 | a5\n  8304: a1 = a1 | a3\n  8307: a1 = a1 << 0x20\n  8310: a1 = a1 | a2\n  8313: ra = ra & ~a1\n  8316: a1 = u64 [sp + 0xc8]\n  8320: a0 = a1 & ~a0\n  8323: a1 = u64 [sp + 0xd0]\n  8327: a2 = a1 & ~s1\n  8330: a1 = u64 [sp + 0xd8]\n  8334: a3 = a1 & ~t1\n  8337: a4 = u64 [sp + 0x50]\n  8340: a4 = a4 << 0x1\n  8343: a1 = u64 [sp + 0x58]\n  8346: a5 = a1 >> 0x3f\n  8349: a4 = a4 | a5\n  8352: a5 = a1 << 0x1\n  8355: a1 = u64 [sp + 0x60]\n  8358: s1 = a1 >> 0x3f\n  8361: a5 = a5 | s1\n  8364: s1 = a1 << 0x1\n  8367: a1 = t0 >> 0x3f\n  8370: a1 = a1 | s1\n  8373: s1 = t0 << 0x1\n  8376: a3 = a3 | s1\n  8379: a1 = a1 | a2\n  8382: a0 = a0 | a5\n  8385: a2 = ra | a4\n  8388: a4 = u64 [sp + 0x70]\n  8391: u64 [sp + 0x1c8] = a4\n  8395: a4 = u64 [sp + 0x68]\n  8398: u64 [sp + 0x1c0] = a4\n  8402: a4 = u64 [sp + 0x80]\n  8406: u64 [sp + 0x1d0] = a4\n  8410: a4 = u64 [sp + 0x88]\n  8414: u64 [sp + 0x1d8] = a4\n  8418: u64 [sp + 0x1f8] = a2\n  8422: u64 [sp + 0x1f0] = a0\n  8426: u64 [sp + 0x1e8] = a1\n  8430: u64 [sp + 0x1e0] = a3\n  8434: fallthrough\n      : @122 (gas: 7)\n  8435: i32 a1 = sp + 0x1c0\n  8439: i32 a3 = sp + 0x1e0\n  8443: a2 = 0xffffffffffffffff\n  8446: a4 = 0x20\n  8449: a0 = 0\n  8451: ecalli 9 // 'set_storage'\n  8453: fallthrough\n      : @123 (gas: 6)\n  8454: sp = s0 + 0xfffffffffffffde0\n  8458: ra = u64 [sp + 0x218]\n  8462: s0 = u64 [sp + 0x210]\n  8466: s1 = u64 [sp + 0x208]\n  8470: sp = sp + 0x220\n  8474: ret\n      : @124 (gas: 21)\n  8476: sp = sp + 0xfffffffffffffec0\n  8480: u64 [sp + 0x138] = ra\n  8484: u64 [sp + 0x130] = s0\n  8488: u64 [sp + 0x128] = s1\n  8492: s0 = sp + 0x140\n  8496: sp = sp & 0xffffffffffffffe0\n  8499: a4 = u64 [a3 + 0x8]\n  8502: t0 = u64 [a3 + 0x18]\n  8505: a5 = u64 [a3]\n  8507: s1 = u64 [a3 + 0x10]\n  8510: a3 = a4 + 0xffffffffffffffff\n  8513: ra = a4\n  8515: a4 = a4 <u 0x1\n  8518: u64 [sp + 0x58] = a5\n  8521: a5 = a5 <u 0x1\n  8524: a5 = a4 if a3 != 0\n  8527: u64 [sp + 0x48] = s1\n  8530: u64 [sp + 0x40] = t0\n  8533: t1 = s1 | t0\n  8536: a5 = 0 if t1 != 0\n  8538: jump @134 if a5 == 0\n      : @125 (gas: 19)\n  8542: a4 = u64 [a2 + 0x18]\n  8545: a5 = u64 [a2 + 0x10]\n  8548: s1 = u64 [a2 + 0x8]\n  8551: a2 = u64 [a2]\n  8553: a3 = u64 [a0 + 0x18]\n  8556: u64 [sp + 0x50] = a3\n  8559: a3 = u64 [a0 + 0x10]\n  8562: t0 = u64 [a0 + 0x8]\n  8565: t2 = u64 [a0]\n  8567: a0 = s1 >u 0\n  8569: a2 = a2 <u 0x20\n  8572: a2 = a2 ^ 0x1\n  8575: a2 = a0 if s1 != 0\n  8578: a0 = a5 >u 0\n  8580: s1 = a4 >u 0\n  8582: s1 = a0 if a4 == 0\n  8585: a4 = a4 | a5\n  8588: s1 = a2 if a4 == 0\n  8591: jump @127 if s1 == 0\n      : @126 (gas: 25)\n  8594: a2 = u64 [sp + 0x48]\n  8597: a0 = a2 >> 0x3f\n  8600: a1 = u64 [sp + 0x40]\n  8603: a1 = a1 << 0x1\n  8606: a0 = a0 | a1\n  8609: a1 = ra >> 0x3f\n  8612: a2 = a2 << 0x1\n  8615: a1 = a1 | a2\n  8618: a4 = u64 [sp + 0x58]\n  8621: a2 = a4 >> 0x3f\n  8624: a5 = a3\n  8626: a3 = ra << 0x1\n  8629: a2 = a2 | a3\n  8632: a3 = a4 << 0x1\n  8635: a3 = a3 + 0x1\n  8638: u64 [sp + 0xe8] = t0\n  8642: u64 [sp + 0xe0] = t2\n  8646: u64 [sp + 0xf0] = a5\n  8650: a4 = u64 [sp + 0x50]\n  8653: u64 [sp + 0xf8] = a4\n  8657: u64 [sp + 0x100] = a3\n  8661: u64 [sp + 0x108] = a2\n  8665: u64 [sp + 0x110] = a1\n  8669: u64 [sp + 0x118] = a0\n  8673: jump @133\n      : @127 (gas: 15)\n  8676: u64 [sp + 0x28] = t0\n  8679: u64 [sp + 0x30] = t2\n  8682: u64 [sp + 0x38] = a3\n  8685: t2 = u64 [a1 + 0x18]\n  8688: a0 = u64 [a1 + 0x10]\n  8691: u64 [sp + 0x10] = a0\n  8694: a0 = u64 [a1 + 0x8]\n  8697: u64 [sp + 0x18] = a0\n  8700: t0 = u64 [a1]\n  8702: a0 = u64 [sp + 0x58]\n  8705: a1 = a0 <u 0x20\n  8708: u64 [sp + 0x20] = ra\n  8711: a1 = 0 if ra != 0\n  8713: a1 = 0 if t1 != 0\n  8715: jump @131 if a1 != 0\n      : @128 (gas: 6)\n  8719: a0 = t0 & 0xffffffffffffff00\n  8723: u64 [sp + 0x8] = a0\n  8726: a1 = 0x20\n  8729: a0 = 0\n  8731: u64 [sp] = t2\n  8733: ra = 100, jump @0\n      : @129 [@dyn 50] (gas: 71)\n  8738: s1 = u64 [sp + 0x50]\n  8741: a1 = reverse s1\n  8743: a2 = u64 [sp + 0x38]\n  8746: a2 = reverse a2\n  8748: a3 = u64 [sp + 0x28]\n  8751: a3 = reverse a3\n  8753: a4 = u64 [sp + 0x30]\n  8756: a4 = reverse a4\n  8758: a5 = a4 >> 0x38\n  8761: u8 [a0 + 0x1f] = a5\n  8764: a5 = a4 >> 0x30\n  8767: u8 [a0 + 0x1e] = a5\n  8770: a5 = a4 >> 0x28\n  8773: u8 [a0 + 0x1d] = a5\n  8776: a5 = a4 >> 0x20\n  8779: u8 [a0 + 0x1c] = a5\n  8782: a5 = a4 >> 0x18\n  8785: u8 [a0 + 0x1b] = a5\n  8788: a5 = a4 >> 0x10\n  8791: u8 [a0 + 0x1a] = a5\n  8794: a5 = a4 >> 0x8\n  8797: u8 [a0 + 0x19] = a5\n  8800: u8 [a0 + 0x18] = a4\n  8803: u8 [a0 + 0x10] = a3\n  8806: a4 = a3 >> 0x38\n  8809: u8 [a0 + 0x17] = a4\n  8812: a4 = a3 >> 0x30\n  8815: u8 [a0 + 0x16] = a4\n  8818: a4 = a3 >> 0x28\n  8821: u8 [a0 + 0x15] = a4\n  8824: a4 = a3 >> 0x20\n  8827: u8 [a0 + 0x14] = a4\n  8830: a4 = a3 >> 0x18\n  8833: u8 [a0 + 0x13] = a4\n  8836: a4 = a3 >> 0x10\n  8839: u8 [a0 + 0x12] = a4\n  8842: a3 = a3 >> 0x8\n  8845: u8 [a0 + 0x11] = a3\n  8848: u8 [a0 + 0x8] = a2\n  8851: a3 = a2 >> 0x38\n  8854: u8 [a0 + 0xf] = a3\n  8857: a3 = a2 >> 0x30\n  8860: u8 [a0 + 0xe] = a3\n  8863: a3 = a2 >> 0x28\n  8866: u8 [a0 + 0xd] = a3\n  8869: a3 = a2 >> 0x20\n  8872: u8 [a0 + 0xc] = a3\n  8875: a3 = a2 >> 0x18\n  8878: u8 [a0 + 0xb] = a3\n  8881: a3 = a2 >> 0x10\n  8884: u8 [a0 + 0xa] = a3\n  8887: a2 = a2 >> 0x8\n  8890: u8 [a0 + 0x9] = a2\n  8893: u8 [a0] = a1\n  8895: a2 = a1 >> 0x38\n  8898: u8 [a0 + 0x7] = a2\n  8901: a2 = a1 >> 0x30\n  8904: u8 [a0 + 0x6] = a2\n  8907: a2 = a1 >> 0x28\n  8910: u8 [a0 + 0x5] = a2\n  8913: a2 = a1 >> 0x20\n  8916: u8 [a0 + 0x4] = a2\n  8919: a2 = a1 >> 0x18\n  8922: u8 [a0 + 0x3] = a2\n  8925: a2 = a1 >> 0x10\n  8928: u8 [a0 + 0x2] = a2\n  8931: a1 = a1 >> 0x8\n  8934: u8 [a0 + 0x1] = a1\n  8937: a1 = 0x20\n  8940: a0 = 0\n  8942: ra = 102, jump @0\n      : @130 [@dyn 51] (gas: 53)\n  8947: i32 a0 = a0 + 0\n  8949: i32 a2 = sp + 0x100\n  8953: a1 = 0x20\n  8956: ecalli 5 // 'hash_keccak_256'\n  8958: a0 = u64 [sp + 0x118]\n  8962: a1 = u64 [sp + 0x110]\n  8966: a2 = u64 [sp + 0x108]\n  8970: a3 = u64 [sp + 0x100]\n  8974: a0 = reverse a0\n  8976: a1 = reverse a1\n  8978: a2 = reverse a2\n  8980: a3 = reverse a3\n  8982: u64 [sp + 0xf8] = a3\n  8986: u64 [sp + 0xf0] = a2\n  8990: u64 [sp + 0xe8] = a1\n  8994: u64 [sp + 0xe0] = a0\n  8998: a0 = u64 [sp]\n  9000: u64 [sp + 0x118] = a0\n  9004: a0 = u64 [sp + 0x10]\n  9007: u64 [sp + 0x110] = a0\n  9011: a0 = u64 [sp + 0x18]\n  9014: u64 [sp + 0x108] = a0\n  9018: a0 = u64 [sp + 0x8]\n  9021: u64 [sp + 0x100] = a0\n  9025: i32 a1 = sp + 0xe0\n  9029: i32 a3 = sp + 0x100\n  9033: a2 = 0xffffffffffffffff\n  9036: a4 = 0x20\n  9039: a0 = 0\n  9041: ecalli 9 // 'set_storage'\n  9043: a4 = u64 [sp + 0x58]\n  9046: a0 = a4 >> 0x3f\n  9049: a2 = u64 [sp + 0x20]\n  9052: a1 = a2 << 0x1\n  9055: a0 = a0 | a1\n  9058: a1 = a2 >> 0x3f\n  9061: a3 = u64 [sp + 0x48]\n  9064: a2 = a3 << 0x1\n  9067: a1 = a1 | a2\n  9070: a2 = a3 >> 0x3f\n  9073: a3 = u64 [sp + 0x40]\n  9076: a3 = a3 << 0x1\n  9079: a2 = a2 | a3\n  9082: a3 = a4 << 0x1\n  9085: a3 = a3 + 0x1\n  9088: u64 [sp + 0xf8] = s1\n  9092: a4 = u64 [sp + 0x38]\n  9095: u64 [sp + 0xf0] = a4\n  9099: a4 = u64 [sp + 0x28]\n  9102: u64 [sp + 0xe8] = a4\n  9106: a4 = u64 [sp + 0x30]\n  9109: u64 [sp + 0xe0] = a4\n  9113: jump @132\n      : @131 (gas: 188)\n  9116: u8 [sp + 191] = 0xff\n  9122: u8 [sp + 190] = 0xff\n  9128: u8 [sp + 189] = 0xff\n  9134: u8 [sp + 188] = 0xff\n  9140: u8 [sp + 187] = 0xff\n  9146: u8 [sp + 186] = 0xff\n  9152: u8 [sp + 185] = 0xff\n  9158: u8 [sp + 184] = 0xff\n  9164: u8 [sp + 183] = 0xff\n  9170: u8 [sp + 182] = 0xff\n  9176: u8 [sp + 181] = 0xff\n  9182: u8 [sp + 180] = 0xff\n  9188: u8 [sp + 179] = 0xff\n  9194: u8 [sp + 178] = 0xff\n  9200: u8 [sp + 177] = 0xff\n  9206: u8 [sp + 176] = 0xff\n  9212: u8 [sp + 175] = 0xff\n  9218: u8 [sp + 174] = 0xff\n  9224: u8 [sp + 173] = 0xff\n  9230: u8 [sp + 172] = 0xff\n  9236: u8 [sp + 171] = 0xff\n  9242: u8 [sp + 170] = 0xff\n  9248: u8 [sp + 169] = 0xff\n  9254: u8 [sp + 168] = 0xff\n  9260: u8 [sp + 167] = 0xff\n  9266: u8 [sp + 166] = 0xff\n  9272: u8 [sp + 165] = 0xff\n  9278: u8 [sp + 164] = 0xff\n  9284: u8 [sp + 163] = 0xff\n  9290: u8 [sp + 162] = 0xff\n  9296: u8 [sp + 161] = 0xff\n  9302: u8 [sp + 160] = 0xff\n  9308: ra = u64 [sp + 0x58]\n  9311: a1 = ra & 0x1f\n  9314: a2 = sp + 0xa0\n  9318: a1 = a1 | a2\n  9321: u8 [sp + 223] = 0\n  9325: u8 [sp + 222] = 0\n  9329: u8 [sp + 221] = 0\n  9333: u8 [sp + 220] = 0\n  9337: u8 [sp + 219] = 0\n  9341: u8 [sp + 218] = 0\n  9345: u8 [sp + 217] = 0\n  9349: u8 [sp + 216] = 0\n  9353: u8 [sp + 215] = 0\n  9357: u8 [sp + 214] = 0\n  9361: u8 [sp + 213] = 0\n  9365: u8 [sp + 212] = 0\n  9369: u8 [sp + 211] = 0\n  9373: u8 [sp + 210] = 0\n  9377: u8 [sp + 209] = 0\n  9381: u8 [sp + 208] = 0\n  9385: u8 [sp + 207] = 0\n  9389: u8 [sp + 206] = 0\n  9393: u8 [sp + 205] = 0\n  9397: u8 [sp + 204] = 0\n  9401: u8 [sp + 203] = 0\n  9405: u8 [sp + 202] = 0\n  9409: u8 [sp + 201] = 0\n  9413: u8 [sp + 200] = 0\n  9417: u8 [sp + 199] = 0\n  9421: u8 [sp + 198] = 0\n  9425: u8 [sp + 197] = 0\n  9429: u8 [sp + 196] = 0\n  9433: u8 [sp + 195] = 0\n  9437: u8 [sp + 194] = 0\n  9441: u8 [sp + 193] = 0\n  9445: u8 [sp + 192] = 0\n  9449: a2 = u8 [a1 + 0x1]\n  9452: a3 = u8 [a1]\n  9454: a4 = u8 [a1 + 0x2]\n  9457: a5 = u8 [a1 + 0x3]\n  9460: a2 = a2 << 0x8\n  9463: a2 = a2 | a3\n  9466: a4 = a4 << 0x10\n  9469: a5 = a5 << 0x18\n  9472: a4 = a4 | a5\n  9475: a2 = a2 | a4\n  9478: a3 = u8 [a1 + 0x5]\n  9481: a4 = u8 [a1 + 0x4]\n  9484: a5 = u8 [a1 + 0x6]\n  9487: s1 = u8 [a1 + 0x7]\n  9490: a3 = a3 << 0x8\n  9493: a3 = a3 | a4\n  9496: a5 = a5 << 0x10\n  9499: s1 = s1 << 0x18\n  9502: a5 = a5 | s1\n  9505: a3 = a3 | a5\n  9508: a3 = a3 << 0x20\n  9511: t1 = a3 | a2\n  9514: a3 = u8 [a1 + 0x9]\n  9517: a4 = u8 [a1 + 0x8]\n  9520: a5 = u8 [a1 + 0xa]\n  9523: s1 = u8 [a1 + 0xb]\n  9526: a3 = a3 << 0x8\n  9529: a3 = a3 | a4\n  9532: a5 = a5 << 0x10\n  9535: s1 = s1 << 0x18\n  9538: a5 = a5 | s1\n  9541: a3 = a3 | a5\n  9544: a4 = u8 [a1 + 0xd]\n  9547: a5 = u8 [a1 + 0xc]\n  9550: s1 = u8 [a1 + 0xe]\n  9553: a0 = u8 [a1 + 0xf]\n  9556: a4 = a4 << 0x8\n  9559: a4 = a4 | a5\n  9562: s1 = s1 << 0x10\n  9565: a0 = a0 << 0x18\n  9568: a0 = a0 | s1\n  9571: a0 = a0 | a4\n  9574: a0 = a0 << 0x20\n  9577: a3 = a3 | a0\n  9580: a0 = u8 [a1 + 0x11]\n  9583: a4 = u8 [a1 + 0x10]\n  9586: a5 = u8 [a1 + 0x12]\n  9589: s1 = u8 [a1 + 0x13]\n  9592: a0 = a0 << 0x8\n  9595: a0 = a0 | a4\n  9598: a5 = a5 << 0x10\n  9601: s1 = s1 << 0x18\n  9604: a5 = a5 | s1\n  9607: a0 = a0 | a5\n  9610: a4 = u8 [a1 + 0x15]\n  9613: a5 = u8 [a1 + 0x14]\n  9616: s1 = u8 [a1 + 0x16]\n  9619: a2 = u8 [a1 + 0x17]\n  9622: a4 = a4 << 0x8\n  9625: a4 = a4 | a5\n  9628: s1 = s1 << 0x10\n  9631: a2 = a2 << 0x18\n  9634: a2 = a2 | s1\n  9637: a2 = a2 | a4\n  9640: a2 = a2 << 0x20\n  9643: a4 = a2 | a0\n  9646: a0 = u8 [a1 + 0x19]\n  9649: a2 = u8 [a1 + 0x18]\n  9652: a5 = u8 [a1 + 0x1a]\n  9655: s1 = u8 [a1 + 0x1b]\n  9658: a0 = a0 << 0x8\n  9661: a0 = a0 | a2\n  9664: a5 = a5 << 0x10\n  9667: s1 = s1 << 0x18\n  9670: a5 = a5 | s1\n  9673: a0 = a0 | a5\n  9676: a2 = u8 [a1 + 0x1d]\n  9679: a5 = u8 [a1 + 0x1c]\n  9682: s1 = u8 [a1 + 0x1e]\n  9685: a1 = u8 [a1 + 0x1f]\n  9688: a2 = a2 << 0x8\n  9691: a2 = a2 | a5\n  9694: s1 = s1 << 0x10\n  9697: a1 = a1 << 0x18\n  9700: a1 = a1 | s1\n  9703: a1 = a1 | a2\n  9706: a1 = a1 << 0x20\n  9709: a0 = a0 | a1\n  9712: t2 = t2 & ~a0\n  9715: a0 = u64 [sp + 0x10]\n  9718: a1 = a0 & ~a4\n  9721: a0 = u64 [sp + 0x18]\n  9724: a2 = a0 & ~a3\n  9727: a3 = t0 & ~t1\n  9730: a4 = u64 [sp + 0x40]\n  9733: a4 = a4 << 0x1\n  9736: a0 = u64 [sp + 0x48]\n  9739: a5 = a0 >> 0x3f\n  9742: a4 = a4 | a5\n  9745: a5 = a0 << 0x1\n  9748: a0 = u64 [sp + 0x20]\n  9751: s1 = a0 >> 0x3f\n  9754: a5 = a5 | s1\n  9757: s1 = a0 << 0x1\n  9760: a0 = ra >> 0x3f\n  9763: a0 = a0 | s1\n  9766: s1 = ra << 0x1\n  9769: a3 = a3 | s1\n  9772: a0 = a0 | a2\n  9775: a1 = a1 | a5\n  9778: a2 = t2 | a4\n  9781: a4 = u64 [sp + 0x28]\n  9784: u64 [sp + 0xe8] = a4\n  9788: a4 = u64 [sp + 0x30]\n  9791: u64 [sp + 0xe0] = a4\n  9795: a4 = u64 [sp + 0x38]\n  9798: u64 [sp + 0xf0] = a4\n  9802: a4 = u64 [sp + 0x50]\n  9805: u64 [sp + 0xf8] = a4\n  9809: fallthrough\n      : @132 (gas: 5)\n  9810: u64 [sp + 0x118] = a2\n  9814: u64 [sp + 0x110] = a1\n  9818: u64 [sp + 0x108] = a0\n  9822: u64 [sp + 0x100] = a3\n  9826: fallthrough\n      : @133 (gas: 12)\n  9827: i32 a1 = sp + 0xe0\n  9831: i32 a3 = sp + 0x100\n  9835: a2 = 0xffffffffffffffff\n  9838: a4 = 0x20\n  9841: a0 = 0\n  9843: ecalli 9 // 'set_storage'\n  9845: sp = s0 + 0xfffffffffffffec0\n  9849: ra = u64 [sp + 0x138]\n  9853: s0 = u64 [sp + 0x130]\n  9857: s1 = u64 [sp + 0x128]\n  9861: sp = sp + 0x140\n  9865: ret\n      : @134 (gas: 8)\n  9867: u64 [sp + 144] = 0\n  9871: u64 [sp + 136] = 0\n  9875: u64 [sp + 128] = 0\n  9879: a0 = 0x4e487b7100000000\n  9889: a1 = sp + 0x80\n  9893: u64 [sp + 0x98] = a0\n  9897: a0 = 0\n  9899: ra = 104, jump @23\n      : @135 [@dyn 52] (gas: 7)\n  9904: u64 [sp + 120] = 0\n  9907: u64 [sp + 112] = 0\n  9910: u64 [sp + 96] = 0x41\n  9914: a0 = 0x4\n  9917: a1 = sp + 0x60\n  9920: u64 [sp + 104] = 0\n  9923: ra = 106, jump @23\n      : @136 [@dyn 53] (gas: 3)\n  9928: a1 = 0x24\n  9931: a0 = 0\n  9933: ra = 108, jump @0\n      : @137 [@dyn 54] (gas: 6)\n  9938: i32 a1 = a0 + 0\n  9940: a0 = 0x1\n  9943: a2 = 0x24\n  9946: ra = 0x6e\n  9949: ecalli 7 // 'seal_return'\n  9951: fallthrough\n      : @138 [@dyn 55] (gas: 38)\n  9952: sp = sp + 0xfffffffffffffdc0\n  9956: u64 [sp + 0x238] = ra\n  9960: u64 [sp + 0x230] = s0\n  9964: u64 [sp + 0x228] = s1\n  9968: s0 = sp + 0x240\n  9972: sp = sp & 0xffffffffffffffe0\n  9975: a2 = u64 [a1 + 0x18]\n  9978: u64 [sp + 0x88] = a2\n  9982: a2 = u64 [a1 + 0x10]\n  9985: u64 [sp + 0x80] = a2\n  9989: a2 = u64 [a1 + 0x8]\n  9992: u64 [sp + 0x78] = a2\n  9995: a1 = u64 [a1]\n  9997: u64 [sp + 0x70] = a1\n 10000: a1 = u64 [a0 + 0x18]\n 10003: a2 = u64 [a0 + 0x10]\n 10006: a3 = u64 [a0 + 0x8]\n 10009: a0 = u64 [a0]\n 10011: u64 [sp + 0x58] = a1\n 10014: u64 [sp + 0x1f8] = a1\n 10018: u64 [sp + 0x50] = a2\n 10021: u64 [sp + 0x1f0] = a2\n 10025: u64 [sp + 0x48] = a3\n 10028: u64 [sp + 0x1e8] = a3\n 10032: u64 [sp + 0x40] = a0\n 10035: u64 [sp + 0x1e0] = a0\n 10039: u64 [sp + 536] = 0\n 10043: u64 [sp + 528] = 0\n 10047: u64 [sp + 520] = 0\n 10051: u64 [sp + 512] = 0\n 10055: u32 [sp + 544] = 0x20\n 10060: i32 a1 = sp + 0x1e0\n 10064: i32 a3 = sp + 0x200\n 10068: i32 a4 = sp + 0x220\n 10072: a2 = 0xffffffffffffffff\n 10075: a0 = 0\n 10077: ecalli 4 // 'get_storage'\n 10079: fallthrough\n      : @139 (gas: 33)\n 10080: a2 = u64 [sp + 0x210]\n 10084: a3 = u64 [sp + 0x208]\n 10088: a4 = u64 [sp + 0x218]\n 10092: a5 = u64 [sp + 0x200]\n 10096: a0 = a2 << 0x3f\n 10099: a1 = a3 >> 0x1\n 10102: s1 = a1 | a0\n 10105: a1 = a4 << 0x3f\n 10108: u64 [sp + 0x20] = a2\n 10111: a2 = a2 >> 0x1\n 10114: a1 = a1 | a2\n 10117: u64 [sp + 0x30] = a3\n 10120: a2 = a3 << 0x3f\n 10123: a3 = a5 >> 0x1\n 10126: a3 = a3 | a2\n 10129: u64 [sp + 0x38] = a4\n 10132: a0 = a4 >> 0x1\n 10135: u64 [sp + 0x28] = a5\n 10138: a4 = a5 & 0x1\n 10141: a5 = -a4\n 10143: a2 = a3 & 0x7f\n 10146: a1 = a1 & a5\n 10149: s1 = s1 & a5\n 10152: a2 = a3 if a4 != 0\n 10155: a3 = a5 & a0\n 10158: a0 = a2 <u 0x20\n 10161: a0 = 0 if s1 != 0\n 10163: u64 [sp + 0x98] = a1\n 10167: u64 [sp + 0x90] = a3\n 10171: a1 = a1 | a3\n 10174: a0 = 0 if a1 != 0\n 10176: a1 = a4 <u 0x1\n 10179: jump @146 if a1 != a0\n      : @140 (gas: 22)\n 10183: t1 = u64 [sp + 0x70]\n 10186: u64 [sp + 0x60] = a2\n 10189: a0 = a2 <u t1\n 10192: a5 = u64 [sp + 0x78]\n 10195: a2 = s1 ^ a5\n 10198: u64 [sp + 0x68] = s1\n 10201: a1 = s1 <u a5\n 10204: u64 [sp + 0x18] = a2\n 10207: a1 = a0 if a2 == 0\n 10210: a4 = u64 [sp + 0x80]\n 10214: a0 = u64 [sp + 0x98]\n 10218: t0 = a0 <u a4\n 10221: ra = u64 [sp + 0x88]\n 10225: a2 = u64 [sp + 0x90]\n 10229: a3 = a2 ^ ra\n 10232: a2 = a2 <u ra\n 10235: a2 = t0 if a3 == 0\n 10238: a0 = a0 ^ a4\n 10241: u64 [sp + 0x10] = a3\n 10244: a3 = a3 | a0\n 10247: a2 = a1 if a3 == 0\n 10250: jump @143 if a2 == 0\n      : @141 (gas: 34)\n 10254: u64 [sp + 0x160] = t1\n 10258: a0 = u64 [sp + 0x60]\n 10261: u64 [sp + 0x180] = a0\n 10265: a0 = u64 [sp + 0x28]\n 10268: u64 [sp + 0x1a0] = a0\n 10272: a0 = u64 [sp + 0x40]\n 10275: u64 [sp + 0x1c0] = a0\n 10279: u64 [sp + 0x168] = a5\n 10283: a0 = u64 [sp + 0x68]\n 10286: u64 [sp + 0x188] = a0\n 10290: a0 = u64 [sp + 0x30]\n 10293: u64 [sp + 0x1a8] = a0\n 10297: a0 = u64 [sp + 0x48]\n 10300: u64 [sp + 0x1c8] = a0\n 10304: u64 [sp + 0x170] = a4\n 10308: a0 = u64 [sp + 0x98]\n 10312: u64 [sp + 0x190] = a0\n 10316: a0 = u64 [sp + 0x20]\n 10319: u64 [sp + 0x1b0] = a0\n 10323: a0 = u64 [sp + 0x50]\n 10326: u64 [sp + 0x1d0] = a0\n 10330: u64 [sp + 0x178] = ra\n 10334: a0 = u64 [sp + 0x90]\n 10338: u64 [sp + 0x198] = a0\n 10342: a0 = u64 [sp + 0x38]\n 10345: u64 [sp + 0x1b8] = a0\n 10349: a0 = sp + 0x1c0\n 10353: a1 = sp + 0x1a0\n 10357: a2 = sp + 0x180\n 10361: s1 = a3\n 10363: a3 = sp + 0x160\n 10367: a4 = u64 [sp + 0x58]\n 10370: u64 [sp + 0x1d8] = a4\n 10374: ra = 112, jump @124\n      : @142 [@dyn 56] (gas: 6)\n 10379: a3 = s1\n 10381: t1 = u64 [sp + 0x70]\n 10384: a5 = u64 [sp + 0x78]\n 10387: a4 = u64 [sp + 0x80]\n 10391: ra = u64 [sp + 0x88]\n 10395: fallthrough\n      : @143 (gas: 14)\n 10396: s1 = u64 [sp + 0x60]\n 10399: a0 = t1 <u s1\n 10402: t0 = u64 [sp + 0x68]\n 10405: a1 = a5 <u t0\n 10408: a2 = u64 [sp + 0x18]\n 10411: a1 = a0 if a2 == 0\n 10414: a0 = u64 [sp + 0x98]\n 10418: a0 = a4 <u a0\n 10421: a2 = u64 [sp + 0x90]\n 10425: a2 = ra <u a2\n 10428: t2 = u64 [sp + 0x10]\n 10431: a2 = a0 if t2 == 0\n 10434: a2 = a1 if a3 == 0\n 10437: jump @145 if a2 == 0\n      : @144 (gas: 31)\n 10440: u64 [sp + 0xe0] = t1\n 10444: u64 [sp + 0x100] = s1\n 10448: a0 = u64 [sp + 0x28]\n 10451: u64 [sp + 0x120] = a0\n 10455: a0 = u64 [sp + 0x40]\n 10458: u64 [sp + 0x140] = a0\n 10462: u64 [sp + 0xe8] = a5\n 10466: u64 [sp + 0x108] = t0\n 10470: a0 = u64 [sp + 0x30]\n 10473: u64 [sp + 0x128] = a0\n 10477: a0 = u64 [sp + 0x48]\n 10480: u64 [sp + 0x148] = a0\n 10484: u64 [sp + 0xf0] = a4\n 10488: a0 = u64 [sp + 0x98]\n 10492: u64 [sp + 0x110] = a0\n 10496: a0 = u64 [sp + 0x20]\n 10499: u64 [sp + 0x130] = a0\n 10503: a0 = u64 [sp + 0x50]\n 10506: u64 [sp + 0x150] = a0\n 10510: u64 [sp + 0xf8] = ra\n 10514: a0 = u64 [sp + 0x90]\n 10518: u64 [sp + 0x118] = a0\n 10522: a0 = u64 [sp + 0x38]\n 10525: u64 [sp + 0x138] = a0\n 10529: a0 = sp + 0x140\n 10533: a1 = sp + 0x120\n 10537: a2 = sp + 0x100\n 10541: a3 = sp + 0xe0\n 10545: a4 = u64 [sp + 0x58]\n 10548: u64 [sp + 0x158] = a4\n 10552: ra = 114, jump @100\n      : @145 [@dyn 57] (gas: 6)\n 10557: sp = s0 + 0xfffffffffffffdc0\n 10561: ra = u64 [sp + 0x238]\n 10565: s0 = u64 [sp + 0x230]\n 10569: s1 = u64 [sp + 0x228]\n 10573: sp = sp + 0x240\n 10577: ret\n      : @146 (gas: 8)\n 10579: u64 [sp + 208] = 0\n 10583: u64 [sp + 200] = 0\n 10587: u64 [sp + 192] = 0\n 10591: a0 = 0x4e487b7100000000\n 10601: a1 = sp + 0xc0\n 10605: u64 [sp + 0xd8] = a0\n 10609: a0 = 0\n 10611: ra = 116, jump @23\n      : @147 [@dyn 58] (gas: 7)\n 10616: u64 [sp + 184] = 0\n 10620: u64 [sp + 176] = 0\n 10624: u64 [sp + 160] = 0x22\n 10629: a0 = 0x4\n 10632: a1 = sp + 0xa0\n 10636: u64 [sp + 168] = 0\n 10640: ra = 118, jump @23\n      : @148 [@dyn 59] (gas: 3)\n 10645: a1 = 0x24\n 10648: a0 = 0\n 10650: ra = 120, jump @0\n      : @149 [@dyn 60] (gas: 6)\n 10655: i32 a1 = a0 + 0\n 10657: a0 = 0x1\n 10660: a2 = 0x24\n 10663: ra = 0x7a\n 10666: ecalli 7 // 'seal_return'\n 10668: fallthrough\n      : @150 [@dyn 61] (gas: 20)\n 10669: sp = sp + 0xffffffffffffffb0\n 10672: u64 [sp + 0x48] = ra\n 10675: u64 [sp + 0x40] = s0\n 10678: s0 = sp + 0x50\n 10681: sp = sp & 0xfffffffffffffff0\n 10684: a2 = u64 [a0]\n 10686: a1 = u64 [a0 + 0x8]\n 10689: a3 = u64 [a0 + 0x10]\n 10692: a0 = u64 [a0 + 0x18]\n 10695: u64 [sp + 24] = 0\n 10698: u64 [sp + 16] = 0\n 10701: u64 [sp + 8] = 0\n 10704: u64 [sp + 0] = 0\n 10706: u64 [sp + 0x38] = a0\n 10709: u64 [sp + 0x30] = a3\n 10712: u64 [sp + 0x28] = a1\n 10715: a0 = sp + 0x20\n 10718: a1 = sp\n 10720: u64 [sp + 0x20] = a2\n 10723: ra = 124, jump @138\n      : @151 [@dyn 62] (gas: 5)\n 10728: sp = s0 + 0xffffffffffffffb0\n 10731: ra = u64 [sp + 0x48]\n 10734: s0 = u64 [sp + 0x40]\n 10737: sp = sp + 0x50\n 10740: ret\n      : @152 (gas: 21)\n 10742: sp = sp + 0xfffffffffffffea0\n 10746: u64 [sp + 0x158] = ra\n 10750: u64 [sp + 0x150] = s0\n 10754: u64 [sp + 0x148] = s1\n 10758: s0 = sp + 0x160\n 10762: sp = sp & 0xffffffffffffffe0\n 10765: a2 = u64 [a1 + 0x8]\n 10768: a4 = u64 [a1 + 0x18]\n 10771: a3 = u64 [a1]\n 10773: a5 = u64 [a1 + 0x10]\n 10776: a1 = a2 + 0xffffffffffffffff\n 10779: u64 [sp + 0x40] = a2\n 10782: a2 = a2 <u 0x1\n 10785: u64 [sp + 0x48] = a3\n 10788: a3 = a3 <u 0x1\n 10791: a3 = a2 if a1 != 0\n 10794: u64 [sp + 0x58] = a4\n 10797: u64 [sp + 0x50] = a5\n 10800: a1 = a5 | a4\n 10803: a3 = 0 if a1 != 0\n 10805: jump @163 if a3 == 0\n      : @153 (gas: 53)\n 10809: a3 = u64 [a0 + 0x10]\n 10812: u64 [sp + 0x10] = a3\n 10815: a2 = u64 [a0 + 0x8]\n 10818: u64 [sp + 0x18] = a2\n 10821: a1 = u64 [a0]\n 10823: u64 [sp + 0x30] = a1\n 10826: s1 = u64 [a0 + 0x18]\n 10829: u64 [sp + 0x110] = a3\n 10833: u64 [sp + 0x108] = a2\n 10837: u64 [sp + 0x100] = a1\n 10841: u64 [sp + 0x118] = s1\n 10845: u64 [sp + 312] = 0\n 10849: u64 [sp + 304] = 0\n 10853: u64 [sp + 296] = 0\n 10857: u64 [sp + 288] = 0\n 10861: u32 [sp + 224] = 0x20\n 10866: i32 a1 = sp + 0x100\n 10870: i32 a3 = sp + 0x120\n 10874: i32 a4 = sp + 0xe0\n 10878: a2 = 0xffffffffffffffff\n 10881: a0 = 0\n 10883: ecalli 4 // 'get_storage'\n 10885: a0 = u64 [sp + 0x138]\n 10889: u64 [sp + 0x20] = a0\n 10892: a0 = u64 [sp + 0x130]\n 10896: u64 [sp + 0x28] = a0\n 10899: a0 = u64 [sp + 0x128]\n 10903: u64 [sp + 0x38] = a0\n 10906: a0 = u64 [sp + 0x120]\n 10910: u64 [sp + 0x8] = a0\n 10913: u64 [sp] = s1\n 10915: u64 [sp + 0x118] = s1\n 10919: a0 = u64 [sp + 0x10]\n 10922: u64 [sp + 0x110] = a0\n 10926: a0 = u64 [sp + 0x18]\n 10929: u64 [sp + 0x108] = a0\n 10933: a0 = u64 [sp + 0x30]\n 10936: u64 [sp + 0x100] = a0\n 10940: a0 = u64 [sp + 0x58]\n 10943: u64 [sp + 0x138] = a0\n 10947: a0 = u64 [sp + 0x50]\n 10950: u64 [sp + 0x130] = a0\n 10954: s1 = u64 [sp + 0x40]\n 10957: u64 [sp + 0x128] = s1\n 10961: a0 = u64 [sp + 0x48]\n 10964: u64 [sp + 0x120] = a0\n 10968: i32 a1 = sp + 0x100\n 10972: i32 a3 = sp + 0x120\n 10976: a2 = 0xffffffffffffffff\n 10979: a4 = 0x20\n 10982: a0 = 0\n 10984: ecalli 9 // 'set_storage'\n 10986: fallthrough\n      : @154 (gas: 19)\n 10987: a4 = u64 [sp + 0x20]\n 10990: a5 = u64 [sp + 0x58]\n 10993: a0 = a4 ^ a5\n 10996: a2 = u64 [sp + 0x38]\n 10999: a1 = a2 ^ s1\n 11002: a2 = s1 <u a2\n 11005: s1 = u64 [sp + 0x8]\n 11008: a3 = u64 [sp + 0x48]\n 11011: a3 = a3 <u s1\n 11014: a3 = a2 if a1 != 0\n 11017: a1 = a5 <u a4\n 11020: a4 = u64 [sp + 0x28]\n 11023: a5 = u64 [sp + 0x50]\n 11026: a2 = a5 <u a4\n 11029: a2 = a1 if a0 != 0\n 11032: a1 = a4 ^ a5\n 11035: a0 = a0 | a1\n 11038: a3 = a2 if a0 != 0\n 11041: jump @162 if a3 == 0\n      : @155 (gas: 3)\n 11045: a1 = 0x20\n 11048: a0 = 0\n 11050: ra = 126, jump @0\n      : @156 [@dyn 63] (gas: 71)\n 11055: a1 = u64 [sp]\n 11057: a1 = reverse a1\n 11059: a2 = u64 [sp + 0x10]\n 11062: a2 = reverse a2\n 11064: a3 = u64 [sp + 0x18]\n 11067: a3 = reverse a3\n 11069: a4 = u64 [sp + 0x30]\n 11072: a4 = reverse a4\n 11074: a5 = a4 >> 0x38\n 11077: u8 [a0 + 0x1f] = a5\n 11080: a5 = a4 >> 0x30\n 11083: u8 [a0 + 0x1e] = a5\n 11086: a5 = a4 >> 0x28\n 11089: u8 [a0 + 0x1d] = a5\n 11092: a5 = a4 >> 0x20\n 11095: u8 [a0 + 0x1c] = a5\n 11098: a5 = a4 >> 0x18\n 11101: u8 [a0 + 0x1b] = a5\n 11104: a5 = a4 >> 0x10\n 11107: u8 [a0 + 0x1a] = a5\n 11110: a5 = a4 >> 0x8\n 11113: u8 [a0 + 0x19] = a5\n 11116: u8 [a0 + 0x18] = a4\n 11119: u8 [a0 + 0x10] = a3\n 11122: a4 = a3 >> 0x38\n 11125: u8 [a0 + 0x17] = a4\n 11128: a4 = a3 >> 0x30\n 11131: u8 [a0 + 0x16] = a4\n 11134: a4 = a3 >> 0x28\n 11137: u8 [a0 + 0x15] = a4\n 11140: a4 = a3 >> 0x20\n 11143: u8 [a0 + 0x14] = a4\n 11146: a4 = a3 >> 0x18\n 11149: u8 [a0 + 0x13] = a4\n 11152: a4 = a3 >> 0x10\n 11155: u8 [a0 + 0x12] = a4\n 11158: a3 = a3 >> 0x8\n 11161: u8 [a0 + 0x11] = a3\n 11164: u8 [a0 + 0x8] = a2\n 11167: a3 = a2 >> 0x38\n 11170: u8 [a0 + 0xf] = a3\n 11173: a3 = a2 >> 0x30\n 11176: u8 [a0 + 0xe] = a3\n 11179: a3 = a2 >> 0x28\n 11182: u8 [a0 + 0xd] = a3\n 11185: a3 = a2 >> 0x20\n 11188: u8 [a0 + 0xc] = a3\n 11191: a3 = a2 >> 0x18\n 11194: u8 [a0 + 0xb] = a3\n 11197: a3 = a2 >> 0x10\n 11200: u8 [a0 + 0xa] = a3\n 11203: a2 = a2 >> 0x8\n 11206: u8 [a0 + 0x9] = a2\n 11209: u8 [a0] = a1\n 11211: a2 = a1 >> 0x38\n 11214: u8 [a0 + 0x7] = a2\n 11217: a2 = a1 >> 0x30\n 11220: u8 [a0 + 0x6] = a2\n 11223: a2 = a1 >> 0x28\n 11226: u8 [a0 + 0x5] = a2\n 11229: a2 = a1 >> 0x20\n 11232: u8 [a0 + 0x4] = a2\n 11235: a2 = a1 >> 0x18\n 11238: u8 [a0 + 0x3] = a2\n 11241: a2 = a1 >> 0x10\n 11244: u8 [a0 + 0x2] = a2\n 11247: a1 = a1 >> 0x8\n 11250: u8 [a0 + 0x1] = a1\n 11253: a1 = 0x20\n 11256: a0 = 0\n 11258: ra = 128, jump @0\n      : @157 [@dyn 64] (gas: 5)\n 11264: i32 a0 = a0 + 0\n 11266: i32 a2 = sp + 0x120\n 11270: a1 = 0x20\n 11273: ecalli 5 // 'hash_keccak_256'\n 11275: fallthrough\n      : @158 (gas: 58)\n 11276: a0 = u64 [sp + 0x138]\n 11280: a1 = u64 [sp + 0x130]\n 11284: a5 = reverse a0\n 11286: a1 = reverse a1\n 11288: a0 = u64 [sp + 0x40]\n 11291: a0 = a0 + a1\n 11294: a3 = u64 [sp + 0x48]\n 11297: t1 = a5 + a3\n 11300: a3 = t1 <u a5\n 11303: a2 = a0 + a3\n 11306: a4 = a2 ^ a1\n 11309: a0 = a2 <u a1\n 11312: a0 = a3 if a4 == 0\n 11315: a3 = u64 [sp + 0x38]\n 11318: a3 = a3 + a1\n 11321: t2 = a5 + s1\n 11324: s1 = t2 <u a5\n 11327: ra = a3 + s1\n 11330: a3 = u64 [sp + 0x128]\n 11334: a4 = u64 [sp + 0x120]\n 11338: a5 = ra ^ a1\n 11341: a1 = ra <u a1\n 11344: a1 = s1 if a5 == 0\n 11347: t0 = reverse a4\n 11349: a3 = reverse a3\n 11351: a4 = u64 [sp + 0x50]\n 11354: a4 = a4 + a3\n 11357: a5 = u64 [sp + 0x58]\n 11360: a5 = a5 + t0\n 11363: s1 = a4 <u a3\n 11366: a5 = a5 + s1\n 11369: a0 = a0 + a4\n 11372: s1 = a0 <u a4\n 11375: s1 = s1 + a5\n 11378: a5 = a0\n 11380: a0 = u64 [sp + 0x28]\n 11383: a0 = a0 + a3\n 11386: a4 = a0 + a1\n 11389: a1 = u64 [sp + 0x20]\n 11392: t0 = t0 + a1\n 11395: a1 = a4 <u a0\n 11398: a0 = a0 <u a3\n 11401: a0 = a0 + t0\n 11404: t0 = a4\n 11406: a3 = a0 + a1\n 11409: a0 = a2 ^ ra\n 11412: a1 = a2 <u ra\n 11415: a4 = t1 <u t2\n 11418: a4 = a1 if a0 != 0\n 11421: a0 = a5 <u t0\n 11424: a1 = s1 ^ a3\n 11427: u64 [sp + 0x40] = a3\n 11430: a3 = s1 <u a3\n 11433: a3 = a0 if a1 == 0\n 11436: a0 = a5 ^ t0\n 11439: a0 = a0 | a1\n 11442: a4 = a3 if a0 != 0\n 11445: jump @162 if a4 == 0\n      : @159 (gas: 4)\n 11449: u64 [sp + 0x38] = t2\n 11452: u64 [sp + 0x30] = ra\n 11455: u64 [sp + 0x28] = t0\n 11458: fallthrough\n      : @160 (gas: 15)\n 11459: u64 [sp + 0x48] = s1\n 11462: u64 [sp + 0x50] = a2\n 11465: u64 [sp + 0x58] = t1\n 11468: u64 [sp + 184] = 0\n 11472: u64 [sp + 176] = 0\n 11476: u64 [sp + 168] = 0\n 11480: u64 [sp + 160] = 0\n 11484: u64 [sp + 0xc0] = t1\n 11488: u64 [sp + 0xc8] = a2\n 11492: u64 [sp + 0xd0] = a5\n 11496: a0 = sp + 0xc0\n 11500: a1 = sp + 0xa0\n 11504: u64 [sp + 0xd8] = s1\n 11508: s1 = a5\n 11510: ra = 130, jump @138\n      : @161 [@dyn 65] (gas: 28)\n 11516: t0 = u64 [sp + 0x28]\n 11519: ra = u64 [sp + 0x30]\n 11522: t2 = u64 [sp + 0x38]\n 11525: a2 = u64 [sp + 0x50]\n 11528: t1 = u64 [sp + 0x58]\n 11531: t1 = t1 + 0x1\n 11534: a0 = t1 <u 0x1\n 11537: a2 = a2 + a0\n 11540: a0 = t1 | a2\n 11543: a0 = a0 <u 0x1\n 11546: a0 = a0 + s1\n 11549: a1 = a0 <u s1\n 11552: s1 = u64 [sp + 0x48]\n 11555: s1 = s1 + a1\n 11558: a1 = t1 <u t2\n 11561: a4 = a2 ^ ra\n 11564: a3 = a2 <u ra\n 11567: a3 = a1 if a4 == 0\n 11570: a1 = a0 <u t0\n 11573: a4 = u64 [sp + 0x40]\n 11576: a5 = s1 ^ a4\n 11579: a4 = s1 <u a4\n 11582: a4 = a1 if a5 == 0\n 11585: a1 = a0 ^ t0\n 11588: a1 = a1 | a5\n 11591: a4 = a3 if a1 == 0\n 11594: a5 = a0\n 11596: jump @160 if a4 != 0\n      : @162 (gas: 6)\n 11600: sp = s0 + 0xfffffffffffffea0\n 11604: ra = u64 [sp + 0x158]\n 11608: s0 = u64 [sp + 0x150]\n 11612: s1 = u64 [sp + 0x148]\n 11616: sp = sp + 0x160\n 11620: ret\n      : @163 (gas: 8)\n 11622: u64 [sp + 144] = 0\n 11626: u64 [sp + 136] = 0\n 11630: u64 [sp + 128] = 0\n 11634: a0 = 0x4e487b7100000000\n 11644: a1 = sp + 0x80\n 11648: u64 [sp + 0x98] = a0\n 11652: a0 = 0\n 11654: ra = 132, jump @23\n      : @164 [@dyn 66] (gas: 7)\n 11660: u64 [sp + 120] = 0\n 11663: u64 [sp + 112] = 0\n 11666: u64 [sp + 96] = 0x41\n 11670: a0 = 0x4\n 11673: a1 = sp + 0x60\n 11676: u64 [sp + 104] = 0\n 11679: ra = 134, jump @23\n      : @165 [@dyn 67] (gas: 3)\n 11685: a1 = 0x24\n 11688: a0 = 0\n 11690: ra = 136, jump @0\n      : @166 [@dyn 68] (gas: 6)\n 11696: i32 a1 = a0 + 0\n 11698: a0 = 0x1\n 11701: a2 = 0x24\n 11704: ra = 0x8a\n 11708: ecalli 7 // 'seal_return'\n 11710: fallthrough\n      : @167 [@dyn 69] (gas: 6)\n 11711: u64 [a0 + 24] = 0\n 11714: u64 [a0 + 16] = 0\n 11717: u64 [a0 + 8] = 0\n 11720: a1 = 0x39\n 11723: u64 [a0] = a1\n 11725: ret\n      : @168 (gas: 15)\n 11727: sp = sp + 0xffffffffffffff20\n 11731: u64 [sp + 0xd8] = ra\n 11735: u64 [sp + 0xd0] = s0\n 11739: u64 [sp + 0xc8] = s1\n 11743: s0 = sp + 0xe0\n 11747: sp = sp & 0xffffffffffffffe0\n 11750: t0 = u64 [a1 + 0x18]\n 11753: a5 = u64 [a1 + 0x10]\n 11756: a4 = u64 [a1]\n 11758: s1 = u64 [a1 + 0x8]\n 11761: a1 = a5 | t0\n 11764: a3 = a4 <u 0x20\n 11767: a3 = 0 if s1 != 0\n 11769: a3 = 0 if a1 != 0\n 11771: jump @176 if a3 != 0\n      : @169 (gas: 23)\n 11775: a1 = u64 [a2 + 0x18]\n 11778: u64 [sp + 0x50] = a1\n 11781: a1 = u64 [a2 + 0x10]\n 11784: u64 [sp + 0x40] = a1\n 11787: a1 = u64 [a2 + 0x8]\n 11790: u64 [sp + 0x58] = a1\n 11793: a1 = u64 [a2]\n 11795: u64 [sp + 0x20] = a1\n 11798: a1 = u64 [a0 + 0x18]\n 11801: u64 [sp] = a1\n 11803: a1 = u64 [a0 + 0x10]\n 11806: u64 [sp + 0x8] = a1\n 11809: a1 = u64 [a0 + 0x8]\n 11812: u64 [sp + 0x10] = a1\n 11815: a0 = u64 [a0]\n 11817: u64 [sp + 0x18] = a0\n 11820: a1 = 0x20\n 11823: a0 = 0\n 11825: u64 [sp + 0x28] = t0\n 11828: u64 [sp + 0x48] = a5\n 11831: u64 [sp + 0x38] = s1\n 11834: u64 [sp + 0x30] = a4\n 11837: ra = 140, jump @0\n      : @170 [@dyn 70] (gas: 71)\n 11843: a1 = u64 [sp]\n 11845: a1 = reverse a1\n 11847: a2 = u64 [sp + 0x8]\n 11850: a2 = reverse a2\n 11852: a3 = u64 [sp + 0x10]\n 11855: a3 = reverse a3\n 11857: a4 = u64 [sp + 0x18]\n 11860: a4 = reverse a4\n 11862: a5 = a4 >> 0x38\n 11865: u8 [a0 + 0x1f] = a5\n 11868: a5 = a4 >> 0x30\n 11871: u8 [a0 + 0x1e] = a5\n 11874: a5 = a4 >> 0x28\n 11877: u8 [a0 + 0x1d] = a5\n 11880: a5 = a4 >> 0x20\n 11883: u8 [a0 + 0x1c] = a5\n 11886: a5 = a4 >> 0x18\n 11889: u8 [a0 + 0x1b] = a5\n 11892: a5 = a4 >> 0x10\n 11895: u8 [a0 + 0x1a] = a5\n 11898: a5 = a4 >> 0x8\n 11901: u8 [a0 + 0x19] = a5\n 11904: u8 [a0 + 0x18] = a4\n 11907: u8 [a0 + 0x10] = a3\n 11910: a4 = a3 >> 0x38\n 11913: u8 [a0 + 0x17] = a4\n 11916: a4 = a3 >> 0x30\n 11919: u8 [a0 + 0x16] = a4\n 11922: a4 = a3 >> 0x28\n 11925: u8 [a0 + 0x15] = a4\n 11928: a4 = a3 >> 0x20\n 11931: u8 [a0 + 0x14] = a4\n 11934: a4 = a3 >> 0x18\n 11937: u8 [a0 + 0x13] = a4\n 11940: a4 = a3 >> 0x10\n 11943: u8 [a0 + 0x12] = a4\n 11946: a3 = a3 >> 0x8\n 11949: u8 [a0 + 0x11] = a3\n 11952: u8 [a0 + 0x8] = a2\n 11955: a3 = a2 >> 0x38\n 11958: u8 [a0 + 0xf] = a3\n 11961: a3 = a2 >> 0x30\n 11964: u8 [a0 + 0xe] = a3\n 11967: a3 = a2 >> 0x28\n 11970: u8 [a0 + 0xd] = a3\n 11973: a3 = a2 >> 0x20\n 11976: u8 [a0 + 0xc] = a3\n 11979: a3 = a2 >> 0x18\n 11982: u8 [a0 + 0xb] = a3\n 11985: a3 = a2 >> 0x10\n 11988: u8 [a0 + 0xa] = a3\n 11991: a2 = a2 >> 0x8\n 11994: u8 [a0 + 0x9] = a2\n 11997: u8 [a0] = a1\n 11999: a2 = a1 >> 0x38\n 12002: u8 [a0 + 0x7] = a2\n 12005: a2 = a1 >> 0x30\n 12008: u8 [a0 + 0x6] = a2\n 12011: a2 = a1 >> 0x28\n 12014: u8 [a0 + 0x5] = a2\n 12017: a2 = a1 >> 0x20\n 12020: u8 [a0 + 0x4] = a2\n 12023: a2 = a1 >> 0x18\n 12026: u8 [a0 + 0x3] = a2\n 12029: a2 = a1 >> 0x10\n 12032: u8 [a0 + 0x2] = a2\n 12035: a1 = a1 >> 0x8\n 12038: u8 [a0 + 0x1] = a1\n 12041: a1 = 0x20\n 12044: a0 = 0\n 12046: ra = 142, jump @0\n      : @171 [@dyn 71] (gas: 5)\n 12052: i32 a0 = a0 + 0\n 12054: i32 a2 = sp + 0xa0\n 12058: a1 = 0x20\n 12061: ecalli 5 // 'hash_keccak_256'\n 12063: fallthrough\n      : @172 (gas: 112)\n 12064: a2 = u64 [sp + 0x20]\n 12067: a1 = a2 + 0x1f\n 12070: a0 = a1 <u a2\n 12073: t1 = a2\n 12075: a4 = u64 [sp + 0x58]\n 12078: a3 = a4 + a0\n 12081: a2 = a3 <u a4\n 12084: t0 = a4\n 12086: a2 = a0 if a0 == 0\n 12089: s1 = u64 [sp + 0x40]\n 12092: a2 = a2 + s1\n 12095: u64 [sp + 0x18] = a2\n 12098: a2 = a2 << 0x3b\n 12101: a4 = a3 >> 0x5\n 12104: a2 = a2 | a4\n 12107: a3 = a3 << 0x3b\n 12110: a1 = a1 >> 0x5\n 12113: a5 = a1 | a3\n 12116: a1 = t1 <u 0x20\n 12119: a1 = 0 if t0 != 0\n 12121: a3 = u64 [sp + 0xb8]\n 12125: t1 = u64 [sp + 0xb0]\n 12129: a0 = u64 [sp + 0x50]\n 12132: a4 = s1 | a0\n 12135: a1 = 0 if a4 != 0\n 12137: a4 = reverse a3\n 12139: s1 = reverse t1\n 12141: a2 = 0 if a1 != 0\n 12143: a5 = 0 if a1 != 0\n 12145: a5 = a5 + a4\n 12148: u64 [sp + 0x58] = a5\n 12151: a5 = a5 <u a4\n 12154: a3 = s1 + a5\n 12157: t0 = a3 + a2\n 12160: a3 = t0 ^ s1\n 12163: ra = t0 <u s1\n 12166: ra = a5 if a3 == 0\n 12169: a0 = u64 [sp + 0x30]\n 12172: t2 = a0 + 0x1f\n 12175: a0 = t2 <u a0\n 12178: a2 = u64 [sp + 0x38]\n 12181: a3 = a2 + a0\n 12184: a5 = a3 <u a2\n 12187: a5 = a0 if a0 == 0\n 12190: a0 = u64 [sp + 0x48]\n 12193: a5 = a5 + a0\n 12196: a0 = a5 << 0x3b\n 12199: a2 = a3 >> 0x5\n 12202: a0 = a0 | a2\n 12205: a3 = a3 << 0x3b\n 12208: a2 = t2 >> 0x5\n 12211: a2 = a2 | a3\n 12214: t2 = a4 + a2\n 12217: a2 = t2 <u a4\n 12220: a3 = s1 + a2\n 12223: t1 = a3 + a0\n 12226: a0 = t1 ^ s1\n 12229: a3 = t1 <u s1\n 12232: a3 = a2 if a0 == 0\n 12235: a4 = u64 [sp + 0x18]\n 12238: a0 = u64 [sp + 0x40]\n 12241: a0 = a4 <u a0\n 12244: a2 = u64 [sp + 0x50]\n 12247: a0 = a0 + a2\n 12250: a2 = a4 >> 0x5\n 12253: a4 = a0 << 0x3b\n 12256: a2 = a2 | a4\n 12259: a0 = a0 >> 0x5\n 12262: a4 = u64 [sp + 0xa8]\n 12266: s1 = u64 [sp + 0xa0]\n 12270: a2 = 0 if a1 != 0\n 12272: a0 = 0 if a1 != 0\n 12274: a1 = reverse a4\n 12276: a4 = reverse s1\n 12278: u64 [sp + 0x50] = a4\n 12281: a0 = a0 + a4\n 12284: a2 = a2 + a1\n 12287: s1 = a2 <u a1\n 12290: a0 = a0 + s1\n 12293: a4 = a2 + ra\n 12296: s1 = a4 <u a2\n 12299: s1 = s1 + a0\n 12302: a0 = u64 [sp + 0x48]\n 12305: a0 = a5 <u a0\n 12308: a2 = u64 [sp + 0x28]\n 12311: a0 = a0 + a2\n 12314: a5 = a5 >> 0x5\n 12317: a2 = a0 << 0x3b\n 12320: a2 = a2 | a5\n 12323: a5 = u64 [sp + 0x58]\n 12326: a0 = a0 >> 0x5\n 12329: a2 = a2 + a1\n 12332: ra = a2 + a3\n 12335: a1 = a2 <u a1\n 12338: a2 = ra <u a2\n 12341: a3 = u64 [sp + 0x50]\n 12344: a0 = a0 + a3\n 12347: a0 = a0 + a1\n 12350: a3 = a0 + a2\n 12353: a0 = t0 ^ t1\n 12356: a1 = t0 <u t1\n 12359: a2 = a5 <u t2\n 12362: a2 = a1 if a0 != 0\n 12365: a0 = a4 <u ra\n 12368: a1 = s1 ^ a3\n 12371: u64 [sp + 0x40] = a3\n 12374: a3 = s1 <u a3\n 12377: a3 = a0 if a1 == 0\n 12380: a0 = a4 ^ ra\n 12383: a0 = a0 | a1\n 12386: a2 = a3 if a0 != 0\n 12389: jump @176 if a2 == 0\n      : @173 (gas: 5)\n 12393: a0 = a4\n 12395: u64 [sp + 0x38] = t2\n 12398: u64 [sp + 0x30] = t1\n 12401: u64 [sp + 0x28] = ra\n 12404: fallthrough\n      : @174 (gas: 36)\n 12405: u64 [sp + 0x48] = a0\n 12408: u64 [sp + 0x50] = t0\n 12411: u64 [sp + 0x58] = a5\n 12414: u64 [sp + 0x90] = a0\n 12418: u64 [sp + 0x88] = t0\n 12422: u64 [sp + 0x80] = a5\n 12426: u64 [sp + 0x98] = s1\n 12430: u64 [sp + 184] = 0\n 12434: u64 [sp + 176] = 0\n 12438: u64 [sp + 168] = 0\n 12442: u64 [sp + 160] = 0\n 12446: u32 [sp + 96] = 0x20\n 12450: i32 a1 = sp + 0x80\n 12454: i32 a3 = sp + 0xa0\n 12458: i32 a4 = sp + 0x60\n 12461: a2 = 0xffffffffffffffff\n 12464: a0 = 0\n 12466: ecalli 4 // 'get_storage'\n 12468: u64 [sp + 0x98] = s1\n 12472: a0 = u64 [sp + 0x48]\n 12475: u64 [sp + 0x90] = a0\n 12479: a0 = u64 [sp + 0x50]\n 12482: u64 [sp + 0x88] = a0\n 12486: a0 = u64 [sp + 0x58]\n 12489: u64 [sp + 0x80] = a0\n 12493: u64 [sp + 184] = 0\n 12497: u64 [sp + 176] = 0\n 12501: u64 [sp + 168] = 0\n 12505: u64 [sp + 160] = 0\n 12509: i32 a1 = sp + 0x80\n 12513: i32 a3 = sp + 0xa0\n 12517: a2 = 0xffffffffffffffff\n 12520: a4 = 0x20\n 12523: a0 = 0\n 12525: ecalli 9 // 'set_storage'\n 12527: fallthrough\n      : @175 (gas: 27)\n 12528: ra = u64 [sp + 0x28]\n 12531: t1 = u64 [sp + 0x30]\n 12534: t2 = u64 [sp + 0x38]\n 12537: t0 = u64 [sp + 0x50]\n 12540: a5 = u64 [sp + 0x58]\n 12543: a5 = a5 + 0x1\n 12546: a0 = a5 <u 0x1\n 12549: t0 = t0 + a0\n 12552: a0 = a5 | t0\n 12555: a0 = a0 <u 0x1\n 12558: a1 = u64 [sp + 0x48]\n 12561: a0 = a0 + a1\n 12564: a1 = a0 <u a1\n 12567: s1 = s1 + a1\n 12570: a1 = a5 <u t2\n 12573: a2 = t0 ^ t1\n 12576: a3 = t0 <u t1\n 12579: a3 = a1 if a2 == 0\n 12582: a1 = a0 <u ra\n 12585: a4 = u64 [sp + 0x40]\n 12588: a2 = s1 ^ a4\n 12591: a4 = s1 <u a4\n 12594: a4 = a1 if a2 == 0\n 12597: a1 = a0 ^ ra\n 12600: a1 = a1 | a2\n 12603: a4 = a3 if a1 == 0\n 12606: jump @174 if a4 != 0\n      : @176 (gas: 6)\n 12610: sp = s0 + 0xffffffffffffff20\n 12614: ra = u64 [sp + 0xd8]\n 12618: s0 = u64 [sp + 0xd0]\n 12622: s1 = u64 [sp + 0xc8]\n 12626: sp = sp + 0xe0\n 12630: ret\n      : @177 (gas: 21)\n 12632: sp = sp + 0xfffffffffffffd40\n 12636: u64 [sp + 0x2b8] = ra\n 12640: u64 [sp + 0x2b0] = s0\n 12644: u64 [sp + 0x2a8] = s1\n 12648: s0 = sp + 0x2c0\n 12652: sp = sp & 0xffffffffffffffe0\n 12655: a3 = u64 [a1 + 0x10]\n 12658: a2 = u64 [a1 + 0x18]\n 12661: a4 = u64 [a1 + 0x8]\n 12664: a5 = u64 [a1]\n 12666: u64 [sp + 0x98] = a2\n 12670: u64 [sp + 0x88] = a4\n 12674: a1 = a4 | a2\n 12677: a2 = a5 | a3\n 12680: a2 = a2 | a1\n 12683: a2 = a2 >> 0x20\n 12686: u64 [sp + 0x90] = a3\n 12690: a1 = a1 | a3\n 12693: a1 = a1 << 0x20\n 12696: a1 = a1 | a2\n 12699: jump @207 if a1 != 0\n      : @178 (gas: 13)\n 12703: a1 = u64 [a0 + 0x18]\n 12706: u64 [sp + 0x40] = a1\n 12709: a1 = u64 [a0 + 0x10]\n 12712: u64 [sp + 0x58] = a1\n 12715: a1 = u64 [a0 + 0x8]\n 12718: u64 [sp + 0x48] = a1\n 12721: a0 = u64 [a0]\n 12723: u64 [sp + 0x50] = a0\n 12726: u64 [sp + 0x80] = a5\n 12730: i32 a0 = a5 + 0\n 12732: a1 = 0x20\n 12735: u64 [sp + 0x18] = a0\n 12738: ra = 144, jump @0\n      : @179 [@dyn 72] (gas: 80)\n 12744: a1 = u8 [a0 + 0x9]\n 12747: a2 = u8 [a0 + 0x8]\n 12750: a3 = u8 [a0 + 0xa]\n 12753: a4 = u8 [a0 + 0xb]\n 12756: a1 = a1 << 0x8\n 12759: a1 = a1 | a2\n 12762: a3 = a3 << 0x10\n 12765: a4 = a4 << 0x18\n 12768: a3 = a3 | a4\n 12771: a1 = a1 | a3\n 12774: a2 = u8 [a0 + 0xd]\n 12777: a3 = u8 [a0 + 0xc]\n 12780: a4 = u8 [a0 + 0xe]\n 12783: a5 = u8 [a0 + 0xf]\n 12786: a2 = a2 << 0x8\n 12789: a2 = a2 | a3\n 12792: a4 = a4 << 0x10\n 12795: a5 = a5 << 0x18\n 12798: a4 = a4 | a5\n 12801: a2 = a2 | a4\n 12804: a2 = a2 << 0x20\n 12807: t0 = a2 | a1\n 12810: a1 = u8 [a0 + 0x1]\n 12813: a2 = u8 [a0]\n 12815: a3 = u8 [a0 + 0x2]\n 12818: a4 = u8 [a0 + 0x3]\n 12821: a1 = a1 << 0x8\n 12824: a1 = a1 | a2\n 12827: a3 = a3 << 0x10\n 12830: a4 = a4 << 0x18\n 12833: a3 = a3 | a4\n 12836: a1 = a1 | a3\n 12839: a2 = u8 [a0 + 0x5]\n 12842: a3 = u8 [a0 + 0x4]\n 12845: a4 = u8 [a0 + 0x6]\n 12848: a5 = u8 [a0 + 0x7]\n 12851: a2 = a2 << 0x8\n 12854: a2 = a2 | a3\n 12857: a4 = a4 << 0x10\n 12860: a5 = a5 << 0x18\n 12863: a4 = a4 | a5\n 12866: a2 = a2 | a4\n 12869: a2 = a2 << 0x20\n 12872: s1 = a2 | a1\n 12875: a1 = u8 [a0 + 0x11]\n 12878: a2 = u8 [a0 + 0x10]\n 12881: a3 = u8 [a0 + 0x12]\n 12884: a4 = u8 [a0 + 0x13]\n 12887: a1 = a1 << 0x8\n 12890: a1 = a1 | a2\n 12893: a3 = a3 << 0x10\n 12896: a4 = a4 << 0x18\n 12899: a3 = a3 | a4\n 12902: a1 = a1 | a3\n 12905: a2 = u8 [a0 + 0x15]\n 12908: a3 = u8 [a0 + 0x14]\n 12911: a4 = u8 [a0 + 0x16]\n 12914: a5 = u8 [a0 + 0x17]\n 12917: a2 = a2 << 0x8\n 12920: a2 = a2 | a3\n 12923: a4 = a4 << 0x10\n 12926: a5 = a5 << 0x18\n 12929: a4 = a4 | a5\n 12932: a2 = a2 | a4\n 12935: a2 = a2 << 0x20\n 12938: a1 = a1 | a2\n 12941: u64 [sp + 0x60] = a1\n 12944: a1 = reverse a1\n 12946: u64 [sp + 0x68] = s1\n 12949: a3 = reverse s1\n 12951: u64 [sp + 0x70] = t0\n 12954: a2 = reverse t0\n 12956: u64 [sp + 0x30] = a2\n 12959: u64 [sp + 0x28] = a3\n 12962: a2 = a2 | a3\n 12965: u64 [sp + 0x38] = a1\n 12968: a1 = a1 <u 0x1\n 12971: u64 [sp + 0xd8] = a2\n 12975: a1 = 0 if a2 != 0\n 12977: jump @208 if a1 == 0\n      : @180 (gas: 36)\n 12981: a1 = u8 [a0 + 0x18]\n 12984: u64 [sp + 0xb8] = a1\n 12988: a1 = u8 [a0 + 0x19]\n 12991: u64 [sp + 0x78] = a1\n 12994: a1 = u8 [a0 + 0x1a]\n 12997: u64 [sp + 0xa8] = a1\n 13001: a1 = u8 [a0 + 0x1b]\n 13004: u64 [sp + 0xa0] = a1\n 13008: a1 = u8 [a0 + 0x1c]\n 13011: u64 [sp + 0xd0] = a1\n 13015: a1 = u8 [a0 + 0x1d]\n 13018: u64 [sp + 0xb0] = a1\n 13022: a1 = u8 [a0 + 0x1e]\n 13025: u64 [sp + 0xc8] = a1\n 13029: a0 = u8 [a0 + 0x1f]\n 13032: u64 [sp + 0xc0] = a0\n 13036: u32 [sp + 576] = 0x20\n 13041: a0 = u64 [sp + 0x58]\n 13044: u64 [sp + 0x270] = a0\n 13048: a0 = u64 [sp + 0x48]\n 13051: u64 [sp + 0x268] = a0\n 13055: a0 = u64 [sp + 0x50]\n 13058: u64 [sp + 0x260] = a0\n 13062: s1 = u64 [sp + 0x40]\n 13065: u64 [sp + 0x278] = s1\n 13069: u64 [sp + 664] = 0\n 13073: u64 [sp + 656] = 0\n 13077: u64 [sp + 648] = 0\n 13081: u64 [sp + 640] = 0\n 13085: i32 a1 = sp + 0x260\n 13089: i32 a3 = sp + 0x280\n 13093: i32 a4 = sp + 0x240\n 13097: a2 = 0xffffffffffffffff\n 13100: a0 = 0\n 13102: ecalli 4 // 'get_storage'\n 13104: fallthrough\n      : @181 (gas: 28)\n 13105: a0 = u64 [sp + 0x290]\n 13109: a1 = u64 [sp + 0x288]\n 13113: a2 = u64 [sp + 0x280]\n 13117: a3 = u64 [sp + 0x298]\n 13121: a4 = a0 << 0x3f\n 13124: a5 = a1 >> 0x1\n 13127: a4 = a4 | a5\n 13130: a5 = a3 << 0x3f\n 13133: a0 = a0 >> 0x1\n 13136: t2 = s1\n 13138: s1 = a0 | a5\n 13141: a1 = a1 << 0x3f\n 13144: a5 = a2 >> 0x1\n 13147: a1 = a1 | a5\n 13150: a5 = a3 >> 0x1\n 13153: a2 = a2 & 0x1\n 13156: a0 = -a2\n 13158: t0 = a2 <u 0x1\n 13161: a3 = a1 & 0x7f\n 13164: t1 = a0 & s1\n 13167: a4 = a4 & a0\n 13170: a3 = a1 if a2 != 0\n 13173: a1 = a0 & a5\n 13176: a0 = a3 <u 0x20\n 13179: a0 = 0 if a4 != 0\n 13181: a2 = t1 | a1\n 13184: a0 = 0 if a2 != 0\n 13186: jump @210 if t0 != a0\n      : @182 (gas: 47)\n 13190: a0 = u64 [sp + 0x78]\n 13193: a0 = a0 << 0x8\n 13196: a2 = u64 [sp + 0xb8]\n 13200: a0 = a0 | a2\n 13203: a2 = u64 [sp + 0xa8]\n 13207: a2 = a2 << 0x10\n 13210: a5 = u64 [sp + 0xa0]\n 13214: a5 = a5 << 0x18\n 13217: a2 = a2 | a5\n 13220: a0 = a0 | a2\n 13223: a2 = u64 [sp + 0xb0]\n 13227: a2 = a2 << 0x8\n 13230: a5 = u64 [sp + 0xd0]\n 13234: a2 = a2 | a5\n 13237: a5 = u64 [sp + 0xc8]\n 13241: a5 = a5 << 0x10\n 13244: s1 = u64 [sp + 0xc0]\n 13248: s1 = s1 << 0x18\n 13251: a5 = a5 | s1\n 13254: a2 = a2 | a5\n 13257: a2 = a2 << 0x20\n 13260: a0 = a0 | a2\n 13263: u64 [sp + 0xd0] = a0\n 13267: a0 = reverse a0\n 13269: u64 [sp + 0x20] = a0\n 13272: u64 [sp + 0x1e0] = a0\n 13276: u64 [sp + 0x200] = a3\n 13280: a0 = u64 [sp + 0x50]\n 13283: u64 [sp + 0x220] = a0\n 13287: a0 = u64 [sp + 0x38]\n 13290: u64 [sp + 0x1e8] = a0\n 13294: u64 [sp + 0x208] = a4\n 13298: a0 = u64 [sp + 0x48]\n 13301: u64 [sp + 0x228] = a0\n 13305: a0 = u64 [sp + 0x30]\n 13308: u64 [sp + 0x1f0] = a0\n 13312: u64 [sp + 0x210] = t1\n 13316: a0 = u64 [sp + 0x58]\n 13319: u64 [sp + 0x230] = a0\n 13323: s1 = u64 [sp + 0x28]\n 13326: u64 [sp + 0x1f8] = s1\n 13330: u64 [sp + 0x218] = a1\n 13334: a0 = sp + 0x220\n 13338: a1 = sp + 0x200\n 13342: a2 = sp + 0x1e0\n 13346: u64 [sp + 0x238] = t2\n 13350: ra = 146, jump @168\n      : @183 [@dyn 73] (gas: 16)\n 13356: a3 = u64 [sp + 0x20]\n 13359: a2 = u64 [sp + 0x38]\n 13362: a0 = a2 >u 0\n 13364: a1 = a3 <u 0x20\n 13367: a1 = a1 ^ 0x1\n 13370: a1 = a0 if a2 != 0\n 13373: a0 = u64 [sp + 0x30]\n 13376: a0 = a0 >u 0\n 13378: a2 = s1 >u 0\n 13380: a2 = a0 if s1 == 0\n 13383: a0 = u64 [sp + 0xd8]\n 13387: a2 = a1 if a0 == 0\n 13390: a4 = u64 [sp + 0x40]\n 13393: a5 = u64 [sp + 0x58]\n 13396: s1 = u64 [sp + 0x50]\n 13399: jump @194 if a2 == 0\n      : @184 (gas: 5)\n 13403: a3 = a3 & 0xffffffffffffffe0\n 13406: u64 [sp + 0x18] = a3\n 13409: a1 = 0x20\n 13412: a0 = 0\n 13414: ra = 148, jump @0\n      : @185 [@dyn 74] (gas: 70)\n 13420: a1 = u64 [sp + 0x40]\n 13423: a1 = reverse a1\n 13425: a2 = u64 [sp + 0x58]\n 13428: a2 = reverse a2\n 13430: a3 = u64 [sp + 0x48]\n 13433: a3 = reverse a3\n 13435: a4 = reverse s1\n 13437: a5 = a4 >> 0x38\n 13440: u8 [a0 + 0x1f] = a5\n 13443: a5 = a4 >> 0x30\n 13446: u8 [a0 + 0x1e] = a5\n 13449: a5 = a4 >> 0x28\n 13452: u8 [a0 + 0x1d] = a5\n 13455: a5 = a4 >> 0x20\n 13458: u8 [a0 + 0x1c] = a5\n 13461: a5 = a4 >> 0x18\n 13464: u8 [a0 + 0x1b] = a5\n 13467: a5 = a4 >> 0x10\n 13470: u8 [a0 + 0x1a] = a5\n 13473: a5 = a4 >> 0x8\n 13476: u8 [a0 + 0x19] = a5\n 13479: u8 [a0 + 0x18] = a4\n 13482: u8 [a0 + 0x10] = a3\n 13485: a4 = a3 >> 0x38\n 13488: u8 [a0 + 0x17] = a4\n 13491: a4 = a3 >> 0x30\n 13494: u8 [a0 + 0x16] = a4\n 13497: a4 = a3 >> 0x28\n 13500: u8 [a0 + 0x15] = a4\n 13503: a4 = a3 >> 0x20\n 13506: u8 [a0 + 0x14] = a4\n 13509: a4 = a3 >> 0x18\n 13512: u8 [a0 + 0x13] = a4\n 13515: a4 = a3 >> 0x10\n 13518: u8 [a0 + 0x12] = a4\n 13521: a3 = a3 >> 0x8\n 13524: u8 [a0 + 0x11] = a3\n 13527: u8 [a0 + 0x8] = a2\n 13530: a3 = a2 >> 0x38\n 13533: u8 [a0 + 0xf] = a3\n 13536: a3 = a2 >> 0x30\n 13539: u8 [a0 + 0xe] = a3\n 13542: a3 = a2 >> 0x28\n 13545: u8 [a0 + 0xd] = a3\n 13548: a3 = a2 >> 0x20\n 13551: u8 [a0 + 0xc] = a3\n 13554: a3 = a2 >> 0x18\n 13557: u8 [a0 + 0xb] = a3\n 13560: a3 = a2 >> 0x10\n 13563: u8 [a0 + 0xa] = a3\n 13566: a2 = a2 >> 0x8\n 13569: u8 [a0 + 0x9] = a2\n 13572: u8 [a0] = a1\n 13574: a2 = a1 >> 0x38\n 13577: u8 [a0 + 0x7] = a2\n 13580: a2 = a1 >> 0x30\n 13583: u8 [a0 + 0x6] = a2\n 13586: a2 = a1 >> 0x28\n 13589: u8 [a0 + 0x5] = a2\n 13592: a2 = a1 >> 0x20\n 13595: u8 [a0 + 0x4] = a2\n 13598: a2 = a1 >> 0x18\n 13601: u8 [a0 + 0x3] = a2\n 13604: a2 = a1 >> 0x10\n 13607: u8 [a0 + 0x2] = a2\n 13610: a1 = a1 >> 0x8\n 13613: u8 [a0 + 0x1] = a1\n 13616: a1 = 0x20\n 13619: a0 = 0\n 13621: ra = 150, jump @0\n      : @186 [@dyn 75] (gas: 5)\n 13627: i32 a0 = a0 + 0\n 13629: i32 a2 = sp + 0x280\n 13633: a1 = 0x20\n 13636: ecalli 5 // 'hash_keccak_256'\n 13638: fallthrough\n      : @187 (gas: 13)\n 13639: a0 = u64 [sp + 0x280]\n 13643: a1 = u64 [sp + 0x288]\n 13647: a2 = u64 [sp + 0x290]\n 13651: a3 = u64 [sp + 0x298]\n 13655: a0 = reverse a0\n 13657: u64 [sp + 0xd0] = a0\n 13661: t0 = reverse a1\n 13663: a0 = reverse a2\n 13665: u64 [sp + 0xd8] = a0\n 13669: a0 = reverse a3\n 13671: u64 [sp + 0xc0] = a0\n 13675: a0 = u64 [sp + 0x18]\n 13678: jump @198 if a0 == 0\n      : @188 (gas: 118)\n 13682: u64 [sp + 176] = 0\n 13686: u64 [sp + 184] = 0\n 13690: u64 [sp + 168] = 0\n 13694: ra = u64 [sp + 0x80]\n 13698: s1 = ra + 0x20\n 13701: a0 = s1 <u ra\n 13704: t2 = u64 [sp + 0x88]\n 13708: a2 = t2 + a0\n 13711: a3 = a2 <u t2\n 13714: a3 = a0 if a0 == 0\n 13717: t1 = u64 [sp + 0x90]\n 13721: a3 = a3 + t1\n 13724: a0 = a3 <u t1\n 13727: u64 [sp + 0xc8] = t0\n 13731: t0 = u64 [sp + 0x98]\n 13735: t0 = t0 + a0\n 13738: a4 = a3 >u 0\n 13740: a5 = t0 >u 0\n 13742: a5 = a4 if t0 == 0\n 13745: a4 = 0x100000000\n 13755: a1 = s1\n 13757: a0 = maxu(s1, a4)\n 13760: s1 = a4 if a5 == 0\n 13763: a1 = a4 if a2 == 0\n 13766: a0 = a1 if a2 != 0\n 13769: a1 = a3 | t0\n 13772: a0 = s1 if a1 != 0\n 13775: a4 = a2\n 13777: a4 = 0 if a5 == 0\n 13779: a4 = a2 if a1 == 0\n 13782: a1 = a3\n 13784: a1 = 0 if t0 == 0\n 13786: a1 = a3 if t0 == 0\n 13789: a2 = t2 ^ 0xffffffffffffffff\n 13792: a4 = a4 + a2\n 13795: a3 = ra ^ 0xffffffffffffffff\n 13798: a0 = a0 + a3\n 13801: a3 = a0 <u a3\n 13804: a4 = a4 + a3\n 13807: a5 = a4 ^ a2\n 13810: a2 = a4 <u a2\n 13813: a2 = a3 if a5 == 0\n 13816: a5 = t1 ^ 0xffffffffffffffff\n 13819: u64 [sp + 0x78] = a5\n 13822: a5 = a5 + a1\n 13825: s1 = a5 + a2\n 13828: a1 = s1 << 0x3b\n 13831: a2 = a4 >> 0x5\n 13834: a1 = a1 | a2\n 13837: a4 = a4 << 0x3b\n 13840: a0 = a0 >> 0x5\n 13843: a2 = a0 | a4\n 13846: u64 [sp + 0xa0] = a2\n 13850: a4 = u64 [sp + 0x18]\n 13853: a0 = a4 <u 0x1\n 13856: a3 = -a0\n 13858: ra = a0 << 0x3b\n 13861: a4 = a4 + 0xffffffffffffffff\n 13864: a4 = a4 >> 0x5\n 13867: a0 = a4 - ra\n 13870: t2 = a1 ^ a3\n 13873: a4 = a1 <u a3\n 13876: t1 = a2 <u a0\n 13879: t1 = a4 if t2 != 0\n 13882: a2 = u64 [sp + 0x98]\n 13886: a4 = a2 ^ 0xffffffffffffffff\n 13889: t0 = t0 + a4\n 13892: a2 = u64 [sp + 0x78]\n 13895: a4 = a5 <u a2\n 13898: a4 = a4 + t0\n 13901: a5 = s1 <u a5\n 13904: a4 = a4 + a5\n 13907: s1 = s1 >> 0x5\n 13910: a5 = a4 << 0x3b\n 13913: a5 = a5 | s1\n 13916: a4 = a4 >> 0x5\n 13919: s1 = a3 >> 0x5\n 13922: t0 = s1 - ra\n 13925: a2 = a5 <u t0\n 13928: t2 = a4 ^ s1\n 13931: ra = a4 <u s1\n 13934: ra = a2 if t2 == 0\n 13937: a2 = a5 ^ t0\n 13940: a2 = a2 | t2\n 13943: ra = t1 if a2 == 0\n 13946: a2 = u64 [sp + 0xa0]\n 13950: a2 = a0 if ra == 0\n 13953: a1 = a3 if ra == 0\n 13956: a4 = s1 if ra == 0\n 13959: a5 = t0 if ra == 0\n 13962: a0 = a5 >> 0x3b\n 13965: a4 = a4 << 0x5\n 13968: t0 = a4 | a0\n 13971: a4 = u64 [sp + 0xb0]\n 13975: a0 = a1 >> 0x3b\n 13978: a5 = a5 << 0x5\n 13981: t2 = a5 | a0\n 13984: a5 = u64 [sp + 0xb8]\n 13988: a3 = a2 >> 0x3b\n 13991: a1 = a1 << 0x5\n 13994: a0 = a1 | a3\n 13997: t1 = a2 << 0x5\n 14000: a3 = t1 + 0x40\n 14003: u64 [sp + 0x78] = a3\n 14006: a3 = a3 <u t1\n 14009: s1 = u64 [sp + 0xa8]\n 14013: a1 = a0 + a3\n 14016: u64 [sp + 0x70] = a1\n 14019: a1 = a1 <u a0\n 14022: a1 = a3 if a3 == 0\n 14025: a1 = a1 + t2\n 14028: u64 [sp + 0x68] = a1\n 14031: a1 = a1 <u t2\n 14034: a1 = a1 + t0\n 14037: u64 [sp + 0x60] = a1\n 14040: a2 = 0x20\n 14043: a3 = u64 [sp + 0xc8]\n 14047: fallthrough\n      : @189 (gas: 31)\n 14048: u64 [sp + 0xa8] = s1\n 14052: u64 [sp + 0xc8] = a3\n 14056: a0 = u64 [sp + 0x80]\n 14060: a0 = a0 + a2\n 14063: u64 [sp + 0xa0] = a2\n 14067: a1 = a0 <u a2\n 14070: a2 = u64 [sp + 0x88]\n 14074: a2 = a2 + a4\n 14077: a2 = a2 + a1\n 14080: a3 = a2 ^ a4\n 14083: u64 [sp + 0xb0] = a4\n 14087: a4 = a2 <u a4\n 14090: a4 = a1 if a3 == 0\n 14093: a1 = u64 [sp + 0x90]\n 14097: a1 = a1 + a5\n 14100: u64 [sp + 0xb8] = a5\n 14104: a3 = a1 <u a5\n 14107: a5 = u64 [sp + 0x98]\n 14111: a5 = a5 + s1\n 14114: a3 = a3 + a5\n 14117: a4 = a4 + a1\n 14120: a1 = a4 <u a1\n 14123: a1 = a1 + a3\n 14126: a1 = a1 | a2\n 14129: a2 = a0 | a4\n 14132: a2 = a2 | a1\n 14135: a1 = a1 | a4\n 14138: a2 = a2 >> 0x20\n 14141: a1 = a1 << 0x20\n 14144: a1 = a1 | a2\n 14147: jump @207 if a1 != 0\n      : @190 (gas: 3)\n 14151: i32 a0 = a0 + 0\n 14153: a1 = 0x20\n 14156: ra = 152, jump @0\n      : @191 [@dyn 76] (gas: 111)\n 14162: a1 = u8 [a0 + 0x1]\n 14165: a2 = u8 [a0]\n 14167: a3 = u8 [a0 + 0x2]\n 14170: a4 = u8 [a0 + 0x3]\n 14173: a1 = a1 << 0x8\n 14176: a1 = a1 | a2\n 14179: a3 = a3 << 0x10\n 14182: a4 = a4 << 0x18\n 14185: a3 = a3 | a4\n 14188: a1 = a1 | a3\n 14191: a2 = u8 [a0 + 0x5]\n 14194: a3 = u8 [a0 + 0x4]\n 14197: a4 = u8 [a0 + 0x6]\n 14200: a5 = u8 [a0 + 0x7]\n 14203: a2 = a2 << 0x8\n 14206: a2 = a2 | a3\n 14209: a4 = a4 << 0x10\n 14212: a5 = a5 << 0x18\n 14215: a4 = a4 | a5\n 14218: a2 = a2 | a4\n 14221: a2 = a2 << 0x20\n 14224: t0 = a2 | a1\n 14227: a2 = u8 [a0 + 0x9]\n 14230: a3 = u8 [a0 + 0x8]\n 14233: a4 = u8 [a0 + 0xa]\n 14236: a5 = u8 [a0 + 0xb]\n 14239: a2 = a2 << 0x8\n 14242: a2 = a2 | a3\n 14245: a4 = a4 << 0x10\n 14248: a5 = a5 << 0x18\n 14251: a4 = a4 | a5\n 14254: a2 = a2 | a4\n 14257: a3 = u8 [a0 + 0xd]\n 14260: a4 = u8 [a0 + 0xc]\n 14263: a5 = u8 [a0 + 0xe]\n 14266: s1 = u8 [a0 + 0xf]\n 14269: a3 = a3 << 0x8\n 14272: a3 = a3 | a4\n 14275: a5 = a5 << 0x10\n 14278: s1 = s1 << 0x18\n 14281: a5 = a5 | s1\n 14284: a3 = a3 | a5\n 14287: a3 = a3 << 0x20\n 14290: a2 = a2 | a3\n 14293: a3 = u8 [a0 + 0x11]\n 14296: a4 = u8 [a0 + 0x10]\n 14299: a5 = u8 [a0 + 0x12]\n 14302: s1 = u8 [a0 + 0x13]\n 14305: a3 = a3 << 0x8\n 14308: a3 = a3 | a4\n 14311: a5 = a5 << 0x10\n 14314: s1 = s1 << 0x18\n 14317: a5 = a5 | s1\n 14320: a3 = a3 | a5\n 14323: a4 = u8 [a0 + 0x15]\n 14326: a5 = u8 [a0 + 0x14]\n 14329: s1 = u8 [a0 + 0x16]\n 14332: a1 = u8 [a0 + 0x17]\n 14335: a4 = a4 << 0x8\n 14338: a4 = a4 | a5\n 14341: s1 = s1 << 0x10\n 14344: a1 = a1 << 0x18\n 14347: a1 = a1 | s1\n 14350: a1 = a1 | a4\n 14353: a1 = a1 << 0x20\n 14356: a3 = a3 | a1\n 14359: a1 = u8 [a0 + 0x19]\n 14362: a4 = u8 [a0 + 0x18]\n 14365: a5 = u8 [a0 + 0x1a]\n 14368: s1 = u8 [a0 + 0x1b]\n 14371: a1 = a1 << 0x8\n 14374: a1 = a1 | a4\n 14377: a5 = a5 << 0x10\n 14380: s1 = s1 << 0x18\n 14383: a5 = a5 | s1\n 14386: a1 = a1 | a5\n 14389: a4 = u8 [a0 + 0x1d]\n 14392: a5 = u8 [a0 + 0x1c]\n 14395: s1 = u8 [a0 + 0x1e]\n 14398: a0 = u8 [a0 + 0x1f]\n 14401: a4 = a4 << 0x8\n 14404: a4 = a4 | a5\n 14407: s1 = s1 << 0x10\n 14410: a0 = a0 << 0x18\n 14413: a0 = a0 | s1\n 14416: a0 = a0 | a4\n 14419: a0 = a0 << 0x20\n 14422: a0 = a0 | a1\n 14425: a0 = reverse a0\n 14427: a1 = reverse a3\n 14429: a2 = reverse a2\n 14431: a3 = reverse t0\n 14433: a4 = u64 [sp + 0xd0]\n 14437: u64 [sp + 0x278] = a4\n 14441: a4 = u64 [sp + 0xc8]\n 14445: u64 [sp + 0x270] = a4\n 14449: a4 = u64 [sp + 0xd8]\n 14453: u64 [sp + 0x268] = a4\n 14457: s1 = u64 [sp + 0xc0]\n 14461: u64 [sp + 0x260] = s1\n 14465: u64 [sp + 0x298] = a3\n 14469: u64 [sp + 0x290] = a2\n 14473: u64 [sp + 0x288] = a1\n 14477: u64 [sp + 0x280] = a0\n 14481: i32 a1 = sp + 0x260\n 14485: i32 a3 = sp + 0x280\n 14489: a2 = 0xffffffffffffffff\n 14492: a4 = 0x20\n 14495: a0 = 0\n 14497: ecalli 9 // 'set_storage'\n 14499: fallthrough\n      : @192 (gas: 42)\n 14500: s1 = s1 + 0x1\n 14503: a0 = s1 <u 0x1\n 14506: a1 = u64 [sp + 0xd8]\n 14510: a1 = a1 + a0\n 14513: u64 [sp + 0xc0] = s1\n 14517: u64 [sp + 0xd8] = a1\n 14521: a0 = s1 | a1\n 14524: a0 = a0 <u 0x1\n 14527: a1 = u64 [sp + 0xc8]\n 14531: t0 = a1 + a0\n 14534: a2 = t0 <u a1\n 14537: a0 = u64 [sp + 0xa0]\n 14541: a1 = a0 + 0x20\n 14544: a0 = a1 <u a0\n 14547: a3 = u64 [sp + 0xb0]\n 14551: t2 = a3 + a0\n 14554: a3 = t2 <u a3\n 14557: a3 = a0 if a0 == 0\n 14560: a4 = u64 [sp + 0xb8]\n 14564: a0 = a4 + a3\n 14567: a3 = a0 <u a4\n 14570: s1 = u64 [sp + 0xa8]\n 14574: s1 = s1 + a3\n 14577: a3 = u64 [sp + 0x68]\n 14580: a3 = a3 ^ a0\n 14583: a4 = u64 [sp + 0x78]\n 14586: a4 = a4 ^ a1\n 14589: a3 = a3 | a4\n 14592: a4 = u64 [sp + 0x60]\n 14595: a4 = a4 ^ s1\n 14598: a5 = u64 [sp + 0x70]\n 14601: a5 = t2 ^ a5\n 14604: a4 = a4 | a5\n 14607: t1 = a3 | a4\n 14610: a3 = u64 [sp + 0xd0]\n 14614: a3 = a3 + a2\n 14617: u64 [sp + 0xd0] = a3\n 14621: a2 = a1\n 14623: a4 = t2\n 14625: a5 = a0\n 14627: a3 = t0\n 14629: jump @189 if t1 != 0\n      : @193 (gas: 1)\n 14633: jump @199\n      : @194 (gas: 8)\n 14636: a0 = u64 [sp + 0x68]\n 14639: a1 = u64 [sp + 0x60]\n 14642: a0 = a0 | a1\n 14645: a1 = u64 [sp + 0x70]\n 14648: a2 = u64 [sp + 0xd0]\n 14652: a1 = a1 | a2\n 14655: a0 = a0 | a1\n 14658: jump @204 if a0 == 0\n      : @195 (gas: 10)\n 14662: a0 = u64 [sp + 0x98]\n 14666: a1 = u64 [sp + 0x90]\n 14670: a0 = a0 | a1\n 14673: a1 = 0xffffffe0\n 14683: a2 = u64 [sp + 0x80]\n 14687: a1 = a2 <u a1\n 14690: a2 = u64 [sp + 0x88]\n 14694: a1 = 0 if a2 != 0\n 14696: a1 = 0 if a0 != 0\n 14698: jump @207 if a1 == 0\n      : @196 (gas: 4)\n 14702: a0 = u64 [sp + 0x18]\n 14705: i32 a0 = a0 + 0x20\n 14708: a1 = 0x20\n 14711: ra = 154, jump @0\n      : @197 [@dyn 77] (gas: 280)\n 14717: a1 = u8 [a0 + 0x19]\n 14720: a2 = u8 [a0 + 0x18]\n 14723: a3 = u8 [a0 + 0x1a]\n 14726: a4 = u8 [a0 + 0x1b]\n 14729: a1 = a1 << 0x8\n 14732: a1 = a1 | a2\n 14735: a3 = a3 << 0x10\n 14738: a4 = a4 << 0x18\n 14741: a3 = a3 | a4\n 14744: a1 = a1 | a3\n 14747: a2 = u8 [a0 + 0x1d]\n 14750: a3 = u8 [a0 + 0x1c]\n 14753: a4 = u8 [a0 + 0x1e]\n 14756: a5 = u8 [a0 + 0x1f]\n 14759: a2 = a2 << 0x8\n 14762: a2 = a2 | a3\n 14765: a4 = a4 << 0x10\n 14768: a5 = a5 << 0x18\n 14771: a4 = a4 | a5\n 14774: a2 = a2 | a4\n 14777: a2 = a2 << 0x20\n 14780: t0 = a2 | a1\n 14783: a1 = u8 [a0 + 0x11]\n 14786: a2 = u8 [a0 + 0x10]\n 14789: a3 = u8 [a0 + 0x12]\n 14792: a4 = u8 [a0 + 0x13]\n 14795: a1 = a1 << 0x8\n 14798: a1 = a1 | a2\n 14801: a3 = a3 << 0x10\n 14804: a4 = a4 << 0x18\n 14807: a3 = a3 | a4\n 14810: a1 = a1 | a3\n 14813: a2 = u8 [a0 + 0x15]\n 14816: a3 = u8 [a0 + 0x14]\n 14819: a4 = u8 [a0 + 0x16]\n 14822: a5 = u8 [a0 + 0x17]\n 14825: a2 = a2 << 0x8\n 14828: a2 = a2 | a3\n 14831: a4 = a4 << 0x10\n 14834: a5 = a5 << 0x18\n 14837: a4 = a4 | a5\n 14840: a2 = a2 | a4\n 14843: a2 = a2 << 0x20\n 14846: a1 = a1 | a2\n 14849: u64 [sp + 0xd8] = a1\n 14853: a1 = u8 [a0 + 0x9]\n 14856: a3 = u8 [a0 + 0x8]\n 14859: a4 = u8 [a0 + 0xa]\n 14862: a5 = u8 [a0 + 0xb]\n 14865: a1 = a1 << 0x8\n 14868: a1 = a1 | a3\n 14871: a4 = a4 << 0x10\n 14874: a5 = a5 << 0x18\n 14877: a4 = a4 | a5\n 14880: a1 = a1 | a4\n 14883: a3 = u8 [a0 + 0xd]\n 14886: a4 = u8 [a0 + 0xc]\n 14889: a5 = u8 [a0 + 0xe]\n 14892: s1 = u8 [a0 + 0xf]\n 14895: a3 = a3 << 0x8\n 14898: a3 = a3 | a4\n 14901: a5 = a5 << 0x10\n 14904: s1 = s1 << 0x18\n 14907: a5 = a5 | s1\n 14910: a3 = a3 | a5\n 14913: a3 = a3 << 0x20\n 14916: a1 = a1 | a3\n 14919: u64 [sp + 0xd0] = a1\n 14923: a1 = u8 [a0 + 0x1]\n 14926: a4 = u8 [a0]\n 14928: a5 = u8 [a0 + 0x2]\n 14931: s1 = u8 [a0 + 0x3]\n 14934: a1 = a1 << 0x8\n 14937: a1 = a1 | a4\n 14940: a5 = a5 << 0x10\n 14943: s1 = s1 << 0x18\n 14946: a5 = a5 | s1\n 14949: a1 = a1 | a5\n 14952: a4 = u8 [a0 + 0x5]\n 14955: a5 = u8 [a0 + 0x4]\n 14958: s1 = u8 [a0 + 0x6]\n 14961: a0 = u8 [a0 + 0x7]\n 14964: a4 = a4 << 0x8\n 14967: a4 = a4 | a5\n 14970: s1 = s1 << 0x10\n 14973: a0 = a0 << 0x18\n 14976: a0 = a0 | s1\n 14979: a0 = a0 | a4\n 14982: a0 = a0 << 0x20\n 14985: ra = a0 | a1\n 14988: u8 [sp + 479] = 0\n 14992: u8 [sp + 478] = 0\n 14996: u8 [sp + 477] = 0\n 15000: u8 [sp + 476] = 0\n 15004: u8 [sp + 475] = 0\n 15008: u8 [sp + 474] = 0\n 15012: u8 [sp + 473] = 0\n 15016: u8 [sp + 472] = 0\n 15020: u8 [sp + 471] = 0\n 15024: u8 [sp + 470] = 0\n 15028: u8 [sp + 469] = 0\n 15032: u8 [sp + 468] = 0\n 15036: u8 [sp + 467] = 0\n 15040: u8 [sp + 466] = 0\n 15044: u8 [sp + 465] = 0\n 15048: u8 [sp + 464] = 0\n 15052: u8 [sp + 463] = 0\n 15056: u8 [sp + 462] = 0\n 15060: u8 [sp + 461] = 0\n 15064: u8 [sp + 460] = 0\n 15068: u8 [sp + 459] = 0\n 15072: u8 [sp + 458] = 0\n 15076: u8 [sp + 457] = 0\n 15080: u8 [sp + 456] = 0\n 15084: u8 [sp + 455] = 0\n 15088: u8 [sp + 454] = 0\n 15092: u8 [sp + 453] = 0\n 15096: u8 [sp + 452] = 0\n 15100: u8 [sp + 451] = 0\n 15104: u8 [sp + 450] = 0\n 15108: u8 [sp + 449] = 0\n 15112: u8 [sp + 448] = 0\n 15116: u8 [sp + 447] = 0xff\n 15122: u8 [sp + 446] = 0xff\n 15128: u8 [sp + 445] = 0xff\n 15134: u8 [sp + 443] = 0xff\n 15140: u8 [sp + 440] = 0xffffffffffffffff\n 15145: u8 [sp + 439] = 0xff\n 15151: u8 [sp + 438] = 0xff\n 15157: u8 [sp + 437] = 0xff\n 15163: u8 [sp + 435] = 0xff\n 15169: u8 [sp + 432] = 0xffffffffffffffff\n 15174: u8 [sp + 431] = 0xff\n 15180: u8 [sp + 430] = 0xff\n 15186: u8 [sp + 429] = 0xff\n 15192: u8 [sp + 427] = 0xff\n 15198: u8 [sp + 424] = 0xffffffffffffffff\n 15203: u8 [sp + 423] = 0xff\n 15209: u8 [sp + 422] = 0xff\n 15215: u8 [sp + 421] = 0xff\n 15221: u8 [sp + 419] = 0xff\n 15227: u8 [sp + 416] = 0xffffffffffffffff\n 15232: a1 = 0xffffffff\n 15242: u8 [sp + 0x1bc] = a1\n 15246: a5 = 0xffffffffffff\n 15256: u8 [sp + 0x1ba] = a5\n 15260: a4 = 0xffffffffffffff\n 15270: u8 [sp + 0x1b9] = a4\n 15274: u8 [sp + 0x1b4] = a1\n 15278: u8 [sp + 0x1b2] = a5\n 15282: u8 [sp + 0x1b1] = a4\n 15286: u8 [sp + 0x1ac] = a1\n 15290: u8 [sp + 0x1aa] = a5\n 15294: u8 [sp + 0x1a9] = a4\n 15298: u8 [sp + 0x1a4] = a1\n 15302: u8 [sp + 0x1a2] = a5\n 15306: u8 [sp + 0x1a1] = a4\n 15310: t2 = u64 [sp + 0x20]\n 15313: a4 = t2 & 0x1f\n 15316: a1 = sp + 0x1a0\n 15320: a4 = a4 + a1\n 15323: a1 = u8 [a4 + 0x19]\n 15326: a5 = u8 [a4 + 0x18]\n 15329: s1 = u8 [a4 + 0x1a]\n 15332: a2 = u8 [a4 + 0x1b]\n 15335: a1 = a1 << 0x8\n 15338: a1 = a1 | a5\n 15341: s1 = s1 << 0x10\n 15344: a2 = a2 << 0x18\n 15347: a2 = a2 | s1\n 15350: a1 = a1 | a2\n 15353: a2 = u8 [a4 + 0x1d]\n 15356: a5 = u8 [a4 + 0x1c]\n 15359: s1 = u8 [a4 + 0x1e]\n 15362: a3 = u8 [a4 + 0x1f]\n 15365: a2 = a2 << 0x8\n 15368: a2 = a2 | a5\n 15371: s1 = s1 << 0x10\n 15374: a3 = a3 << 0x18\n 15377: a3 = a3 | s1\n 15380: a2 = a2 | a3\n 15383: a2 = a2 << 0x20\n 15386: t1 = a2 | a1\n 15389: a1 = u8 [a4 + 0x11]\n 15392: a2 = u8 [a4 + 0x10]\n 15395: a3 = u8 [a4 + 0x12]\n 15398: s1 = u8 [a4 + 0x13]\n 15401: a1 = a1 << 0x8\n 15404: a1 = a1 | a2\n 15407: a3 = a3 << 0x10\n 15410: s1 = s1 << 0x18\n 15413: a3 = a3 | s1\n 15416: a1 = a1 | a3\n 15419: a2 = u8 [a4 + 0x15]\n 15422: a3 = u8 [a4 + 0x14]\n 15425: s1 = u8 [a4 + 0x16]\n 15428: a0 = u8 [a4 + 0x17]\n 15431: a2 = a2 << 0x8\n 15434: a2 = a2 | a3\n 15437: s1 = s1 << 0x10\n 15440: a0 = a0 << 0x18\n 15443: a0 = a0 | s1\n 15446: a0 = a0 | a2\n 15449: a0 = a0 << 0x20\n 15452: s1 = a0 | a1\n 15455: a0 = u8 [a4 + 0x9]\n 15458: a1 = u8 [a4 + 0x8]\n 15461: a2 = u8 [a4 + 0xa]\n 15464: a3 = u8 [a4 + 0xb]\n 15467: a0 = a0 << 0x8\n 15470: a0 = a0 | a1\n 15473: a2 = a2 << 0x10\n 15476: a3 = a3 << 0x18\n 15479: a2 = a2 | a3\n 15482: a5 = a2 | a0\n 15485: a1 = u8 [a4 + 0xd]\n 15488: a2 = u8 [a4 + 0xc]\n 15491: a3 = u8 [a4 + 0xe]\n 15494: a0 = u8 [a4 + 0xf]\n 15497: a1 = a1 << 0x8\n 15500: a1 = a1 | a2\n 15503: a3 = a3 << 0x10\n 15506: a0 = a0 << 0x18\n 15509: a0 = a0 | a3\n 15512: a0 = a0 | a1\n 15515: a0 = a0 << 0x20\n 15518: a1 = a0 | a5\n 15521: a0 = u8 [a4 + 0x1]\n 15524: a2 = u8 [a4]\n 15526: a3 = u8 [a4 + 0x2]\n 15529: a5 = u8 [a4 + 0x3]\n 15532: a0 = a0 << 0x8\n 15535: a0 = a0 | a2\n 15538: a3 = a3 << 0x10\n 15541: a5 = a5 << 0x18\n 15544: a3 = a3 | a5\n 15547: a0 = a0 | a3\n 15550: a2 = u8 [a4 + 0x5]\n 15553: a3 = u8 [a4 + 0x4]\n 15556: a5 = u8 [a4 + 0x6]\n 15559: a4 = u8 [a4 + 0x7]\n 15562: a2 = a2 << 0x8\n 15565: a2 = a2 | a3\n 15568: a5 = a5 << 0x10\n 15571: a4 = a4 << 0x18\n 15574: a4 = a4 | a5\n 15577: a2 = a2 | a4\n 15580: a2 = a2 << 0x20\n 15583: a0 = a0 | a2\n 15586: a2 = reverse t0\n 15588: t0 = a2 & ~a0\n 15591: a0 = u64 [sp + 0xd8]\n 15595: a0 = reverse a0\n 15597: a2 = a0 & ~a1\n 15600: a0 = reverse ra\n 15602: a1 = u64 [sp + 0xd0]\n 15606: a1 = reverse a1\n 15608: a1 = a1 & ~s1\n 15611: a0 = a0 & ~t1\n 15614: a4 = t2 >> 0x3f\n 15617: a3 = u64 [sp + 0x38]\n 15620: a5 = a3 << 0x1\n 15623: a4 = a4 | a5\n 15626: a5 = a3 >> 0x3f\n 15629: a3 = u64 [sp + 0x30]\n 15632: s1 = a3 << 0x1\n 15635: a5 = a5 | s1\n 15638: s1 = a3 >> 0x3f\n 15641: a3 = u64 [sp + 0x28]\n 15644: a3 = a3 << 0x1\n 15647: a3 = a3 | s1\n 15650: t1 = a0 | a3\n 15653: a1 = a1 | a5\n 15656: a2 = a2 | a4\n 15659: a3 = t2 << 0x1\n 15662: a3 = t0 | a3\n 15665: a4 = u64 [sp + 0x40]\n 15668: a5 = u64 [sp + 0x58]\n 15671: s1 = u64 [sp + 0x50]\n 15674: jump @205\n      : @198 (gas: 4)\n 15677: t2 = 0\n 15679: s1 = 0\n 15681: a1 = 0x20\n 15684: fallthrough\n      : @199 (gas: 10)\n 15685: a5 = u64 [sp + 0x20]\n 15688: a2 = u64 [sp + 0x18]\n 15691: a2 = a2 ^ a5\n 15694: a3 = u64 [sp + 0x30]\n 15697: a2 = a2 | a3\n 15700: a3 = u64 [sp + 0x38]\n 15703: a4 = u64 [sp + 0x28]\n 15706: a3 = a3 | a4\n 15709: a2 = a2 | a3\n 15712: jump @203 if a2 == 0\n      : @200 (gas: 27)\n 15716: u64 [sp + 0xc8] = t0\n 15720: a2 = u64 [sp + 0x80]\n 15724: a2 = a2 + a1\n 15727: a3 = a2 <u a1\n 15730: a4 = u64 [sp + 0x88]\n 15734: a4 = a4 + t2\n 15737: a4 = a4 + a3\n 15740: a5 = a4 ^ t2\n 15743: a1 = a4 <u t2\n 15746: a1 = a3 if a5 == 0\n 15749: a3 = u64 [sp + 0x90]\n 15753: a3 = a3 + a0\n 15756: a1 = a1 + a3\n 15759: a5 = a1 <u a3\n 15762: a0 = a3 <u a0\n 15765: a3 = u64 [sp + 0x98]\n 15769: a3 = a3 + s1\n 15772: a0 = a0 + a3\n 15775: a0 = a0 + a5\n 15778: a3 = a2 | a1\n 15781: a0 = a0 | a4\n 15784: a3 = a3 | a0\n 15787: a3 = a3 >> 0x20\n 15790: a0 = a0 | a1\n 15793: a0 = a0 << 0x20\n 15796: a0 = a0 | a3\n 15799: jump @207 if a0 != 0\n      : @201 (gas: 3)\n 15803: i32 a0 = a2 + 0\n 15805: a1 = 0x20\n 15808: ra = 156, jump @0\n      : @202 [@dyn 78] (gas: 277)\n 15814: a1 = u8 [a0 + 0x19]\n 15817: a2 = u8 [a0 + 0x18]\n 15820: a3 = u8 [a0 + 0x1a]\n 15823: a4 = u8 [a0 + 0x1b]\n 15826: a1 = a1 << 0x8\n 15829: a1 = a1 | a2\n 15832: a3 = a3 << 0x10\n 15835: a4 = a4 << 0x18\n 15838: a3 = a3 | a4\n 15841: a1 = a1 | a3\n 15844: a2 = u8 [a0 + 0x1d]\n 15847: a3 = u8 [a0 + 0x1c]\n 15850: a4 = u8 [a0 + 0x1e]\n 15853: a5 = u8 [a0 + 0x1f]\n 15856: a2 = a2 << 0x8\n 15859: a2 = a2 | a3\n 15862: a4 = a4 << 0x10\n 15865: a5 = a5 << 0x18\n 15868: a4 = a4 | a5\n 15871: a2 = a2 | a4\n 15874: a2 = a2 << 0x20\n 15877: a1 = a1 | a2\n 15880: u64 [sp + 0xb8] = a1\n 15884: a1 = u8 [a0 + 0x11]\n 15887: a2 = u8 [a0 + 0x10]\n 15890: a3 = u8 [a0 + 0x12]\n 15893: a4 = u8 [a0 + 0x13]\n 15896: a1 = a1 << 0x8\n 15899: a1 = a1 | a2\n 15902: a3 = a3 << 0x10\n 15905: a4 = a4 << 0x18\n 15908: a3 = a3 | a4\n 15911: a1 = a1 | a3\n 15914: a2 = u8 [a0 + 0x15]\n 15917: a3 = u8 [a0 + 0x14]\n 15920: a4 = u8 [a0 + 0x16]\n 15923: a5 = u8 [a0 + 0x17]\n 15926: a2 = a2 << 0x8\n 15929: a2 = a2 | a3\n 15932: a4 = a4 << 0x10\n 15935: a5 = a5 << 0x18\n 15938: a4 = a4 | a5\n 15941: a2 = a2 | a4\n 15944: a2 = a2 << 0x20\n 15947: t1 = a2 | a1\n 15950: a1 = u8 [a0 + 0x9]\n 15953: a3 = u8 [a0 + 0x8]\n 15956: a4 = u8 [a0 + 0xa]\n 15959: a5 = u8 [a0 + 0xb]\n 15962: a1 = a1 << 0x8\n 15965: a1 = a1 | a3\n 15968: a4 = a4 << 0x10\n 15971: a5 = a5 << 0x18\n 15974: a4 = a4 | a5\n 15977: a1 = a1 | a4\n 15980: a3 = u8 [a0 + 0xd]\n 15983: a4 = u8 [a0 + 0xc]\n 15986: a5 = u8 [a0 + 0xe]\n 15989: s1 = u8 [a0 + 0xf]\n 15992: a3 = a3 << 0x8\n 15995: a3 = a3 | a4\n 15998: a5 = a5 << 0x10\n 16001: s1 = s1 << 0x18\n 16004: a5 = a5 | s1\n 16007: a3 = a3 | a5\n 16010: a3 = a3 << 0x20\n 16013: t2 = a3 | a1\n 16016: a1 = u8 [a0 + 0x1]\n 16019: a4 = u8 [a0]\n 16021: a5 = u8 [a0 + 0x2]\n 16024: s1 = u8 [a0 + 0x3]\n 16027: a1 = a1 << 0x8\n 16030: a1 = a1 | a4\n 16033: a5 = a5 << 0x10\n 16036: s1 = s1 << 0x18\n 16039: a5 = a5 | s1\n 16042: a1 = a1 | a5\n 16045: a4 = u8 [a0 + 0x5]\n 16048: a5 = u8 [a0 + 0x4]\n 16051: s1 = u8 [a0 + 0x6]\n 16054: a0 = u8 [a0 + 0x7]\n 16057: a4 = a4 << 0x8\n 16060: a4 = a4 | a5\n 16063: s1 = s1 << 0x10\n 16066: a0 = a0 << 0x18\n 16069: a0 = a0 | s1\n 16072: a0 = a0 | a4\n 16075: a0 = a0 << 0x20\n 16078: ra = a0 | a1\n 16081: u8 [sp + 415] = 0\n 16085: u8 [sp + 414] = 0\n 16089: u8 [sp + 413] = 0\n 16093: u8 [sp + 412] = 0\n 16097: u8 [sp + 411] = 0\n 16101: u8 [sp + 410] = 0\n 16105: u8 [sp + 409] = 0\n 16109: u8 [sp + 408] = 0\n 16113: u8 [sp + 407] = 0\n 16117: u8 [sp + 406] = 0\n 16121: u8 [sp + 405] = 0\n 16125: u8 [sp + 404] = 0\n 16129: u8 [sp + 403] = 0\n 16133: u8 [sp + 402] = 0\n 16137: u8 [sp + 401] = 0\n 16141: u8 [sp + 400] = 0\n 16145: u8 [sp + 399] = 0\n 16149: u8 [sp + 398] = 0\n 16153: u8 [sp + 397] = 0\n 16157: u8 [sp + 396] = 0\n 16161: u8 [sp + 395] = 0\n 16165: u8 [sp + 394] = 0\n 16169: u8 [sp + 393] = 0\n 16173: u8 [sp + 392] = 0\n 16177: u8 [sp + 391] = 0\n 16181: u8 [sp + 390] = 0\n 16185: u8 [sp + 389] = 0\n 16189: u8 [sp + 388] = 0\n 16193: u8 [sp + 387] = 0\n 16197: u8 [sp + 386] = 0\n 16201: u8 [sp + 385] = 0\n 16205: u8 [sp + 384] = 0\n 16209: u8 [sp + 383] = 0xff\n 16215: u8 [sp + 382] = 0xff\n 16221: u8 [sp + 381] = 0xff\n 16227: u8 [sp + 379] = 0xff\n 16233: u8 [sp + 376] = 0xffffffffffffffff\n 16238: u8 [sp + 375] = 0xff\n 16244: u8 [sp + 374] = 0xff\n 16250: u8 [sp + 373] = 0xff\n 16256: u8 [sp + 371] = 0xff\n 16262: u8 [sp + 368] = 0xffffffffffffffff\n 16267: u8 [sp + 367] = 0xff\n 16273: u8 [sp + 366] = 0xff\n 16279: u8 [sp + 365] = 0xff\n 16285: u8 [sp + 363] = 0xff\n 16291: u8 [sp + 360] = 0xffffffffffffffff\n 16296: u8 [sp + 359] = 0xff\n 16302: u8 [sp + 358] = 0xff\n 16308: u8 [sp + 357] = 0xff\n 16314: u8 [sp + 355] = 0xff\n 16320: u8 [sp + 352] = 0xffffffffffffffff\n 16325: a1 = 0xffffffff\n 16335: u8 [sp + 0x17c] = a1\n 16339: a5 = 0xffffffffffff\n 16349: u8 [sp + 0x17a] = a5\n 16353: a4 = 0xffffffffffffff\n 16363: u8 [sp + 0x179] = a4\n 16367: u8 [sp + 0x174] = a1\n 16371: u8 [sp + 0x172] = a5\n 16375: u8 [sp + 0x171] = a4\n 16379: u8 [sp + 0x16c] = a1\n 16383: u8 [sp + 0x16a] = a5\n 16387: u8 [sp + 0x169] = a4\n 16391: u8 [sp + 0x164] = a1\n 16395: u8 [sp + 0x162] = a5\n 16399: u8 [sp + 0x161] = a4\n 16403: a4 = u64 [sp + 0x20]\n 16406: a4 = a4 & 0x1f\n 16409: a1 = sp + 0x160\n 16413: a4 = a4 + a1\n 16416: a1 = u8 [a4 + 0x19]\n 16419: a5 = u8 [a4 + 0x18]\n 16422: s1 = u8 [a4 + 0x1a]\n 16425: a2 = u8 [a4 + 0x1b]\n 16428: a1 = a1 << 0x8\n 16431: a1 = a1 | a5\n 16434: s1 = s1 << 0x10\n 16437: a2 = a2 << 0x18\n 16440: a2 = a2 | s1\n 16443: a1 = a1 | a2\n 16446: a2 = u8 [a4 + 0x1d]\n 16449: a5 = u8 [a4 + 0x1c]\n 16452: s1 = u8 [a4 + 0x1e]\n 16455: a3 = u8 [a4 + 0x1f]\n 16458: a2 = a2 << 0x8\n 16461: a2 = a2 | a5\n 16464: s1 = s1 << 0x10\n 16467: a3 = a3 << 0x18\n 16470: a3 = a3 | s1\n 16473: a2 = a2 | a3\n 16476: a2 = a2 << 0x20\n 16479: t0 = a2 | a1\n 16482: a1 = u8 [a4 + 0x11]\n 16485: a2 = u8 [a4 + 0x10]\n 16488: a3 = u8 [a4 + 0x12]\n 16491: s1 = u8 [a4 + 0x13]\n 16494: a1 = a1 << 0x8\n 16497: a1 = a1 | a2\n 16500: a3 = a3 << 0x10\n 16503: s1 = s1 << 0x18\n 16506: a3 = a3 | s1\n 16509: a1 = a1 | a3\n 16512: a2 = u8 [a4 + 0x15]\n 16515: a3 = u8 [a4 + 0x14]\n 16518: s1 = u8 [a4 + 0x16]\n 16521: a0 = u8 [a4 + 0x17]\n 16524: a2 = a2 << 0x8\n 16527: a2 = a2 | a3\n 16530: s1 = s1 << 0x10\n 16533: a0 = a0 << 0x18\n 16536: a0 = a0 | s1\n 16539: a0 = a0 | a2\n 16542: a0 = a0 << 0x20\n 16545: s1 = a0 | a1\n 16548: a0 = u8 [a4 + 0x9]\n 16551: a1 = u8 [a4 + 0x8]\n 16554: a2 = u8 [a4 + 0xa]\n 16557: a3 = u8 [a4 + 0xb]\n 16560: a0 = a0 << 0x8\n 16563: a0 = a0 | a1\n 16566: a2 = a2 << 0x10\n 16569: a3 = a3 << 0x18\n 16572: a2 = a2 | a3\n 16575: a5 = a2 | a0\n 16578: a1 = u8 [a4 + 0xd]\n 16581: a2 = u8 [a4 + 0xc]\n 16584: a3 = u8 [a4 + 0xe]\n 16587: a0 = u8 [a4 + 0xf]\n 16590: a1 = a1 << 0x8\n 16593: a1 = a1 | a2\n 16596: a3 = a3 << 0x10\n 16599: a0 = a0 << 0x18\n 16602: a0 = a0 | a3\n 16605: a0 = a0 | a1\n 16608: a0 = a0 << 0x20\n 16611: a1 = a0 | a5\n 16614: a0 = u8 [a4 + 0x1]\n 16617: a2 = u8 [a4]\n 16619: a3 = u8 [a4 + 0x2]\n 16622: a5 = u8 [a4 + 0x3]\n 16625: a0 = a0 << 0x8\n 16628: a0 = a0 | a2\n 16631: a3 = a3 << 0x10\n 16634: a5 = a5 << 0x18\n 16637: a3 = a3 | a5\n 16640: a0 = a0 | a3\n 16643: a2 = u8 [a4 + 0x5]\n 16646: a3 = u8 [a4 + 0x4]\n 16649: a5 = u8 [a4 + 0x6]\n 16652: a4 = u8 [a4 + 0x7]\n 16655: a2 = a2 << 0x8\n 16658: a2 = a2 | a3\n 16661: a5 = a5 << 0x10\n 16664: a4 = a4 << 0x18\n 16667: a4 = a4 | a5\n 16670: a2 = a2 | a4\n 16673: a2 = a2 << 0x20\n 16676: a0 = a0 | a2\n 16679: a2 = u64 [sp + 0xb8]\n 16683: a2 = reverse a2\n 16685: a0 = a2 & ~a0\n 16688: a2 = reverse t1\n 16690: a1 = a2 & ~a1\n 16693: a2 = reverse t2\n 16695: a2 = a2 & ~s1\n 16698: a3 = reverse ra\n 16700: a3 = a3 & ~t0\n 16703: a4 = u64 [sp + 0xd0]\n 16707: u64 [sp + 0x278] = a4\n 16711: a4 = u64 [sp + 0xc8]\n 16715: u64 [sp + 0x270] = a4\n 16719: a4 = u64 [sp + 0xd8]\n 16723: u64 [sp + 0x268] = a4\n 16727: a4 = u64 [sp + 0xc0]\n 16731: u64 [sp + 0x260] = a4\n 16735: u64 [sp + 0x298] = a3\n 16739: u64 [sp + 0x290] = a2\n 16743: u64 [sp + 0x288] = a1\n 16747: u64 [sp + 0x280] = a0\n 16751: i32 a1 = sp + 0x260\n 16755: i32 a3 = sp + 0x280\n 16759: a2 = 0xffffffffffffffff\n 16762: a4 = 0x20\n 16765: a0 = 0\n 16767: ecalli 9 // 'set_storage'\n 16769: a5 = u64 [sp + 0x20]\n 16772: fallthrough\n      : @203 (gas: 27)\n 16773: a2 = u64 [sp + 0x30]\n 16776: a0 = a2 >> 0x3f\n 16779: a1 = u64 [sp + 0x28]\n 16782: a1 = a1 << 0x1\n 16785: a0 = a0 | a1\n 16788: a3 = u64 [sp + 0x38]\n 16791: a1 = a3 >> 0x3f\n 16794: a2 = a2 << 0x1\n 16797: a1 = a1 | a2\n 16800: a2 = a5 >> 0x3f\n 16803: a3 = a3 << 0x1\n 16806: a2 = a2 | a3\n 16809: a3 = a5 << 0x1\n 16812: a3 = a3 + 0x1\n 16815: a4 = u64 [sp + 0x48]\n 16818: u64 [sp + 0x268] = a4\n 16822: a4 = u64 [sp + 0x50]\n 16825: u64 [sp + 0x260] = a4\n 16829: a4 = u64 [sp + 0x58]\n 16832: u64 [sp + 0x270] = a4\n 16836: a4 = u64 [sp + 0x40]\n 16839: u64 [sp + 0x278] = a4\n 16843: u64 [sp + 0x280] = a3\n 16847: u64 [sp + 0x288] = a2\n 16851: u64 [sp + 0x290] = a1\n 16855: u64 [sp + 0x298] = a0\n 16859: jump @206\n      : @204 (gas: 5)\n 16861: a3 = 0\n 16863: a2 = 0\n 16865: a1 = 0\n 16867: t1 = 0\n 16869: fallthrough\n      : @205 (gas: 10)\n 16870: a0 = u64 [sp + 0x48]\n 16873: u64 [sp + 0x268] = a0\n 16877: u64 [sp + 0x260] = s1\n 16881: u64 [sp + 0x270] = a5\n 16885: u64 [sp + 0x278] = a4\n 16889: u64 [sp + 0x280] = a3\n 16893: u64 [sp + 0x288] = a2\n 16897: u64 [sp + 0x290] = a1\n 16901: u64 [sp + 0x298] = t1\n 16905: fallthrough\n      : @206 (gas: 12)\n 16906: i32 a1 = sp + 0x260\n 16910: i32 a3 = sp + 0x280\n 16914: a2 = 0xffffffffffffffff\n 16917: a4 = 0x20\n 16920: a0 = 0\n 16922: ecalli 9 // 'set_storage'\n 16924: sp = s0 + 0xfffffffffffffd40\n 16928: ra = u64 [sp + 0x2b8]\n 16932: s0 = u64 [sp + 0x2b0]\n 16936: s1 = u64 [sp + 0x2a8]\n 16940: sp = sp + 0x2c0\n 16944: ret\n      : @207 (gas: 1)\n 16946: trap\n      : @208 (gas: 8)\n 16947: u64 [sp + 272] = 0\n 16951: u64 [sp + 264] = 0\n 16955: u64 [sp + 256] = 0\n 16959: a0 = 0x4e487b7100000000\n 16969: a1 = sp + 0x100\n 16973: u64 [sp + 0x118] = a0\n 16977: a0 = 0\n 16979: ra = 158, jump @23\n      : @209 [@dyn 79] (gas: 8)\n 16985: u64 [sp + 248] = 0\n 16989: u64 [sp + 240] = 0\n 16993: u64 [sp + 224] = 0x41\n 16998: a0 = 0x4\n 17001: a1 = sp + 0xe0\n 17005: u64 [sp + 232] = 0\n 17009: ra = 0xa2\n 17013: jump @23\n      : @210 (gas: 8)\n 17016: u64 [sp + 336] = 0\n 17020: u64 [sp + 328] = 0\n 17024: u64 [sp + 320] = 0\n 17028: a0 = 0x4e487b7100000000\n 17038: a1 = sp + 0x140\n 17042: u64 [sp + 0x158] = a0\n 17046: a0 = 0\n 17048: ra = 160, jump @23\n      : @211 [@dyn 80] (gas: 7)\n 17054: u64 [sp + 312] = 0\n 17058: u64 [sp + 304] = 0\n 17062: u64 [sp + 288] = 0x22\n 17067: a0 = 0x4\n 17070: a1 = sp + 0x120\n 17074: u64 [sp + 296] = 0\n 17078: ra = 162, jump @23\n      : @212 [@dyn 81] (gas: 3)\n 17084: a1 = 0x24\n 17087: a0 = 0\n 17089: ra = 164, jump @0\n      : @213 [@dyn 82] (gas: 6)\n 17095: i32 a1 = a0 + 0\n 17097: a0 = 0x1\n 17100: a2 = 0x24\n 17103: ra = 0xa6\n 17107: ecalli 7 // 'seal_return'\n 17109: fallthrough\n      : @214 [@dyn 83] (gas: 24)\n 17110: sp = sp + 0xffffffffffffffb0\n 17113: u64 [sp + 0x48] = ra\n 17116: u64 [sp + 0x40] = s0\n 17119: s0 = sp + 0x50\n 17122: sp = sp & 0xfffffffffffffff0\n 17125: t0 = u64 [a0]\n 17127: t1 = u64 [a0 + 0x8]\n 17130: a4 = u64 [a0 + 0x10]\n 17133: a0 = u64 [a0 + 0x18]\n 17136: a5 = u64 [a1]\n 17138: a2 = u64 [a1 + 0x8]\n 17141: a3 = u64 [a1 + 0x10]\n 17144: a1 = u64 [a1 + 0x18]\n 17147: u64 [sp + 0x18] = a1\n 17150: u64 [sp + 0x10] = a3\n 17153: u64 [sp + 0x8] = a2\n 17156: u64 [sp] = a5\n 17158: u64 [sp + 0x38] = a0\n 17161: u64 [sp + 0x30] = a4\n 17164: u64 [sp + 0x28] = t1\n 17167: a0 = sp + 0x20\n 17170: a1 = sp\n 17172: u64 [sp + 0x20] = t0\n 17175: ra = 168, jump @177\n      : @215 [@dyn 84] (gas: 5)\n 17181: sp = s0 + 0xffffffffffffffb0\n 17184: ra = u64 [sp + 0x48]\n 17187: s0 = u64 [sp + 0x40]\n 17190: sp = sp + 0x50\n 17193: ret\n      : @216 [@dyn 85] (gas: 3)\n 17195: a1 = 0x20\n 17198: a0 = 0\n 17200: ra = 172, jump @0\n      : @217 [@dyn 86] (gas: 70)\n 17206: a1 = reverse s1\n 17208: a2 = u64 [sp + 0x68]\n 17211: a2 = reverse a2\n 17213: a3 = u64 [sp + 0x70]\n 17216: a3 = reverse a3\n 17218: a4 = u64 [sp + 0x48]\n 17221: a4 = reverse a4\n 17223: a5 = a4 >> 0x38\n 17226: u8 [a0 + 0x1f] = a5\n 17229: a5 = a4 >> 0x30\n 17232: u8 [a0 + 0x1e] = a5\n 17235: a5 = a4 >> 0x28\n 17238: u8 [a0 + 0x1d] = a5\n 17241: a5 = a4 >> 0x20\n 17244: u8 [a0 + 0x1c] = a5\n 17247: a5 = a4 >> 0x18\n 17250: u8 [a0 + 0x1b] = a5\n 17253: a5 = a4 >> 0x10\n 17256: u8 [a0 + 0x1a] = a5\n 17259: a5 = a4 >> 0x8\n 17262: u8 [a0 + 0x19] = a5\n 17265: u8 [a0 + 0x18] = a4\n 17268: a4 = a3 >> 0x38\n 17271: u8 [a0 + 0x17] = a4\n 17274: a4 = a3 >> 0x30\n 17277: u8 [a0 + 0x16] = a4\n 17280: a4 = a3 >> 0x28\n 17283: u8 [a0 + 0x15] = a4\n 17286: a4 = a3 >> 0x20\n 17289: u8 [a0 + 0x14] = a4\n 17292: a4 = a3 >> 0x18\n 17295: u8 [a0 + 0x13] = a4\n 17298: a4 = a3 >> 0x10\n 17301: u8 [a0 + 0x12] = a4\n 17304: a4 = a3 >> 0x8\n 17307: u8 [a0 + 0x11] = a4\n 17310: u8 [a0 + 0x10] = a3\n 17313: a3 = a2 >> 0x38\n 17316: u8 [a0 + 0xf] = a3\n 17319: a3 = a2 >> 0x30\n 17322: u8 [a0 + 0xe] = a3\n 17325: a3 = a2 >> 0x28\n 17328: u8 [a0 + 0xd] = a3\n 17331: a3 = a2 >> 0x20\n 17334: u8 [a0 + 0xc] = a3\n 17337: a3 = a2 >> 0x18\n 17340: u8 [a0 + 0xb] = a3\n 17343: a3 = a2 >> 0x10\n 17346: u8 [a0 + 0xa] = a3\n 17349: a3 = a2 >> 0x8\n 17352: u8 [a0 + 0x9] = a3\n 17355: u8 [a0 + 0x8] = a2\n 17358: a2 = a1 >> 0x38\n 17361: u8 [a0 + 0x7] = a2\n 17364: a2 = a1 >> 0x30\n 17367: u8 [a0 + 0x6] = a2\n 17370: a2 = a1 >> 0x28\n 17373: u8 [a0 + 0x5] = a2\n 17376: a2 = a1 >> 0x20\n 17379: u8 [a0 + 0x4] = a2\n 17382: a2 = a1 >> 0x18\n 17385: u8 [a0 + 0x3] = a2\n 17388: a2 = a1 >> 0x10\n 17391: u8 [a0 + 0x2] = a2\n 17394: a2 = a1 >> 0x8\n 17397: u8 [a0 + 0x1] = a2\n 17400: u8 [a0] = a1\n 17402: a1 = 0x20\n 17405: a0 = 0\n 17407: ra = 174, jump @0\n      : @218 [@dyn 87] (gas: 23)\n 17413: i32 a0 = a0 + 0\n 17415: i32 a2 = sp + 0x100\n 17419: a1 = 0x20\n 17422: ecalli 5 // 'hash_keccak_256'\n 17424: t0 = u64 [sp + 0x50]\n 17427: t1 = u64 [sp + 0x58]\n 17430: t2 = u64 [sp + 0x60]\n 17433: u64 [sp + 64] = 0\n 17436: a5 = 0\n 17438: a4 = 0\n 17440: ra = 0\n 17442: a0 = u64 [sp + 0x100]\n 17446: a1 = u64 [sp + 0x108]\n 17450: a2 = u64 [sp + 0x110]\n 17454: a3 = u64 [sp + 0x118]\n 17458: a0 = reverse a0\n 17460: u64 [sp + 0x70] = a0\n 17463: s1 = reverse a1\n 17465: a0 = reverse a2\n 17467: u64 [sp + 0x68] = a0\n 17470: a0 = reverse a3\n 17472: u64 [sp + 0x48] = a0\n 17475: fallthrough\n      : @219 (gas: 14)\n 17476: u64 [sp + 0x28] = a5\n 17479: u64 [sp + 0x30] = ra\n 17482: u64 [sp + 0x38] = a4\n 17485: a0 = t0 | t2\n 17488: u64 [sp + 0x58] = t1\n 17491: a1 = u64 [sp + 0x78]\n 17494: a1 = t1 | a1\n 17497: a0 = a0 | a1\n 17500: a0 = a0 >> 0x20\n 17503: u64 [sp + 0x60] = t2\n 17506: a1 = a1 | t2\n 17509: a1 = a1 << 0x20\n 17512: a0 = a0 | a1\n 17515: jump @224 if a0 != 0\n      : @220 (gas: 4)\n 17519: i32 a0 = t0 + 0\n 17521: a1 = 0x20\n 17524: u64 [sp + 0x50] = t0\n 17527: ra = 176, jump @0\n      : @221 [@dyn 88] (gas: 107)\n 17533: a1 = u8 [a0 + 0x1]\n 17536: a2 = u8 [a0]\n 17538: a3 = u8 [a0 + 0x2]\n 17541: a4 = u8 [a0 + 0x3]\n 17544: a1 = a1 << 0x8\n 17547: a1 = a1 | a2\n 17550: a3 = a3 << 0x10\n 17553: a4 = a4 << 0x18\n 17556: a3 = a3 | a4\n 17559: a1 = a1 | a3\n 17562: a2 = u8 [a0 + 0x5]\n 17565: a3 = u8 [a0 + 0x4]\n 17568: a4 = u8 [a0 + 0x6]\n 17571: a5 = u8 [a0 + 0x7]\n 17574: a2 = a2 << 0x8\n 17577: a2 = a2 | a3\n 17580: a4 = a4 << 0x10\n 17583: a5 = a5 << 0x18\n 17586: a4 = a4 | a5\n 17589: a2 = a2 | a4\n 17592: a2 = a2 << 0x20\n 17595: t0 = a2 | a1\n 17598: a2 = u8 [a0 + 0x9]\n 17601: a3 = u8 [a0 + 0x8]\n 17604: a4 = u8 [a0 + 0xa]\n 17607: a5 = u8 [a0 + 0xb]\n 17610: a2 = a2 << 0x8\n 17613: a2 = a2 | a3\n 17616: a4 = a4 << 0x10\n 17619: a5 = a5 << 0x18\n 17622: a4 = a4 | a5\n 17625: a2 = a2 | a4\n 17628: a3 = u8 [a0 + 0xd]\n 17631: a4 = u8 [a0 + 0xc]\n 17634: a5 = u8 [a0 + 0xe]\n 17637: a1 = u8 [a0 + 0xf]\n 17640: a3 = a3 << 0x8\n 17643: a3 = a3 | a4\n 17646: a5 = a5 << 0x10\n 17649: a1 = a1 << 0x18\n 17652: a1 = a1 | a5\n 17655: a1 = a1 | a3\n 17658: a1 = a1 << 0x20\n 17661: t1 = a1 | a2\n 17664: a1 = u8 [a0 + 0x11]\n 17667: a3 = u8 [a0 + 0x10]\n 17670: a4 = u8 [a0 + 0x12]\n 17673: a5 = u8 [a0 + 0x13]\n 17676: a1 = a1 << 0x8\n 17679: a1 = a1 | a3\n 17682: a4 = a4 << 0x10\n 17685: a5 = a5 << 0x18\n 17688: a4 = a4 | a5\n 17691: a1 = a1 | a4\n 17694: a3 = u8 [a0 + 0x15]\n 17697: a4 = u8 [a0 + 0x14]\n 17700: a5 = u8 [a0 + 0x16]\n 17703: a2 = u8 [a0 + 0x17]\n 17706: a3 = a3 << 0x8\n 17709: a3 = a3 | a4\n 17712: a5 = a5 << 0x10\n 17715: a2 = a2 << 0x18\n 17718: a2 = a2 | a5\n 17721: a2 = a2 | a3\n 17724: a2 = a2 << 0x20\n 17727: a3 = a2 | a1\n 17730: a1 = u8 [a0 + 0x19]\n 17733: a2 = u8 [a0 + 0x18]\n 17736: a4 = u8 [a0 + 0x1a]\n 17739: a5 = u8 [a0 + 0x1b]\n 17742: a1 = a1 << 0x8\n 17745: a1 = a1 | a2\n 17748: a4 = a4 << 0x10\n 17751: a5 = a5 << 0x18\n 17754: a4 = a4 | a5\n 17757: a1 = a1 | a4\n 17760: a2 = u8 [a0 + 0x1d]\n 17763: a4 = u8 [a0 + 0x1c]\n 17766: a5 = u8 [a0 + 0x1e]\n 17769: a0 = u8 [a0 + 0x1f]\n 17772: a2 = a2 << 0x8\n 17775: a2 = a2 | a4\n 17778: a5 = a5 << 0x10\n 17781: a0 = a0 << 0x18\n 17784: a0 = a0 | a5\n 17787: a0 = a0 | a2\n 17790: a0 = a0 << 0x20\n 17793: a0 = a0 | a1\n 17796: a2 = reverse a0\n 17798: a0 = reverse a3\n 17800: a1 = reverse t1\n 17802: a3 = reverse t0\n 17804: a4 = u64 [sp + 0x70]\n 17807: u64 [sp + 0xb8] = a4\n 17811: u64 [sp + 0xb0] = s1\n 17815: a4 = u64 [sp + 0x68]\n 17818: u64 [sp + 0xa8] = a4\n 17822: u64 [sp + 0x20] = s1\n 17825: s1 = u64 [sp + 0x48]\n 17828: u64 [sp + 0xa0] = s1\n 17832: u64 [sp + 0x98] = a3\n 17836: u64 [sp + 0x90] = a1\n 17840: u64 [sp + 0x88] = a0\n 17844: a0 = sp + 0xa0\n 17848: a1 = sp + 0x80\n 17852: u64 [sp + 0x80] = a2\n 17856: ra = 178, jump @177\n      : @222 [@dyn 89] (gas: 48)\n 17862: a0 = u64 [sp + 0x50]\n 17865: a1 = a0 + 0x20\n 17868: u64 [sp + 0x18] = a1\n 17871: a2 = a1 <u a0\n 17874: a0 = u64 [sp + 0x58]\n 17877: t1 = a0 + a2\n 17880: a3 = t1 <u a0\n 17883: a3 = a2 if a2 == 0\n 17886: a0 = u64 [sp + 0x60]\n 17889: t2 = a0 + a3\n 17892: a3 = t2 <u a0\n 17895: a0 = u64 [sp + 0x78]\n 17898: a0 = a0 + a3\n 17901: u64 [sp + 0x78] = a0\n 17904: s1 = s1 + 0x1\n 17907: a3 = s1 <u 0x1\n 17910: a2 = u64 [sp + 0x68]\n 17913: a2 = a2 + a3\n 17916: a0 = u64 [sp + 0x40]\n 17919: a3 = a0 <u 0x38\n 17922: a0 = a0 + 0x1\n 17925: a5 = a0 <u 0x1\n 17928: a1 = u64 [sp + 0x28]\n 17931: a3 = 0 if a1 != 0\n 17933: a5 = a5 + a1\n 17936: a4 = a0 | a5\n 17939: a4 = a4 <u 0x1\n 17942: a1 = u64 [sp + 0x38]\n 17945: a4 = a4 + a1\n 17948: t0 = a4 <u a1\n 17951: ra = u64 [sp + 0x30]\n 17954: a1 = a1 | ra\n 17957: ra = ra + t0\n 17960: a3 = 0 if a1 != 0\n 17962: u64 [sp + 0x68] = a2\n 17965: u64 [sp + 0x48] = s1\n 17968: a1 = s1 | a2\n 17971: a1 = a1 <u 0x1\n 17974: a2 = u64 [sp + 0x20]\n 17977: a1 = a1 + a2\n 17980: a2 = a1 <u a2\n 17983: s1 = u64 [sp + 0x70]\n 17986: s1 = s1 + a2\n 17989: u64 [sp + 0x70] = s1\n 17992: u64 [sp + 0x40] = a0\n 17995: s1 = a1\n 17997: t0 = u64 [sp + 0x18]\n 18000: jump @219 if a3 != 0\n      : @223 (gas: 6)\n 18004: sp = s0 + 0xfffffffffffffec0\n 18008: ra = u64 [sp + 0x138]\n 18012: s0 = u64 [sp + 0x130]\n 18016: s1 = u64 [sp + 0x128]\n 18020: sp = sp + 0x140\n 18024: ret\n      : @224 (gas: 1)\n 18026: trap\n      : @225 [@dyn 90] (gas: 17)\n 18027: a0 = u64 [s1 + 0x740]\n 18031: u64 [sp + 0x40] = a0\n 18034: a0 = u64 [s1 + 0x738]\n 18038: u64 [sp + 0x48] = a0\n 18041: a0 = u64 [s1 + 0x730]\n 18045: u64 [sp + 0x60] = a0\n 18048: a0 = u64 [s1 + 0x728]\n 18052: u64 [sp + 0x68] = a0\n 18055: u64 [s1 + 1760] = 0\n 18059: u64 [s1 + 1752] = 0\n 18063: u64 [s1 + 1736] = 0x40\n 18068: a0 = sp + 0x7ff\n 18072: a0 = a0 + 0x6d1\n 18076: a1 = sp + 0x7ff\n 18080: a1 = a1 + 0x6b1\n 18084: u64 [s1 + 1744] = 0\n 18088: ra = 182, jump @56\n      : @226 [@dyn 91] (gas: 15)\n 18094: a1 = u64 [s1 + 0x700]\n 18098: a2 = u64 [s1 + 0x6f8]\n 18102: a0 = u64 [s1 + 0x6f0]\n 18106: s1 = u64 [s1 + 0x6e8]\n 18110: u64 [sp + 0x30] = a0\n 18113: u64 [sp + 0x38] = a1\n 18116: a0 = a0 | a1\n 18119: a1 = s1 | a2\n 18122: a1 = a1 | a0\n 18125: a1 = a1 >> 0x20\n 18128: u64 [sp + 0x50] = a2\n 18131: a0 = a0 | a2\n 18134: a0 = a0 << 0x20\n 18137: a0 = a0 | a1\n 18140: jump @228 if a0 == 0\n      : @227 (gas: 1)\n 18143: jump @781\n      : @228 (gas: 4)\n 18147: i32 a0 = s1 + 0\n 18149: a1 = 0x20\n 18152: u64 [sp + 0x58] = a0\n 18155: ra = 184, jump @0\n      : @229 [@dyn 92] (gas: 42)\n 18161: u8 [a0 + 31] = 0x7\n 18165: a1 = u64 [sp + 0x38]\n 18168: a2 = u64 [sp + 0x50]\n 18171: a2 = a2 | a1\n 18174: a1 = 0xffffffe0\n 18184: u64 [sp + 0x28] = s1\n 18187: a1 = s1 <u a1\n 18190: s1 = u64 [sp + 0x30]\n 18193: a1 = 0 if s1 != 0\n 18195: a1 = 0 if a2 != 0\n 18197: u8 [a0 + 30] = 0\n 18200: u8 [a0 + 29] = 0\n 18203: u8 [a0 + 28] = 0\n 18206: u8 [a0 + 27] = 0\n 18209: u8 [a0 + 26] = 0\n 18212: u8 [a0 + 25] = 0\n 18215: u8 [a0 + 24] = 0\n 18218: u8 [a0 + 23] = 0\n 18221: u8 [a0 + 22] = 0\n 18224: u8 [a0 + 21] = 0\n 18227: u8 [a0 + 20] = 0\n 18230: u8 [a0 + 19] = 0\n 18233: u8 [a0 + 18] = 0\n 18236: u8 [a0 + 17] = 0\n 18239: u8 [a0 + 16] = 0\n 18242: u8 [a0 + 15] = 0\n 18245: u8 [a0 + 14] = 0\n 18248: u8 [a0 + 13] = 0\n 18251: u8 [a0 + 12] = 0\n 18254: u8 [a0 + 11] = 0\n 18257: u8 [a0 + 10] = 0\n 18260: u8 [a0 + 9] = 0\n 18263: u8 [a0 + 8] = 0\n 18266: u8 [a0 + 7] = 0\n 18269: u8 [a0 + 6] = 0\n 18272: u8 [a0 + 5] = 0\n 18275: u8 [a0 + 4] = 0\n 18278: u8 [a0 + 3] = 0\n 18281: u8 [a0 + 2] = 0\n 18284: u8 [a0 + 1] = 0\n 18287: u8 [a0 + 0] = 0\n 18289: jump @231 if a1 != 0\n      : @230 (gas: 1)\n 18292: jump @781\n      : @231 (gas: 4)\n 18296: a0 = u64 [sp + 0x58]\n 18299: i32 a0 = a0 + 0x20\n 18302: a1 = 0x20\n 18305: ra = 186, jump @0\n      : @232 [@dyn 93] (gas: 44)\n 18311: u8 [a0 + 31] = 0\n 18314: u8 [a0 + 30] = 0\n 18317: u8 [a0 + 29] = 0\n 18320: u8 [a0 + 28] = 0\n 18323: u8 [a0 + 27] = 0\n 18326: u8 [a0 + 26] = 0\n 18329: u8 [a0 + 25] = 0\n 18332: u8 [a0 + 24] = 0\n 18335: u8 [a0 + 23] = 0\n 18338: u8 [a0 + 22] = 0\n 18341: u8 [a0 + 21] = 0\n 18344: u8 [a0 + 20] = 0\n 18347: u8 [a0 + 19] = 0\n 18350: u8 [a0 + 18] = 0\n 18353: u8 [a0 + 17] = 0\n 18356: u8 [a0 + 16] = 0\n 18359: u8 [a0 + 15] = 0\n 18362: u8 [a0 + 14] = 0\n 18365: u8 [a0 + 13] = 0\n 18368: u8 [a0 + 12] = 0\n 18371: u8 [a0 + 11] = 0\n 18374: u8 [a0 + 10] = 0\n 18377: u8 [a0 + 9] = 0\n 18380: u8 [a0 + 8] = 0\n 18383: u8 [a0 + 7] = 0\n 18386: u8 [a0 + 6] = 0x67\n 18390: u8 [a0 + 5] = 0x6e\n 18394: u8 [a0 + 4] = 0x69\n 18398: u8 [a0 + 3] = 0x7a\n 18402: u8 [a0 + 1] = 0x6d\n 18406: a3 = u64 [sp + 0x68]\n 18409: a4 = u64 [sp + 0x48]\n 18412: a1 = a3 | a4\n 18415: a2 = u64 [sp + 0x60]\n 18418: a5 = u64 [sp + 0x40]\n 18421: a2 = a2 | a5\n 18424: a1 = a1 | a2\n 18427: a1 = a1 >> 0x20\n 18430: a2 = a2 | a4\n 18433: a2 = a2 << 0x20\n 18436: a1 = a1 | a2\n 18439: u8 [a0 + 2] = 0x61\n 18443: u8 [a0 + 0] = 0x61\n 18446: jump @234 if a1 == 0\n      : @233 (gas: 1)\n 18449: jump @781\n      : @234 (gas: 4)\n 18453: i32 a0 = a3 + 0\n 18455: a1 = 0x20\n 18458: u64 [sp + 0x58] = a0\n 18461: ra = 188, jump @0\n      : @235 [@dyn 94] (gas: 77)\n 18467: a1 = u64 [sp + 0x38]\n 18470: a1 = reverse a1\n 18472: a2 = u64 [sp + 0x50]\n 18475: a2 = reverse a2\n 18477: a3 = reverse s1\n 18479: a4 = u64 [sp + 0x28]\n 18482: a4 = reverse a4\n 18484: a5 = a4 >> 0x38\n 18487: u8 [a0 + 0x1f] = a5\n 18490: a5 = a4 >> 0x30\n 18493: u8 [a0 + 0x1e] = a5\n 18496: a5 = a4 >> 0x28\n 18499: u8 [a0 + 0x1d] = a5\n 18502: a5 = a4 >> 0x20\n 18505: u8 [a0 + 0x1c] = a5\n 18508: a5 = a4 >> 0x18\n 18511: u8 [a0 + 0x1b] = a5\n 18514: a5 = a4 >> 0x10\n 18517: u8 [a0 + 0x1a] = a5\n 18520: a5 = a4 >> 0x8\n 18523: u8 [a0 + 0x19] = a5\n 18526: u8 [a0 + 0x18] = a4\n 18529: u8 [a0 + 0x10] = a3\n 18532: a4 = a3 >> 0x38\n 18535: u8 [a0 + 0x17] = a4\n 18538: a4 = a3 >> 0x30\n 18541: u8 [a0 + 0x16] = a4\n 18544: a4 = a3 >> 0x28\n 18547: u8 [a0 + 0x15] = a4\n 18550: a4 = a3 >> 0x20\n 18553: u8 [a0 + 0x14] = a4\n 18556: a4 = a3 >> 0x18\n 18559: u8 [a0 + 0x13] = a4\n 18562: a4 = a3 >> 0x10\n 18565: u8 [a0 + 0x12] = a4\n 18568: a3 = a3 >> 0x8\n 18571: u8 [a0 + 0x11] = a3\n 18574: u8 [a0 + 0x8] = a2\n 18577: a3 = a2 >> 0x38\n 18580: u8 [a0 + 0xf] = a3\n 18583: a3 = a2 >> 0x30\n 18586: u8 [a0 + 0xe] = a3\n 18589: a3 = a2 >> 0x28\n 18592: u8 [a0 + 0xd] = a3\n 18595: a3 = a2 >> 0x20\n 18598: u8 [a0 + 0xc] = a3\n 18601: a3 = a2 >> 0x18\n 18604: u8 [a0 + 0xb] = a3\n 18607: a3 = a2 >> 0x10\n 18610: u8 [a0 + 0xa] = a3\n 18613: a2 = a2 >> 0x8\n 18616: u8 [a0 + 0x9] = a2\n 18619: u8 [a0] = a1\n 18621: a2 = a1 >> 0x38\n 18624: u8 [a0 + 0x7] = a2\n 18627: a2 = a1 >> 0x30\n 18630: u8 [a0 + 0x6] = a2\n 18633: a2 = a1 >> 0x28\n 18636: u8 [a0 + 0x5] = a2\n 18639: a2 = a1 >> 0x20\n 18642: u8 [a0 + 0x4] = a2\n 18645: a2 = a1 >> 0x18\n 18648: u8 [a0 + 0x3] = a2\n 18651: a2 = a1 >> 0x10\n 18654: u8 [a0 + 0x2] = a2\n 18657: a1 = a1 >> 0x8\n 18660: u8 [a0 + 0x1] = a1\n 18663: s1 = sp + 0x7e8\n 18667: u64 [s1 + 1696] = 0\n 18671: u64 [s1 + 1688] = 0\n 18675: u64 [s1 + 1672] = 0x40\n 18680: a0 = sp + 0x7ff\n 18684: a0 = a0 + 0x691\n 18688: a1 = sp + 0x7ff\n 18692: a1 = a1 + 0x671\n 18696: u64 [s1 + 1680] = 0\n 18700: ra = 190, jump @56\n      : @236 [@dyn 95] (gas: 15)\n 18706: a1 = u64 [s1 + 0x6c0]\n 18710: a2 = u64 [s1 + 0x6b8]\n 18714: a0 = u64 [s1 + 0x6b0]\n 18718: s1 = u64 [s1 + 0x6a8]\n 18722: u64 [sp + 0x28] = a0\n 18725: u64 [sp + 0x30] = a1\n 18728: a0 = a0 | a1\n 18731: a1 = s1 | a2\n 18734: a1 = a1 | a0\n 18737: a1 = a1 >> 0x20\n 18740: u64 [sp + 0x38] = a2\n 18743: a0 = a0 | a2\n 18746: a0 = a0 << 0x20\n 18749: a0 = a0 | a1\n 18752: jump @238 if a0 == 0\n      : @237 (gas: 1)\n 18755: jump @781\n      : @238 (gas: 4)\n 18759: i32 a0 = s1 + 0\n 18761: a1 = 0x20\n 18764: u64 [sp + 0x20] = a0\n 18767: ra = 192, jump @0\n      : @239 [@dyn 96] (gas: 43)\n 18773: u8 [a0 + 31] = 0x7\n 18777: a1 = u64 [sp + 0x30]\n 18780: a2 = u64 [sp + 0x38]\n 18783: a2 = a2 | a1\n 18786: a1 = 0xffffffe0\n 18796: u64 [sp + 0x18] = s1\n 18799: u64 [sp + 0x50] = a1\n 18802: a1 = s1 <u a1\n 18805: s1 = u64 [sp + 0x28]\n 18808: a1 = 0 if s1 != 0\n 18810: a1 = 0 if a2 != 0\n 18812: u8 [a0 + 30] = 0\n 18815: u8 [a0 + 29] = 0\n 18818: u8 [a0 + 28] = 0\n 18821: u8 [a0 + 27] = 0\n 18824: u8 [a0 + 26] = 0\n 18827: u8 [a0 + 25] = 0\n 18830: u8 [a0 + 24] = 0\n 18833: u8 [a0 + 23] = 0\n 18836: u8 [a0 + 22] = 0\n 18839: u8 [a0 + 21] = 0\n 18842: u8 [a0 + 20] = 0\n 18845: u8 [a0 + 19] = 0\n 18848: u8 [a0 + 18] = 0\n 18851: u8 [a0 + 17] = 0\n 18854: u8 [a0 + 16] = 0\n 18857: u8 [a0 + 15] = 0\n 18860: u8 [a0 + 14] = 0\n 18863: u8 [a0 + 13] = 0\n 18866: u8 [a0 + 12] = 0\n 18869: u8 [a0 + 11] = 0\n 18872: u8 [a0 + 10] = 0\n 18875: u8 [a0 + 9] = 0\n 18878: u8 [a0 + 8] = 0\n 18881: u8 [a0 + 7] = 0\n 18884: u8 [a0 + 6] = 0\n 18887: u8 [a0 + 5] = 0\n 18890: u8 [a0 + 4] = 0\n 18893: u8 [a0 + 3] = 0\n 18896: u8 [a0 + 2] = 0\n 18899: u8 [a0 + 1] = 0\n 18902: u8 [a0 + 0] = 0\n 18904: jump @241 if a1 != 0\n      : @240 (gas: 1)\n 18907: jump @781\n      : @241 (gas: 4)\n 18911: a0 = u64 [sp + 0x20]\n 18914: i32 a0 = a0 + 0x20\n 18917: a1 = 0x20\n 18920: ra = 194, jump @0\n      : @242 [@dyn 97] (gas: 43)\n 18926: u8 [a0 + 31] = 0\n 18929: u8 [a0 + 30] = 0\n 18932: u8 [a0 + 29] = 0\n 18935: u8 [a0 + 28] = 0\n 18938: u8 [a0 + 27] = 0\n 18941: u8 [a0 + 26] = 0\n 18944: u8 [a0 + 25] = 0\n 18947: u8 [a0 + 24] = 0\n 18950: u8 [a0 + 23] = 0\n 18953: u8 [a0 + 22] = 0\n 18956: u8 [a0 + 21] = 0\n 18959: u8 [a0 + 20] = 0\n 18962: u8 [a0 + 19] = 0\n 18965: u8 [a0 + 18] = 0\n 18968: u8 [a0 + 17] = 0\n 18971: u8 [a0 + 16] = 0\n 18974: u8 [a0 + 15] = 0\n 18977: u8 [a0 + 14] = 0\n 18980: u8 [a0 + 13] = 0\n 18983: u8 [a0 + 12] = 0\n 18986: u8 [a0 + 11] = 0\n 18989: u8 [a0 + 10] = 0\n 18992: u8 [a0 + 9] = 0\n 18995: u8 [a0 + 8] = 0\n 18998: u8 [a0 + 7] = 0\n 19001: u8 [a0 + 6] = 0x65\n 19005: u8 [a0 + 5] = 0x6d\n 19009: u8 [a0 + 4] = 0x6f\n 19013: u8 [a0 + 3] = 0x73\n 19017: u8 [a0 + 2] = 0x65\n 19021: u8 [a0 + 1] = 0x77\n 19025: a2 = u64 [sp + 0x48]\n 19028: a3 = u64 [sp + 0x40]\n 19031: a4 = a2 | a3\n 19034: a2 = u64 [sp + 0x68]\n 19037: a3 = u64 [sp + 0x50]\n 19040: a2 = a2 <u a3\n 19043: a3 = u64 [sp + 0x60]\n 19046: a2 = 0 if a3 != 0\n 19048: u64 [sp + 0x50] = a4\n 19051: a2 = 0 if a4 != 0\n 19053: u8 [a0 + 0] = 0x61\n 19056: jump @244 if a2 != 0\n      : @243 (gas: 1)\n 19059: jump @781\n      : @244 (gas: 4)\n 19063: a0 = u64 [sp + 0x58]\n 19066: i32 a0 = a0 + 0x20\n 19069: a1 = 0x20\n 19072: ra = 196, jump @0\n      : @245 [@dyn 98] (gas: 77)\n 19078: a1 = u64 [sp + 0x30]\n 19081: a1 = reverse a1\n 19083: a2 = u64 [sp + 0x38]\n 19086: a2 = reverse a2\n 19088: a3 = reverse s1\n 19090: a4 = u64 [sp + 0x18]\n 19093: a4 = reverse a4\n 19095: a5 = a4 >> 0x38\n 19098: u8 [a0 + 0x1f] = a5\n 19101: a5 = a4 >> 0x30\n 19104: u8 [a0 + 0x1e] = a5\n 19107: a5 = a4 >> 0x28\n 19110: u8 [a0 + 0x1d] = a5\n 19113: a5 = a4 >> 0x20\n 19116: u8 [a0 + 0x1c] = a5\n 19119: a5 = a4 >> 0x18\n 19122: u8 [a0 + 0x1b] = a5\n 19125: a5 = a4 >> 0x10\n 19128: u8 [a0 + 0x1a] = a5\n 19131: a5 = a4 >> 0x8\n 19134: u8 [a0 + 0x19] = a5\n 19137: u8 [a0 + 0x18] = a4\n 19140: u8 [a0 + 0x10] = a3\n 19143: a4 = a3 >> 0x38\n 19146: u8 [a0 + 0x17] = a4\n 19149: a4 = a3 >> 0x30\n 19152: u8 [a0 + 0x16] = a4\n 19155: a4 = a3 >> 0x28\n 19158: u8 [a0 + 0x15] = a4\n 19161: a4 = a3 >> 0x20\n 19164: u8 [a0 + 0x14] = a4\n 19167: a4 = a3 >> 0x18\n 19170: u8 [a0 + 0x13] = a4\n 19173: a4 = a3 >> 0x10\n 19176: u8 [a0 + 0x12] = a4\n 19179: a3 = a3 >> 0x8\n 19182: u8 [a0 + 0x11] = a3\n 19185: u8 [a0 + 0x8] = a2\n 19188: a3 = a2 >> 0x38\n 19191: u8 [a0 + 0xf] = a3\n 19194: a3 = a2 >> 0x30\n 19197: u8 [a0 + 0xe] = a3\n 19200: a3 = a2 >> 0x28\n 19203: u8 [a0 + 0xd] = a3\n 19206: a3 = a2 >> 0x20\n 19209: u8 [a0 + 0xc] = a3\n 19212: a3 = a2 >> 0x18\n 19215: u8 [a0 + 0xb] = a3\n 19218: a3 = a2 >> 0x10\n 19221: u8 [a0 + 0xa] = a3\n 19224: a2 = a2 >> 0x8\n 19227: u8 [a0 + 0x9] = a2\n 19230: u8 [a0] = a1\n 19232: a2 = a1 >> 0x38\n 19235: u8 [a0 + 0x7] = a2\n 19238: a2 = a1 >> 0x30\n 19241: u8 [a0 + 0x6] = a2\n 19244: a2 = a1 >> 0x28\n 19247: u8 [a0 + 0x5] = a2\n 19250: a2 = a1 >> 0x20\n 19253: u8 [a0 + 0x4] = a2\n 19256: a2 = a1 >> 0x18\n 19259: u8 [a0 + 0x3] = a2\n 19262: a2 = a1 >> 0x10\n 19265: u8 [a0 + 0x2] = a2\n 19268: a1 = a1 >> 0x8\n 19271: u8 [a0 + 0x1] = a1\n 19274: s1 = sp + 0x7e8\n 19278: u64 [s1 + 1632] = 0\n 19282: u64 [s1 + 1624] = 0\n 19286: u64 [s1 + 1608] = 0x40\n 19291: a0 = sp + 0x7ff\n 19295: a0 = a0 + 0x651\n 19299: a1 = sp + 0x7ff\n 19303: a1 = a1 + 0x631\n 19307: u64 [s1 + 1616] = 0\n 19311: ra = 198, jump @56\n      : @246 [@dyn 99] (gas: 15)\n 19317: a1 = u64 [s1 + 0x680]\n 19321: a2 = u64 [s1 + 0x678]\n 19325: a0 = u64 [s1 + 0x670]\n 19329: s1 = u64 [s1 + 0x668]\n 19333: u64 [sp + 0x28] = a0\n 19336: u64 [sp + 0x30] = a1\n 19339: a0 = a0 | a1\n 19342: a1 = s1 | a2\n 19345: a1 = a1 | a0\n 19348: a1 = a1 >> 0x20\n 19351: u64 [sp + 0x38] = a2\n 19354: a0 = a0 | a2\n 19357: a0 = a0 << 0x20\n 19360: a0 = a0 | a1\n 19363: jump @248 if a0 == 0\n      : @247 (gas: 1)\n 19366: jump @781\n      : @248 (gas: 4)\n 19370: i32 a0 = s1 + 0\n 19372: a1 = 0x20\n 19375: u64 [sp + 0x18] = a0\n 19378: ra = 200, jump @0\n      : @249 [@dyn 100] (gas: 44)\n 19384: u8 [a0 + 31] = 0x9\n 19388: a1 = u64 [sp + 0x30]\n 19391: a2 = u64 [sp + 0x38]\n 19394: a2 = a2 | a1\n 19397: a1 = 0x100000000\n 19407: u64 [sp + 0x20] = a1\n 19410: a1 = 0xffffffe0\n 19420: u64 [sp + 0x10] = s1\n 19423: a1 = s1 <u a1\n 19426: s1 = u64 [sp + 0x28]\n 19429: a1 = 0 if s1 != 0\n 19431: a1 = 0 if a2 != 0\n 19433: u8 [a0 + 30] = 0\n 19436: u8 [a0 + 29] = 0\n 19439: u8 [a0 + 28] = 0\n 19442: u8 [a0 + 27] = 0\n 19445: u8 [a0 + 26] = 0\n 19448: u8 [a0 + 25] = 0\n 19451: u8 [a0 + 24] = 0\n 19454: u8 [a0 + 23] = 0\n 19457: u8 [a0 + 22] = 0\n 19460: u8 [a0 + 21] = 0\n 19463: u8 [a0 + 20] = 0\n 19466: u8 [a0 + 19] = 0\n 19469: u8 [a0 + 18] = 0\n 19472: u8 [a0 + 17] = 0\n 19475: u8 [a0 + 16] = 0\n 19478: u8 [a0 + 15] = 0\n 19481: u8 [a0 + 14] = 0\n 19484: u8 [a0 + 13] = 0\n 19487: u8 [a0 + 12] = 0\n 19490: u8 [a0 + 11] = 0\n 19493: u8 [a0 + 10] = 0\n 19496: u8 [a0 + 9] = 0\n 19499: u8 [a0 + 8] = 0\n 19502: u8 [a0 + 7] = 0\n 19505: u8 [a0 + 6] = 0\n 19508: u8 [a0 + 5] = 0\n 19511: u8 [a0 + 4] = 0\n 19514: u8 [a0 + 3] = 0\n 19517: u8 [a0 + 2] = 0\n 19520: u8 [a0 + 1] = 0\n 19523: u8 [a0 + 0] = 0\n 19525: jump @251 if a1 != 0\n      : @250 (gas: 1)\n 19528: jump @781\n      : @251 (gas: 4)\n 19532: a0 = u64 [sp + 0x18]\n 19535: i32 a0 = a0 + 0x20\n 19538: a1 = 0x20\n 19541: ra = 202, jump @0\n      : @252 [@dyn 101] (gas: 41)\n 19547: u8 [a0 + 31] = 0\n 19550: u8 [a0 + 30] = 0\n 19553: u8 [a0 + 29] = 0\n 19556: u8 [a0 + 28] = 0\n 19559: u8 [a0 + 27] = 0\n 19562: u8 [a0 + 26] = 0\n 19565: u8 [a0 + 25] = 0\n 19568: u8 [a0 + 24] = 0\n 19571: u8 [a0 + 23] = 0\n 19574: u8 [a0 + 22] = 0\n 19577: u8 [a0 + 21] = 0\n 19580: u8 [a0 + 20] = 0\n 19583: u8 [a0 + 19] = 0\n 19586: u8 [a0 + 18] = 0\n 19589: u8 [a0 + 17] = 0\n 19592: u8 [a0 + 16] = 0\n 19595: u8 [a0 + 15] = 0\n 19598: u8 [a0 + 14] = 0\n 19601: u8 [a0 + 13] = 0\n 19604: u8 [a0 + 12] = 0\n 19607: u8 [a0 + 11] = 0\n 19610: u8 [a0 + 10] = 0\n 19613: u8 [a0 + 9] = 0\n 19616: u8 [a0 + 8] = 0x74\n 19620: u8 [a0 + 7] = 0x6e\n 19624: u8 [a0 + 6] = 0x61\n 19628: u8 [a0 + 5] = 0x69\n 19632: u8 [a0 + 4] = 0x6c\n 19636: u8 [a0 + 3] = 0x6c\n 19640: u8 [a0 + 2] = 0x69\n 19644: u8 [a0 + 1] = 0x72\n 19648: a2 = u64 [sp + 0x20]\n 19651: a2 = a2 + 0xffffffffffffffc0\n 19654: a3 = u64 [sp + 0x68]\n 19657: a2 = a3 <u a2\n 19660: a3 = u64 [sp + 0x60]\n 19663: a2 = 0 if a3 != 0\n 19665: a3 = u64 [sp + 0x50]\n 19668: a2 = 0 if a3 != 0\n 19670: u8 [a0 + 0] = 0x62\n 19673: jump @254 if a2 != 0\n      : @253 (gas: 1)\n 19676: jump @781\n      : @254 (gas: 4)\n 19680: a0 = u64 [sp + 0x58]\n 19683: i32 a0 = a0 + 0x40\n 19686: a1 = 0x20\n 19689: ra = 204, jump @0\n      : @255 [@dyn 102] (gas: 77)\n 19695: a1 = u64 [sp + 0x30]\n 19698: a1 = reverse a1\n 19700: a2 = u64 [sp + 0x38]\n 19703: a2 = reverse a2\n 19705: a3 = reverse s1\n 19707: a4 = u64 [sp + 0x10]\n 19710: a4 = reverse a4\n 19712: a5 = a4 >> 0x38\n 19715: u8 [a0 + 0x1f] = a5\n 19718: a5 = a4 >> 0x30\n 19721: u8 [a0 + 0x1e] = a5\n 19724: a5 = a4 >> 0x28\n 19727: u8 [a0 + 0x1d] = a5\n 19730: a5 = a4 >> 0x20\n 19733: u8 [a0 + 0x1c] = a5\n 19736: a5 = a4 >> 0x18\n 19739: u8 [a0 + 0x1b] = a5\n 19742: a5 = a4 >> 0x10\n 19745: u8 [a0 + 0x1a] = a5\n 19748: a5 = a4 >> 0x8\n 19751: u8 [a0 + 0x19] = a5\n 19754: u8 [a0 + 0x18] = a4\n 19757: u8 [a0 + 0x10] = a3\n 19760: a4 = a3 >> 0x38\n 19763: u8 [a0 + 0x17] = a4\n 19766: a4 = a3 >> 0x30\n 19769: u8 [a0 + 0x16] = a4\n 19772: a4 = a3 >> 0x28\n 19775: u8 [a0 + 0x15] = a4\n 19778: a4 = a3 >> 0x20\n 19781: u8 [a0 + 0x14] = a4\n 19784: a4 = a3 >> 0x18\n 19787: u8 [a0 + 0x13] = a4\n 19790: a4 = a3 >> 0x10\n 19793: u8 [a0 + 0x12] = a4\n 19796: a3 = a3 >> 0x8\n 19799: u8 [a0 + 0x11] = a3\n 19802: u8 [a0 + 0x8] = a2\n 19805: a3 = a2 >> 0x38\n 19808: u8 [a0 + 0xf] = a3\n 19811: a3 = a2 >> 0x30\n 19814: u8 [a0 + 0xe] = a3\n 19817: a3 = a2 >> 0x28\n 19820: u8 [a0 + 0xd] = a3\n 19823: a3 = a2 >> 0x20\n 19826: u8 [a0 + 0xc] = a3\n 19829: a3 = a2 >> 0x18\n 19832: u8 [a0 + 0xb] = a3\n 19835: a3 = a2 >> 0x10\n 19838: u8 [a0 + 0xa] = a3\n 19841: a2 = a2 >> 0x8\n 19844: u8 [a0 + 0x9] = a2\n 19847: u8 [a0] = a1\n 19849: a2 = a1 >> 0x38\n 19852: u8 [a0 + 0x7] = a2\n 19855: a2 = a1 >> 0x30\n 19858: u8 [a0 + 0x6] = a2\n 19861: a2 = a1 >> 0x28\n 19864: u8 [a0 + 0x5] = a2\n 19867: a2 = a1 >> 0x20\n 19870: u8 [a0 + 0x4] = a2\n 19873: a2 = a1 >> 0x18\n 19876: u8 [a0 + 0x3] = a2\n 19879: a2 = a1 >> 0x10\n 19882: u8 [a0 + 0x2] = a2\n 19885: a1 = a1 >> 0x8\n 19888: u8 [a0 + 0x1] = a1\n 19891: s1 = sp + 0x7e8\n 19895: u64 [s1 + 1568] = 0\n 19899: u64 [s1 + 1560] = 0\n 19903: u64 [s1 + 1544] = 0x40\n 19908: a0 = sp + 0x7ff\n 19912: a0 = a0 + 0x611\n 19916: a1 = sp + 0x7ff\n 19920: a1 = a1 + 0x5f1\n 19924: u64 [s1 + 1552] = 0\n 19928: ra = 206, jump @56\n      : @256 [@dyn 103] (gas: 15)\n 19934: a1 = u64 [s1 + 0x640]\n 19938: a2 = u64 [s1 + 0x638]\n 19942: a0 = u64 [s1 + 0x630]\n 19946: s1 = u64 [s1 + 0x628]\n 19950: u64 [sp + 0x28] = a0\n 19953: u64 [sp + 0x30] = a1\n 19956: a0 = a0 | a1\n 19959: a1 = s1 | a2\n 19962: a1 = a1 | a0\n 19965: a1 = a1 >> 0x20\n 19968: u64 [sp + 0x38] = a2\n 19971: a0 = a0 | a2\n 19974: a0 = a0 << 0x20\n 19977: a0 = a0 | a1\n 19980: jump @258 if a0 == 0\n      : @257 (gas: 1)\n 19983: jump @781\n      : @258 (gas: 4)\n 19987: i32 a0 = s1 + 0\n 19989: a1 = 0x20\n 19992: u64 [sp + 0x18] = a0\n 19995: ra = 208, jump @0\n      : @259 [@dyn 104] (gas: 44)\n 20001: u8 [a0 + 31] = 0x9\n 20005: a1 = u64 [sp + 0x30]\n 20008: a2 = u64 [sp + 0x38]\n 20011: a2 = a2 | a1\n 20014: a1 = 0x100000000\n 20024: u64 [sp + 0x20] = a1\n 20027: a1 = 0xffffffe0\n 20037: u64 [sp + 0x10] = s1\n 20040: a1 = s1 <u a1\n 20043: s1 = u64 [sp + 0x28]\n 20046: a1 = 0 if s1 != 0\n 20048: a1 = 0 if a2 != 0\n 20050: u8 [a0 + 30] = 0\n 20053: u8 [a0 + 29] = 0\n 20056: u8 [a0 + 28] = 0\n 20059: u8 [a0 + 27] = 0\n 20062: u8 [a0 + 26] = 0\n 20065: u8 [a0 + 25] = 0\n 20068: u8 [a0 + 24] = 0\n 20071: u8 [a0 + 23] = 0\n 20074: u8 [a0 + 22] = 0\n 20077: u8 [a0 + 21] = 0\n 20080: u8 [a0 + 20] = 0\n 20083: u8 [a0 + 19] = 0\n 20086: u8 [a0 + 18] = 0\n 20089: u8 [a0 + 17] = 0\n 20092: u8 [a0 + 16] = 0\n 20095: u8 [a0 + 15] = 0\n 20098: u8 [a0 + 14] = 0\n 20101: u8 [a0 + 13] = 0\n 20104: u8 [a0 + 12] = 0\n 20107: u8 [a0 + 11] = 0\n 20110: u8 [a0 + 10] = 0\n 20113: u8 [a0 + 9] = 0\n 20116: u8 [a0 + 8] = 0\n 20119: u8 [a0 + 7] = 0\n 20122: u8 [a0 + 6] = 0\n 20125: u8 [a0 + 5] = 0\n 20128: u8 [a0 + 4] = 0\n 20131: u8 [a0 + 3] = 0\n 20134: u8 [a0 + 2] = 0\n 20137: u8 [a0 + 1] = 0\n 20140: u8 [a0 + 0] = 0\n 20142: jump @261 if a1 != 0\n      : @260 (gas: 1)\n 20145: jump @781\n      : @261 (gas: 4)\n 20149: a0 = u64 [sp + 0x18]\n 20152: i32 a0 = a0 + 0x20\n 20155: a1 = 0x20\n 20158: ra = 210, jump @0\n      : @262 [@dyn 105] (gas: 41)\n 20164: u8 [a0 + 31] = 0\n 20167: u8 [a0 + 30] = 0\n 20170: u8 [a0 + 29] = 0\n 20173: u8 [a0 + 28] = 0\n 20176: u8 [a0 + 27] = 0\n 20179: u8 [a0 + 26] = 0\n 20182: u8 [a0 + 25] = 0\n 20185: u8 [a0 + 24] = 0\n 20188: u8 [a0 + 23] = 0\n 20191: u8 [a0 + 22] = 0\n 20194: u8 [a0 + 21] = 0\n 20197: u8 [a0 + 20] = 0\n 20200: u8 [a0 + 19] = 0\n 20203: u8 [a0 + 18] = 0\n 20206: u8 [a0 + 17] = 0\n 20209: u8 [a0 + 16] = 0\n 20212: u8 [a0 + 15] = 0\n 20215: u8 [a0 + 14] = 0\n 20218: u8 [a0 + 13] = 0\n 20221: u8 [a0 + 12] = 0\n 20224: u8 [a0 + 11] = 0\n 20227: u8 [a0 + 10] = 0\n 20230: u8 [a0 + 9] = 0\n 20233: u8 [a0 + 8] = 0x6c\n 20237: u8 [a0 + 7] = 0x75\n 20241: u8 [a0 + 6] = 0x66\n 20245: u8 [a0 + 5] = 0x69\n 20249: u8 [a0 + 4] = 0x74\n 20253: u8 [a0 + 3] = 0x75\n 20257: u8 [a0 + 2] = 0x61\n 20261: u8 [a0 + 1] = 0x65\n 20265: a2 = u64 [sp + 0x20]\n 20268: a2 = a2 + 0xffffffffffffffa0\n 20271: a3 = u64 [sp + 0x68]\n 20274: a2 = a3 <u a2\n 20277: a3 = u64 [sp + 0x60]\n 20280: a2 = 0 if a3 != 0\n 20282: a3 = u64 [sp + 0x50]\n 20285: a2 = 0 if a3 != 0\n 20287: u8 [a0 + 0] = 0x62\n 20290: jump @264 if a2 != 0\n      : @263 (gas: 1)\n 20293: jump @781\n      : @264 (gas: 4)\n 20296: a0 = u64 [sp + 0x58]\n 20299: i32 a0 = a0 + 0x60\n 20302: a1 = 0x20\n 20305: ra = 212, jump @0\n      : @265 [@dyn 106] (gas: 77)\n 20311: a1 = u64 [sp + 0x30]\n 20314: a1 = reverse a1\n 20316: a2 = u64 [sp + 0x38]\n 20319: a2 = reverse a2\n 20321: a3 = reverse s1\n 20323: a4 = u64 [sp + 0x10]\n 20326: a4 = reverse a4\n 20328: a5 = a4 >> 0x38\n 20331: u8 [a0 + 0x1f] = a5\n 20334: a5 = a4 >> 0x30\n 20337: u8 [a0 + 0x1e] = a5\n 20340: a5 = a4 >> 0x28\n 20343: u8 [a0 + 0x1d] = a5\n 20346: a5 = a4 >> 0x20\n 20349: u8 [a0 + 0x1c] = a5\n 20352: a5 = a4 >> 0x18\n 20355: u8 [a0 + 0x1b] = a5\n 20358: a5 = a4 >> 0x10\n 20361: u8 [a0 + 0x1a] = a5\n 20364: a5 = a4 >> 0x8\n 20367: u8 [a0 + 0x19] = a5\n 20370: u8 [a0 + 0x18] = a4\n 20373: u8 [a0 + 0x10] = a3\n 20376: a4 = a3 >> 0x38\n 20379: u8 [a0 + 0x17] = a4\n 20382: a4 = a3 >> 0x30\n 20385: u8 [a0 + 0x16] = a4\n 20388: a4 = a3 >> 0x28\n 20391: u8 [a0 + 0x15] = a4\n 20394: a4 = a3 >> 0x20\n 20397: u8 [a0 + 0x14] = a4\n 20400: a4 = a3 >> 0x18\n 20403: u8 [a0 + 0x13] = a4\n 20406: a4 = a3 >> 0x10\n 20409: u8 [a0 + 0x12] = a4\n 20412: a3 = a3 >> 0x8\n 20415: u8 [a0 + 0x11] = a3\n 20418: u8 [a0 + 0x8] = a2\n 20421: a3 = a2 >> 0x38\n 20424: u8 [a0 + 0xf] = a3\n 20427: a3 = a2 >> 0x30\n 20430: u8 [a0 + 0xe] = a3\n 20433: a3 = a2 >> 0x28\n 20436: u8 [a0 + 0xd] = a3\n 20439: a3 = a2 >> 0x20\n 20442: u8 [a0 + 0xc] = a3\n 20445: a3 = a2 >> 0x18\n 20448: u8 [a0 + 0xb] = a3\n 20451: a3 = a2 >> 0x10\n 20454: u8 [a0 + 0xa] = a3\n 20457: a2 = a2 >> 0x8\n 20460: u8 [a0 + 0x9] = a2\n 20463: u8 [a0] = a1\n 20465: a2 = a1 >> 0x38\n 20468: u8 [a0 + 0x7] = a2\n 20471: a2 = a1 >> 0x30\n 20474: u8 [a0 + 0x6] = a2\n 20477: a2 = a1 >> 0x28\n 20480: u8 [a0 + 0x5] = a2\n 20483: a2 = a1 >> 0x20\n 20486: u8 [a0 + 0x4] = a2\n 20489: a2 = a1 >> 0x18\n 20492: u8 [a0 + 0x3] = a2\n 20495: a2 = a1 >> 0x10\n 20498: u8 [a0 + 0x2] = a2\n 20501: a1 = a1 >> 0x8\n 20504: u8 [a0 + 0x1] = a1\n 20507: s1 = sp + 0x7e8\n 20511: u64 [s1 + 1504] = 0\n 20515: u64 [s1 + 1496] = 0\n 20519: u64 [s1 + 1480] = 0x40\n 20524: a0 = sp + 0x7ff\n 20528: a0 = a0 + 0x5d1\n 20532: a1 = sp + 0x7ff\n 20536: a1 = a1 + 0x5b1\n 20540: u64 [s1 + 1488] = 0\n 20544: ra = 214, jump @56\n      : @266 [@dyn 107] (gas: 15)\n 20550: a1 = u64 [s1 + 0x600]\n 20554: a2 = u64 [s1 + 0x5f8]\n 20558: a0 = u64 [s1 + 0x5f0]\n 20562: s1 = u64 [s1 + 0x5e8]\n 20566: u64 [sp + 0x28] = a0\n 20569: u64 [sp + 0x30] = a1\n 20572: a0 = a0 | a1\n 20575: a1 = s1 | a2\n 20578: a1 = a1 | a0\n 20581: a1 = a1 >> 0x20\n 20584: u64 [sp + 0x38] = a2\n 20587: a0 = a0 | a2\n 20590: a0 = a0 << 0x20\n 20593: a0 = a0 | a1\n 20596: jump @268 if a0 == 0\n      : @267 (gas: 1)\n 20599: jump @781\n      : @268 (gas: 4)\n 20602: i32 a0 = s1 + 0\n 20604: a1 = 0x20\n 20607: u64 [sp + 0x18] = a0\n 20610: ra = 216, jump @0\n      : @269 [@dyn 108] (gas: 44)\n 20616: u8 [a0 + 31] = 0x5\n 20620: a1 = u64 [sp + 0x30]\n 20623: a2 = u64 [sp + 0x38]\n 20626: a2 = a2 | a1\n 20629: a1 = 0x100000000\n 20639: u64 [sp + 0x20] = a1\n 20642: a1 = 0xffffffe0\n 20652: u64 [sp + 0x10] = s1\n 20655: a1 = s1 <u a1\n 20658: s1 = u64 [sp + 0x28]\n 20661: a1 = 0 if s1 != 0\n 20663: a1 = 0 if a2 != 0\n 20665: u8 [a0 + 30] = 0\n 20668: u8 [a0 + 29] = 0\n 20671: u8 [a0 + 28] = 0\n 20674: u8 [a0 + 27] = 0\n 20677: u8 [a0 + 26] = 0\n 20680: u8 [a0 + 25] = 0\n 20683: u8 [a0 + 24] = 0\n 20686: u8 [a0 + 23] = 0\n 20689: u8 [a0 + 22] = 0\n 20692: u8 [a0 + 21] = 0\n 20695: u8 [a0 + 20] = 0\n 20698: u8 [a0 + 19] = 0\n 20701: u8 [a0 + 18] = 0\n 20704: u8 [a0 + 17] = 0\n 20707: u8 [a0 + 16] = 0\n 20710: u8 [a0 + 15] = 0\n 20713: u8 [a0 + 14] = 0\n 20716: u8 [a0 + 13] = 0\n 20719: u8 [a0 + 12] = 0\n 20722: u8 [a0 + 11] = 0\n 20725: u8 [a0 + 10] = 0\n 20728: u8 [a0 + 9] = 0\n 20731: u8 [a0 + 8] = 0\n 20734: u8 [a0 + 7] = 0\n 20737: u8 [a0 + 6] = 0\n 20740: u8 [a0 + 5] = 0\n 20743: u8 [a0 + 4] = 0\n 20746: u8 [a0 + 3] = 0\n 20749: u8 [a0 + 2] = 0\n 20752: u8 [a0 + 1] = 0\n 20755: u8 [a0 + 0] = 0\n 20757: jump @271 if a1 != 0\n      : @270 (gas: 1)\n 20760: jump @781\n      : @271 (gas: 4)\n 20763: a0 = u64 [sp + 0x18]\n 20766: i32 a0 = a0 + 0x20\n 20769: a1 = 0x20\n 20772: ra = 218, jump @0\n      : @272 [@dyn 109] (gas: 41)\n 20778: u8 [a0 + 31] = 0\n 20781: u8 [a0 + 30] = 0\n 20784: u8 [a0 + 29] = 0\n 20787: u8 [a0 + 28] = 0\n 20790: u8 [a0 + 27] = 0\n 20793: u8 [a0 + 26] = 0\n 20796: u8 [a0 + 25] = 0\n 20799: u8 [a0 + 24] = 0\n 20802: u8 [a0 + 23] = 0\n 20805: u8 [a0 + 22] = 0\n 20808: u8 [a0 + 21] = 0\n 20811: u8 [a0 + 20] = 0\n 20814: u8 [a0 + 19] = 0\n 20817: u8 [a0 + 18] = 0\n 20820: u8 [a0 + 17] = 0\n 20823: u8 [a0 + 16] = 0\n 20826: u8 [a0 + 15] = 0\n 20829: u8 [a0 + 14] = 0\n 20832: u8 [a0 + 13] = 0\n 20835: u8 [a0 + 12] = 0\n 20838: u8 [a0 + 11] = 0\n 20841: u8 [a0 + 10] = 0\n 20844: u8 [a0 + 9] = 0\n 20847: u8 [a0 + 8] = 0\n 20850: u8 [a0 + 7] = 0\n 20853: u8 [a0 + 6] = 0\n 20856: u8 [a0 + 5] = 0\n 20859: u8 [a0 + 4] = 0x65\n 20863: u8 [a0 + 3] = 0x76\n 20867: u8 [a0 + 2] = 0x61\n 20871: u8 [a0 + 1] = 0x72\n 20875: a2 = u64 [sp + 0x20]\n 20878: a2 = a2 + 0xffffffffffffff80\n 20881: a3 = u64 [sp + 0x68]\n 20884: a2 = a3 <u a2\n 20887: a3 = u64 [sp + 0x60]\n 20890: a2 = 0 if a3 != 0\n 20892: a3 = u64 [sp + 0x50]\n 20895: a2 = 0 if a3 != 0\n 20897: u8 [a0 + 0] = 0x62\n 20900: jump @274 if a2 != 0\n      : @273 (gas: 1)\n 20903: jump @781\n      : @274 (gas: 4)\n 20906: a0 = u64 [sp + 0x58]\n 20909: i32 a0 = a0 + 0x80\n 20913: a1 = 0x20\n 20916: ra = 220, jump @0\n      : @275 [@dyn 110] (gas: 77)\n 20922: a1 = u64 [sp + 0x30]\n 20925: a1 = reverse a1\n 20927: a2 = u64 [sp + 0x38]\n 20930: a2 = reverse a2\n 20932: a3 = reverse s1\n 20934: a4 = u64 [sp + 0x10]\n 20937: a4 = reverse a4\n 20939: a5 = a4 >> 0x38\n 20942: u8 [a0 + 0x1f] = a5\n 20945: a5 = a4 >> 0x30\n 20948: u8 [a0 + 0x1e] = a5\n 20951: a5 = a4 >> 0x28\n 20954: u8 [a0 + 0x1d] = a5\n 20957: a5 = a4 >> 0x20\n 20960: u8 [a0 + 0x1c] = a5\n 20963: a5 = a4 >> 0x18\n 20966: u8 [a0 + 0x1b] = a5\n 20969: a5 = a4 >> 0x10\n 20972: u8 [a0 + 0x1a] = a5\n 20975: a5 = a4 >> 0x8\n 20978: u8 [a0 + 0x19] = a5\n 20981: u8 [a0 + 0x18] = a4\n 20984: u8 [a0 + 0x10] = a3\n 20987: a4 = a3 >> 0x38\n 20990: u8 [a0 + 0x17] = a4\n 20993: a4 = a3 >> 0x30\n 20996: u8 [a0 + 0x16] = a4\n 20999: a4 = a3 >> 0x28\n 21002: u8 [a0 + 0x15] = a4\n 21005: a4 = a3 >> 0x20\n 21008: u8 [a0 + 0x14] = a4\n 21011: a4 = a3 >> 0x18\n 21014: u8 [a0 + 0x13] = a4\n 21017: a4 = a3 >> 0x10\n 21020: u8 [a0 + 0x12] = a4\n 21023: a3 = a3 >> 0x8\n 21026: u8 [a0 + 0x11] = a3\n 21029: u8 [a0 + 0x8] = a2\n 21032: a3 = a2 >> 0x38\n 21035: u8 [a0 + 0xf] = a3\n 21038: a3 = a2 >> 0x30\n 21041: u8 [a0 + 0xe] = a3\n 21044: a3 = a2 >> 0x28\n 21047: u8 [a0 + 0xd] = a3\n 21050: a3 = a2 >> 0x20\n 21053: u8 [a0 + 0xc] = a3\n 21056: a3 = a2 >> 0x18\n 21059: u8 [a0 + 0xb] = a3\n 21062: a3 = a2 >> 0x10\n 21065: u8 [a0 + 0xa] = a3\n 21068: a2 = a2 >> 0x8\n 21071: u8 [a0 + 0x9] = a2\n 21074: u8 [a0] = a1\n 21076: a2 = a1 >> 0x38\n 21079: u8 [a0 + 0x7] = a2\n 21082: a2 = a1 >> 0x30\n 21085: u8 [a0 + 0x6] = a2\n 21088: a2 = a1 >> 0x28\n 21091: u8 [a0 + 0x5] = a2\n 21094: a2 = a1 >> 0x20\n 21097: u8 [a0 + 0x4] = a2\n 21100: a2 = a1 >> 0x18\n 21103: u8 [a0 + 0x3] = a2\n 21106: a2 = a1 >> 0x10\n 21109: u8 [a0 + 0x2] = a2\n 21112: a1 = a1 >> 0x8\n 21115: u8 [a0 + 0x1] = a1\n 21118: s1 = sp + 0x7e8\n 21122: u64 [s1 + 1440] = 0\n 21126: u64 [s1 + 1432] = 0\n 21130: u64 [s1 + 1416] = 0x40\n 21135: a0 = sp + 0x7ff\n 21139: a0 = a0 + 0x591\n 21143: a1 = sp + 0x7ff\n 21147: a1 = a1 + 0x571\n 21151: u64 [s1 + 1424] = 0\n 21155: ra = 222, jump @56\n      : @276 [@dyn 111] (gas: 15)\n 21161: a1 = u64 [s1 + 0x5c0]\n 21165: a2 = u64 [s1 + 0x5b8]\n 21169: a0 = u64 [s1 + 0x5b0]\n 21173: s1 = u64 [s1 + 0x5a8]\n 21177: u64 [sp + 0x28] = a0\n 21180: u64 [sp + 0x30] = a1\n 21183: a0 = a0 | a1\n 21186: a1 = s1 | a2\n 21189: a1 = a1 | a0\n 21192: a1 = a1 >> 0x20\n 21195: u64 [sp + 0x38] = a2\n 21198: a0 = a0 | a2\n 21201: a0 = a0 << 0x20\n 21204: a0 = a0 | a1\n 21207: jump @278 if a0 == 0\n      : @277 (gas: 1)\n 21210: jump @781\n      : @278 (gas: 4)\n 21213: i32 a0 = s1 + 0\n 21215: a1 = 0x20\n 21218: u64 [sp + 0x18] = a0\n 21221: ra = 224, jump @0\n      : @279 [@dyn 112] (gas: 44)\n 21227: u8 [a0 + 31] = 0x4\n 21231: a1 = u64 [sp + 0x30]\n 21234: a2 = u64 [sp + 0x38]\n 21237: a2 = a2 | a1\n 21240: a1 = 0x100000000\n 21250: u64 [sp + 0x20] = a1\n 21253: a1 = 0xffffffe0\n 21263: u64 [sp + 0x10] = s1\n 21266: a1 = s1 <u a1\n 21269: s1 = u64 [sp + 0x28]\n 21272: a1 = 0 if s1 != 0\n 21274: a1 = 0 if a2 != 0\n 21276: u8 [a0 + 30] = 0\n 21279: u8 [a0 + 29] = 0\n 21282: u8 [a0 + 28] = 0\n 21285: u8 [a0 + 27] = 0\n 21288: u8 [a0 + 26] = 0\n 21291: u8 [a0 + 25] = 0\n 21294: u8 [a0 + 24] = 0\n 21297: u8 [a0 + 23] = 0\n 21300: u8 [a0 + 22] = 0\n 21303: u8 [a0 + 21] = 0\n 21306: u8 [a0 + 20] = 0\n 21309: u8 [a0 + 19] = 0\n 21312: u8 [a0 + 18] = 0\n 21315: u8 [a0 + 17] = 0\n 21318: u8 [a0 + 16] = 0\n 21321: u8 [a0 + 15] = 0\n 21324: u8 [a0 + 14] = 0\n 21327: u8 [a0 + 13] = 0\n 21330: u8 [a0 + 12] = 0\n 21333: u8 [a0 + 11] = 0\n 21336: u8 [a0 + 10] = 0\n 21339: u8 [a0 + 9] = 0\n 21342: u8 [a0 + 8] = 0\n 21345: u8 [a0 + 7] = 0\n 21348: u8 [a0 + 6] = 0\n 21351: u8 [a0 + 5] = 0\n 21354: u8 [a0 + 4] = 0\n 21357: u8 [a0 + 3] = 0\n 21360: u8 [a0 + 2] = 0\n 21363: u8 [a0 + 1] = 0\n 21366: u8 [a0 + 0] = 0\n 21368: jump @281 if a1 != 0\n      : @280 (gas: 1)\n 21371: jump @781\n      : @281 (gas: 4)\n 21374: a0 = u64 [sp + 0x18]\n 21377: i32 a0 = a0 + 0x20\n 21380: a1 = 0x20\n 21383: ra = 226, jump @0\n      : @282 [@dyn 113] (gas: 41)\n 21389: u8 [a0 + 31] = 0\n 21392: u8 [a0 + 30] = 0\n 21395: u8 [a0 + 29] = 0\n 21398: u8 [a0 + 28] = 0\n 21401: u8 [a0 + 27] = 0\n 21404: u8 [a0 + 26] = 0\n 21407: u8 [a0 + 25] = 0\n 21410: u8 [a0 + 24] = 0\n 21413: u8 [a0 + 23] = 0\n 21416: u8 [a0 + 22] = 0\n 21419: u8 [a0 + 21] = 0\n 21422: u8 [a0 + 20] = 0\n 21425: u8 [a0 + 19] = 0\n 21428: u8 [a0 + 18] = 0\n 21431: u8 [a0 + 17] = 0\n 21434: u8 [a0 + 16] = 0\n 21437: u8 [a0 + 15] = 0\n 21440: u8 [a0 + 14] = 0\n 21443: u8 [a0 + 13] = 0\n 21446: u8 [a0 + 12] = 0\n 21449: u8 [a0 + 11] = 0\n 21452: u8 [a0 + 10] = 0\n 21455: u8 [a0 + 9] = 0\n 21458: u8 [a0 + 8] = 0\n 21461: u8 [a0 + 7] = 0\n 21464: u8 [a0 + 6] = 0\n 21467: u8 [a0 + 5] = 0\n 21470: u8 [a0 + 4] = 0\n 21473: u8 [a0 + 3] = 0x64\n 21477: u8 [a0 + 2] = 0x6c\n 21481: u8 [a0 + 1] = 0x6f\n 21485: a2 = u64 [sp + 0x20]\n 21488: a2 = a2 + 0xffffffffffffff60\n 21492: a3 = u64 [sp + 0x68]\n 21495: a2 = a3 <u a2\n 21498: a3 = u64 [sp + 0x60]\n 21501: a2 = 0 if a3 != 0\n 21503: a3 = u64 [sp + 0x50]\n 21506: a2 = 0 if a3 != 0\n 21508: u8 [a0 + 0] = 0x62\n 21511: jump @284 if a2 != 0\n      : @283 (gas: 1)\n 21514: jump @781\n      : @284 (gas: 4)\n 21517: a0 = u64 [sp + 0x58]\n 21520: i32 a0 = a0 + 0xa0\n 21524: a1 = 0x20\n 21527: ra = 228, jump @0\n      : @285 [@dyn 114] (gas: 77)\n 21533: a1 = u64 [sp + 0x30]\n 21536: a1 = reverse a1\n 21538: a2 = u64 [sp + 0x38]\n 21541: a2 = reverse a2\n 21543: a3 = reverse s1\n 21545: a4 = u64 [sp + 0x10]\n 21548: a4 = reverse a4\n 21550: a5 = a4 >> 0x38\n 21553: u8 [a0 + 0x1f] = a5\n 21556: a5 = a4 >> 0x30\n 21559: u8 [a0 + 0x1e] = a5\n 21562: a5 = a4 >> 0x28\n 21565: u8 [a0 + 0x1d] = a5\n 21568: a5 = a4 >> 0x20\n 21571: u8 [a0 + 0x1c] = a5\n 21574: a5 = a4 >> 0x18\n 21577: u8 [a0 + 0x1b] = a5\n 21580: a5 = a4 >> 0x10\n 21583: u8 [a0 + 0x1a] = a5\n 21586: a5 = a4 >> 0x8\n 21589: u8 [a0 + 0x19] = a5\n 21592: u8 [a0 + 0x18] = a4\n 21595: u8 [a0 + 0x10] = a3\n 21598: a4 = a3 >> 0x38\n 21601: u8 [a0 + 0x17] = a4\n 21604: a4 = a3 >> 0x30\n 21607: u8 [a0 + 0x16] = a4\n 21610: a4 = a3 >> 0x28\n 21613: u8 [a0 + 0x15] = a4\n 21616: a4 = a3 >> 0x20\n 21619: u8 [a0 + 0x14] = a4\n 21622: a4 = a3 >> 0x18\n 21625: u8 [a0 + 0x13] = a4\n 21628: a4 = a3 >> 0x10\n 21631: u8 [a0 + 0x12] = a4\n 21634: a3 = a3 >> 0x8\n 21637: u8 [a0 + 0x11] = a3\n 21640: u8 [a0 + 0x8] = a2\n 21643: a3 = a2 >> 0x38\n 21646: u8 [a0 + 0xf] = a3\n 21649: a3 = a2 >> 0x30\n 21652: u8 [a0 + 0xe] = a3\n 21655: a3 = a2 >> 0x28\n 21658: u8 [a0 + 0xd] = a3\n 21661: a3 = a2 >> 0x20\n 21664: u8 [a0 + 0xc] = a3\n 21667: a3 = a2 >> 0x18\n 21670: u8 [a0 + 0xb] = a3\n 21673: a3 = a2 >> 0x10\n 21676: u8 [a0 + 0xa] = a3\n 21679: a2 = a2 >> 0x8\n 21682: u8 [a0 + 0x9] = a2\n 21685: u8 [a0] = a1\n 21687: a2 = a1 >> 0x38\n 21690: u8 [a0 + 0x7] = a2\n 21693: a2 = a1 >> 0x30\n 21696: u8 [a0 + 0x6] = a2\n 21699: a2 = a1 >> 0x28\n 21702: u8 [a0 + 0x5] = a2\n 21705: a2 = a1 >> 0x20\n 21708: u8 [a0 + 0x4] = a2\n 21711: a2 = a1 >> 0x18\n 21714: u8 [a0 + 0x3] = a2\n 21717: a2 = a1 >> 0x10\n 21720: u8 [a0 + 0x2] = a2\n 21723: a1 = a1 >> 0x8\n 21726: u8 [a0 + 0x1] = a1\n 21729: s1 = sp + 0x7e8\n 21733: u64 [s1 + 1376] = 0\n 21737: u64 [s1 + 1368] = 0\n 21741: u64 [s1 + 1352] = 0x40\n 21746: a0 = sp + 0x7ff\n 21750: a0 = a0 + 0x551\n 21754: a1 = sp + 0x7ff\n 21758: a1 = a1 + 0x531\n 21762: u64 [s1 + 1360] = 0\n 21766: ra = 230, jump @56\n      : @286 [@dyn 115] (gas: 15)\n 21772: a1 = u64 [s1 + 0x580]\n 21776: a2 = u64 [s1 + 0x578]\n 21780: a0 = u64 [s1 + 0x570]\n 21784: s1 = u64 [s1 + 0x568]\n 21788: u64 [sp + 0x28] = a0\n 21791: u64 [sp + 0x30] = a1\n 21794: a0 = a0 | a1\n 21797: a1 = s1 | a2\n 21800: a1 = a1 | a0\n 21803: a1 = a1 >> 0x20\n 21806: u64 [sp + 0x38] = a2\n 21809: a0 = a0 | a2\n 21812: a0 = a0 << 0x20\n 21815: a0 = a0 | a1\n 21818: jump @288 if a0 == 0\n      : @287 (gas: 1)\n 21821: jump @781\n      : @288 (gas: 4)\n 21824: i32 a0 = s1 + 0\n 21826: a1 = 0x20\n 21829: u64 [sp + 0x18] = a0\n 21832: ra = 232, jump @0\n      : @289 [@dyn 116] (gas: 44)\n 21838: u8 [a0 + 31] = 0x6\n 21842: a1 = u64 [sp + 0x30]\n 21845: a2 = u64 [sp + 0x38]\n 21848: a2 = a2 | a1\n 21851: a1 = 0x100000000\n 21861: u64 [sp + 0x20] = a1\n 21864: a1 = 0xffffffe0\n 21874: u64 [sp + 0x10] = s1\n 21877: a1 = s1 <u a1\n 21880: s1 = u64 [sp + 0x28]\n 21883: a1 = 0 if s1 != 0\n 21885: a1 = 0 if a2 != 0\n 21887: u8 [a0 + 30] = 0\n 21890: u8 [a0 + 29] = 0\n 21893: u8 [a0 + 28] = 0\n 21896: u8 [a0 + 27] = 0\n 21899: u8 [a0 + 26] = 0\n 21902: u8 [a0 + 25] = 0\n 21905: u8 [a0 + 24] = 0\n 21908: u8 [a0 + 23] = 0\n 21911: u8 [a0 + 22] = 0\n 21914: u8 [a0 + 21] = 0\n 21917: u8 [a0 + 20] = 0\n 21920: u8 [a0 + 19] = 0\n 21923: u8 [a0 + 18] = 0\n 21926: u8 [a0 + 17] = 0\n 21929: u8 [a0 + 16] = 0\n 21932: u8 [a0 + 15] = 0\n 21935: u8 [a0 + 14] = 0\n 21938: u8 [a0 + 13] = 0\n 21941: u8 [a0 + 12] = 0\n 21944: u8 [a0 + 11] = 0\n 21947: u8 [a0 + 10] = 0\n 21950: u8 [a0 + 9] = 0\n 21953: u8 [a0 + 8] = 0\n 21956: u8 [a0 + 7] = 0\n 21959: u8 [a0 + 6] = 0\n 21962: u8 [a0 + 5] = 0\n 21965: u8 [a0 + 4] = 0\n 21968: u8 [a0 + 3] = 0\n 21971: u8 [a0 + 2] = 0\n 21974: u8 [a0 + 1] = 0\n 21977: u8 [a0 + 0] = 0\n 21979: jump @291 if a1 != 0\n      : @290 (gas: 1)\n 21982: jump @781\n      : @291 (gas: 4)\n 21985: a0 = u64 [sp + 0x18]\n 21988: i32 a0 = a0 + 0x20\n 21991: a1 = 0x20\n 21994: ra = 234, jump @0\n      : @292 [@dyn 117] (gas: 41)\n 22000: u8 [a0 + 31] = 0\n 22003: u8 [a0 + 30] = 0\n 22006: u8 [a0 + 29] = 0\n 22009: u8 [a0 + 28] = 0\n 22012: u8 [a0 + 27] = 0\n 22015: u8 [a0 + 26] = 0\n 22018: u8 [a0 + 25] = 0\n 22021: u8 [a0 + 24] = 0\n 22024: u8 [a0 + 23] = 0\n 22027: u8 [a0 + 22] = 0\n 22030: u8 [a0 + 21] = 0\n 22033: u8 [a0 + 20] = 0\n 22036: u8 [a0 + 19] = 0\n 22039: u8 [a0 + 18] = 0\n 22042: u8 [a0 + 17] = 0\n 22045: u8 [a0 + 16] = 0\n 22048: u8 [a0 + 15] = 0\n 22051: u8 [a0 + 14] = 0\n 22054: u8 [a0 + 13] = 0\n 22057: u8 [a0 + 12] = 0\n 22060: u8 [a0 + 11] = 0\n 22063: u8 [a0 + 10] = 0\n 22066: u8 [a0 + 9] = 0\n 22069: u8 [a0 + 8] = 0\n 22072: u8 [a0 + 7] = 0\n 22075: u8 [a0 + 6] = 0\n 22078: u8 [a0 + 5] = 0x74\n 22082: u8 [a0 + 4] = 0x68\n 22086: u8 [a0 + 3] = 0x67\n 22090: u8 [a0 + 2] = 0x69\n 22094: u8 [a0 + 1] = 0x72\n 22098: a2 = u64 [sp + 0x20]\n 22101: a2 = a2 + 0xffffffffffffff40\n 22105: a3 = u64 [sp + 0x68]\n 22108: a2 = a3 <u a2\n 22111: a3 = u64 [sp + 0x60]\n 22114: a2 = 0 if a3 != 0\n 22116: a3 = u64 [sp + 0x50]\n 22119: a2 = 0 if a3 != 0\n 22121: u8 [a0 + 0] = 0x62\n 22124: jump @294 if a2 != 0\n      : @293 (gas: 1)\n 22127: jump @781\n      : @294 (gas: 4)\n 22130: a0 = u64 [sp + 0x58]\n 22133: i32 a0 = a0 + 0xc0\n 22137: a1 = 0x20\n 22140: ra = 236, jump @0\n      : @295 [@dyn 118] (gas: 77)\n 22146: a1 = u64 [sp + 0x30]\n 22149: a1 = reverse a1\n 22151: a2 = u64 [sp + 0x38]\n 22154: a2 = reverse a2\n 22156: a3 = reverse s1\n 22158: a4 = u64 [sp + 0x10]\n 22161: a4 = reverse a4\n 22163: a5 = a4 >> 0x38\n 22166: u8 [a0 + 0x1f] = a5\n 22169: a5 = a4 >> 0x30\n 22172: u8 [a0 + 0x1e] = a5\n 22175: a5 = a4 >> 0x28\n 22178: u8 [a0 + 0x1d] = a5\n 22181: a5 = a4 >> 0x20\n 22184: u8 [a0 + 0x1c] = a5\n 22187: a5 = a4 >> 0x18\n 22190: u8 [a0 + 0x1b] = a5\n 22193: a5 = a4 >> 0x10\n 22196: u8 [a0 + 0x1a] = a5\n 22199: a5 = a4 >> 0x8\n 22202: u8 [a0 + 0x19] = a5\n 22205: u8 [a0 + 0x18] = a4\n 22208: u8 [a0 + 0x10] = a3\n 22211: a4 = a3 >> 0x38\n 22214: u8 [a0 + 0x17] = a4\n 22217: a4 = a3 >> 0x30\n 22220: u8 [a0 + 0x16] = a4\n 22223: a4 = a3 >> 0x28\n 22226: u8 [a0 + 0x15] = a4\n 22229: a4 = a3 >> 0x20\n 22232: u8 [a0 + 0x14] = a4\n 22235: a4 = a3 >> 0x18\n 22238: u8 [a0 + 0x13] = a4\n 22241: a4 = a3 >> 0x10\n 22244: u8 [a0 + 0x12] = a4\n 22247: a3 = a3 >> 0x8\n 22250: u8 [a0 + 0x11] = a3\n 22253: u8 [a0 + 0x8] = a2\n 22256: a3 = a2 >> 0x38\n 22259: u8 [a0 + 0xf] = a3\n 22262: a3 = a2 >> 0x30\n 22265: u8 [a0 + 0xe] = a3\n 22268: a3 = a2 >> 0x28\n 22271: u8 [a0 + 0xd] = a3\n 22274: a3 = a2 >> 0x20\n 22277: u8 [a0 + 0xc] = a3\n 22280: a3 = a2 >> 0x18\n 22283: u8 [a0 + 0xb] = a3\n 22286: a3 = a2 >> 0x10\n 22289: u8 [a0 + 0xa] = a3\n 22292: a2 = a2 >> 0x8\n 22295: u8 [a0 + 0x9] = a2\n 22298: u8 [a0] = a1\n 22300: a2 = a1 >> 0x38\n 22303: u8 [a0 + 0x7] = a2\n 22306: a2 = a1 >> 0x30\n 22309: u8 [a0 + 0x6] = a2\n 22312: a2 = a1 >> 0x28\n 22315: u8 [a0 + 0x5] = a2\n 22318: a2 = a1 >> 0x20\n 22321: u8 [a0 + 0x4] = a2\n 22324: a2 = a1 >> 0x18\n 22327: u8 [a0 + 0x3] = a2\n 22330: a2 = a1 >> 0x10\n 22333: u8 [a0 + 0x2] = a2\n 22336: a1 = a1 >> 0x8\n 22339: u8 [a0 + 0x1] = a1\n 22342: s1 = sp + 0x7e8\n 22346: u64 [s1 + 1312] = 0\n 22350: u64 [s1 + 1304] = 0\n 22354: u64 [s1 + 1288] = 0x40\n 22359: a0 = sp + 0x7ff\n 22363: a0 = a0 + 0x511\n 22367: a1 = sp + 0x7ff\n 22371: a1 = a1 + 0x4f1\n 22375: u64 [s1 + 1296] = 0\n 22379: ra = 238, jump @56\n      : @296 [@dyn 119] (gas: 15)\n 22385: a1 = u64 [s1 + 0x540]\n 22389: a2 = u64 [s1 + 0x538]\n 22393: a0 = u64 [s1 + 0x530]\n 22397: s1 = u64 [s1 + 0x528]\n 22401: u64 [sp + 0x28] = a0\n 22404: u64 [sp + 0x30] = a1\n 22407: a0 = a0 | a1\n 22410: a1 = s1 | a2\n 22413: a1 = a1 | a0\n 22416: a1 = a1 >> 0x20\n 22419: u64 [sp + 0x38] = a2\n 22422: a0 = a0 | a2\n 22425: a0 = a0 << 0x20\n 22428: a0 = a0 | a1\n 22431: jump @298 if a0 == 0\n      : @297 (gas: 1)\n 22434: jump @781\n      : @298 (gas: 4)\n 22437: i32 a0 = s1 + 0\n 22439: a1 = 0x20\n 22442: u64 [sp + 0x18] = a0\n 22445: ra = 240, jump @0\n      : @299 [@dyn 120] (gas: 44)\n 22451: u8 [a0 + 31] = 0x4\n 22455: a1 = u64 [sp + 0x30]\n 22458: a2 = u64 [sp + 0x38]\n 22461: a2 = a2 | a1\n 22464: a1 = 0x100000000\n 22474: u64 [sp + 0x20] = a1\n 22477: a1 = 0xffffffe0\n 22487: u64 [sp + 0x10] = s1\n 22490: a1 = s1 <u a1\n 22493: s1 = u64 [sp + 0x28]\n 22496: a1 = 0 if s1 != 0\n 22498: a1 = 0 if a2 != 0\n 22500: u8 [a0 + 30] = 0\n 22503: u8 [a0 + 29] = 0\n 22506: u8 [a0 + 28] = 0\n 22509: u8 [a0 + 27] = 0\n 22512: u8 [a0 + 26] = 0\n 22515: u8 [a0 + 25] = 0\n 22518: u8 [a0 + 24] = 0\n 22521: u8 [a0 + 23] = 0\n 22524: u8 [a0 + 22] = 0\n 22527: u8 [a0 + 21] = 0\n 22530: u8 [a0 + 20] = 0\n 22533: u8 [a0 + 19] = 0\n 22536: u8 [a0 + 18] = 0\n 22539: u8 [a0 + 17] = 0\n 22542: u8 [a0 + 16] = 0\n 22545: u8 [a0 + 15] = 0\n 22548: u8 [a0 + 14] = 0\n 22551: u8 [a0 + 13] = 0\n 22554: u8 [a0 + 12] = 0\n 22557: u8 [a0 + 11] = 0\n 22560: u8 [a0 + 10] = 0\n 22563: u8 [a0 + 9] = 0\n 22566: u8 [a0 + 8] = 0\n 22569: u8 [a0 + 7] = 0\n 22572: u8 [a0 + 6] = 0\n 22575: u8 [a0 + 5] = 0\n 22578: u8 [a0 + 4] = 0\n 22581: u8 [a0 + 3] = 0\n 22584: u8 [a0 + 2] = 0\n 22587: u8 [a0 + 1] = 0\n 22590: u8 [a0 + 0] = 0\n 22592: jump @301 if a1 != 0\n      : @300 (gas: 1)\n 22595: jump @781\n      : @301 (gas: 4)\n 22598: a0 = u64 [sp + 0x18]\n 22601: i32 a0 = a0 + 0x20\n 22604: a1 = 0x20\n 22607: ra = 242, jump @0\n      : @302 [@dyn 121] (gas: 41)\n 22613: u8 [a0 + 31] = 0\n 22616: u8 [a0 + 30] = 0\n 22619: u8 [a0 + 29] = 0\n 22622: u8 [a0 + 28] = 0\n 22625: u8 [a0 + 27] = 0\n 22628: u8 [a0 + 26] = 0\n 22631: u8 [a0 + 25] = 0\n 22634: u8 [a0 + 24] = 0\n 22637: u8 [a0 + 23] = 0\n 22640: u8 [a0 + 22] = 0\n 22643: u8 [a0 + 21] = 0\n 22646: u8 [a0 + 20] = 0\n 22649: u8 [a0 + 19] = 0\n 22652: u8 [a0 + 18] = 0\n 22655: u8 [a0 + 17] = 0\n 22658: u8 [a0 + 16] = 0\n 22661: u8 [a0 + 15] = 0\n 22664: u8 [a0 + 14] = 0\n 22667: u8 [a0 + 13] = 0\n 22670: u8 [a0 + 12] = 0\n 22673: u8 [a0 + 11] = 0\n 22676: u8 [a0 + 10] = 0\n 22679: u8 [a0 + 9] = 0\n 22682: u8 [a0 + 8] = 0\n 22685: u8 [a0 + 7] = 0\n 22688: u8 [a0 + 6] = 0\n 22691: u8 [a0 + 5] = 0\n 22694: u8 [a0 + 4] = 0\n 22697: u8 [a0 + 3] = 0x6d\n 22701: u8 [a0 + 2] = 0x6c\n 22705: u8 [a0 + 1] = 0x61\n 22709: a2 = u64 [sp + 0x20]\n 22712: a2 = a2 + 0xffffffffffffff20\n 22716: a3 = u64 [sp + 0x68]\n 22719: a2 = a3 <u a2\n 22722: a3 = u64 [sp + 0x60]\n 22725: a2 = 0 if a3 != 0\n 22727: a3 = u64 [sp + 0x50]\n 22730: a2 = 0 if a3 != 0\n 22732: u8 [a0 + 0] = 0x63\n 22735: jump @304 if a2 != 0\n      : @303 (gas: 1)\n 22738: jump @781\n      : @304 (gas: 4)\n 22741: a0 = u64 [sp + 0x58]\n 22744: i32 a0 = a0 + 0xe0\n 22748: a1 = 0x20\n 22751: ra = 244, jump @0\n      : @305 [@dyn 122] (gas: 77)\n 22757: a1 = u64 [sp + 0x30]\n 22760: a1 = reverse a1\n 22762: a2 = u64 [sp + 0x38]\n 22765: a2 = reverse a2\n 22767: a3 = reverse s1\n 22769: a4 = u64 [sp + 0x10]\n 22772: a4 = reverse a4\n 22774: a5 = a4 >> 0x38\n 22777: u8 [a0 + 0x1f] = a5\n 22780: a5 = a4 >> 0x30\n 22783: u8 [a0 + 0x1e] = a5\n 22786: a5 = a4 >> 0x28\n 22789: u8 [a0 + 0x1d] = a5\n 22792: a5 = a4 >> 0x20\n 22795: u8 [a0 + 0x1c] = a5\n 22798: a5 = a4 >> 0x18\n 22801: u8 [a0 + 0x1b] = a5\n 22804: a5 = a4 >> 0x10\n 22807: u8 [a0 + 0x1a] = a5\n 22810: a5 = a4 >> 0x8\n 22813: u8 [a0 + 0x19] = a5\n 22816: u8 [a0 + 0x18] = a4\n 22819: u8 [a0 + 0x10] = a3\n 22822: a4 = a3 >> 0x38\n 22825: u8 [a0 + 0x17] = a4\n 22828: a4 = a3 >> 0x30\n 22831: u8 [a0 + 0x16] = a4\n 22834: a4 = a3 >> 0x28\n 22837: u8 [a0 + 0x15] = a4\n 22840: a4 = a3 >> 0x20\n 22843: u8 [a0 + 0x14] = a4\n 22846: a4 = a3 >> 0x18\n 22849: u8 [a0 + 0x13] = a4\n 22852: a4 = a3 >> 0x10\n 22855: u8 [a0 + 0x12] = a4\n 22858: a3 = a3 >> 0x8\n 22861: u8 [a0 + 0x11] = a3\n 22864: u8 [a0 + 0x8] = a2\n 22867: a3 = a2 >> 0x38\n 22870: u8 [a0 + 0xf] = a3\n 22873: a3 = a2 >> 0x30\n 22876: u8 [a0 + 0xe] = a3\n 22879: a3 = a2 >> 0x28\n 22882: u8 [a0 + 0xd] = a3\n 22885: a3 = a2 >> 0x20\n 22888: u8 [a0 + 0xc] = a3\n 22891: a3 = a2 >> 0x18\n 22894: u8 [a0 + 0xb] = a3\n 22897: a3 = a2 >> 0x10\n 22900: u8 [a0 + 0xa] = a3\n 22903: a2 = a2 >> 0x8\n 22906: u8 [a0 + 0x9] = a2\n 22909: u8 [a0] = a1\n 22911: a2 = a1 >> 0x38\n 22914: u8 [a0 + 0x7] = a2\n 22917: a2 = a1 >> 0x30\n 22920: u8 [a0 + 0x6] = a2\n 22923: a2 = a1 >> 0x28\n 22926: u8 [a0 + 0x5] = a2\n 22929: a2 = a1 >> 0x20\n 22932: u8 [a0 + 0x4] = a2\n 22935: a2 = a1 >> 0x18\n 22938: u8 [a0 + 0x3] = a2\n 22941: a2 = a1 >> 0x10\n 22944: u8 [a0 + 0x2] = a2\n 22947: a1 = a1 >> 0x8\n 22950: u8 [a0 + 0x1] = a1\n 22953: s1 = sp + 0x7e8\n 22957: u64 [s1 + 1248] = 0\n 22961: u64 [s1 + 1240] = 0\n 22965: u64 [s1 + 1224] = 0x40\n 22970: a0 = sp + 0x7ff\n 22974: a0 = a0 + 0x4d1\n 22978: a1 = sp + 0x7ff\n 22982: a1 = a1 + 0x4b1\n 22986: u64 [s1 + 1232] = 0\n 22990: ra = 246, jump @56\n      : @306 [@dyn 123] (gas: 15)\n 22996: a1 = u64 [s1 + 0x500]\n 23000: a2 = u64 [s1 + 0x4f8]\n 23004: a0 = u64 [s1 + 0x4f0]\n 23008: s1 = u64 [s1 + 0x4e8]\n 23012: u64 [sp + 0x28] = a0\n 23015: u64 [sp + 0x30] = a1\n 23018: a0 = a0 | a1\n 23021: a1 = s1 | a2\n 23024: a1 = a1 | a0\n 23027: a1 = a1 >> 0x20\n 23030: u64 [sp + 0x38] = a2\n 23033: a0 = a0 | a2\n 23036: a0 = a0 << 0x20\n 23039: a0 = a0 | a1\n 23042: jump @308 if a0 == 0\n      : @307 (gas: 1)\n 23045: jump @781\n      : @308 (gas: 4)\n 23048: i32 a0 = s1 + 0\n 23050: a1 = 0x20\n 23053: u64 [sp + 0x18] = a0\n 23056: ra = 248, jump @0\n      : @309 [@dyn 124] (gas: 44)\n 23062: u8 [a0 + 31] = 0x8\n 23066: a1 = u64 [sp + 0x30]\n 23069: a2 = u64 [sp + 0x38]\n 23072: a2 = a2 | a1\n 23075: a1 = 0x100000000\n 23085: u64 [sp + 0x20] = a1\n 23088: a1 = 0xffffffe0\n 23098: u64 [sp + 0x10] = s1\n 23101: a1 = s1 <u a1\n 23104: s1 = u64 [sp + 0x28]\n 23107: a1 = 0 if s1 != 0\n 23109: a1 = 0 if a2 != 0\n 23111: u8 [a0 + 30] = 0\n 23114: u8 [a0 + 29] = 0\n 23117: u8 [a0 + 28] = 0\n 23120: u8 [a0 + 27] = 0\n 23123: u8 [a0 + 26] = 0\n 23126: u8 [a0 + 25] = 0\n 23129: u8 [a0 + 24] = 0\n 23132: u8 [a0 + 23] = 0\n 23135: u8 [a0 + 22] = 0\n 23138: u8 [a0 + 21] = 0\n 23141: u8 [a0 + 20] = 0\n 23144: u8 [a0 + 19] = 0\n 23147: u8 [a0 + 18] = 0\n 23150: u8 [a0 + 17] = 0\n 23153: u8 [a0 + 16] = 0\n 23156: u8 [a0 + 15] = 0\n 23159: u8 [a0 + 14] = 0\n 23162: u8 [a0 + 13] = 0\n 23165: u8 [a0 + 12] = 0\n 23168: u8 [a0 + 11] = 0\n 23171: u8 [a0 + 10] = 0\n 23174: u8 [a0 + 9] = 0\n 23177: u8 [a0 + 8] = 0\n 23180: u8 [a0 + 7] = 0\n 23183: u8 [a0 + 6] = 0\n 23186: u8 [a0 + 5] = 0\n 23189: u8 [a0 + 4] = 0\n 23192: u8 [a0 + 3] = 0\n 23195: u8 [a0 + 2] = 0\n 23198: u8 [a0 + 1] = 0\n 23201: u8 [a0 + 0] = 0\n 23203: jump @311 if a1 != 0\n      : @310 (gas: 1)\n 23206: jump @781\n      : @311 (gas: 4)\n 23209: a0 = u64 [sp + 0x18]\n 23212: i32 a0 = a0 + 0x20\n 23215: a1 = 0x20\n 23218: ra = 250, jump @0\n      : @312 [@dyn 125] (gas: 41)\n 23224: u8 [a0 + 31] = 0\n 23227: u8 [a0 + 30] = 0\n 23230: u8 [a0 + 29] = 0\n 23233: u8 [a0 + 28] = 0\n 23236: u8 [a0 + 27] = 0\n 23239: u8 [a0 + 26] = 0\n 23242: u8 [a0 + 25] = 0\n 23245: u8 [a0 + 24] = 0\n 23248: u8 [a0 + 23] = 0\n 23251: u8 [a0 + 22] = 0\n 23254: u8 [a0 + 21] = 0\n 23257: u8 [a0 + 20] = 0\n 23260: u8 [a0 + 19] = 0\n 23263: u8 [a0 + 18] = 0\n 23266: u8 [a0 + 17] = 0\n 23269: u8 [a0 + 16] = 0\n 23272: u8 [a0 + 15] = 0\n 23275: u8 [a0 + 14] = 0\n 23278: u8 [a0 + 13] = 0\n 23281: u8 [a0 + 12] = 0\n 23284: u8 [a0 + 11] = 0\n 23287: u8 [a0 + 10] = 0\n 23290: u8 [a0 + 9] = 0\n 23293: u8 [a0 + 8] = 0\n 23296: u8 [a0 + 7] = 0x67\n 23300: u8 [a0 + 6] = 0x6e\n 23304: u8 [a0 + 5] = 0x69\n 23308: u8 [a0 + 4] = 0x6d\n 23312: u8 [a0 + 3] = 0x72\n 23316: u8 [a0 + 2] = 0x61\n 23320: u8 [a0 + 1] = 0x68\n 23324: a2 = u64 [sp + 0x20]\n 23327: a2 = a2 + 0xffffffffffffff00\n 23331: a3 = u64 [sp + 0x68]\n 23334: a2 = a3 <u a2\n 23337: a3 = u64 [sp + 0x60]\n 23340: a2 = 0 if a3 != 0\n 23342: a3 = u64 [sp + 0x50]\n 23345: a2 = 0 if a3 != 0\n 23347: u8 [a0 + 0] = 0x63\n 23350: jump @314 if a2 != 0\n      : @313 (gas: 1)\n 23353: jump @781\n      : @314 (gas: 4)\n 23356: a0 = u64 [sp + 0x58]\n 23359: i32 a0 = a0 + 0x100\n 23363: a1 = 0x20\n 23366: ra = 252, jump @0\n      : @315 [@dyn 126] (gas: 77)\n 23372: a1 = u64 [sp + 0x30]\n 23375: a1 = reverse a1\n 23377: a2 = u64 [sp + 0x38]\n 23380: a2 = reverse a2\n 23382: a3 = reverse s1\n 23384: a4 = u64 [sp + 0x10]\n 23387: a4 = reverse a4\n 23389: a5 = a4 >> 0x38\n 23392: u8 [a0 + 0x1f] = a5\n 23395: a5 = a4 >> 0x30\n 23398: u8 [a0 + 0x1e] = a5\n 23401: a5 = a4 >> 0x28\n 23404: u8 [a0 + 0x1d] = a5\n 23407: a5 = a4 >> 0x20\n 23410: u8 [a0 + 0x1c] = a5\n 23413: a5 = a4 >> 0x18\n 23416: u8 [a0 + 0x1b] = a5\n 23419: a5 = a4 >> 0x10\n 23422: u8 [a0 + 0x1a] = a5\n 23425: a5 = a4 >> 0x8\n 23428: u8 [a0 + 0x19] = a5\n 23431: u8 [a0 + 0x18] = a4\n 23434: u8 [a0 + 0x10] = a3\n 23437: a4 = a3 >> 0x38\n 23440: u8 [a0 + 0x17] = a4\n 23443: a4 = a3 >> 0x30\n 23446: u8 [a0 + 0x16] = a4\n 23449: a4 = a3 >> 0x28\n 23452: u8 [a0 + 0x15] = a4\n 23455: a4 = a3 >> 0x20\n 23458: u8 [a0 + 0x14] = a4\n 23461: a4 = a3 >> 0x18\n 23464: u8 [a0 + 0x13] = a4\n 23467: a4 = a3 >> 0x10\n 23470: u8 [a0 + 0x12] = a4\n 23473: a3 = a3 >> 0x8\n 23476: u8 [a0 + 0x11] = a3\n 23479: u8 [a0 + 0x8] = a2\n 23482: a3 = a2 >> 0x38\n 23485: u8 [a0 + 0xf] = a3\n 23488: a3 = a2 >> 0x30\n 23491: u8 [a0 + 0xe] = a3\n 23494: a3 = a2 >> 0x28\n 23497: u8 [a0 + 0xd] = a3\n 23500: a3 = a2 >> 0x20\n 23503: u8 [a0 + 0xc] = a3\n 23506: a3 = a2 >> 0x18\n 23509: u8 [a0 + 0xb] = a3\n 23512: a3 = a2 >> 0x10\n 23515: u8 [a0 + 0xa] = a3\n 23518: a2 = a2 >> 0x8\n 23521: u8 [a0 + 0x9] = a2\n 23524: u8 [a0] = a1\n 23526: a2 = a1 >> 0x38\n 23529: u8 [a0 + 0x7] = a2\n 23532: a2 = a1 >> 0x30\n 23535: u8 [a0 + 0x6] = a2\n 23538: a2 = a1 >> 0x28\n 23541: u8 [a0 + 0x5] = a2\n 23544: a2 = a1 >> 0x20\n 23547: u8 [a0 + 0x4] = a2\n 23550: a2 = a1 >> 0x18\n 23553: u8 [a0 + 0x3] = a2\n 23556: a2 = a1 >> 0x10\n 23559: u8 [a0 + 0x2] = a2\n 23562: a1 = a1 >> 0x8\n 23565: u8 [a0 + 0x1] = a1\n 23568: s1 = sp + 0x7e8\n 23572: u64 [s1 + 1184] = 0\n 23576: u64 [s1 + 1176] = 0\n 23580: u64 [s1 + 1160] = 0x40\n 23585: a0 = sp + 0x7ff\n 23589: a0 = a0 + 0x491\n 23593: a1 = sp + 0x7ff\n 23597: a1 = a1 + 0x471\n 23601: u64 [s1 + 1168] = 0\n 23605: ra = 254, jump @56\n      : @316 [@dyn 127] (gas: 15)\n 23611: a1 = u64 [s1 + 0x4c0]\n 23615: a2 = u64 [s1 + 0x4b8]\n 23619: a0 = u64 [s1 + 0x4b0]\n 23623: s1 = u64 [s1 + 0x4a8]\n 23627: u64 [sp + 0x28] = a0\n 23630: u64 [sp + 0x30] = a1\n 23633: a0 = a0 | a1\n 23636: a1 = s1 | a2\n 23639: a1 = a1 | a0\n 23642: a1 = a1 >> 0x20\n 23645: u64 [sp + 0x38] = a2\n 23648: a0 = a0 | a2\n 23651: a0 = a0 << 0x20\n 23654: a0 = a0 | a1\n 23657: jump @318 if a0 == 0\n      : @317 (gas: 1)\n 23660: jump @781\n      : @318 (gas: 4)\n 23663: i32 a0 = s1 + 0\n 23665: a1 = 0x20\n 23668: u64 [sp + 0x18] = a0\n 23671: ra = 256, jump @0\n      : @319 [@dyn 128] (gas: 44)\n 23677: u8 [a0 + 31] = 0x8\n 23681: a1 = u64 [sp + 0x30]\n 23684: a2 = u64 [sp + 0x38]\n 23687: a2 = a2 | a1\n 23690: a1 = 0x100000000\n 23700: u64 [sp + 0x20] = a1\n 23703: a1 = 0xffffffe0\n 23713: u64 [sp + 0x10] = s1\n 23716: a1 = s1 <u a1\n 23719: s1 = u64 [sp + 0x28]\n 23722: a1 = 0 if s1 != 0\n 23724: a1 = 0 if a2 != 0\n 23726: u8 [a0 + 30] = 0\n 23729: u8 [a0 + 29] = 0\n 23732: u8 [a0 + 28] = 0\n 23735: u8 [a0 + 27] = 0\n 23738: u8 [a0 + 26] = 0\n 23741: u8 [a0 + 25] = 0\n 23744: u8 [a0 + 24] = 0\n 23747: u8 [a0 + 23] = 0\n 23750: u8 [a0 + 22] = 0\n 23753: u8 [a0 + 21] = 0\n 23756: u8 [a0 + 20] = 0\n 23759: u8 [a0 + 19] = 0\n 23762: u8 [a0 + 18] = 0\n 23765: u8 [a0 + 17] = 0\n 23768: u8 [a0 + 16] = 0\n 23771: u8 [a0 + 15] = 0\n 23774: u8 [a0 + 14] = 0\n 23777: u8 [a0 + 13] = 0\n 23780: u8 [a0 + 12] = 0\n 23783: u8 [a0 + 11] = 0\n 23786: u8 [a0 + 10] = 0\n 23789: u8 [a0 + 9] = 0\n 23792: u8 [a0 + 8] = 0\n 23795: u8 [a0 + 7] = 0\n 23798: u8 [a0 + 6] = 0\n 23801: u8 [a0 + 5] = 0\n 23804: u8 [a0 + 4] = 0\n 23807: u8 [a0 + 3] = 0\n 23810: u8 [a0 + 2] = 0\n 23813: u8 [a0 + 1] = 0\n 23816: u8 [a0 + 0] = 0\n 23818: jump @321 if a1 != 0\n      : @320 (gas: 1)\n 23821: jump @781\n      : @321 (gas: 4)\n 23824: a0 = u64 [sp + 0x18]\n 23827: i32 a0 = a0 + 0x20\n 23830: a1 = 0x20\n 23833: ra = 258, jump @0\n      : @322 [@dyn 129] (gas: 41)\n 23839: u8 [a0 + 31] = 0\n 23842: u8 [a0 + 30] = 0\n 23845: u8 [a0 + 29] = 0\n 23848: u8 [a0 + 28] = 0\n 23851: u8 [a0 + 27] = 0\n 23854: u8 [a0 + 26] = 0\n 23857: u8 [a0 + 25] = 0\n 23860: u8 [a0 + 24] = 0\n 23863: u8 [a0 + 23] = 0\n 23866: u8 [a0 + 22] = 0\n 23869: u8 [a0 + 21] = 0\n 23872: u8 [a0 + 20] = 0\n 23875: u8 [a0 + 19] = 0\n 23878: u8 [a0 + 18] = 0\n 23881: u8 [a0 + 17] = 0\n 23884: u8 [a0 + 16] = 0\n 23887: u8 [a0 + 15] = 0\n 23890: u8 [a0 + 14] = 0\n 23893: u8 [a0 + 13] = 0\n 23896: u8 [a0 + 12] = 0\n 23899: u8 [a0 + 11] = 0\n 23902: u8 [a0 + 10] = 0\n 23905: u8 [a0 + 9] = 0\n 23908: u8 [a0 + 8] = 0\n 23911: u8 [a0 + 7] = 0x6c\n 23915: u8 [a0 + 6] = 0x75\n 23919: u8 [a0 + 5] = 0x66\n 23923: u8 [a0 + 4] = 0x72\n 23927: u8 [a0 + 3] = 0x65\n 23931: u8 [a0 + 2] = 0x65\n 23935: u8 [a0 + 1] = 0x68\n 23939: a2 = u64 [sp + 0x20]\n 23942: a2 = a2 + 0xfffffffffffffee0\n 23946: a3 = u64 [sp + 0x68]\n 23949: a2 = a3 <u a2\n 23952: a3 = u64 [sp + 0x60]\n 23955: a2 = 0 if a3 != 0\n 23957: a3 = u64 [sp + 0x50]\n 23960: a2 = 0 if a3 != 0\n 23962: u8 [a0 + 0] = 0x63\n 23965: jump @324 if a2 != 0\n      : @323 (gas: 1)\n 23968: jump @781\n      : @324 (gas: 4)\n 23971: a0 = u64 [sp + 0x58]\n 23974: i32 a0 = a0 + 0x120\n 23978: a1 = 0x20\n 23981: ra = 260, jump @0\n      : @325 [@dyn 130] (gas: 77)\n 23987: a1 = u64 [sp + 0x30]\n 23990: a1 = reverse a1\n 23992: a2 = u64 [sp + 0x38]\n 23995: a2 = reverse a2\n 23997: a3 = reverse s1\n 23999: a4 = u64 [sp + 0x10]\n 24002: a4 = reverse a4\n 24004: a5 = a4 >> 0x38\n 24007: u8 [a0 + 0x1f] = a5\n 24010: a5 = a4 >> 0x30\n 24013: u8 [a0 + 0x1e] = a5\n 24016: a5 = a4 >> 0x28\n 24019: u8 [a0 + 0x1d] = a5\n 24022: a5 = a4 >> 0x20\n 24025: u8 [a0 + 0x1c] = a5\n 24028: a5 = a4 >> 0x18\n 24031: u8 [a0 + 0x1b] = a5\n 24034: a5 = a4 >> 0x10\n 24037: u8 [a0 + 0x1a] = a5\n 24040: a5 = a4 >> 0x8\n 24043: u8 [a0 + 0x19] = a5\n 24046: u8 [a0 + 0x18] = a4\n 24049: u8 [a0 + 0x10] = a3\n 24052: a4 = a3 >> 0x38\n 24055: u8 [a0 + 0x17] = a4\n 24058: a4 = a3 >> 0x30\n 24061: u8 [a0 + 0x16] = a4\n 24064: a4 = a3 >> 0x28\n 24067: u8 [a0 + 0x15] = a4\n 24070: a4 = a3 >> 0x20\n 24073: u8 [a0 + 0x14] = a4\n 24076: a4 = a3 >> 0x18\n 24079: u8 [a0 + 0x13] = a4\n 24082: a4 = a3 >> 0x10\n 24085: u8 [a0 + 0x12] = a4\n 24088: a3 = a3 >> 0x8\n 24091: u8 [a0 + 0x11] = a3\n 24094: u8 [a0 + 0x8] = a2\n 24097: a3 = a2 >> 0x38\n 24100: u8 [a0 + 0xf] = a3\n 24103: a3 = a2 >> 0x30\n 24106: u8 [a0 + 0xe] = a3\n 24109: a3 = a2 >> 0x28\n 24112: u8 [a0 + 0xd] = a3\n 24115: a3 = a2 >> 0x20\n 24118: u8 [a0 + 0xc] = a3\n 24121: a3 = a2 >> 0x18\n 24124: u8 [a0 + 0xb] = a3\n 24127: a3 = a2 >> 0x10\n 24130: u8 [a0 + 0xa] = a3\n 24133: a2 = a2 >> 0x8\n 24136: u8 [a0 + 0x9] = a2\n 24139: u8 [a0] = a1\n 24141: a2 = a1 >> 0x38\n 24144: u8 [a0 + 0x7] = a2\n 24147: a2 = a1 >> 0x30\n 24150: u8 [a0 + 0x6] = a2\n 24153: a2 = a1 >> 0x28\n 24156: u8 [a0 + 0x5] = a2\n 24159: a2 = a1 >> 0x20\n 24162: u8 [a0 + 0x4] = a2\n 24165: a2 = a1 >> 0x18\n 24168: u8 [a0 + 0x3] = a2\n 24171: a2 = a1 >> 0x10\n 24174: u8 [a0 + 0x2] = a2\n 24177: a1 = a1 >> 0x8\n 24180: u8 [a0 + 0x1] = a1\n 24183: s1 = sp + 0x7e8\n 24187: u64 [s1 + 1120] = 0\n 24191: u64 [s1 + 1112] = 0\n 24195: u64 [s1 + 1096] = 0x40\n 24200: a0 = sp + 0x7ff\n 24204: a0 = a0 + 0x451\n 24208: a1 = sp + 0x7ff\n 24212: a1 = a1 + 0x431\n 24216: u64 [s1 + 1104] = 0\n 24220: ra = 262, jump @56\n      : @326 [@dyn 131] (gas: 15)\n 24226: a1 = u64 [s1 + 0x480]\n 24230: a2 = u64 [s1 + 0x478]\n 24234: a0 = u64 [s1 + 0x470]\n 24238: s1 = u64 [s1 + 0x468]\n 24242: u64 [sp + 0x28] = a0\n 24245: u64 [sp + 0x30] = a1\n 24248: a0 = a0 | a1\n 24251: a1 = s1 | a2\n 24254: a1 = a1 | a0\n 24257: a1 = a1 >> 0x20\n 24260: u64 [sp + 0x38] = a2\n 24263: a0 = a0 | a2\n 24266: a0 = a0 << 0x20\n 24269: a0 = a0 | a1\n 24272: jump @328 if a0 == 0\n      : @327 (gas: 1)\n 24275: jump @781\n      : @328 (gas: 4)\n 24278: i32 a0 = s1 + 0\n 24280: a1 = 0x20\n 24283: u64 [sp + 0x18] = a0\n 24286: ra = 264, jump @0\n      : @329 [@dyn 132] (gas: 44)\n 24292: u8 [a0 + 31] = 0x6\n 24296: a1 = u64 [sp + 0x30]\n 24299: a2 = u64 [sp + 0x38]\n 24302: a2 = a2 | a1\n 24305: a1 = 0x100000000\n 24315: u64 [sp + 0x20] = a1\n 24318: a1 = 0xffffffe0\n 24328: u64 [sp + 0x10] = s1\n 24331: a1 = s1 <u a1\n 24334: s1 = u64 [sp + 0x28]\n 24337: a1 = 0 if s1 != 0\n 24339: a1 = 0 if a2 != 0\n 24341: u8 [a0 + 30] = 0\n 24344: u8 [a0 + 29] = 0\n 24347: u8 [a0 + 28] = 0\n 24350: u8 [a0 + 27] = 0\n 24353: u8 [a0 + 26] = 0\n 24356: u8 [a0 + 25] = 0\n 24359: u8 [a0 + 24] = 0\n 24362: u8 [a0 + 23] = 0\n 24365: u8 [a0 + 22] = 0\n 24368: u8 [a0 + 21] = 0\n 24371: u8 [a0 + 20] = 0\n 24374: u8 [a0 + 19] = 0\n 24377: u8 [a0 + 18] = 0\n 24380: u8 [a0 + 17] = 0\n 24383: u8 [a0 + 16] = 0\n 24386: u8 [a0 + 15] = 0\n 24389: u8 [a0 + 14] = 0\n 24392: u8 [a0 + 13] = 0\n 24395: u8 [a0 + 12] = 0\n 24398: u8 [a0 + 11] = 0\n 24401: u8 [a0 + 10] = 0\n 24404: u8 [a0 + 9] = 0\n 24407: u8 [a0 + 8] = 0\n 24410: u8 [a0 + 7] = 0\n 24413: u8 [a0 + 6] = 0\n 24416: u8 [a0 + 5] = 0\n 24419: u8 [a0 + 4] = 0\n 24422: u8 [a0 + 3] = 0\n 24425: u8 [a0 + 2] = 0\n 24428: u8 [a0 + 1] = 0\n 24431: u8 [a0 + 0] = 0\n 24433: jump @331 if a1 != 0\n      : @330 (gas: 1)\n 24436: jump @781\n      : @331 (gas: 4)\n 24439: a0 = u64 [sp + 0x18]\n 24442: i32 a0 = a0 + 0x20\n 24445: a1 = 0x20\n 24448: ra = 266, jump @0\n      : @332 [@dyn 133] (gas: 41)\n 24454: u8 [a0 + 31] = 0\n 24457: u8 [a0 + 30] = 0\n 24460: u8 [a0 + 29] = 0\n 24463: u8 [a0 + 28] = 0\n 24466: u8 [a0 + 27] = 0\n 24469: u8 [a0 + 26] = 0\n 24472: u8 [a0 + 25] = 0\n 24475: u8 [a0 + 24] = 0\n 24478: u8 [a0 + 23] = 0\n 24481: u8 [a0 + 22] = 0\n 24484: u8 [a0 + 21] = 0\n 24487: u8 [a0 + 20] = 0\n 24490: u8 [a0 + 19] = 0\n 24493: u8 [a0 + 18] = 0\n 24496: u8 [a0 + 17] = 0\n 24499: u8 [a0 + 16] = 0\n 24502: u8 [a0 + 15] = 0\n 24505: u8 [a0 + 14] = 0\n 24508: u8 [a0 + 13] = 0\n 24511: u8 [a0 + 12] = 0\n 24514: u8 [a0 + 11] = 0\n 24517: u8 [a0 + 10] = 0\n 24520: u8 [a0 + 9] = 0\n 24523: u8 [a0 + 8] = 0\n 24526: u8 [a0 + 7] = 0\n 24529: u8 [a0 + 6] = 0\n 24532: u8 [a0 + 5] = 0x72\n 24536: u8 [a0 + 4] = 0x65\n 24540: u8 [a0 + 3] = 0x76\n 24544: u8 [a0 + 2] = 0x65\n 24548: u8 [a0 + 1] = 0x6c\n 24552: a2 = u64 [sp + 0x20]\n 24555: a2 = a2 + 0xfffffffffffffec0\n 24559: a3 = u64 [sp + 0x68]\n 24562: a2 = a3 <u a2\n 24565: a3 = u64 [sp + 0x60]\n 24568: a2 = 0 if a3 != 0\n 24570: a3 = u64 [sp + 0x50]\n 24573: a2 = 0 if a3 != 0\n 24575: u8 [a0 + 0] = 0x63\n 24578: jump @334 if a2 != 0\n      : @333 (gas: 1)\n 24581: jump @781\n      : @334 (gas: 4)\n 24584: a0 = u64 [sp + 0x58]\n 24587: i32 a0 = a0 + 0x140\n 24591: a1 = 0x20\n 24594: ra = 268, jump @0\n      : @335 [@dyn 134] (gas: 77)\n 24600: a1 = u64 [sp + 0x30]\n 24603: a1 = reverse a1\n 24605: a2 = u64 [sp + 0x38]\n 24608: a2 = reverse a2\n 24610: a3 = reverse s1\n 24612: a4 = u64 [sp + 0x10]\n 24615: a4 = reverse a4\n 24617: a5 = a4 >> 0x38\n 24620: u8 [a0 + 0x1f] = a5\n 24623: a5 = a4 >> 0x30\n 24626: u8 [a0 + 0x1e] = a5\n 24629: a5 = a4 >> 0x28\n 24632: u8 [a0 + 0x1d] = a5\n 24635: a5 = a4 >> 0x20\n 24638: u8 [a0 + 0x1c] = a5\n 24641: a5 = a4 >> 0x18\n 24644: u8 [a0 + 0x1b] = a5\n 24647: a5 = a4 >> 0x10\n 24650: u8 [a0 + 0x1a] = a5\n 24653: a5 = a4 >> 0x8\n 24656: u8 [a0 + 0x19] = a5\n 24659: u8 [a0 + 0x18] = a4\n 24662: u8 [a0 + 0x10] = a3\n 24665: a4 = a3 >> 0x38\n 24668: u8 [a0 + 0x17] = a4\n 24671: a4 = a3 >> 0x30\n 24674: u8 [a0 + 0x16] = a4\n 24677: a4 = a3 >> 0x28\n 24680: u8 [a0 + 0x15] = a4\n 24683: a4 = a3 >> 0x20\n 24686: u8 [a0 + 0x14] = a4\n 24689: a4 = a3 >> 0x18\n 24692: u8 [a0 + 0x13] = a4\n 24695: a4 = a3 >> 0x10\n 24698: u8 [a0 + 0x12] = a4\n 24701: a3 = a3 >> 0x8\n 24704: u8 [a0 + 0x11] = a3\n 24707: u8 [a0 + 0x8] = a2\n 24710: a3 = a2 >> 0x38\n 24713: u8 [a0 + 0xf] = a3\n 24716: a3 = a2 >> 0x30\n 24719: u8 [a0 + 0xe] = a3\n 24722: a3 = a2 >> 0x28\n 24725: u8 [a0 + 0xd] = a3\n 24728: a3 = a2 >> 0x20\n 24731: u8 [a0 + 0xc] = a3\n 24734: a3 = a2 >> 0x18\n 24737: u8 [a0 + 0xb] = a3\n 24740: a3 = a2 >> 0x10\n 24743: u8 [a0 + 0xa] = a3\n 24746: a2 = a2 >> 0x8\n 24749: u8 [a0 + 0x9] = a2\n 24752: u8 [a0] = a1\n 24754: a2 = a1 >> 0x38\n 24757: u8 [a0 + 0x7] = a2\n 24760: a2 = a1 >> 0x30\n 24763: u8 [a0 + 0x6] = a2\n 24766: a2 = a1 >> 0x28\n 24769: u8 [a0 + 0x5] = a2\n 24772: a2 = a1 >> 0x20\n 24775: u8 [a0 + 0x4] = a2\n 24778: a2 = a1 >> 0x18\n 24781: u8 [a0 + 0x3] = a2\n 24784: a2 = a1 >> 0x10\n 24787: u8 [a0 + 0x2] = a2\n 24790: a1 = a1 >> 0x8\n 24793: u8 [a0 + 0x1] = a1\n 24796: s1 = sp + 0x7e8\n 24800: u64 [s1 + 1056] = 0\n 24804: u64 [s1 + 1048] = 0\n 24808: u64 [s1 + 1032] = 0x40\n 24813: a0 = sp + 0x7ff\n 24817: a0 = a0 + 0x411\n 24821: a1 = sp + 0x7ff\n 24825: a1 = a1 + 0x3f1\n 24829: u64 [s1 + 1040] = 0\n 24833: ra = 270, jump @56\n      : @336 [@dyn 135] (gas: 15)\n 24839: a1 = u64 [s1 + 0x440]\n 24843: a2 = u64 [s1 + 0x438]\n 24847: a0 = u64 [s1 + 0x430]\n 24851: s1 = u64 [s1 + 0x428]\n 24855: u64 [sp + 0x28] = a0\n 24858: u64 [sp + 0x30] = a1\n 24861: a0 = a0 | a1\n 24864: a1 = s1 | a2\n 24867: a1 = a1 | a0\n 24870: a1 = a1 >> 0x20\n 24873: u64 [sp + 0x38] = a2\n 24876: a0 = a0 | a2\n 24879: a0 = a0 << 0x20\n 24882: a0 = a0 | a1\n 24885: jump @338 if a0 == 0\n      : @337 (gas: 1)\n 24888: jump @781\n      : @338 (gas: 4)\n 24891: i32 a0 = s1 + 0\n 24893: a1 = 0x20\n 24896: u64 [sp + 0x18] = a0\n 24899: ra = 272, jump @0\n      : @339 [@dyn 136] (gas: 44)\n 24905: u8 [a0 + 31] = 0x8\n 24909: a1 = u64 [sp + 0x30]\n 24912: a2 = u64 [sp + 0x38]\n 24915: a2 = a2 | a1\n 24918: a1 = 0x100000000\n 24928: u64 [sp + 0x20] = a1\n 24931: a1 = 0xffffffe0\n 24941: u64 [sp + 0x10] = s1\n 24944: a1 = s1 <u a1\n 24947: s1 = u64 [sp + 0x28]\n 24950: a1 = 0 if s1 != 0\n 24952: a1 = 0 if a2 != 0\n 24954: u8 [a0 + 30] = 0\n 24957: u8 [a0 + 29] = 0\n 24960: u8 [a0 + 28] = 0\n 24963: u8 [a0 + 27] = 0\n 24966: u8 [a0 + 26] = 0\n 24969: u8 [a0 + 25] = 0\n 24972: u8 [a0 + 24] = 0\n 24975: u8 [a0 + 23] = 0\n 24978: u8 [a0 + 22] = 0\n 24981: u8 [a0 + 21] = 0\n 24984: u8 [a0 + 20] = 0\n 24987: u8 [a0 + 19] = 0\n 24990: u8 [a0 + 18] = 0\n 24993: u8 [a0 + 17] = 0\n 24996: u8 [a0 + 16] = 0\n 24999: u8 [a0 + 15] = 0\n 25002: u8 [a0 + 14] = 0\n 25005: u8 [a0 + 13] = 0\n 25008: u8 [a0 + 12] = 0\n 25011: u8 [a0 + 11] = 0\n 25014: u8 [a0 + 10] = 0\n 25017: u8 [a0 + 9] = 0\n 25020: u8 [a0 + 8] = 0\n 25023: u8 [a0 + 7] = 0\n 25026: u8 [a0 + 6] = 0\n 25029: u8 [a0 + 5] = 0\n 25032: u8 [a0 + 4] = 0\n 25035: u8 [a0 + 3] = 0\n 25038: u8 [a0 + 2] = 0\n 25041: u8 [a0 + 1] = 0\n 25044: u8 [a0 + 0] = 0\n 25046: jump @341 if a1 != 0\n      : @340 (gas: 1)\n 25049: jump @781\n      : @341 (gas: 4)\n 25052: a0 = u64 [sp + 0x18]\n 25055: i32 a0 = a0 + 0x20\n 25058: a1 = 0x20\n 25061: ra = 274, jump @0\n      : @342 [@dyn 137] (gas: 41)\n 25067: u8 [a0 + 31] = 0\n 25070: u8 [a0 + 30] = 0\n 25073: u8 [a0 + 29] = 0\n 25076: u8 [a0 + 28] = 0\n 25079: u8 [a0 + 27] = 0\n 25082: u8 [a0 + 26] = 0\n 25085: u8 [a0 + 25] = 0\n 25088: u8 [a0 + 24] = 0\n 25091: u8 [a0 + 23] = 0\n 25094: u8 [a0 + 22] = 0\n 25097: u8 [a0 + 21] = 0\n 25100: u8 [a0 + 20] = 0\n 25103: u8 [a0 + 19] = 0\n 25106: u8 [a0 + 18] = 0\n 25109: u8 [a0 + 17] = 0\n 25112: u8 [a0 + 16] = 0\n 25115: u8 [a0 + 15] = 0\n 25118: u8 [a0 + 14] = 0\n 25121: u8 [a0 + 13] = 0\n 25124: u8 [a0 + 12] = 0\n 25127: u8 [a0 + 11] = 0\n 25130: u8 [a0 + 10] = 0\n 25133: u8 [a0 + 9] = 0\n 25136: u8 [a0 + 8] = 0\n 25139: u8 [a0 + 7] = 0x6c\n 25143: u8 [a0 + 6] = 0x75\n 25147: u8 [a0 + 5] = 0x66\n 25151: u8 [a0 + 4] = 0x72\n 25155: u8 [a0 + 3] = 0x6f\n 25159: u8 [a0 + 2] = 0x6c\n 25163: u8 [a0 + 1] = 0x6f\n 25167: a2 = u64 [sp + 0x20]\n 25170: a2 = a2 + 0xfffffffffffffea0\n 25174: a3 = u64 [sp + 0x68]\n 25177: a2 = a3 <u a2\n 25180: a3 = u64 [sp + 0x60]\n 25183: a2 = 0 if a3 != 0\n 25185: a3 = u64 [sp + 0x50]\n 25188: a2 = 0 if a3 != 0\n 25190: u8 [a0 + 0] = 0x63\n 25193: jump @344 if a2 != 0\n      : @343 (gas: 1)\n 25196: jump @781\n      : @344 (gas: 4)\n 25199: a0 = u64 [sp + 0x58]\n 25202: i32 a0 = a0 + 0x160\n 25206: a1 = 0x20\n 25209: ra = 276, jump @0\n      : @345 [@dyn 138] (gas: 77)\n 25215: a1 = u64 [sp + 0x30]\n 25218: a1 = reverse a1\n 25220: a2 = u64 [sp + 0x38]\n 25223: a2 = reverse a2\n 25225: a3 = reverse s1\n 25227: a4 = u64 [sp + 0x10]\n 25230: a4 = reverse a4\n 25232: a5 = a4 >> 0x38\n 25235: u8 [a0 + 0x1f] = a5\n 25238: a5 = a4 >> 0x30\n 25241: u8 [a0 + 0x1e] = a5\n 25244: a5 = a4 >> 0x28\n 25247: u8 [a0 + 0x1d] = a5\n 25250: a5 = a4 >> 0x20\n 25253: u8 [a0 + 0x1c] = a5\n 25256: a5 = a4 >> 0x18\n 25259: u8 [a0 + 0x1b] = a5\n 25262: a5 = a4 >> 0x10\n 25265: u8 [a0 + 0x1a] = a5\n 25268: a5 = a4 >> 0x8\n 25271: u8 [a0 + 0x19] = a5\n 25274: u8 [a0 + 0x18] = a4\n 25277: u8 [a0 + 0x10] = a3\n 25280: a4 = a3 >> 0x38\n 25283: u8 [a0 + 0x17] = a4\n 25286: a4 = a3 >> 0x30\n 25289: u8 [a0 + 0x16] = a4\n 25292: a4 = a3 >> 0x28\n 25295: u8 [a0 + 0x15] = a4\n 25298: a4 = a3 >> 0x20\n 25301: u8 [a0 + 0x14] = a4\n 25304: a4 = a3 >> 0x18\n 25307: u8 [a0 + 0x13] = a4\n 25310: a4 = a3 >> 0x10\n 25313: u8 [a0 + 0x12] = a4\n 25316: a3 = a3 >> 0x8\n 25319: u8 [a0 + 0x11] = a3\n 25322: u8 [a0 + 0x8] = a2\n 25325: a3 = a2 >> 0x38\n 25328: u8 [a0 + 0xf] = a3\n 25331: a3 = a2 >> 0x30\n 25334: u8 [a0 + 0xe] = a3\n 25337: a3 = a2 >> 0x28\n 25340: u8 [a0 + 0xd] = a3\n 25343: a3 = a2 >> 0x20\n 25346: u8 [a0 + 0xc] = a3\n 25349: a3 = a2 >> 0x18\n 25352: u8 [a0 + 0xb] = a3\n 25355: a3 = a2 >> 0x10\n 25358: u8 [a0 + 0xa] = a3\n 25361: a2 = a2 >> 0x8\n 25364: u8 [a0 + 0x9] = a2\n 25367: u8 [a0] = a1\n 25369: a2 = a1 >> 0x38\n 25372: u8 [a0 + 0x7] = a2\n 25375: a2 = a1 >> 0x30\n 25378: u8 [a0 + 0x6] = a2\n 25381: a2 = a1 >> 0x28\n 25384: u8 [a0 + 0x5] = a2\n 25387: a2 = a1 >> 0x20\n 25390: u8 [a0 + 0x4] = a2\n 25393: a2 = a1 >> 0x18\n 25396: u8 [a0 + 0x3] = a2\n 25399: a2 = a1 >> 0x10\n 25402: u8 [a0 + 0x2] = a2\n 25405: a1 = a1 >> 0x8\n 25408: u8 [a0 + 0x1] = a1\n 25411: s1 = sp + 0x7e8\n 25415: u64 [s1 + 992] = 0\n 25419: u64 [s1 + 984] = 0\n 25423: u64 [s1 + 968] = 0x40\n 25428: a0 = sp + 0x7ff\n 25432: a0 = a0 + 0x3d1\n 25436: a1 = sp + 0x7ff\n 25440: a1 = a1 + 0x3b1\n 25444: u64 [s1 + 976] = 0\n 25448: ra = 278, jump @56\n      : @346 [@dyn 139] (gas: 15)\n 25454: a1 = u64 [s1 + 0x400]\n 25458: a2 = u64 [s1 + 0x3f8]\n 25462: a0 = u64 [s1 + 0x3f0]\n 25466: s1 = u64 [s1 + 0x3e8]\n 25470: u64 [sp + 0x28] = a0\n 25473: u64 [sp + 0x30] = a1\n 25476: a0 = a0 | a1\n 25479: a1 = s1 | a2\n 25482: a1 = a1 | a0\n 25485: a1 = a1 >> 0x20\n 25488: u64 [sp + 0x38] = a2\n 25491: a0 = a0 | a2\n 25494: a0 = a0 << 0x20\n 25497: a0 = a0 | a1\n 25500: jump @348 if a0 == 0\n      : @347 (gas: 1)\n 25503: jump @781\n      : @348 (gas: 4)\n 25506: i32 a0 = s1 + 0\n 25508: a1 = 0x20\n 25511: u64 [sp + 0x18] = a0\n 25514: ra = 280, jump @0\n      : @349 [@dyn 140] (gas: 44)\n 25520: u8 [a0 + 31] = 0xb\n 25524: a1 = u64 [sp + 0x30]\n 25527: a2 = u64 [sp + 0x38]\n 25530: a2 = a2 | a1\n 25533: a1 = 0x100000000\n 25543: u64 [sp + 0x20] = a1\n 25546: a1 = 0xffffffe0\n 25556: u64 [sp + 0x10] = s1\n 25559: a1 = s1 <u a1\n 25562: s1 = u64 [sp + 0x28]\n 25565: a1 = 0 if s1 != 0\n 25567: a1 = 0 if a2 != 0\n 25569: u8 [a0 + 30] = 0\n 25572: u8 [a0 + 29] = 0\n 25575: u8 [a0 + 28] = 0\n 25578: u8 [a0 + 27] = 0\n 25581: u8 [a0 + 26] = 0\n 25584: u8 [a0 + 25] = 0\n 25587: u8 [a0 + 24] = 0\n 25590: u8 [a0 + 23] = 0\n 25593: u8 [a0 + 22] = 0\n 25596: u8 [a0 + 21] = 0\n 25599: u8 [a0 + 20] = 0\n 25602: u8 [a0 + 19] = 0\n 25605: u8 [a0 + 18] = 0\n 25608: u8 [a0 + 17] = 0\n 25611: u8 [a0 + 16] = 0\n 25614: u8 [a0 + 15] = 0\n 25617: u8 [a0 + 14] = 0\n 25620: u8 [a0 + 13] = 0\n 25623: u8 [a0 + 12] = 0\n 25626: u8 [a0 + 11] = 0\n 25629: u8 [a0 + 10] = 0\n 25632: u8 [a0 + 9] = 0\n 25635: u8 [a0 + 8] = 0\n 25638: u8 [a0 + 7] = 0\n 25641: u8 [a0 + 6] = 0\n 25644: u8 [a0 + 5] = 0\n 25647: u8 [a0 + 4] = 0\n 25650: u8 [a0 + 3] = 0\n 25653: u8 [a0 + 2] = 0\n 25656: u8 [a0 + 1] = 0\n 25659: u8 [a0 + 0] = 0\n 25661: jump @351 if a1 != 0\n      : @350 (gas: 1)\n 25664: jump @781\n      : @351 (gas: 4)\n 25667: a0 = u64 [sp + 0x18]\n 25670: i32 a0 = a0 + 0x20\n 25673: a1 = 0x20\n 25676: ra = 282, jump @0\n      : @352 [@dyn 141] (gas: 41)\n 25682: u8 [a0 + 31] = 0\n 25685: u8 [a0 + 30] = 0\n 25688: u8 [a0 + 29] = 0\n 25691: u8 [a0 + 28] = 0\n 25694: u8 [a0 + 27] = 0\n 25697: u8 [a0 + 26] = 0\n 25700: u8 [a0 + 25] = 0\n 25703: u8 [a0 + 24] = 0\n 25706: u8 [a0 + 23] = 0\n 25709: u8 [a0 + 22] = 0\n 25712: u8 [a0 + 21] = 0\n 25715: u8 [a0 + 20] = 0\n 25718: u8 [a0 + 19] = 0\n 25721: u8 [a0 + 18] = 0\n 25724: u8 [a0 + 17] = 0\n 25727: u8 [a0 + 16] = 0\n 25730: u8 [a0 + 15] = 0\n 25733: u8 [a0 + 14] = 0\n 25736: u8 [a0 + 13] = 0\n 25739: u8 [a0 + 12] = 0\n 25742: u8 [a0 + 11] = 0\n 25745: u8 [a0 + 10] = 0x65\n 25749: u8 [a0 + 9] = 0x6c\n 25753: u8 [a0 + 8] = 0x62\n 25757: u8 [a0 + 7] = 0x61\n 25761: u8 [a0 + 6] = 0x74\n 25765: u8 [a0 + 5] = 0x72\n 25769: u8 [a0 + 4] = 0x6f\n 25773: u8 [a0 + 3] = 0x66\n 25777: u8 [a0 + 2] = 0x6d\n 25781: u8 [a0 + 1] = 0x6f\n 25785: a2 = u64 [sp + 0x20]\n 25788: a2 = a2 + 0xfffffffffffffe80\n 25792: a3 = u64 [sp + 0x68]\n 25795: a2 = a3 <u a2\n 25798: a3 = u64 [sp + 0x60]\n 25801: a2 = 0 if a3 != 0\n 25803: a3 = u64 [sp + 0x50]\n 25806: a2 = 0 if a3 != 0\n 25808: u8 [a0 + 0] = 0x63\n 25811: jump @354 if a2 != 0\n      : @353 (gas: 1)\n 25814: jump @781\n      : @354 (gas: 4)\n 25817: a0 = u64 [sp + 0x58]\n 25820: i32 a0 = a0 + 0x180\n 25824: a1 = 0x20\n 25827: ra = 284, jump @0\n      : @355 [@dyn 142] (gas: 77)\n 25833: a1 = u64 [sp + 0x30]\n 25836: a1 = reverse a1\n 25838: a2 = u64 [sp + 0x38]\n 25841: a2 = reverse a2\n 25843: a3 = reverse s1\n 25845: a4 = u64 [sp + 0x10]\n 25848: a4 = reverse a4\n 25850: a5 = a4 >> 0x38\n 25853: u8 [a0 + 0x1f] = a5\n 25856: a5 = a4 >> 0x30\n 25859: u8 [a0 + 0x1e] = a5\n 25862: a5 = a4 >> 0x28\n 25865: u8 [a0 + 0x1d] = a5\n 25868: a5 = a4 >> 0x20\n 25871: u8 [a0 + 0x1c] = a5\n 25874: a5 = a4 >> 0x18\n 25877: u8 [a0 + 0x1b] = a5\n 25880: a5 = a4 >> 0x10\n 25883: u8 [a0 + 0x1a] = a5\n 25886: a5 = a4 >> 0x8\n 25889: u8 [a0 + 0x19] = a5\n 25892: u8 [a0 + 0x18] = a4\n 25895: u8 [a0 + 0x10] = a3\n 25898: a4 = a3 >> 0x38\n 25901: u8 [a0 + 0x17] = a4\n 25904: a4 = a3 >> 0x30\n 25907: u8 [a0 + 0x16] = a4\n 25910: a4 = a3 >> 0x28\n 25913: u8 [a0 + 0x15] = a4\n 25916: a4 = a3 >> 0x20\n 25919: u8 [a0 + 0x14] = a4\n 25922: a4 = a3 >> 0x18\n 25925: u8 [a0 + 0x13] = a4\n 25928: a4 = a3 >> 0x10\n 25931: u8 [a0 + 0x12] = a4\n 25934: a3 = a3 >> 0x8\n 25937: u8 [a0 + 0x11] = a3\n 25940: u8 [a0 + 0x8] = a2\n 25943: a3 = a2 >> 0x38\n 25946: u8 [a0 + 0xf] = a3\n 25949: a3 = a2 >> 0x30\n 25952: u8 [a0 + 0xe] = a3\n 25955: a3 = a2 >> 0x28\n 25958: u8 [a0 + 0xd] = a3\n 25961: a3 = a2 >> 0x20\n 25964: u8 [a0 + 0xc] = a3\n 25967: a3 = a2 >> 0x18\n 25970: u8 [a0 + 0xb] = a3\n 25973: a3 = a2 >> 0x10\n 25976: u8 [a0 + 0xa] = a3\n 25979: a2 = a2 >> 0x8\n 25982: u8 [a0 + 0x9] = a2\n 25985: u8 [a0] = a1\n 25987: a2 = a1 >> 0x38\n 25990: u8 [a0 + 0x7] = a2\n 25993: a2 = a1 >> 0x30\n 25996: u8 [a0 + 0x6] = a2\n 25999: a2 = a1 >> 0x28\n 26002: u8 [a0 + 0x5] = a2\n 26005: a2 = a1 >> 0x20\n 26008: u8 [a0 + 0x4] = a2\n 26011: a2 = a1 >> 0x18\n 26014: u8 [a0 + 0x3] = a2\n 26017: a2 = a1 >> 0x10\n 26020: u8 [a0 + 0x2] = a2\n 26023: a1 = a1 >> 0x8\n 26026: u8 [a0 + 0x1] = a1\n 26029: s1 = sp + 0x7e8\n 26033: u64 [s1 + 928] = 0\n 26037: u64 [s1 + 920] = 0\n 26041: u64 [s1 + 904] = 0x40\n 26046: a0 = sp + 0x7ff\n 26050: a0 = a0 + 0x391\n 26054: a1 = sp + 0x7ff\n 26058: a1 = a1 + 0x371\n 26062: u64 [s1 + 912] = 0\n 26066: ra = 286, jump @56\n      : @356 [@dyn 143] (gas: 15)\n 26072: a1 = u64 [s1 + 0x3c0]\n 26076: a2 = u64 [s1 + 0x3b8]\n 26080: a0 = u64 [s1 + 0x3b0]\n 26084: s1 = u64 [s1 + 0x3a8]\n 26088: u64 [sp + 0x28] = a0\n 26091: u64 [sp + 0x30] = a1\n 26094: a0 = a0 | a1\n 26097: a1 = s1 | a2\n 26100: a1 = a1 | a0\n 26103: a1 = a1 >> 0x20\n 26106: u64 [sp + 0x38] = a2\n 26109: a0 = a0 | a2\n 26112: a0 = a0 << 0x20\n 26115: a0 = a0 | a1\n 26118: jump @358 if a0 == 0\n      : @357 (gas: 1)\n 26121: jump @781\n      : @358 (gas: 4)\n 26124: i32 a0 = s1 + 0\n 26126: a1 = 0x20\n 26129: u64 [sp + 0x18] = a0\n 26132: ra = 288, jump @0\n      : @359 [@dyn 144] (gas: 44)\n 26138: u8 [a0 + 31] = 0x9\n 26142: a1 = u64 [sp + 0x30]\n 26145: a2 = u64 [sp + 0x38]\n 26148: a2 = a2 | a1\n 26151: a1 = 0x100000000\n 26161: u64 [sp + 0x20] = a1\n 26164: a1 = 0xffffffe0\n 26174: u64 [sp + 0x10] = s1\n 26177: a1 = s1 <u a1\n 26180: s1 = u64 [sp + 0x28]\n 26183: a1 = 0 if s1 != 0\n 26185: a1 = 0 if a2 != 0\n 26187: u8 [a0 + 30] = 0\n 26190: u8 [a0 + 29] = 0\n 26193: u8 [a0 + 28] = 0\n 26196: u8 [a0 + 27] = 0\n 26199: u8 [a0 + 26] = 0\n 26202: u8 [a0 + 25] = 0\n 26205: u8 [a0 + 24] = 0\n 26208: u8 [a0 + 23] = 0\n 26211: u8 [a0 + 22] = 0\n 26214: u8 [a0 + 21] = 0\n 26217: u8 [a0 + 20] = 0\n 26220: u8 [a0 + 19] = 0\n 26223: u8 [a0 + 18] = 0\n 26226: u8 [a0 + 17] = 0\n 26229: u8 [a0 + 16] = 0\n 26232: u8 [a0 + 15] = 0\n 26235: u8 [a0 + 14] = 0\n 26238: u8 [a0 + 13] = 0\n 26241: u8 [a0 + 12] = 0\n 26244: u8 [a0 + 11] = 0\n 26247: u8 [a0 + 10] = 0\n 26250: u8 [a0 + 9] = 0\n 26253: u8 [a0 + 8] = 0\n 26256: u8 [a0 + 7] = 0\n 26259: u8 [a0 + 6] = 0\n 26262: u8 [a0 + 5] = 0\n 26265: u8 [a0 + 4] = 0\n 26268: u8 [a0 + 3] = 0\n 26271: u8 [a0 + 2] = 0\n 26274: u8 [a0 + 1] = 0\n 26277: u8 [a0 + 0] = 0\n 26279: jump @361 if a1 != 0\n      : @360 (gas: 1)\n 26282: jump @781\n      : @361 (gas: 4)\n 26285: a0 = u64 [sp + 0x18]\n 26288: i32 a0 = a0 + 0x20\n 26291: a1 = 0x20\n 26294: ra = 290, jump @0\n      : @362 [@dyn 145] (gas: 41)\n 26300: u8 [a0 + 31] = 0\n 26303: u8 [a0 + 30] = 0\n 26306: u8 [a0 + 29] = 0\n 26309: u8 [a0 + 28] = 0\n 26312: u8 [a0 + 27] = 0\n 26315: u8 [a0 + 26] = 0\n 26318: u8 [a0 + 25] = 0\n 26321: u8 [a0 + 24] = 0\n 26324: u8 [a0 + 23] = 0\n 26327: u8 [a0 + 22] = 0\n 26330: u8 [a0 + 21] = 0\n 26333: u8 [a0 + 20] = 0\n 26336: u8 [a0 + 19] = 0\n 26339: u8 [a0 + 18] = 0\n 26342: u8 [a0 + 17] = 0\n 26345: u8 [a0 + 16] = 0\n 26348: u8 [a0 + 15] = 0\n 26351: u8 [a0 + 14] = 0\n 26354: u8 [a0 + 13] = 0\n 26357: u8 [a0 + 12] = 0\n 26360: u8 [a0 + 11] = 0\n 26363: u8 [a0 + 10] = 0\n 26366: u8 [a0 + 9] = 0\n 26369: u8 [a0 + 8] = 0x74\n 26373: u8 [a0 + 7] = 0x6e\n 26377: u8 [a0 + 6] = 0x65\n 26381: u8 [a0 + 5] = 0x64\n 26385: u8 [a0 + 4] = 0x69\n 26389: u8 [a0 + 3] = 0x66\n 26393: u8 [a0 + 2] = 0x6e\n 26397: u8 [a0 + 1] = 0x6f\n 26401: a2 = u64 [sp + 0x20]\n 26404: a2 = a2 + 0xfffffffffffffe60\n 26408: a3 = u64 [sp + 0x68]\n 26411: a2 = a3 <u a2\n 26414: a3 = u64 [sp + 0x60]\n 26417: a2 = 0 if a3 != 0\n 26419: a3 = u64 [sp + 0x50]\n 26422: a2 = 0 if a3 != 0\n 26424: u8 [a0 + 0] = 0x63\n 26427: jump @364 if a2 != 0\n      : @363 (gas: 1)\n 26430: jump @781\n      : @364 (gas: 4)\n 26433: a0 = u64 [sp + 0x58]\n 26436: i32 a0 = a0 + 0x1a0\n 26440: a1 = 0x20\n 26443: ra = 292, jump @0\n      : @365 [@dyn 146] (gas: 77)\n 26449: a1 = u64 [sp + 0x30]\n 26452: a1 = reverse a1\n 26454: a2 = u64 [sp + 0x38]\n 26457: a2 = reverse a2\n 26459: a3 = reverse s1\n 26461: a4 = u64 [sp + 0x10]\n 26464: a4 = reverse a4\n 26466: a5 = a4 >> 0x38\n 26469: u8 [a0 + 0x1f] = a5\n 26472: a5 = a4 >> 0x30\n 26475: u8 [a0 + 0x1e] = a5\n 26478: a5 = a4 >> 0x28\n 26481: u8 [a0 + 0x1d] = a5\n 26484: a5 = a4 >> 0x20\n 26487: u8 [a0 + 0x1c] = a5\n 26490: a5 = a4 >> 0x18\n 26493: u8 [a0 + 0x1b] = a5\n 26496: a5 = a4 >> 0x10\n 26499: u8 [a0 + 0x1a] = a5\n 26502: a5 = a4 >> 0x8\n 26505: u8 [a0 + 0x19] = a5\n 26508: u8 [a0 + 0x18] = a4\n 26511: u8 [a0 + 0x10] = a3\n 26514: a4 = a3 >> 0x38\n 26517: u8 [a0 + 0x17] = a4\n 26520: a4 = a3 >> 0x30\n 26523: u8 [a0 + 0x16] = a4\n 26526: a4 = a3 >> 0x28\n 26529: u8 [a0 + 0x15] = a4\n 26532: a4 = a3 >> 0x20\n 26535: u8 [a0 + 0x14] = a4\n 26538: a4 = a3 >> 0x18\n 26541: u8 [a0 + 0x13] = a4\n 26544: a4 = a3 >> 0x10\n 26547: u8 [a0 + 0x12] = a4\n 26550: a3 = a3 >> 0x8\n 26553: u8 [a0 + 0x11] = a3\n 26556: u8 [a0 + 0x8] = a2\n 26559: a3 = a2 >> 0x38\n 26562: u8 [a0 + 0xf] = a3\n 26565: a3 = a2 >> 0x30\n 26568: u8 [a0 + 0xe] = a3\n 26571: a3 = a2 >> 0x28\n 26574: u8 [a0 + 0xd] = a3\n 26577: a3 = a2 >> 0x20\n 26580: u8 [a0 + 0xc] = a3\n 26583: a3 = a2 >> 0x18\n 26586: u8 [a0 + 0xb] = a3\n 26589: a3 = a2 >> 0x10\n 26592: u8 [a0 + 0xa] = a3\n 26595: a2 = a2 >> 0x8\n 26598: u8 [a0 + 0x9] = a2\n 26601: u8 [a0] = a1\n 26603: a2 = a1 >> 0x38\n 26606: u8 [a0 + 0x7] = a2\n 26609: a2 = a1 >> 0x30\n 26612: u8 [a0 + 0x6] = a2\n 26615: a2 = a1 >> 0x28\n 26618: u8 [a0 + 0x5] = a2\n 26621: a2 = a1 >> 0x20\n 26624: u8 [a0 + 0x4] = a2\n 26627: a2 = a1 >> 0x18\n 26630: u8 [a0 + 0x3] = a2\n 26633: a2 = a1 >> 0x10\n 26636: u8 [a0 + 0x2] = a2\n 26639: a1 = a1 >> 0x8\n 26642: u8 [a0 + 0x1] = a1\n 26645: s1 = sp + 0x7e8\n 26649: u64 [s1 + 864] = 0\n 26653: u64 [s1 + 856] = 0\n 26657: u64 [s1 + 840] = 0x40\n 26662: a0 = sp + 0x7ff\n 26666: a0 = a0 + 0x351\n 26670: a1 = sp + 0x7ff\n 26674: a1 = a1 + 0x331\n 26678: u64 [s1 + 848] = 0\n 26682: ra = 294, jump @56\n      : @366 [@dyn 147] (gas: 15)\n 26688: a1 = u64 [s1 + 0x380]\n 26692: a2 = u64 [s1 + 0x378]\n 26696: a0 = u64 [s1 + 0x370]\n 26700: s1 = u64 [s1 + 0x368]\n 26704: u64 [sp + 0x28] = a0\n 26707: u64 [sp + 0x30] = a1\n 26710: a0 = a0 | a1\n 26713: a1 = s1 | a2\n 26716: a1 = a1 | a0\n 26719: a1 = a1 >> 0x20\n 26722: u64 [sp + 0x38] = a2\n 26725: a0 = a0 | a2\n 26728: a0 = a0 << 0x20\n 26731: a0 = a0 | a1\n 26734: jump @368 if a0 == 0\n      : @367 (gas: 1)\n 26737: jump @781\n      : @368 (gas: 4)\n 26740: i32 a0 = s1 + 0\n 26742: a1 = 0x20\n 26745: u64 [sp + 0x18] = a0\n 26748: ra = 296, jump @0\n      : @369 [@dyn 148] (gas: 44)\n 26754: u8 [a0 + 31] = 0xb\n 26758: a1 = u64 [sp + 0x30]\n 26761: a2 = u64 [sp + 0x38]\n 26764: a2 = a2 | a1\n 26767: a1 = 0x100000000\n 26777: u64 [sp + 0x20] = a1\n 26780: a1 = 0xffffffe0\n 26790: u64 [sp + 0x10] = s1\n 26793: a1 = s1 <u a1\n 26796: s1 = u64 [sp + 0x28]\n 26799: a1 = 0 if s1 != 0\n 26801: a1 = 0 if a2 != 0\n 26803: u8 [a0 + 30] = 0\n 26806: u8 [a0 + 29] = 0\n 26809: u8 [a0 + 28] = 0\n 26812: u8 [a0 + 27] = 0\n 26815: u8 [a0 + 26] = 0\n 26818: u8 [a0 + 25] = 0\n 26821: u8 [a0 + 24] = 0\n 26824: u8 [a0 + 23] = 0\n 26827: u8 [a0 + 22] = 0\n 26830: u8 [a0 + 21] = 0\n 26833: u8 [a0 + 20] = 0\n 26836: u8 [a0 + 19] = 0\n 26839: u8 [a0 + 18] = 0\n 26842: u8 [a0 + 17] = 0\n 26845: u8 [a0 + 16] = 0\n 26848: u8 [a0 + 15] = 0\n 26851: u8 [a0 + 14] = 0\n 26854: u8 [a0 + 13] = 0\n 26857: u8 [a0 + 12] = 0\n 26860: u8 [a0 + 11] = 0\n 26863: u8 [a0 + 10] = 0\n 26866: u8 [a0 + 9] = 0\n 26869: u8 [a0 + 8] = 0\n 26872: u8 [a0 + 7] = 0\n 26875: u8 [a0 + 6] = 0\n 26878: u8 [a0 + 5] = 0\n 26881: u8 [a0 + 4] = 0\n 26884: u8 [a0 + 3] = 0\n 26887: u8 [a0 + 2] = 0\n 26890: u8 [a0 + 1] = 0\n 26893: u8 [a0 + 0] = 0\n 26895: jump @371 if a1 != 0\n      : @370 (gas: 1)\n 26898: jump @781\n      : @371 (gas: 4)\n 26901: a0 = u64 [sp + 0x18]\n 26904: i32 a0 = a0 + 0x20\n 26907: a1 = 0x20\n 26910: ra = 298, jump @0\n      : @372 [@dyn 149] (gas: 41)\n 26916: u8 [a0 + 31] = 0\n 26919: u8 [a0 + 30] = 0\n 26922: u8 [a0 + 29] = 0\n 26925: u8 [a0 + 28] = 0\n 26928: u8 [a0 + 27] = 0\n 26931: u8 [a0 + 26] = 0\n 26934: u8 [a0 + 25] = 0\n 26937: u8 [a0 + 24] = 0\n 26940: u8 [a0 + 23] = 0\n 26943: u8 [a0 + 22] = 0\n 26946: u8 [a0 + 21] = 0\n 26949: u8 [a0 + 20] = 0\n 26952: u8 [a0 + 19] = 0\n 26955: u8 [a0 + 18] = 0\n 26958: u8 [a0 + 17] = 0\n 26961: u8 [a0 + 16] = 0\n 26964: u8 [a0 + 15] = 0\n 26967: u8 [a0 + 14] = 0\n 26970: u8 [a0 + 13] = 0\n 26973: u8 [a0 + 12] = 0\n 26976: u8 [a0 + 11] = 0\n 26979: u8 [a0 + 10] = 0x65\n 26983: u8 [a0 + 9] = 0x74\n 26987: u8 [a0 + 8] = 0x61\n 26991: u8 [a0 + 7] = 0x72\n 26995: u8 [a0 + 6] = 0x65\n 26999: u8 [a0 + 5] = 0x64\n 27003: u8 [a0 + 4] = 0x69\n 27007: u8 [a0 + 3] = 0x73\n 27011: u8 [a0 + 2] = 0x6e\n 27015: u8 [a0 + 1] = 0x6f\n 27019: a2 = u64 [sp + 0x20]\n 27022: a2 = a2 + 0xfffffffffffffe40\n 27026: a3 = u64 [sp + 0x68]\n 27029: a2 = a3 <u a2\n 27032: a3 = u64 [sp + 0x60]\n 27035: a2 = 0 if a3 != 0\n 27037: a3 = u64 [sp + 0x50]\n 27040: a2 = 0 if a3 != 0\n 27042: u8 [a0 + 0] = 0x63\n 27045: jump @374 if a2 != 0\n      : @373 (gas: 1)\n 27048: jump @781\n      : @374 (gas: 4)\n 27051: a0 = u64 [sp + 0x58]\n 27054: i32 a0 = a0 + 0x1c0\n 27058: a1 = 0x20\n 27061: ra = 300, jump @0\n      : @375 [@dyn 150] (gas: 77)\n 27067: a1 = u64 [sp + 0x30]\n 27070: a1 = reverse a1\n 27072: a2 = u64 [sp + 0x38]\n 27075: a2 = reverse a2\n 27077: a3 = reverse s1\n 27079: a4 = u64 [sp + 0x10]\n 27082: a4 = reverse a4\n 27084: a5 = a4 >> 0x38\n 27087: u8 [a0 + 0x1f] = a5\n 27090: a5 = a4 >> 0x30\n 27093: u8 [a0 + 0x1e] = a5\n 27096: a5 = a4 >> 0x28\n 27099: u8 [a0 + 0x1d] = a5\n 27102: a5 = a4 >> 0x20\n 27105: u8 [a0 + 0x1c] = a5\n 27108: a5 = a4 >> 0x18\n 27111: u8 [a0 + 0x1b] = a5\n 27114: a5 = a4 >> 0x10\n 27117: u8 [a0 + 0x1a] = a5\n 27120: a5 = a4 >> 0x8\n 27123: u8 [a0 + 0x19] = a5\n 27126: u8 [a0 + 0x18] = a4\n 27129: u8 [a0 + 0x10] = a3\n 27132: a4 = a3 >> 0x38\n 27135: u8 [a0 + 0x17] = a4\n 27138: a4 = a3 >> 0x30\n 27141: u8 [a0 + 0x16] = a4\n 27144: a4 = a3 >> 0x28\n 27147: u8 [a0 + 0x15] = a4\n 27150: a4 = a3 >> 0x20\n 27153: u8 [a0 + 0x14] = a4\n 27156: a4 = a3 >> 0x18\n 27159: u8 [a0 + 0x13] = a4\n 27162: a4 = a3 >> 0x10\n 27165: u8 [a0 + 0x12] = a4\n 27168: a3 = a3 >> 0x8\n 27171: u8 [a0 + 0x11] = a3\n 27174: u8 [a0 + 0x8] = a2\n 27177: a3 = a2 >> 0x38\n 27180: u8 [a0 + 0xf] = a3\n 27183: a3 = a2 >> 0x30\n 27186: u8 [a0 + 0xe] = a3\n 27189: a3 = a2 >> 0x28\n 27192: u8 [a0 + 0xd] = a3\n 27195: a3 = a2 >> 0x20\n 27198: u8 [a0 + 0xc] = a3\n 27201: a3 = a2 >> 0x18\n 27204: u8 [a0 + 0xb] = a3\n 27207: a3 = a2 >> 0x10\n 27210: u8 [a0 + 0xa] = a3\n 27213: a2 = a2 >> 0x8\n 27216: u8 [a0 + 0x9] = a2\n 27219: u8 [a0] = a1\n 27221: a2 = a1 >> 0x38\n 27224: u8 [a0 + 0x7] = a2\n 27227: a2 = a1 >> 0x30\n 27230: u8 [a0 + 0x6] = a2\n 27233: a2 = a1 >> 0x28\n 27236: u8 [a0 + 0x5] = a2\n 27239: a2 = a1 >> 0x20\n 27242: u8 [a0 + 0x4] = a2\n 27245: a2 = a1 >> 0x18\n 27248: u8 [a0 + 0x3] = a2\n 27251: a2 = a1 >> 0x10\n 27254: u8 [a0 + 0x2] = a2\n 27257: a1 = a1 >> 0x8\n 27260: u8 [a0 + 0x1] = a1\n 27263: s1 = sp + 0x7e8\n 27267: u64 [s1 + 800] = 0\n 27271: u64 [s1 + 792] = 0\n 27275: u64 [s1 + 776] = 0x40\n 27280: a0 = sp + 0x7ff\n 27284: a0 = a0 + 0x311\n 27288: a1 = sp + 0x7ff\n 27292: a1 = a1 + 0x2f1\n 27296: u64 [s1 + 784] = 0\n 27300: ra = 302, jump @56\n      : @376 [@dyn 151] (gas: 15)\n 27306: a1 = u64 [s1 + 0x340]\n 27310: a2 = u64 [s1 + 0x338]\n 27314: a0 = u64 [s1 + 0x330]\n 27318: s1 = u64 [s1 + 0x328]\n 27322: u64 [sp + 0x28] = a0\n 27325: u64 [sp + 0x30] = a1\n 27328: a0 = a0 | a1\n 27331: a1 = s1 | a2\n 27334: a1 = a1 | a0\n 27337: a1 = a1 >> 0x20\n 27340: u64 [sp + 0x38] = a2\n 27343: a0 = a0 | a2\n 27346: a0 = a0 << 0x20\n 27349: a0 = a0 | a1\n 27352: jump @378 if a0 == 0\n      : @377 (gas: 1)\n 27355: jump @781\n      : @378 (gas: 4)\n 27358: i32 a0 = s1 + 0\n 27360: a1 = 0x20\n 27363: u64 [sp + 0x20] = a0\n 27366: ra = 304, jump @0\n      : @379 [@dyn 152] (gas: 44)\n 27372: u8 [a0 + 31] = 0x4\n 27376: a1 = u64 [sp + 0x30]\n 27379: a2 = u64 [sp + 0x38]\n 27382: a2 = a2 | a1\n 27385: a1 = 0x100000000\n 27395: u64 [sp + 0x18] = a1\n 27398: a1 = 0xffffffe0\n 27408: u64 [sp + 0x10] = s1\n 27411: a1 = s1 <u a1\n 27414: s1 = u64 [sp + 0x28]\n 27417: a1 = 0 if s1 != 0\n 27419: a1 = 0 if a2 != 0\n 27421: u8 [a0 + 30] = 0\n 27424: u8 [a0 + 29] = 0\n 27427: u8 [a0 + 28] = 0\n 27430: u8 [a0 + 27] = 0\n 27433: u8 [a0 + 26] = 0\n 27436: u8 [a0 + 25] = 0\n 27439: u8 [a0 + 24] = 0\n 27442: u8 [a0 + 23] = 0\n 27445: u8 [a0 + 22] = 0\n 27448: u8 [a0 + 21] = 0\n 27451: u8 [a0 + 20] = 0\n 27454: u8 [a0 + 19] = 0\n 27457: u8 [a0 + 18] = 0\n 27460: u8 [a0 + 17] = 0\n 27463: u8 [a0 + 16] = 0\n 27466: u8 [a0 + 15] = 0\n 27469: u8 [a0 + 14] = 0\n 27472: u8 [a0 + 13] = 0\n 27475: u8 [a0 + 12] = 0\n 27478: u8 [a0 + 11] = 0\n 27481: u8 [a0 + 10] = 0\n 27484: u8 [a0 + 9] = 0\n 27487: u8 [a0 + 8] = 0\n 27490: u8 [a0 + 7] = 0\n 27493: u8 [a0 + 6] = 0\n 27496: u8 [a0 + 5] = 0\n 27499: u8 [a0 + 4] = 0\n 27502: u8 [a0 + 3] = 0\n 27505: u8 [a0 + 2] = 0\n 27508: u8 [a0 + 1] = 0\n 27511: u8 [a0 + 0] = 0\n 27513: jump @381 if a1 != 0\n      : @380 (gas: 1)\n 27516: jump @781\n      : @381 (gas: 4)\n 27519: a0 = u64 [sp + 0x20]\n 27522: i32 a0 = a0 + 0x20\n 27525: a1 = 0x20\n 27528: ra = 306, jump @0\n      : @382 [@dyn 153] (gas: 41)\n 27534: u8 [a0 + 31] = 0\n 27537: u8 [a0 + 30] = 0\n 27540: u8 [a0 + 29] = 0\n 27543: u8 [a0 + 28] = 0\n 27546: u8 [a0 + 27] = 0\n 27549: u8 [a0 + 26] = 0\n 27552: u8 [a0 + 25] = 0\n 27555: u8 [a0 + 24] = 0\n 27558: u8 [a0 + 23] = 0\n 27561: u8 [a0 + 22] = 0\n 27564: u8 [a0 + 21] = 0\n 27567: u8 [a0 + 20] = 0\n 27570: u8 [a0 + 19] = 0\n 27573: u8 [a0 + 18] = 0\n 27576: u8 [a0 + 17] = 0\n 27579: u8 [a0 + 16] = 0\n 27582: u8 [a0 + 15] = 0\n 27585: u8 [a0 + 14] = 0\n 27588: u8 [a0 + 13] = 0\n 27591: u8 [a0 + 12] = 0\n 27594: u8 [a0 + 11] = 0\n 27597: u8 [a0 + 10] = 0\n 27600: u8 [a0 + 9] = 0\n 27603: u8 [a0 + 8] = 0\n 27606: u8 [a0 + 7] = 0\n 27609: u8 [a0 + 6] = 0\n 27612: u8 [a0 + 5] = 0\n 27615: u8 [a0 + 4] = 0\n 27618: u8 [a0 + 3] = 0x6c\n 27622: u8 [a0 + 2] = 0x6f\n 27626: u8 [a0 + 1] = 0x6f\n 27630: a2 = u64 [sp + 0x18]\n 27633: a2 = a2 + 0xfffffffffffffe20\n 27637: a3 = u64 [sp + 0x68]\n 27640: a2 = a3 <u a2\n 27643: a3 = u64 [sp + 0x60]\n 27646: a2 = 0 if a3 != 0\n 27648: a3 = u64 [sp + 0x50]\n 27651: a2 = 0 if a3 != 0\n 27653: u8 [a0 + 0] = 0x63\n 27656: jump @384 if a2 != 0\n      : @383 (gas: 1)\n 27659: jump @781\n      : @384 (gas: 4)\n 27662: a0 = u64 [sp + 0x58]\n 27665: i32 a0 = a0 + 0x1e0\n 27669: a1 = 0x20\n 27672: ra = 308, jump @0\n      : @385 [@dyn 154] (gas: 77)\n 27678: a1 = u64 [sp + 0x30]\n 27681: a1 = reverse a1\n 27683: a2 = u64 [sp + 0x38]\n 27686: a2 = reverse a2\n 27688: a3 = reverse s1\n 27690: a4 = u64 [sp + 0x10]\n 27693: a4 = reverse a4\n 27695: a5 = a4 >> 0x38\n 27698: u8 [a0 + 0x1f] = a5\n 27701: a5 = a4 >> 0x30\n 27704: u8 [a0 + 0x1e] = a5\n 27707: a5 = a4 >> 0x28\n 27710: u8 [a0 + 0x1d] = a5\n 27713: a5 = a4 >> 0x20\n 27716: u8 [a0 + 0x1c] = a5\n 27719: a5 = a4 >> 0x18\n 27722: u8 [a0 + 0x1b] = a5\n 27725: a5 = a4 >> 0x10\n 27728: u8 [a0 + 0x1a] = a5\n 27731: a5 = a4 >> 0x8\n 27734: u8 [a0 + 0x19] = a5\n 27737: u8 [a0 + 0x18] = a4\n 27740: u8 [a0 + 0x10] = a3\n 27743: a4 = a3 >> 0x38\n 27746: u8 [a0 + 0x17] = a4\n 27749: a4 = a3 >> 0x30\n 27752: u8 [a0 + 0x16] = a4\n 27755: a4 = a3 >> 0x28\n 27758: u8 [a0 + 0x15] = a4\n 27761: a4 = a3 >> 0x20\n 27764: u8 [a0 + 0x14] = a4\n 27767: a4 = a3 >> 0x18\n 27770: u8 [a0 + 0x13] = a4\n 27773: a4 = a3 >> 0x10\n 27776: u8 [a0 + 0x12] = a4\n 27779: a3 = a3 >> 0x8\n 27782: u8 [a0 + 0x11] = a3\n 27785: u8 [a0 + 0x8] = a2\n 27788: a3 = a2 >> 0x38\n 27791: u8 [a0 + 0xf] = a3\n 27794: a3 = a2 >> 0x30\n 27797: u8 [a0 + 0xe] = a3\n 27800: a3 = a2 >> 0x28\n 27803: u8 [a0 + 0xd] = a3\n 27806: a3 = a2 >> 0x20\n 27809: u8 [a0 + 0xc] = a3\n 27812: a3 = a2 >> 0x18\n 27815: u8 [a0 + 0xb] = a3\n 27818: a3 = a2 >> 0x10\n 27821: u8 [a0 + 0xa] = a3\n 27824: a2 = a2 >> 0x8\n 27827: u8 [a0 + 0x9] = a2\n 27830: u8 [a0] = a1\n 27832: a2 = a1 >> 0x38\n 27835: u8 [a0 + 0x7] = a2\n 27838: a2 = a1 >> 0x30\n 27841: u8 [a0 + 0x6] = a2\n 27844: a2 = a1 >> 0x28\n 27847: u8 [a0 + 0x5] = a2\n 27850: a2 = a1 >> 0x20\n 27853: u8 [a0 + 0x4] = a2\n 27856: a2 = a1 >> 0x18\n 27859: u8 [a0 + 0x3] = a2\n 27862: a2 = a1 >> 0x10\n 27865: u8 [a0 + 0x2] = a2\n 27868: a1 = a1 >> 0x8\n 27871: u8 [a0 + 0x1] = a1\n 27874: s1 = sp + 0x7e8\n 27878: u64 [s1 + 736] = 0\n 27882: u64 [s1 + 728] = 0\n 27886: u64 [s1 + 712] = 0x40\n 27891: a0 = sp + 0x7ff\n 27895: a0 = a0 + 0x2d1\n 27899: a1 = sp + 0x7ff\n 27903: a1 = a1 + 0x2b1\n 27907: u64 [s1 + 720] = 0\n 27911: ra = 310, jump @56\n      : @386 [@dyn 155] (gas: 15)\n 27917: a1 = u64 [s1 + 0x300]\n 27921: a2 = u64 [s1 + 0x2f8]\n 27925: a0 = u64 [s1 + 0x2f0]\n 27929: s1 = u64 [s1 + 0x2e8]\n 27933: u64 [sp + 0x28] = a0\n 27936: u64 [sp + 0x30] = a1\n 27939: a0 = a0 | a1\n 27942: a1 = s1 | a2\n 27945: a1 = a1 | a0\n 27948: a1 = a1 >> 0x20\n 27951: u64 [sp + 0x38] = a2\n 27954: a0 = a0 | a2\n 27957: a0 = a0 << 0x20\n 27960: a0 = a0 | a1\n 27963: jump @388 if a0 == 0\n      : @387 (gas: 1)\n 27966: jump @781\n      : @388 (gas: 4)\n 27969: i32 a0 = s1 + 0\n 27971: a1 = 0x20\n 27974: u64 [sp + 0x18] = a0\n 27977: ra = 312, jump @0\n      : @389 [@dyn 156] (gas: 44)\n 27983: u8 [a0 + 31] = 0xa\n 27987: a1 = u64 [sp + 0x30]\n 27990: a2 = u64 [sp + 0x38]\n 27993: a2 = a2 | a1\n 27996: a1 = 0x100000000\n 28006: u64 [sp + 0x20] = a1\n 28009: a1 = 0xffffffe0\n 28019: u64 [sp + 0x10] = s1\n 28022: a1 = s1 <u a1\n 28025: s1 = u64 [sp + 0x28]\n 28028: a1 = 0 if s1 != 0\n 28030: a1 = 0 if a2 != 0\n 28032: u8 [a0 + 30] = 0\n 28035: u8 [a0 + 29] = 0\n 28038: u8 [a0 + 28] = 0\n 28041: u8 [a0 + 27] = 0\n 28044: u8 [a0 + 26] = 0\n 28047: u8 [a0 + 25] = 0\n 28050: u8 [a0 + 24] = 0\n 28053: u8 [a0 + 23] = 0\n 28056: u8 [a0 + 22] = 0\n 28059: u8 [a0 + 21] = 0\n 28062: u8 [a0 + 20] = 0\n 28065: u8 [a0 + 19] = 0\n 28068: u8 [a0 + 18] = 0\n 28071: u8 [a0 + 17] = 0\n 28074: u8 [a0 + 16] = 0\n 28077: u8 [a0 + 15] = 0\n 28080: u8 [a0 + 14] = 0\n 28083: u8 [a0 + 13] = 0\n 28086: u8 [a0 + 12] = 0\n 28089: u8 [a0 + 11] = 0\n 28092: u8 [a0 + 10] = 0\n 28095: u8 [a0 + 9] = 0\n 28098: u8 [a0 + 8] = 0\n 28101: u8 [a0 + 7] = 0\n 28104: u8 [a0 + 6] = 0\n 28107: u8 [a0 + 5] = 0\n 28110: u8 [a0 + 4] = 0\n 28113: u8 [a0 + 3] = 0\n 28116: u8 [a0 + 2] = 0\n 28119: u8 [a0 + 1] = 0\n 28122: u8 [a0 + 0] = 0\n 28124: jump @391 if a1 != 0\n      : @390 (gas: 1)\n 28127: jump @781\n      : @391 (gas: 4)\n 28130: a0 = u64 [sp + 0x18]\n 28133: i32 a0 = a0 + 0x20\n 28136: a1 = 0x20\n 28139: ra = 314, jump @0\n      : @392 [@dyn 157] (gas: 41)\n 28145: u8 [a0 + 31] = 0\n 28148: u8 [a0 + 30] = 0\n 28151: u8 [a0 + 29] = 0\n 28154: u8 [a0 + 28] = 0\n 28157: u8 [a0 + 27] = 0\n 28160: u8 [a0 + 26] = 0\n 28163: u8 [a0 + 25] = 0\n 28166: u8 [a0 + 24] = 0\n 28169: u8 [a0 + 23] = 0\n 28172: u8 [a0 + 22] = 0\n 28175: u8 [a0 + 21] = 0\n 28178: u8 [a0 + 20] = 0\n 28181: u8 [a0 + 19] = 0\n 28184: u8 [a0 + 18] = 0\n 28187: u8 [a0 + 17] = 0\n 28190: u8 [a0 + 16] = 0\n 28193: u8 [a0 + 15] = 0\n 28196: u8 [a0 + 14] = 0\n 28199: u8 [a0 + 13] = 0\n 28202: u8 [a0 + 12] = 0\n 28205: u8 [a0 + 11] = 0\n 28208: u8 [a0 + 10] = 0\n 28211: u8 [a0 + 9] = 0x73\n 28215: u8 [a0 + 8] = 0x75\n 28219: u8 [a0 + 7] = 0x6f\n 28223: u8 [a0 + 6] = 0x65\n 28227: u8 [a0 + 5] = 0x67\n 28231: u8 [a0 + 4] = 0x61\n 28235: u8 [a0 + 3] = 0x72\n 28239: u8 [a0 + 2] = 0x75\n 28243: u8 [a0 + 1] = 0x6f\n 28247: a2 = u64 [sp + 0x20]\n 28250: a2 = a2 + 0xfffffffffffffe00\n 28254: a3 = u64 [sp + 0x68]\n 28257: a2 = a3 <u a2\n 28260: a3 = u64 [sp + 0x60]\n 28263: a2 = 0 if a3 != 0\n 28265: a3 = u64 [sp + 0x50]\n 28268: a2 = 0 if a3 != 0\n 28270: u8 [a0 + 0] = 0x63\n 28273: jump @394 if a2 != 0\n      : @393 (gas: 1)\n 28276: jump @781\n      : @394 (gas: 4)\n 28279: a0 = u64 [sp + 0x58]\n 28282: i32 a0 = a0 + 0x200\n 28286: a1 = 0x20\n 28289: ra = 316, jump @0\n      : @395 [@dyn 158] (gas: 77)\n 28295: a1 = u64 [sp + 0x30]\n 28298: a1 = reverse a1\n 28300: a2 = u64 [sp + 0x38]\n 28303: a2 = reverse a2\n 28305: a3 = reverse s1\n 28307: a4 = u64 [sp + 0x10]\n 28310: a4 = reverse a4\n 28312: a5 = a4 >> 0x38\n 28315: u8 [a0 + 0x1f] = a5\n 28318: a5 = a4 >> 0x30\n 28321: u8 [a0 + 0x1e] = a5\n 28324: a5 = a4 >> 0x28\n 28327: u8 [a0 + 0x1d] = a5\n 28330: a5 = a4 >> 0x20\n 28333: u8 [a0 + 0x1c] = a5\n 28336: a5 = a4 >> 0x18\n 28339: u8 [a0 + 0x1b] = a5\n 28342: a5 = a4 >> 0x10\n 28345: u8 [a0 + 0x1a] = a5\n 28348: a5 = a4 >> 0x8\n 28351: u8 [a0 + 0x19] = a5\n 28354: u8 [a0 + 0x18] = a4\n 28357: u8 [a0 + 0x10] = a3\n 28360: a4 = a3 >> 0x38\n 28363: u8 [a0 + 0x17] = a4\n 28366: a4 = a3 >> 0x30\n 28369: u8 [a0 + 0x16] = a4\n 28372: a4 = a3 >> 0x28\n 28375: u8 [a0 + 0x15] = a4\n 28378: a4 = a3 >> 0x20\n 28381: u8 [a0 + 0x14] = a4\n 28384: a4 = a3 >> 0x18\n 28387: u8 [a0 + 0x13] = a4\n 28390: a4 = a3 >> 0x10\n 28393: u8 [a0 + 0x12] = a4\n 28396: a3 = a3 >> 0x8\n 28399: u8 [a0 + 0x11] = a3\n 28402: u8 [a0 + 0x8] = a2\n 28405: a3 = a2 >> 0x38\n 28408: u8 [a0 + 0xf] = a3\n 28411: a3 = a2 >> 0x30\n 28414: u8 [a0 + 0xe] = a3\n 28417: a3 = a2 >> 0x28\n 28420: u8 [a0 + 0xd] = a3\n 28423: a3 = a2 >> 0x20\n 28426: u8 [a0 + 0xc] = a3\n 28429: a3 = a2 >> 0x18\n 28432: u8 [a0 + 0xb] = a3\n 28435: a3 = a2 >> 0x10\n 28438: u8 [a0 + 0xa] = a3\n 28441: a2 = a2 >> 0x8\n 28444: u8 [a0 + 0x9] = a2\n 28447: u8 [a0] = a1\n 28449: a2 = a1 >> 0x38\n 28452: u8 [a0 + 0x7] = a2\n 28455: a2 = a1 >> 0x30\n 28458: u8 [a0 + 0x6] = a2\n 28461: a2 = a1 >> 0x28\n 28464: u8 [a0 + 0x5] = a2\n 28467: a2 = a1 >> 0x20\n 28470: u8 [a0 + 0x4] = a2\n 28473: a2 = a1 >> 0x18\n 28476: u8 [a0 + 0x3] = a2\n 28479: a2 = a1 >> 0x10\n 28482: u8 [a0 + 0x2] = a2\n 28485: a1 = a1 >> 0x8\n 28488: u8 [a0 + 0x1] = a1\n 28491: s1 = sp + 0x7e8\n 28495: u64 [s1 + 672] = 0\n 28499: u64 [s1 + 664] = 0\n 28503: u64 [s1 + 648] = 0x40\n 28508: a0 = sp + 0x7ff\n 28512: a0 = a0 + 0x291\n 28516: a1 = sp + 0x7ff\n 28520: a1 = a1 + 0x271\n 28524: u64 [s1 + 656] = 0\n 28528: ra = 318, jump @56\n      : @396 [@dyn 159] (gas: 15)\n 28534: a1 = u64 [s1 + 0x2c0]\n 28538: a2 = u64 [s1 + 0x2b8]\n 28542: a0 = u64 [s1 + 0x2b0]\n 28546: s1 = u64 [s1 + 0x2a8]\n 28550: u64 [sp + 0x28] = a0\n 28553: u64 [sp + 0x30] = a1\n 28556: a0 = a0 | a1\n 28559: a1 = s1 | a2\n 28562: a1 = a1 | a0\n 28565: a1 = a1 >> 0x20\n 28568: u64 [sp + 0x38] = a2\n 28571: a0 = a0 | a2\n 28574: a0 = a0 << 0x20\n 28577: a0 = a0 | a1\n 28580: jump @398 if a0 == 0\n      : @397 (gas: 1)\n 28583: jump @781\n      : @398 (gas: 4)\n 28586: i32 a0 = s1 + 0\n 28588: a1 = 0x20\n 28591: u64 [sp + 0x18] = a0\n 28594: ra = 320, jump @0\n      : @399 [@dyn 160] (gas: 44)\n 28600: u8 [a0 + 31] = 0x8\n 28604: a1 = u64 [sp + 0x30]\n 28607: a2 = u64 [sp + 0x38]\n 28610: a2 = a2 | a1\n 28613: a1 = 0x100000000\n 28623: u64 [sp + 0x20] = a1\n 28626: a1 = 0xffffffe0\n 28636: u64 [sp + 0x10] = s1\n 28639: a1 = s1 <u a1\n 28642: s1 = u64 [sp + 0x28]\n 28645: a1 = 0 if s1 != 0\n 28647: a1 = 0 if a2 != 0\n 28649: u8 [a0 + 30] = 0\n 28652: u8 [a0 + 29] = 0\n 28655: u8 [a0 + 28] = 0\n 28658: u8 [a0 + 27] = 0\n 28661: u8 [a0 + 26] = 0\n 28664: u8 [a0 + 25] = 0\n 28667: u8 [a0 + 24] = 0\n 28670: u8 [a0 + 23] = 0\n 28673: u8 [a0 + 22] = 0\n 28676: u8 [a0 + 21] = 0\n 28679: u8 [a0 + 20] = 0\n 28682: u8 [a0 + 19] = 0\n 28685: u8 [a0 + 18] = 0\n 28688: u8 [a0 + 17] = 0\n 28691: u8 [a0 + 16] = 0\n 28694: u8 [a0 + 15] = 0\n 28697: u8 [a0 + 14] = 0\n 28700: u8 [a0 + 13] = 0\n 28703: u8 [a0 + 12] = 0\n 28706: u8 [a0 + 11] = 0\n 28709: u8 [a0 + 10] = 0\n 28712: u8 [a0 + 9] = 0\n 28715: u8 [a0 + 8] = 0\n 28718: u8 [a0 + 7] = 0\n 28721: u8 [a0 + 6] = 0\n 28724: u8 [a0 + 5] = 0\n 28727: u8 [a0 + 4] = 0\n 28730: u8 [a0 + 3] = 0\n 28733: u8 [a0 + 2] = 0\n 28736: u8 [a0 + 1] = 0\n 28739: u8 [a0 + 0] = 0\n 28741: jump @401 if a1 != 0\n      : @400 (gas: 1)\n 28744: jump @781\n      : @401 (gas: 4)\n 28747: a0 = u64 [sp + 0x18]\n 28750: i32 a0 = a0 + 0x20\n 28753: a1 = 0x20\n 28756: ra = 322, jump @0\n      : @402 [@dyn 161] (gas: 41)\n 28762: u8 [a0 + 31] = 0\n 28765: u8 [a0 + 30] = 0\n 28768: u8 [a0 + 29] = 0\n 28771: u8 [a0 + 28] = 0\n 28774: u8 [a0 + 27] = 0\n 28777: u8 [a0 + 26] = 0\n 28780: u8 [a0 + 25] = 0\n 28783: u8 [a0 + 24] = 0\n 28786: u8 [a0 + 23] = 0\n 28789: u8 [a0 + 22] = 0\n 28792: u8 [a0 + 21] = 0\n 28795: u8 [a0 + 20] = 0\n 28798: u8 [a0 + 19] = 0\n 28801: u8 [a0 + 18] = 0\n 28804: u8 [a0 + 17] = 0\n 28807: u8 [a0 + 16] = 0\n 28810: u8 [a0 + 15] = 0\n 28813: u8 [a0 + 14] = 0\n 28816: u8 [a0 + 13] = 0\n 28819: u8 [a0 + 12] = 0\n 28822: u8 [a0 + 11] = 0\n 28825: u8 [a0 + 10] = 0\n 28828: u8 [a0 + 9] = 0\n 28831: u8 [a0 + 8] = 0\n 28834: u8 [a0 + 7] = 0x65\n 28838: u8 [a0 + 6] = 0x76\n 28842: u8 [a0 + 5] = 0x69\n 28846: u8 [a0 + 4] = 0x74\n 28850: u8 [a0 + 3] = 0x61\n 28854: u8 [a0 + 2] = 0x65\n 28858: u8 [a0 + 1] = 0x72\n 28862: a2 = u64 [sp + 0x20]\n 28865: a2 = a2 + 0xfffffffffffffde0\n 28869: a3 = u64 [sp + 0x68]\n 28872: a2 = a3 <u a2\n 28875: a3 = u64 [sp + 0x60]\n 28878: a2 = 0 if a3 != 0\n 28880: a3 = u64 [sp + 0x50]\n 28883: a2 = 0 if a3 != 0\n 28885: u8 [a0 + 0] = 0x63\n 28888: jump @404 if a2 != 0\n      : @403 (gas: 1)\n 28891: jump @781\n      : @404 (gas: 4)\n 28894: a0 = u64 [sp + 0x58]\n 28897: i32 a0 = a0 + 0x220\n 28901: a1 = 0x20\n 28904: ra = 324, jump @0\n      : @405 [@dyn 162] (gas: 77)\n 28910: a1 = u64 [sp + 0x30]\n 28913: a1 = reverse a1\n 28915: a2 = u64 [sp + 0x38]\n 28918: a2 = reverse a2\n 28920: a3 = reverse s1\n 28922: a4 = u64 [sp + 0x10]\n 28925: a4 = reverse a4\n 28927: a5 = a4 >> 0x38\n 28930: u8 [a0 + 0x1f] = a5\n 28933: a5 = a4 >> 0x30\n 28936: u8 [a0 + 0x1e] = a5\n 28939: a5 = a4 >> 0x28\n 28942: u8 [a0 + 0x1d] = a5\n 28945: a5 = a4 >> 0x20\n 28948: u8 [a0 + 0x1c] = a5\n 28951: a5 = a4 >> 0x18\n 28954: u8 [a0 + 0x1b] = a5\n 28957: a5 = a4 >> 0x10\n 28960: u8 [a0 + 0x1a] = a5\n 28963: a5 = a4 >> 0x8\n 28966: u8 [a0 + 0x19] = a5\n 28969: u8 [a0 + 0x18] = a4\n 28972: u8 [a0 + 0x10] = a3\n 28975: a4 = a3 >> 0x38\n 28978: u8 [a0 + 0x17] = a4\n 28981: a4 = a3 >> 0x30\n 28984: u8 [a0 + 0x16] = a4\n 28987: a4 = a3 >> 0x28\n 28990: u8 [a0 + 0x15] = a4\n 28993: a4 = a3 >> 0x20\n 28996: u8 [a0 + 0x14] = a4\n 28999: a4 = a3 >> 0x18\n 29002: u8 [a0 + 0x13] = a4\n 29005: a4 = a3 >> 0x10\n 29008: u8 [a0 + 0x12] = a4\n 29011: a3 = a3 >> 0x8\n 29014: u8 [a0 + 0x11] = a3\n 29017: u8 [a0 + 0x8] = a2\n 29020: a3 = a2 >> 0x38\n 29023: u8 [a0 + 0xf] = a3\n 29026: a3 = a2 >> 0x30\n 29029: u8 [a0 + 0xe] = a3\n 29032: a3 = a2 >> 0x28\n 29035: u8 [a0 + 0xd] = a3\n 29038: a3 = a2 >> 0x20\n 29041: u8 [a0 + 0xc] = a3\n 29044: a3 = a2 >> 0x18\n 29047: u8 [a0 + 0xb] = a3\n 29050: a3 = a2 >> 0x10\n 29053: u8 [a0 + 0xa] = a3\n 29056: a2 = a2 >> 0x8\n 29059: u8 [a0 + 0x9] = a2\n 29062: u8 [a0] = a1\n 29064: a2 = a1 >> 0x38\n 29067: u8 [a0 + 0x7] = a2\n 29070: a2 = a1 >> 0x30\n 29073: u8 [a0 + 0x6] = a2\n 29076: a2 = a1 >> 0x28\n 29079: u8 [a0 + 0x5] = a2\n 29082: a2 = a1 >> 0x20\n 29085: u8 [a0 + 0x4] = a2\n 29088: a2 = a1 >> 0x18\n 29091: u8 [a0 + 0x3] = a2\n 29094: a2 = a1 >> 0x10\n 29097: u8 [a0 + 0x2] = a2\n 29100: a1 = a1 >> 0x8\n 29103: u8 [a0 + 0x1] = a1\n 29106: s1 = sp + 0x7e8\n 29110: u64 [s1 + 608] = 0\n 29114: u64 [s1 + 600] = 0\n 29118: u64 [s1 + 584] = 0x40\n 29123: a0 = sp + 0x7ff\n 29127: a0 = a0 + 0x251\n 29131: a1 = sp + 0x7ff\n 29135: a1 = a1 + 0x231\n 29139: u64 [s1 + 592] = 0\n 29143: ra = 326, jump @56\n      : @406 [@dyn 163] (gas: 15)\n 29149: a1 = u64 [s1 + 0x280]\n 29153: a2 = u64 [s1 + 0x278]\n 29157: a0 = u64 [s1 + 0x270]\n 29161: s1 = u64 [s1 + 0x268]\n 29165: u64 [sp + 0x28] = a0\n 29168: u64 [sp + 0x30] = a1\n 29171: a0 = a0 | a1\n 29174: a1 = s1 | a2\n 29177: a1 = a1 | a0\n 29180: a1 = a1 >> 0x20\n 29183: u64 [sp + 0x38] = a2\n 29186: a0 = a0 | a2\n 29189: a0 = a0 << 0x20\n 29192: a0 = a0 | a1\n 29195: jump @408 if a0 == 0\n      : @407 (gas: 1)\n 29198: jump @781\n      : @408 (gas: 4)\n 29201: i32 a0 = s1 + 0\n 29203: a1 = 0x20\n 29206: u64 [sp + 0x18] = a0\n 29209: ra = 328, jump @0\n      : @409 [@dyn 164] (gas: 44)\n 29215: u8 [a0 + 31] = 0x7\n 29219: a1 = u64 [sp + 0x30]\n 29222: a2 = u64 [sp + 0x38]\n 29225: a2 = a2 | a1\n 29228: a1 = 0x100000000\n 29238: u64 [sp + 0x20] = a1\n 29241: a1 = 0xffffffe0\n 29251: u64 [sp + 0x10] = s1\n 29254: a1 = s1 <u a1\n 29257: s1 = u64 [sp + 0x28]\n 29260: a1 = 0 if s1 != 0\n 29262: a1 = 0 if a2 != 0\n 29264: u8 [a0 + 30] = 0\n 29267: u8 [a0 + 29] = 0\n 29270: u8 [a0 + 28] = 0\n 29273: u8 [a0 + 27] = 0\n 29276: u8 [a0 + 26] = 0\n 29279: u8 [a0 + 25] = 0\n 29282: u8 [a0 + 24] = 0\n 29285: u8 [a0 + 23] = 0\n 29288: u8 [a0 + 22] = 0\n 29291: u8 [a0 + 21] = 0\n 29294: u8 [a0 + 20] = 0\n 29297: u8 [a0 + 19] = 0\n 29300: u8 [a0 + 18] = 0\n 29303: u8 [a0 + 17] = 0\n 29306: u8 [a0 + 16] = 0\n 29309: u8 [a0 + 15] = 0\n 29312: u8 [a0 + 14] = 0\n 29315: u8 [a0 + 13] = 0\n 29318: u8 [a0 + 12] = 0\n 29321: u8 [a0 + 11] = 0\n 29324: u8 [a0 + 10] = 0\n 29327: u8 [a0 + 9] = 0\n 29330: u8 [a0 + 8] = 0\n 29333: u8 [a0 + 7] = 0\n 29336: u8 [a0 + 6] = 0\n 29339: u8 [a0 + 5] = 0\n 29342: u8 [a0 + 4] = 0\n 29345: u8 [a0 + 3] = 0\n 29348: u8 [a0 + 2] = 0\n 29351: u8 [a0 + 1] = 0\n 29354: u8 [a0 + 0] = 0\n 29356: jump @411 if a1 != 0\n      : @410 (gas: 1)\n 29359: jump @781\n      : @411 (gas: 4)\n 29362: a0 = u64 [sp + 0x18]\n 29365: i32 a0 = a0 + 0x20\n 29368: a1 = 0x20\n 29371: ra = 330, jump @0\n      : @412 [@dyn 165] (gas: 41)\n 29377: u8 [a0 + 31] = 0\n 29380: u8 [a0 + 30] = 0\n 29383: u8 [a0 + 29] = 0\n 29386: u8 [a0 + 28] = 0\n 29389: u8 [a0 + 27] = 0\n 29392: u8 [a0 + 26] = 0\n 29395: u8 [a0 + 25] = 0\n 29398: u8 [a0 + 24] = 0\n 29401: u8 [a0 + 23] = 0\n 29404: u8 [a0 + 22] = 0\n 29407: u8 [a0 + 21] = 0\n 29410: u8 [a0 + 20] = 0\n 29413: u8 [a0 + 19] = 0\n 29416: u8 [a0 + 18] = 0\n 29419: u8 [a0 + 17] = 0\n 29422: u8 [a0 + 16] = 0\n 29425: u8 [a0 + 15] = 0\n 29428: u8 [a0 + 14] = 0\n 29431: u8 [a0 + 13] = 0\n 29434: u8 [a0 + 12] = 0\n 29437: u8 [a0 + 11] = 0\n 29440: u8 [a0 + 10] = 0\n 29443: u8 [a0 + 9] = 0\n 29446: u8 [a0 + 8] = 0\n 29449: u8 [a0 + 7] = 0\n 29452: u8 [a0 + 6] = 0x73\n 29456: u8 [a0 + 5] = 0x75\n 29460: u8 [a0 + 4] = 0x6f\n 29464: u8 [a0 + 3] = 0x69\n 29468: u8 [a0 + 2] = 0x72\n 29472: u8 [a0 + 1] = 0x75\n 29476: a2 = u64 [sp + 0x20]\n 29479: a2 = a2 + 0xfffffffffffffdc0\n 29483: a3 = u64 [sp + 0x68]\n 29486: a2 = a3 <u a2\n 29489: a3 = u64 [sp + 0x60]\n 29492: a2 = 0 if a3 != 0\n 29494: a3 = u64 [sp + 0x50]\n 29497: a2 = 0 if a3 != 0\n 29499: u8 [a0 + 0] = 0x63\n 29502: jump @414 if a2 != 0\n      : @413 (gas: 1)\n 29505: jump @781\n      : @414 (gas: 4)\n 29508: a0 = u64 [sp + 0x58]\n 29511: i32 a0 = a0 + 0x240\n 29515: a1 = 0x20\n 29518: ra = 332, jump @0\n      : @415 [@dyn 166] (gas: 77)\n 29524: a1 = u64 [sp + 0x30]\n 29527: a1 = reverse a1\n 29529: a2 = u64 [sp + 0x38]\n 29532: a2 = reverse a2\n 29534: a3 = reverse s1\n 29536: a4 = u64 [sp + 0x10]\n 29539: a4 = reverse a4\n 29541: a5 = a4 >> 0x38\n 29544: u8 [a0 + 0x1f] = a5\n 29547: a5 = a4 >> 0x30\n 29550: u8 [a0 + 0x1e] = a5\n 29553: a5 = a4 >> 0x28\n 29556: u8 [a0 + 0x1d] = a5\n 29559: a5 = a4 >> 0x20\n 29562: u8 [a0 + 0x1c] = a5\n 29565: a5 = a4 >> 0x18\n 29568: u8 [a0 + 0x1b] = a5\n 29571: a5 = a4 >> 0x10\n 29574: u8 [a0 + 0x1a] = a5\n 29577: a5 = a4 >> 0x8\n 29580: u8 [a0 + 0x19] = a5\n 29583: u8 [a0 + 0x18] = a4\n 29586: u8 [a0 + 0x10] = a3\n 29589: a4 = a3 >> 0x38\n 29592: u8 [a0 + 0x17] = a4\n 29595: a4 = a3 >> 0x30\n 29598: u8 [a0 + 0x16] = a4\n 29601: a4 = a3 >> 0x28\n 29604: u8 [a0 + 0x15] = a4\n 29607: a4 = a3 >> 0x20\n 29610: u8 [a0 + 0x14] = a4\n 29613: a4 = a3 >> 0x18\n 29616: u8 [a0 + 0x13] = a4\n 29619: a4 = a3 >> 0x10\n 29622: u8 [a0 + 0x12] = a4\n 29625: a3 = a3 >> 0x8\n 29628: u8 [a0 + 0x11] = a3\n 29631: u8 [a0 + 0x8] = a2\n 29634: a3 = a2 >> 0x38\n 29637: u8 [a0 + 0xf] = a3\n 29640: a3 = a2 >> 0x30\n 29643: u8 [a0 + 0xe] = a3\n 29646: a3 = a2 >> 0x28\n 29649: u8 [a0 + 0xd] = a3\n 29652: a3 = a2 >> 0x20\n 29655: u8 [a0 + 0xc] = a3\n 29658: a3 = a2 >> 0x18\n 29661: u8 [a0 + 0xb] = a3\n 29664: a3 = a2 >> 0x10\n 29667: u8 [a0 + 0xa] = a3\n 29670: a2 = a2 >> 0x8\n 29673: u8 [a0 + 0x9] = a2\n 29676: u8 [a0] = a1\n 29678: a2 = a1 >> 0x38\n 29681: u8 [a0 + 0x7] = a2\n 29684: a2 = a1 >> 0x30\n 29687: u8 [a0 + 0x6] = a2\n 29690: a2 = a1 >> 0x28\n 29693: u8 [a0 + 0x5] = a2\n 29696: a2 = a1 >> 0x20\n 29699: u8 [a0 + 0x4] = a2\n 29702: a2 = a1 >> 0x18\n 29705: u8 [a0 + 0x3] = a2\n 29708: a2 = a1 >> 0x10\n 29711: u8 [a0 + 0x2] = a2\n 29714: a1 = a1 >> 0x8\n 29717: u8 [a0 + 0x1] = a1\n 29720: s1 = sp + 0x7e8\n 29724: u64 [s1 + 544] = 0\n 29728: u64 [s1 + 536] = 0\n 29732: u64 [s1 + 520] = 0x40\n 29737: a0 = sp + 0x7ff\n 29741: a0 = a0 + 0x211\n 29745: a1 = sp + 0x7ff\n 29749: a1 = a1 + 0x1f1\n 29753: u64 [s1 + 528] = 0\n 29757: ra = 334, jump @56\n      : @416 [@dyn 167] (gas: 15)\n 29763: a1 = u64 [s1 + 0x240]\n 29767: a2 = u64 [s1 + 0x238]\n 29771: a0 = u64 [s1 + 0x230]\n 29775: s1 = u64 [s1 + 0x228]\n 29779: u64 [sp + 0x28] = a0\n 29782: u64 [sp + 0x30] = a1\n 29785: a0 = a0 | a1\n 29788: a1 = s1 | a2\n 29791: a1 = a1 | a0\n 29794: a1 = a1 >> 0x20\n 29797: u64 [sp + 0x38] = a2\n 29800: a0 = a0 | a2\n 29803: a0 = a0 << 0x20\n 29806: a0 = a0 | a1\n 29809: jump @418 if a0 == 0\n      : @417 (gas: 1)\n 29812: jump @781\n      : @418 (gas: 4)\n 29815: i32 a0 = s1 + 0\n 29817: a1 = 0x20\n 29820: u64 [sp + 0x18] = a0\n 29823: ra = 336, jump @0\n      : @419 [@dyn 168] (gas: 44)\n 29829: u8 [a0 + 31] = 0x6\n 29833: a1 = u64 [sp + 0x30]\n 29836: a2 = u64 [sp + 0x38]\n 29839: a2 = a2 | a1\n 29842: a1 = 0x100000000\n 29852: u64 [sp + 0x20] = a1\n 29855: a1 = 0xffffffe0\n 29865: u64 [sp + 0x10] = s1\n 29868: a1 = s1 <u a1\n 29871: s1 = u64 [sp + 0x28]\n 29874: a1 = 0 if s1 != 0\n 29876: a1 = 0 if a2 != 0\n 29878: u8 [a0 + 30] = 0\n 29881: u8 [a0 + 29] = 0\n 29884: u8 [a0 + 28] = 0\n 29887: u8 [a0 + 27] = 0\n 29890: u8 [a0 + 26] = 0\n 29893: u8 [a0 + 25] = 0\n 29896: u8 [a0 + 24] = 0\n 29899: u8 [a0 + 23] = 0\n 29902: u8 [a0 + 22] = 0\n 29905: u8 [a0 + 21] = 0\n 29908: u8 [a0 + 20] = 0\n 29911: u8 [a0 + 19] = 0\n 29914: u8 [a0 + 18] = 0\n 29917: u8 [a0 + 17] = 0\n 29920: u8 [a0 + 16] = 0\n 29923: u8 [a0 + 15] = 0\n 29926: u8 [a0 + 14] = 0\n 29929: u8 [a0 + 13] = 0\n 29932: u8 [a0 + 12] = 0\n 29935: u8 [a0 + 11] = 0\n 29938: u8 [a0 + 10] = 0\n 29941: u8 [a0 + 9] = 0\n 29944: u8 [a0 + 8] = 0\n 29947: u8 [a0 + 7] = 0\n 29950: u8 [a0 + 6] = 0\n 29953: u8 [a0 + 5] = 0\n 29956: u8 [a0 + 4] = 0\n 29959: u8 [a0 + 3] = 0\n 29962: u8 [a0 + 2] = 0\n 29965: u8 [a0 + 1] = 0\n 29968: u8 [a0 + 0] = 0\n 29970: jump @421 if a1 != 0\n      : @420 (gas: 1)\n 29973: jump @781\n      : @421 (gas: 4)\n 29976: a0 = u64 [sp + 0x18]\n 29979: i32 a0 = a0 + 0x20\n 29982: a1 = 0x20\n 29985: ra = 338, jump @0\n      : @422 [@dyn 169] (gas: 41)\n 29991: u8 [a0 + 31] = 0\n 29994: u8 [a0 + 30] = 0\n 29997: u8 [a0 + 29] = 0\n 30000: u8 [a0 + 28] = 0\n 30003: u8 [a0 + 27] = 0\n 30006: u8 [a0 + 26] = 0\n 30009: u8 [a0 + 25] = 0\n 30012: u8 [a0 + 24] = 0\n 30015: u8 [a0 + 23] = 0\n 30018: u8 [a0 + 22] = 0\n 30021: u8 [a0 + 21] = 0\n 30024: u8 [a0 + 20] = 0\n 30027: u8 [a0 + 19] = 0\n 30030: u8 [a0 + 18] = 0\n 30033: u8 [a0 + 17] = 0\n 30036: u8 [a0 + 16] = 0\n 30039: u8 [a0 + 15] = 0\n 30042: u8 [a0 + 14] = 0\n 30045: u8 [a0 + 13] = 0\n 30048: u8 [a0 + 12] = 0\n 30051: u8 [a0 + 11] = 0\n 30054: u8 [a0 + 10] = 0\n 30057: u8 [a0 + 9] = 0\n 30060: u8 [a0 + 8] = 0\n 30063: u8 [a0 + 7] = 0\n 30066: u8 [a0 + 6] = 0\n 30069: u8 [a0 + 5] = 0x67\n 30073: u8 [a0 + 4] = 0x6e\n 30077: u8 [a0 + 3] = 0x69\n 30081: u8 [a0 + 2] = 0x72\n 30085: u8 [a0 + 1] = 0x61\n 30089: a2 = u64 [sp + 0x20]\n 30092: a2 = a2 + 0xfffffffffffffda0\n 30096: a3 = u64 [sp + 0x68]\n 30099: a2 = a3 <u a2\n 30102: a3 = u64 [sp + 0x60]\n 30105: a2 = 0 if a3 != 0\n 30107: a3 = u64 [sp + 0x50]\n 30110: a2 = 0 if a3 != 0\n 30112: u8 [a0 + 0] = 0x64\n 30115: jump @424 if a2 != 0\n      : @423 (gas: 1)\n 30118: jump @781\n      : @424 (gas: 4)\n 30121: a0 = u64 [sp + 0x58]\n 30124: i32 a0 = a0 + 0x260\n 30128: a1 = 0x20\n 30131: ra = 340, jump @0\n      : @425 [@dyn 170] (gas: 77)\n 30137: a1 = u64 [sp + 0x30]\n 30140: a1 = reverse a1\n 30142: a2 = u64 [sp + 0x38]\n 30145: a2 = reverse a2\n 30147: a3 = reverse s1\n 30149: a4 = u64 [sp + 0x10]\n 30152: a4 = reverse a4\n 30154: a5 = a4 >> 0x38\n 30157: u8 [a0 + 0x1f] = a5\n 30160: a5 = a4 >> 0x30\n 30163: u8 [a0 + 0x1e] = a5\n 30166: a5 = a4 >> 0x28\n 30169: u8 [a0 + 0x1d] = a5\n 30172: a5 = a4 >> 0x20\n 30175: u8 [a0 + 0x1c] = a5\n 30178: a5 = a4 >> 0x18\n 30181: u8 [a0 + 0x1b] = a5\n 30184: a5 = a4 >> 0x10\n 30187: u8 [a0 + 0x1a] = a5\n 30190: a5 = a4 >> 0x8\n 30193: u8 [a0 + 0x19] = a5\n 30196: u8 [a0 + 0x18] = a4\n 30199: u8 [a0 + 0x10] = a3\n 30202: a4 = a3 >> 0x38\n 30205: u8 [a0 + 0x17] = a4\n 30208: a4 = a3 >> 0x30\n 30211: u8 [a0 + 0x16] = a4\n 30214: a4 = a3 >> 0x28\n 30217: u8 [a0 + 0x15] = a4\n 30220: a4 = a3 >> 0x20\n 30223: u8 [a0 + 0x14] = a4\n 30226: a4 = a3 >> 0x18\n 30229: u8 [a0 + 0x13] = a4\n 30232: a4 = a3 >> 0x10\n 30235: u8 [a0 + 0x12] = a4\n 30238: a3 = a3 >> 0x8\n 30241: u8 [a0 + 0x11] = a3\n 30244: u8 [a0 + 0x8] = a2\n 30247: a3 = a2 >> 0x38\n 30250: u8 [a0 + 0xf] = a3\n 30253: a3 = a2 >> 0x30\n 30256: u8 [a0 + 0xe] = a3\n 30259: a3 = a2 >> 0x28\n 30262: u8 [a0 + 0xd] = a3\n 30265: a3 = a2 >> 0x20\n 30268: u8 [a0 + 0xc] = a3\n 30271: a3 = a2 >> 0x18\n 30274: u8 [a0 + 0xb] = a3\n 30277: a3 = a2 >> 0x10\n 30280: u8 [a0 + 0xa] = a3\n 30283: a2 = a2 >> 0x8\n 30286: u8 [a0 + 0x9] = a2\n 30289: u8 [a0] = a1\n 30291: a2 = a1 >> 0x38\n 30294: u8 [a0 + 0x7] = a2\n 30297: a2 = a1 >> 0x30\n 30300: u8 [a0 + 0x6] = a2\n 30303: a2 = a1 >> 0x28\n 30306: u8 [a0 + 0x5] = a2\n 30309: a2 = a1 >> 0x20\n 30312: u8 [a0 + 0x4] = a2\n 30315: a2 = a1 >> 0x18\n 30318: u8 [a0 + 0x3] = a2\n 30321: a2 = a1 >> 0x10\n 30324: u8 [a0 + 0x2] = a2\n 30327: a1 = a1 >> 0x8\n 30330: u8 [a0 + 0x1] = a1\n 30333: s1 = sp + 0x7e8\n 30337: u64 [s1 + 480] = 0\n 30341: u64 [s1 + 472] = 0\n 30345: u64 [s1 + 456] = 0x40\n 30350: a0 = sp + 0x7ff\n 30354: a0 = a0 + 0x1d1\n 30358: a1 = sp + 0x7ff\n 30362: a1 = a1 + 0x1b1\n 30366: u64 [s1 + 464] = 0\n 30370: ra = 342, jump @56\n      : @426 [@dyn 171] (gas: 15)\n 30376: a1 = u64 [s1 + 0x200]\n 30380: a2 = u64 [s1 + 0x1f8]\n 30384: a0 = u64 [s1 + 0x1f0]\n 30388: s1 = u64 [s1 + 0x1e8]\n 30392: u64 [sp + 0x28] = a0\n 30395: u64 [sp + 0x30] = a1\n 30398: a0 = a0 | a1\n 30401: a1 = s1 | a2\n 30404: a1 = a1 | a0\n 30407: a1 = a1 >> 0x20\n 30410: u64 [sp + 0x38] = a2\n 30413: a0 = a0 | a2\n 30416: a0 = a0 << 0x20\n 30419: a0 = a0 | a1\n 30422: jump @428 if a0 == 0\n      : @427 (gas: 1)\n 30425: jump @781\n      : @428 (gas: 4)\n 30428: i32 a0 = s1 + 0\n 30430: a1 = 0x20\n 30433: u64 [sp + 0x18] = a0\n 30436: ra = 344, jump @0\n      : @429 [@dyn 172] (gas: 44)\n 30442: u8 [a0 + 31] = 0x8\n 30446: a1 = u64 [sp + 0x30]\n 30449: a2 = u64 [sp + 0x38]\n 30452: a2 = a2 | a1\n 30455: a1 = 0x100000000\n 30465: u64 [sp + 0x20] = a1\n 30468: a1 = 0xffffffe0\n 30478: u64 [sp + 0x10] = s1\n 30481: a1 = s1 <u a1\n 30484: s1 = u64 [sp + 0x28]\n 30487: a1 = 0 if s1 != 0\n 30489: a1 = 0 if a2 != 0\n 30491: u8 [a0 + 30] = 0\n 30494: u8 [a0 + 29] = 0\n 30497: u8 [a0 + 28] = 0\n 30500: u8 [a0 + 27] = 0\n 30503: u8 [a0 + 26] = 0\n 30506: u8 [a0 + 25] = 0\n 30509: u8 [a0 + 24] = 0\n 30512: u8 [a0 + 23] = 0\n 30515: u8 [a0 + 22] = 0\n 30518: u8 [a0 + 21] = 0\n 30521: u8 [a0 + 20] = 0\n 30524: u8 [a0 + 19] = 0\n 30527: u8 [a0 + 18] = 0\n 30530: u8 [a0 + 17] = 0\n 30533: u8 [a0 + 16] = 0\n 30536: u8 [a0 + 15] = 0\n 30539: u8 [a0 + 14] = 0\n 30542: u8 [a0 + 13] = 0\n 30545: u8 [a0 + 12] = 0\n 30548: u8 [a0 + 11] = 0\n 30551: u8 [a0 + 10] = 0\n 30554: u8 [a0 + 9] = 0\n 30557: u8 [a0 + 8] = 0\n 30560: u8 [a0 + 7] = 0\n 30563: u8 [a0 + 6] = 0\n 30566: u8 [a0 + 5] = 0\n 30569: u8 [a0 + 4] = 0\n 30572: u8 [a0 + 3] = 0\n 30575: u8 [a0 + 2] = 0\n 30578: u8 [a0 + 1] = 0\n 30581: u8 [a0 + 0] = 0\n 30583: jump @431 if a1 != 0\n      : @430 (gas: 1)\n 30586: jump @781\n      : @431 (gas: 4)\n 30589: a0 = u64 [sp + 0x18]\n 30592: i32 a0 = a0 + 0x20\n 30595: a1 = 0x20\n 30598: ra = 346, jump @0\n      : @432 [@dyn 173] (gas: 41)\n 30604: u8 [a0 + 31] = 0\n 30607: u8 [a0 + 30] = 0\n 30610: u8 [a0 + 29] = 0\n 30613: u8 [a0 + 28] = 0\n 30616: u8 [a0 + 27] = 0\n 30619: u8 [a0 + 26] = 0\n 30622: u8 [a0 + 25] = 0\n 30625: u8 [a0 + 24] = 0\n 30628: u8 [a0 + 23] = 0\n 30631: u8 [a0 + 22] = 0\n 30634: u8 [a0 + 21] = 0\n 30637: u8 [a0 + 20] = 0\n 30640: u8 [a0 + 19] = 0\n 30643: u8 [a0 + 18] = 0\n 30646: u8 [a0 + 17] = 0\n 30649: u8 [a0 + 16] = 0\n 30652: u8 [a0 + 15] = 0\n 30655: u8 [a0 + 14] = 0\n 30658: u8 [a0 + 13] = 0\n 30661: u8 [a0 + 12] = 0\n 30664: u8 [a0 + 11] = 0\n 30667: u8 [a0 + 10] = 0\n 30670: u8 [a0 + 9] = 0\n 30673: u8 [a0 + 8] = 0\n 30676: u8 [a0 + 7] = 0x67\n 30680: u8 [a0 + 6] = 0x6e\n 30684: u8 [a0 + 5] = 0x69\n 30688: u8 [a0 + 4] = 0x6c\n 30692: u8 [a0 + 3] = 0x7a\n 30696: u8 [a0 + 2] = 0x7a\n 30700: u8 [a0 + 1] = 0x61\n 30704: a2 = u64 [sp + 0x20]\n 30707: a2 = a2 + 0xfffffffffffffd80\n 30711: a3 = u64 [sp + 0x68]\n 30714: a2 = a3 <u a2\n 30717: a3 = u64 [sp + 0x60]\n 30720: a2 = 0 if a3 != 0\n 30722: a3 = u64 [sp + 0x50]\n 30725: a2 = 0 if a3 != 0\n 30727: u8 [a0 + 0] = 0x64\n 30730: jump @434 if a2 != 0\n      : @433 (gas: 1)\n 30733: jump @781\n      : @434 (gas: 4)\n 30736: a0 = u64 [sp + 0x58]\n 30739: i32 a0 = a0 + 0x280\n 30743: a1 = 0x20\n 30746: ra = 348, jump @0\n      : @435 [@dyn 174] (gas: 77)\n 30752: a1 = u64 [sp + 0x30]\n 30755: a1 = reverse a1\n 30757: a2 = u64 [sp + 0x38]\n 30760: a2 = reverse a2\n 30762: a3 = reverse s1\n 30764: a4 = u64 [sp + 0x10]\n 30767: a4 = reverse a4\n 30769: a5 = a4 >> 0x38\n 30772: u8 [a0 + 0x1f] = a5\n 30775: a5 = a4 >> 0x30\n 30778: u8 [a0 + 0x1e] = a5\n 30781: a5 = a4 >> 0x28\n 30784: u8 [a0 + 0x1d] = a5\n 30787: a5 = a4 >> 0x20\n 30790: u8 [a0 + 0x1c] = a5\n 30793: a5 = a4 >> 0x18\n 30796: u8 [a0 + 0x1b] = a5\n 30799: a5 = a4 >> 0x10\n 30802: u8 [a0 + 0x1a] = a5\n 30805: a5 = a4 >> 0x8\n 30808: u8 [a0 + 0x19] = a5\n 30811: u8 [a0 + 0x18] = a4\n 30814: u8 [a0 + 0x10] = a3\n 30817: a4 = a3 >> 0x38\n 30820: u8 [a0 + 0x17] = a4\n 30823: a4 = a3 >> 0x30\n 30826: u8 [a0 + 0x16] = a4\n 30829: a4 = a3 >> 0x28\n 30832: u8 [a0 + 0x15] = a4\n 30835: a4 = a3 >> 0x20\n 30838: u8 [a0 + 0x14] = a4\n 30841: a4 = a3 >> 0x18\n 30844: u8 [a0 + 0x13] = a4\n 30847: a4 = a3 >> 0x10\n 30850: u8 [a0 + 0x12] = a4\n 30853: a3 = a3 >> 0x8\n 30856: u8 [a0 + 0x11] = a3\n 30859: u8 [a0 + 0x8] = a2\n 30862: a3 = a2 >> 0x38\n 30865: u8 [a0 + 0xf] = a3\n 30868: a3 = a2 >> 0x30\n 30871: u8 [a0 + 0xe] = a3\n 30874: a3 = a2 >> 0x28\n 30877: u8 [a0 + 0xd] = a3\n 30880: a3 = a2 >> 0x20\n 30883: u8 [a0 + 0xc] = a3\n 30886: a3 = a2 >> 0x18\n 30889: u8 [a0 + 0xb] = a3\n 30892: a3 = a2 >> 0x10\n 30895: u8 [a0 + 0xa] = a3\n 30898: a2 = a2 >> 0x8\n 30901: u8 [a0 + 0x9] = a2\n 30904: u8 [a0] = a1\n 30906: a2 = a1 >> 0x38\n 30909: u8 [a0 + 0x7] = a2\n 30912: a2 = a1 >> 0x30\n 30915: u8 [a0 + 0x6] = a2\n 30918: a2 = a1 >> 0x28\n 30921: u8 [a0 + 0x5] = a2\n 30924: a2 = a1 >> 0x20\n 30927: u8 [a0 + 0x4] = a2\n 30930: a2 = a1 >> 0x18\n 30933: u8 [a0 + 0x3] = a2\n 30936: a2 = a1 >> 0x10\n 30939: u8 [a0 + 0x2] = a2\n 30942: a1 = a1 >> 0x8\n 30945: u8 [a0 + 0x1] = a1\n 30948: s1 = sp + 0x7e8\n 30952: u64 [s1 + 416] = 0\n 30956: u64 [s1 + 408] = 0\n 30960: u64 [s1 + 392] = 0x40\n 30965: a0 = sp + 0x7ff\n 30969: a0 = a0 + 0x191\n 30973: a1 = sp + 0x7ff\n 30977: a1 = a1 + 0x171\n 30981: u64 [s1 + 400] = 0\n 30985: ra = 350, jump @56\n      : @436 [@dyn 175] (gas: 15)\n 30991: a1 = u64 [s1 + 0x1c0]\n 30995: a2 = u64 [s1 + 0x1b8]\n 30999: a0 = u64 [s1 + 0x1b0]\n 31003: s1 = u64 [s1 + 0x1a8]\n 31007: u64 [sp + 0x28] = a0\n 31010: u64 [sp + 0x30] = a1\n 31013: a0 = a0 | a1\n 31016: a1 = s1 | a2\n 31019: a1 = a1 | a0\n 31022: a1 = a1 >> 0x20\n 31025: u64 [sp + 0x38] = a2\n 31028: a0 = a0 | a2\n 31031: a0 = a0 << 0x20\n 31034: a0 = a0 | a1\n 31037: jump @438 if a0 == 0\n      : @437 (gas: 1)\n 31040: jump @781\n      : @438 (gas: 4)\n 31043: i32 a0 = s1 + 0\n 31045: a1 = 0x20\n 31048: u64 [sp + 0x18] = a0\n 31051: ra = 352, jump @0\n      : @439 [@dyn 176] (gas: 44)\n 31057: u8 [a0 + 31] = 0xa\n 31061: a1 = u64 [sp + 0x30]\n 31064: a2 = u64 [sp + 0x38]\n 31067: a2 = a2 | a1\n 31070: a1 = 0x100000000\n 31080: u64 [sp + 0x20] = a1\n 31083: a1 = 0xffffffe0\n 31093: u64 [sp + 0x10] = s1\n 31096: a1 = s1 <u a1\n 31099: s1 = u64 [sp + 0x28]\n 31102: a1 = 0 if s1 != 0\n 31104: a1 = 0 if a2 != 0\n 31106: u8 [a0 + 30] = 0\n 31109: u8 [a0 + 29] = 0\n 31112: u8 [a0 + 28] = 0\n 31115: u8 [a0 + 27] = 0\n 31118: u8 [a0 + 26] = 0\n 31121: u8 [a0 + 25] = 0\n 31124: u8 [a0 + 24] = 0\n 31127: u8 [a0 + 23] = 0\n 31130: u8 [a0 + 22] = 0\n 31133: u8 [a0 + 21] = 0\n 31136: u8 [a0 + 20] = 0\n 31139: u8 [a0 + 19] = 0\n 31142: u8 [a0 + 18] = 0\n 31145: u8 [a0 + 17] = 0\n 31148: u8 [a0 + 16] = 0\n 31151: u8 [a0 + 15] = 0\n 31154: u8 [a0 + 14] = 0\n 31157: u8 [a0 + 13] = 0\n 31160: u8 [a0 + 12] = 0\n 31163: u8 [a0 + 11] = 0\n 31166: u8 [a0 + 10] = 0\n 31169: u8 [a0 + 9] = 0\n 31172: u8 [a0 + 8] = 0\n 31175: u8 [a0 + 7] = 0\n 31178: u8 [a0 + 6] = 0\n 31181: u8 [a0 + 5] = 0\n 31184: u8 [a0 + 4] = 0\n 31187: u8 [a0 + 3] = 0\n 31190: u8 [a0 + 2] = 0\n 31193: u8 [a0 + 1] = 0\n 31196: u8 [a0 + 0] = 0\n 31198: jump @441 if a1 != 0\n      : @440 (gas: 1)\n 31201: jump @781\n      : @441 (gas: 4)\n 31204: a0 = u64 [sp + 0x18]\n 31207: i32 a0 = a0 + 0x20\n 31210: a1 = 0x20\n 31213: ra = 354, jump @0\n      : @442 [@dyn 177] (gas: 41)\n 31219: u8 [a0 + 31] = 0\n 31222: u8 [a0 + 30] = 0\n 31225: u8 [a0 + 29] = 0\n 31228: u8 [a0 + 28] = 0\n 31231: u8 [a0 + 27] = 0\n 31234: u8 [a0 + 26] = 0\n 31237: u8 [a0 + 25] = 0\n 31240: u8 [a0 + 24] = 0\n 31243: u8 [a0 + 23] = 0\n 31246: u8 [a0 + 22] = 0\n 31249: u8 [a0 + 21] = 0\n 31252: u8 [a0 + 20] = 0\n 31255: u8 [a0 + 19] = 0\n 31258: u8 [a0 + 18] = 0\n 31261: u8 [a0 + 17] = 0\n 31264: u8 [a0 + 16] = 0\n 31267: u8 [a0 + 15] = 0\n 31270: u8 [a0 + 14] = 0\n 31273: u8 [a0 + 13] = 0\n 31276: u8 [a0 + 12] = 0\n 31279: u8 [a0 + 11] = 0\n 31282: u8 [a0 + 10] = 0\n 31285: u8 [a0 + 9] = 0x6c\n 31289: u8 [a0 + 8] = 0x75\n 31293: u8 [a0 + 7] = 0x66\n 31297: u8 [a0 + 6] = 0x74\n 31301: u8 [a0 + 5] = 0x68\n 31305: u8 [a0 + 4] = 0x67\n 31309: u8 [a0 + 3] = 0x69\n 31313: u8 [a0 + 2] = 0x6c\n 31317: u8 [a0 + 1] = 0x65\n 31321: a2 = u64 [sp + 0x20]\n 31324: a2 = a2 + 0xfffffffffffffd60\n 31328: a3 = u64 [sp + 0x68]\n 31331: a2 = a3 <u a2\n 31334: a3 = u64 [sp + 0x60]\n 31337: a2 = 0 if a3 != 0\n 31339: a3 = u64 [sp + 0x50]\n 31342: a2 = 0 if a3 != 0\n 31344: u8 [a0 + 0] = 0x64\n 31347: jump @444 if a2 != 0\n      : @443 (gas: 1)\n 31350: jump @781\n      : @444 (gas: 4)\n 31353: a0 = u64 [sp + 0x58]\n 31356: i32 a0 = a0 + 0x2a0\n 31360: a1 = 0x20\n 31363: ra = 356, jump @0\n      : @445 [@dyn 178] (gas: 77)\n 31369: a1 = u64 [sp + 0x30]\n 31372: a1 = reverse a1\n 31374: a2 = u64 [sp + 0x38]\n 31377: a2 = reverse a2\n 31379: a3 = reverse s1\n 31381: a4 = u64 [sp + 0x10]\n 31384: a4 = reverse a4\n 31386: a5 = a4 >> 0x38\n 31389: u8 [a0 + 0x1f] = a5\n 31392: a5 = a4 >> 0x30\n 31395: u8 [a0 + 0x1e] = a5\n 31398: a5 = a4 >> 0x28\n 31401: u8 [a0 + 0x1d] = a5\n 31404: a5 = a4 >> 0x20\n 31407: u8 [a0 + 0x1c] = a5\n 31410: a5 = a4 >> 0x18\n 31413: u8 [a0 + 0x1b] = a5\n 31416: a5 = a4 >> 0x10\n 31419: u8 [a0 + 0x1a] = a5\n 31422: a5 = a4 >> 0x8\n 31425: u8 [a0 + 0x19] = a5\n 31428: u8 [a0 + 0x18] = a4\n 31431: u8 [a0 + 0x10] = a3\n 31434: a4 = a3 >> 0x38\n 31437: u8 [a0 + 0x17] = a4\n 31440: a4 = a3 >> 0x30\n 31443: u8 [a0 + 0x16] = a4\n 31446: a4 = a3 >> 0x28\n 31449: u8 [a0 + 0x15] = a4\n 31452: a4 = a3 >> 0x20\n 31455: u8 [a0 + 0x14] = a4\n 31458: a4 = a3 >> 0x18\n 31461: u8 [a0 + 0x13] = a4\n 31464: a4 = a3 >> 0x10\n 31467: u8 [a0 + 0x12] = a4\n 31470: a3 = a3 >> 0x8\n 31473: u8 [a0 + 0x11] = a3\n 31476: u8 [a0 + 0x8] = a2\n 31479: a3 = a2 >> 0x38\n 31482: u8 [a0 + 0xf] = a3\n 31485: a3 = a2 >> 0x30\n 31488: u8 [a0 + 0xe] = a3\n 31491: a3 = a2 >> 0x28\n 31494: u8 [a0 + 0xd] = a3\n 31497: a3 = a2 >> 0x20\n 31500: u8 [a0 + 0xc] = a3\n 31503: a3 = a2 >> 0x18\n 31506: u8 [a0 + 0xb] = a3\n 31509: a3 = a2 >> 0x10\n 31512: u8 [a0 + 0xa] = a3\n 31515: a2 = a2 >> 0x8\n 31518: u8 [a0 + 0x9] = a2\n 31521: u8 [a0] = a1\n 31523: a2 = a1 >> 0x38\n 31526: u8 [a0 + 0x7] = a2\n 31529: a2 = a1 >> 0x30\n 31532: u8 [a0 + 0x6] = a2\n 31535: a2 = a1 >> 0x28\n 31538: u8 [a0 + 0x5] = a2\n 31541: a2 = a1 >> 0x20\n 31544: u8 [a0 + 0x4] = a2\n 31547: a2 = a1 >> 0x18\n 31550: u8 [a0 + 0x3] = a2\n 31553: a2 = a1 >> 0x10\n 31556: u8 [a0 + 0x2] = a2\n 31559: a1 = a1 >> 0x8\n 31562: u8 [a0 + 0x1] = a1\n 31565: s1 = sp + 0x7e8\n 31569: u64 [s1 + 352] = 0\n 31573: u64 [s1 + 344] = 0\n 31577: u64 [s1 + 328] = 0x40\n 31582: a0 = sp + 0x7ff\n 31586: a0 = a0 + 0x151\n 31590: a1 = sp + 0x7ff\n 31594: a1 = a1 + 0x131\n 31598: u64 [s1 + 336] = 0\n 31602: ra = 358, jump @56\n      : @446 [@dyn 179] (gas: 15)\n 31608: a1 = u64 [s1 + 0x180]\n 31612: a2 = u64 [s1 + 0x178]\n 31616: a0 = u64 [s1 + 0x170]\n 31620: s1 = u64 [s1 + 0x168]\n 31624: u64 [sp + 0x28] = a0\n 31627: u64 [sp + 0x30] = a1\n 31630: a0 = a0 | a1\n 31633: a1 = s1 | a2\n 31636: a1 = a1 | a0\n 31639: a1 = a1 >> 0x20\n 31642: u64 [sp + 0x38] = a2\n 31645: a0 = a0 | a2\n 31648: a0 = a0 << 0x20\n 31651: a0 = a0 | a1\n 31654: jump @448 if a0 == 0\n      : @447 (gas: 1)\n 31657: jump @781\n      : @448 (gas: 4)\n 31660: i32 a0 = s1 + 0\n 31662: a1 = 0x20\n 31665: u64 [sp + 0x18] = a0\n 31668: ra = 360, jump @0\n      : @449 [@dyn 180] (gas: 44)\n 31674: u8 [a0 + 31] = 0xa\n 31678: a1 = u64 [sp + 0x30]\n 31681: a2 = u64 [sp + 0x38]\n 31684: a2 = a2 | a1\n 31687: a1 = 0x100000000\n 31697: u64 [sp + 0x20] = a1\n 31700: a1 = 0xffffffe0\n 31710: u64 [sp + 0x10] = s1\n 31713: a1 = s1 <u a1\n 31716: s1 = u64 [sp + 0x28]\n 31719: a1 = 0 if s1 != 0\n 31721: a1 = 0 if a2 != 0\n 31723: u8 [a0 + 30] = 0\n 31726: u8 [a0 + 29] = 0\n 31729: u8 [a0 + 28] = 0\n 31732: u8 [a0 + 27] = 0\n 31735: u8 [a0 + 26] = 0\n 31738: u8 [a0 + 25] = 0\n 31741: u8 [a0 + 24] = 0\n 31744: u8 [a0 + 23] = 0\n 31747: u8 [a0 + 22] = 0\n 31750: u8 [a0 + 21] = 0\n 31753: u8 [a0 + 20] = 0\n 31756: u8 [a0 + 19] = 0\n 31759: u8 [a0 + 18] = 0\n 31762: u8 [a0 + 17] = 0\n 31765: u8 [a0 + 16] = 0\n 31768: u8 [a0 + 15] = 0\n 31771: u8 [a0 + 14] = 0\n 31774: u8 [a0 + 13] = 0\n 31777: u8 [a0 + 12] = 0\n 31780: u8 [a0 + 11] = 0\n 31783: u8 [a0 + 10] = 0\n 31786: u8 [a0 + 9] = 0\n 31789: u8 [a0 + 8] = 0\n 31792: u8 [a0 + 7] = 0\n 31795: u8 [a0 + 6] = 0\n 31798: u8 [a0 + 5] = 0\n 31801: u8 [a0 + 4] = 0\n 31804: u8 [a0 + 3] = 0\n 31807: u8 [a0 + 2] = 0\n 31810: u8 [a0 + 1] = 0\n 31813: u8 [a0 + 0] = 0\n 31815: jump @451 if a1 != 0\n      : @450 (gas: 1)\n 31818: jump @781\n      : @451 (gas: 4)\n 31821: a0 = u64 [sp + 0x18]\n 31824: i32 a0 = a0 + 0x20\n 31827: a1 = 0x20\n 31830: ra = 362, jump @0\n      : @452 [@dyn 181] (gas: 41)\n 31836: u8 [a0 + 31] = 0\n 31839: u8 [a0 + 30] = 0\n 31842: u8 [a0 + 29] = 0\n 31845: u8 [a0 + 28] = 0\n 31848: u8 [a0 + 27] = 0\n 31851: u8 [a0 + 26] = 0\n 31854: u8 [a0 + 25] = 0\n 31857: u8 [a0 + 24] = 0\n 31860: u8 [a0 + 23] = 0\n 31863: u8 [a0 + 22] = 0\n 31866: u8 [a0 + 21] = 0\n 31869: u8 [a0 + 20] = 0\n 31872: u8 [a0 + 19] = 0\n 31875: u8 [a0 + 18] = 0\n 31878: u8 [a0 + 17] = 0\n 31881: u8 [a0 + 16] = 0\n 31884: u8 [a0 + 15] = 0\n 31887: u8 [a0 + 14] = 0\n 31890: u8 [a0 + 13] = 0\n 31893: u8 [a0 + 12] = 0\n 31896: u8 [a0 + 11] = 0\n 31899: u8 [a0 + 10] = 0\n 31902: u8 [a0 + 9] = 0x64\n 31906: u8 [a0 + 8] = 0x65\n 31910: u8 [a0 + 7] = 0x6e\n 31914: u8 [a0 + 6] = 0x69\n 31918: u8 [a0 + 5] = 0x6d\n 31922: u8 [a0 + 4] = 0x72\n 31926: u8 [a0 + 3] = 0x65\n 31930: u8 [a0 + 2] = 0x74\n 31934: u8 [a0 + 1] = 0x65\n 31938: a2 = u64 [sp + 0x20]\n 31941: a2 = a2 + 0xfffffffffffffd40\n 31945: a3 = u64 [sp + 0x68]\n 31948: a2 = a3 <u a2\n 31951: a3 = u64 [sp + 0x60]\n 31954: a2 = 0 if a3 != 0\n 31956: a3 = u64 [sp + 0x50]\n 31959: a2 = 0 if a3 != 0\n 31961: u8 [a0 + 0] = 0x64\n 31964: jump @454 if a2 != 0\n      : @453 (gas: 1)\n 31967: jump @781\n      : @454 (gas: 4)\n 31970: a0 = u64 [sp + 0x58]\n 31973: i32 a0 = a0 + 0x2c0\n 31977: a1 = 0x20\n 31980: ra = 364, jump @0\n      : @455 [@dyn 182] (gas: 77)\n 31986: a1 = u64 [sp + 0x30]\n 31989: a1 = reverse a1\n 31991: a2 = u64 [sp + 0x38]\n 31994: a2 = reverse a2\n 31996: a3 = reverse s1\n 31998: a4 = u64 [sp + 0x10]\n 32001: a4 = reverse a4\n 32003: a5 = a4 >> 0x38\n 32006: u8 [a0 + 0x1f] = a5\n 32009: a5 = a4 >> 0x30\n 32012: u8 [a0 + 0x1e] = a5\n 32015: a5 = a4 >> 0x28\n 32018: u8 [a0 + 0x1d] = a5\n 32021: a5 = a4 >> 0x20\n 32024: u8 [a0 + 0x1c] = a5\n 32027: a5 = a4 >> 0x18\n 32030: u8 [a0 + 0x1b] = a5\n 32033: a5 = a4 >> 0x10\n 32036: u8 [a0 + 0x1a] = a5\n 32039: a5 = a4 >> 0x8\n 32042: u8 [a0 + 0x19] = a5\n 32045: u8 [a0 + 0x18] = a4\n 32048: u8 [a0 + 0x10] = a3\n 32051: a4 = a3 >> 0x38\n 32054: u8 [a0 + 0x17] = a4\n 32057: a4 = a3 >> 0x30\n 32060: u8 [a0 + 0x16] = a4\n 32063: a4 = a3 >> 0x28\n 32066: u8 [a0 + 0x15] = a4\n 32069: a4 = a3 >> 0x20\n 32072: u8 [a0 + 0x14] = a4\n 32075: a4 = a3 >> 0x18\n 32078: u8 [a0 + 0x13] = a4\n 32081: a4 = a3 >> 0x10\n 32084: u8 [a0 + 0x12] = a4\n 32087: a3 = a3 >> 0x8\n 32090: u8 [a0 + 0x11] = a3\n 32093: u8 [a0 + 0x8] = a2\n 32096: a3 = a2 >> 0x38\n 32099: u8 [a0 + 0xf] = a3\n 32102: a3 = a2 >> 0x30\n 32105: u8 [a0 + 0xe] = a3\n 32108: a3 = a2 >> 0x28\n 32111: u8 [a0 + 0xd] = a3\n 32114: a3 = a2 >> 0x20\n 32117: u8 [a0 + 0xc] = a3\n 32120: a3 = a2 >> 0x18\n 32123: u8 [a0 + 0xb] = a3\n 32126: a3 = a2 >> 0x10\n 32129: u8 [a0 + 0xa] = a3\n 32132: a2 = a2 >> 0x8\n 32135: u8 [a0 + 0x9] = a2\n 32138: u8 [a0] = a1\n 32140: a2 = a1 >> 0x38\n 32143: u8 [a0 + 0x7] = a2\n 32146: a2 = a1 >> 0x30\n 32149: u8 [a0 + 0x6] = a2\n 32152: a2 = a1 >> 0x28\n 32155: u8 [a0 + 0x5] = a2\n 32158: a2 = a1 >> 0x20\n 32161: u8 [a0 + 0x4] = a2\n 32164: a2 = a1 >> 0x18\n 32167: u8 [a0 + 0x3] = a2\n 32170: a2 = a1 >> 0x10\n 32173: u8 [a0 + 0x2] = a2\n 32176: a1 = a1 >> 0x8\n 32179: u8 [a0 + 0x1] = a1\n 32182: s1 = sp + 0x7e8\n 32186: u64 [s1 + 288] = 0\n 32190: u64 [s1 + 280] = 0\n 32194: u64 [s1 + 264] = 0x40\n 32199: a0 = sp + 0x7ff\n 32203: a0 = a0 + 0x111\n 32207: a1 = sp + 0x7ff\n 32211: a1 = a1 + 0xf1\n 32215: u64 [s1 + 272] = 0\n 32219: ra = 366, jump @56\n      : @456 [@dyn 183] (gas: 15)\n 32225: a1 = u64 [s1 + 0x140]\n 32229: a2 = u64 [s1 + 0x138]\n 32233: a0 = u64 [s1 + 0x130]\n 32237: s1 = u64 [s1 + 0x128]\n 32241: u64 [sp + 0x28] = a0\n 32244: u64 [sp + 0x30] = a1\n 32247: a0 = a0 | a1\n 32250: a1 = s1 | a2\n 32253: a1 = a1 | a0\n 32256: a1 = a1 >> 0x20\n 32259: u64 [sp + 0x38] = a2\n 32262: a0 = a0 | a2\n 32265: a0 = a0 << 0x20\n 32268: a0 = a0 | a1\n 32271: jump @458 if a0 == 0\n      : @457 (gas: 1)\n 32274: jump @781\n      : @458 (gas: 4)\n 32277: i32 a0 = s1 + 0\n 32279: a1 = 0x20\n 32282: u64 [sp + 0x18] = a0\n 32285: ra = 368, jump @0\n      : @459 [@dyn 184] (gas: 44)\n 32291: u8 [a0 + 31] = 0x8\n 32295: a1 = u64 [sp + 0x30]\n 32298: a2 = u64 [sp + 0x38]\n 32301: a2 = a2 | a1\n 32304: a1 = 0x100000000\n 32314: u64 [sp + 0x20] = a1\n 32317: a1 = 0xffffffe0\n 32327: u64 [sp + 0x10] = s1\n 32330: a1 = s1 <u a1\n 32333: s1 = u64 [sp + 0x28]\n 32336: a1 = 0 if s1 != 0\n 32338: a1 = 0 if a2 != 0\n 32340: u8 [a0 + 30] = 0\n 32343: u8 [a0 + 29] = 0\n 32346: u8 [a0 + 28] = 0\n 32349: u8 [a0 + 27] = 0\n 32352: u8 [a0 + 26] = 0\n 32355: u8 [a0 + 25] = 0\n 32358: u8 [a0 + 24] = 0\n 32361: u8 [a0 + 23] = 0\n 32364: u8 [a0 + 22] = 0\n 32367: u8 [a0 + 21] = 0\n 32370: u8 [a0 + 20] = 0\n 32373: u8 [a0 + 19] = 0\n 32376: u8 [a0 + 18] = 0\n 32379: u8 [a0 + 17] = 0\n 32382: u8 [a0 + 16] = 0\n 32385: u8 [a0 + 15] = 0\n 32388: u8 [a0 + 14] = 0\n 32391: u8 [a0 + 13] = 0\n 32394: u8 [a0 + 12] = 0\n 32397: u8 [a0 + 11] = 0\n 32400: u8 [a0 + 10] = 0\n 32403: u8 [a0 + 9] = 0\n 32406: u8 [a0 + 8] = 0\n 32409: u8 [a0 + 7] = 0\n 32412: u8 [a0 + 6] = 0\n 32415: u8 [a0 + 5] = 0\n 32418: u8 [a0 + 4] = 0\n 32421: u8 [a0 + 3] = 0\n 32424: u8 [a0 + 2] = 0\n 32427: u8 [a0 + 1] = 0\n 32430: u8 [a0 + 0] = 0\n 32432: jump @461 if a1 != 0\n      : @460 (gas: 1)\n 32435: jump @781\n      : @461 (gas: 4)\n 32438: a0 = u64 [sp + 0x18]\n 32441: i32 a0 = a0 + 0x20\n 32444: a1 = 0x20\n 32447: ra = 370, jump @0\n      : @462 [@dyn 185] (gas: 41)\n 32453: u8 [a0 + 31] = 0\n 32456: u8 [a0 + 30] = 0\n 32459: u8 [a0 + 29] = 0\n 32462: u8 [a0 + 28] = 0\n 32465: u8 [a0 + 27] = 0\n 32468: u8 [a0 + 26] = 0\n 32471: u8 [a0 + 25] = 0\n 32474: u8 [a0 + 24] = 0\n 32477: u8 [a0 + 23] = 0\n 32480: u8 [a0 + 22] = 0\n 32483: u8 [a0 + 21] = 0\n 32486: u8 [a0 + 20] = 0\n 32489: u8 [a0 + 19] = 0\n 32492: u8 [a0 + 18] = 0\n 32495: u8 [a0 + 17] = 0\n 32498: u8 [a0 + 16] = 0\n 32501: u8 [a0 + 15] = 0\n 32504: u8 [a0 + 14] = 0\n 32507: u8 [a0 + 13] = 0\n 32510: u8 [a0 + 12] = 0\n 32513: u8 [a0 + 11] = 0\n 32516: u8 [a0 + 10] = 0\n 32519: u8 [a0 + 9] = 0\n 32522: u8 [a0 + 8] = 0\n 32525: u8 [a0 + 7] = 0x74\n 32529: u8 [a0 + 6] = 0x6e\n 32533: u8 [a0 + 5] = 0x65\n 32537: u8 [a0 + 4] = 0x67\n 32541: u8 [a0 + 3] = 0x69\n 32545: u8 [a0 + 2] = 0x6c\n 32549: u8 [a0 + 1] = 0x69\n 32553: a2 = u64 [sp + 0x20]\n 32556: a2 = a2 + 0xfffffffffffffd20\n 32560: a3 = u64 [sp + 0x68]\n 32563: a2 = a3 <u a2\n 32566: a3 = u64 [sp + 0x60]\n 32569: a2 = 0 if a3 != 0\n 32571: a3 = u64 [sp + 0x50]\n 32574: a2 = 0 if a3 != 0\n 32576: u8 [a0 + 0] = 0x64\n 32579: jump @464 if a2 != 0\n      : @463 (gas: 1)\n 32582: jump @781\n      : @464 (gas: 4)\n 32585: a0 = u64 [sp + 0x58]\n 32588: i32 a0 = a0 + 0x2e0\n 32592: a1 = 0x20\n 32595: ra = 372, jump @0\n      : @465 [@dyn 186] (gas: 77)\n 32601: a1 = u64 [sp + 0x30]\n 32604: a1 = reverse a1\n 32606: a2 = u64 [sp + 0x38]\n 32609: a2 = reverse a2\n 32611: a3 = reverse s1\n 32613: a4 = u64 [sp + 0x10]\n 32616: a4 = reverse a4\n 32618: a5 = a4 >> 0x38\n 32621: u8 [a0 + 0x1f] = a5\n 32624: a5 = a4 >> 0x30\n 32627: u8 [a0 + 0x1e] = a5\n 32630: a5 = a4 >> 0x28\n 32633: u8 [a0 + 0x1d] = a5\n 32636: a5 = a4 >> 0x20\n 32639: u8 [a0 + 0x1c] = a5\n 32642: a5 = a4 >> 0x18\n 32645: u8 [a0 + 0x1b] = a5\n 32648: a5 = a4 >> 0x10\n 32651: u8 [a0 + 0x1a] = a5\n 32654: a5 = a4 >> 0x8\n 32657: u8 [a0 + 0x19] = a5\n 32660: u8 [a0 + 0x18] = a4\n 32663: u8 [a0 + 0x10] = a3\n 32666: a4 = a3 >> 0x38\n 32669: u8 [a0 + 0x17] = a4\n 32672: a4 = a3 >> 0x30\n 32675: u8 [a0 + 0x16] = a4\n 32678: a4 = a3 >> 0x28\n 32681: u8 [a0 + 0x15] = a4\n 32684: a4 = a3 >> 0x20\n 32687: u8 [a0 + 0x14] = a4\n 32690: a4 = a3 >> 0x18\n 32693: u8 [a0 + 0x13] = a4\n 32696: a4 = a3 >> 0x10\n 32699: u8 [a0 + 0x12] = a4\n 32702: a3 = a3 >> 0x8\n 32705: u8 [a0 + 0x11] = a3\n 32708: u8 [a0 + 0x8] = a2\n 32711: a3 = a2 >> 0x38\n 32714: u8 [a0 + 0xf] = a3\n 32717: a3 = a2 >> 0x30\n 32720: u8 [a0 + 0xe] = a3\n 32723: a3 = a2 >> 0x28\n 32726: u8 [a0 + 0xd] = a3\n 32729: a3 = a2 >> 0x20\n 32732: u8 [a0 + 0xc] = a3\n 32735: a3 = a2 >> 0x18\n 32738: u8 [a0 + 0xb] = a3\n 32741: a3 = a2 >> 0x10\n 32744: u8 [a0 + 0xa] = a3\n 32747: a2 = a2 >> 0x8\n 32750: u8 [a0 + 0x9] = a2\n 32753: u8 [a0] = a1\n 32755: a2 = a1 >> 0x38\n 32758: u8 [a0 + 0x7] = a2\n 32761: a2 = a1 >> 0x30\n 32764: u8 [a0 + 0x6] = a2\n 32767: a2 = a1 >> 0x28\n 32770: u8 [a0 + 0x5] = a2\n 32773: a2 = a1 >> 0x20\n 32776: u8 [a0 + 0x4] = a2\n 32779: a2 = a1 >> 0x18\n 32782: u8 [a0 + 0x3] = a2\n 32785: a2 = a1 >> 0x10\n 32788: u8 [a0 + 0x2] = a2\n 32791: a1 = a1 >> 0x8\n 32794: u8 [a0 + 0x1] = a1\n 32797: s1 = sp + 0x7e8\n 32801: u64 [s1 + 224] = 0\n 32805: u64 [s1 + 216] = 0\n 32809: u64 [s1 + 200] = 0x40\n 32814: a0 = sp + 0x7ff\n 32818: a0 = a0 + 0xd1\n 32822: a1 = sp + 0x7ff\n 32826: a1 = a1 + 0xb1\n 32830: u64 [s1 + 208] = 0\n 32834: ra = 374, jump @56\n      : @466 [@dyn 187] (gas: 15)\n 32840: a1 = u64 [s1 + 0x100]\n 32844: a2 = u64 [s1 + 0xf8]\n 32848: a0 = u64 [s1 + 0xf0]\n 32852: s1 = u64 [s1 + 0xe8]\n 32856: u64 [sp + 0x28] = a0\n 32859: u64 [sp + 0x30] = a1\n 32862: a0 = a0 | a1\n 32865: a1 = s1 | a2\n 32868: a1 = a1 | a0\n 32871: a1 = a1 >> 0x20\n 32874: u64 [sp + 0x38] = a2\n 32877: a0 = a0 | a2\n 32880: a0 = a0 << 0x20\n 32883: a0 = a0 | a1\n 32886: jump @468 if a0 == 0\n      : @467 (gas: 1)\n 32889: jump @781\n      : @468 (gas: 4)\n 32892: i32 a0 = s1 + 0\n 32894: a1 = 0x20\n 32897: u64 [sp + 0x18] = a0\n 32900: ra = 376, jump @0\n      : @469 [@dyn 188] (gas: 44)\n 32907: u8 [a0 + 31] = 0x7\n 32911: a1 = u64 [sp + 0x30]\n 32914: a2 = u64 [sp + 0x38]\n 32917: a2 = a2 | a1\n 32920: a1 = 0x100000000\n 32930: u64 [sp + 0x20] = a1\n 32933: a1 = 0xffffffe0\n 32943: u64 [sp + 0x10] = s1\n 32946: a1 = s1 <u a1\n 32949: s1 = u64 [sp + 0x28]\n 32952: a1 = 0 if s1 != 0\n 32954: a1 = 0 if a2 != 0\n 32956: u8 [a0 + 30] = 0\n 32959: u8 [a0 + 29] = 0\n 32962: u8 [a0 + 28] = 0\n 32965: u8 [a0 + 27] = 0\n 32968: u8 [a0 + 26] = 0\n 32971: u8 [a0 + 25] = 0\n 32974: u8 [a0 + 24] = 0\n 32977: u8 [a0 + 23] = 0\n 32980: u8 [a0 + 22] = 0\n 32983: u8 [a0 + 21] = 0\n 32986: u8 [a0 + 20] = 0\n 32989: u8 [a0 + 19] = 0\n 32992: u8 [a0 + 18] = 0\n 32995: u8 [a0 + 17] = 0\n 32998: u8 [a0 + 16] = 0\n 33001: u8 [a0 + 15] = 0\n 33004: u8 [a0 + 14] = 0\n 33007: u8 [a0 + 13] = 0\n 33010: u8 [a0 + 12] = 0\n 33013: u8 [a0 + 11] = 0\n 33016: u8 [a0 + 10] = 0\n 33019: u8 [a0 + 9] = 0\n 33022: u8 [a0 + 8] = 0\n 33025: u8 [a0 + 7] = 0\n 33028: u8 [a0 + 6] = 0\n 33031: u8 [a0 + 5] = 0\n 33034: u8 [a0 + 4] = 0\n 33037: u8 [a0 + 3] = 0\n 33040: u8 [a0 + 2] = 0\n 33043: u8 [a0 + 1] = 0\n 33046: u8 [a0 + 0] = 0\n 33048: jump @471 if a1 != 0\n      : @470 (gas: 1)\n 33051: jump @781\n      : @471 (gas: 4)\n 33054: a0 = u64 [sp + 0x18]\n 33057: i32 a0 = a0 + 0x20\n 33060: a1 = 0x20\n 33063: ra = 378, jump @0\n      : @472 [@dyn 189] (gas: 41)\n 33070: u8 [a0 + 31] = 0\n 33073: u8 [a0 + 30] = 0\n 33076: u8 [a0 + 29] = 0\n 33079: u8 [a0 + 28] = 0\n 33082: u8 [a0 + 27] = 0\n 33085: u8 [a0 + 26] = 0\n 33088: u8 [a0 + 25] = 0\n 33091: u8 [a0 + 24] = 0\n 33094: u8 [a0 + 23] = 0\n 33097: u8 [a0 + 22] = 0\n 33100: u8 [a0 + 21] = 0\n 33103: u8 [a0 + 20] = 0\n 33106: u8 [a0 + 19] = 0\n 33109: u8 [a0 + 18] = 0\n 33112: u8 [a0 + 17] = 0\n 33115: u8 [a0 + 16] = 0\n 33118: u8 [a0 + 15] = 0\n 33121: u8 [a0 + 14] = 0\n 33124: u8 [a0 + 13] = 0\n 33127: u8 [a0 + 12] = 0\n 33130: u8 [a0 + 11] = 0\n 33133: u8 [a0 + 10] = 0\n 33136: u8 [a0 + 9] = 0\n 33139: u8 [a0 + 8] = 0\n 33142: u8 [a0 + 7] = 0\n 33145: u8 [a0 + 6] = 0x63\n 33149: u8 [a0 + 5] = 0x69\n 33153: u8 [a0 + 4] = 0x6d\n 33157: u8 [a0 + 3] = 0x61\n 33161: u8 [a0 + 2] = 0x6e\n 33165: u8 [a0 + 1] = 0x79\n 33169: a2 = u64 [sp + 0x20]\n 33172: a2 = a2 + 0xfffffffffffffd00\n 33176: a3 = u64 [sp + 0x68]\n 33179: a2 = a3 <u a2\n 33182: a3 = u64 [sp + 0x60]\n 33185: a2 = 0 if a3 != 0\n 33187: a3 = u64 [sp + 0x50]\n 33190: a2 = 0 if a3 != 0\n 33192: u8 [a0 + 0] = 0x64\n 33195: jump @474 if a2 != 0\n      : @473 (gas: 1)\n 33198: jump @781\n      : @474 (gas: 4)\n 33201: a0 = u64 [sp + 0x58]\n 33204: i32 a0 = a0 + 0x300\n 33208: a1 = 0x20\n 33211: ra = 380, jump @0\n      : @475 [@dyn 190] (gas: 77)\n 33218: a1 = u64 [sp + 0x30]\n 33221: a1 = reverse a1\n 33223: a2 = u64 [sp + 0x38]\n 33226: a2 = reverse a2\n 33228: a3 = reverse s1\n 33230: a4 = u64 [sp + 0x10]\n 33233: a4 = reverse a4\n 33235: a5 = a4 >> 0x38\n 33238: u8 [a0 + 0x1f] = a5\n 33241: a5 = a4 >> 0x30\n 33244: u8 [a0 + 0x1e] = a5\n 33247: a5 = a4 >> 0x28\n 33250: u8 [a0 + 0x1d] = a5\n 33253: a5 = a4 >> 0x20\n 33256: u8 [a0 + 0x1c] = a5\n 33259: a5 = a4 >> 0x18\n 33262: u8 [a0 + 0x1b] = a5\n 33265: a5 = a4 >> 0x10\n 33268: u8 [a0 + 0x1a] = a5\n 33271: a5 = a4 >> 0x8\n 33274: u8 [a0 + 0x19] = a5\n 33277: u8 [a0 + 0x18] = a4\n 33280: u8 [a0 + 0x10] = a3\n 33283: a4 = a3 >> 0x38\n 33286: u8 [a0 + 0x17] = a4\n 33289: a4 = a3 >> 0x30\n 33292: u8 [a0 + 0x16] = a4\n 33295: a4 = a3 >> 0x28\n 33298: u8 [a0 + 0x15] = a4\n 33301: a4 = a3 >> 0x20\n 33304: u8 [a0 + 0x14] = a4\n 33307: a4 = a3 >> 0x18\n 33310: u8 [a0 + 0x13] = a4\n 33313: a4 = a3 >> 0x10\n 33316: u8 [a0 + 0x12] = a4\n 33319: a3 = a3 >> 0x8\n 33322: u8 [a0 + 0x11] = a3\n 33325: u8 [a0 + 0x8] = a2\n 33328: a3 = a2 >> 0x38\n 33331: u8 [a0 + 0xf] = a3\n 33334: a3 = a2 >> 0x30\n 33337: u8 [a0 + 0xe] = a3\n 33340: a3 = a2 >> 0x28\n 33343: u8 [a0 + 0xd] = a3\n 33346: a3 = a2 >> 0x20\n 33349: u8 [a0 + 0xc] = a3\n 33352: a3 = a2 >> 0x18\n 33355: u8 [a0 + 0xb] = a3\n 33358: a3 = a2 >> 0x10\n 33361: u8 [a0 + 0xa] = a3\n 33364: a2 = a2 >> 0x8\n 33367: u8 [a0 + 0x9] = a2\n 33370: u8 [a0] = a1\n 33372: a2 = a1 >> 0x38\n 33375: u8 [a0 + 0x7] = a2\n 33378: a2 = a1 >> 0x30\n 33381: u8 [a0 + 0x6] = a2\n 33384: a2 = a1 >> 0x28\n 33387: u8 [a0 + 0x5] = a2\n 33390: a2 = a1 >> 0x20\n 33393: u8 [a0 + 0x4] = a2\n 33396: a2 = a1 >> 0x18\n 33399: u8 [a0 + 0x3] = a2\n 33402: a2 = a1 >> 0x10\n 33405: u8 [a0 + 0x2] = a2\n 33408: a1 = a1 >> 0x8\n 33411: u8 [a0 + 0x1] = a1\n 33414: s1 = sp + 0x7e8\n 33418: u64 [s1 + 160] = 0\n 33422: u64 [s1 + 152] = 0\n 33426: u64 [s1 + 136] = 0x40\n 33431: a0 = sp + 0x7ff\n 33435: a0 = a0 + 0x91\n 33439: a1 = sp + 0x7ff\n 33443: a1 = a1 + 0x71\n 33446: u64 [s1 + 144] = 0\n 33450: ra = 382, jump @56\n      : @476 [@dyn 191] (gas: 15)\n 33456: a1 = u64 [s1 + 0xc0]\n 33460: a2 = u64 [s1 + 0xb8]\n 33464: a0 = u64 [s1 + 0xb0]\n 33468: s1 = u64 [s1 + 0xa8]\n 33472: u64 [sp + 0x28] = a0\n 33475: u64 [sp + 0x30] = a1\n 33478: a0 = a0 | a1\n 33481: a1 = s1 | a2\n 33484: a1 = a1 | a0\n 33487: a1 = a1 >> 0x20\n 33490: u64 [sp + 0x38] = a2\n 33493: a0 = a0 | a2\n 33496: a0 = a0 << 0x20\n 33499: a0 = a0 | a1\n 33502: jump @478 if a0 == 0\n      : @477 (gas: 1)\n 33505: jump @781\n      : @478 (gas: 4)\n 33508: i32 a0 = s1 + 0\n 33510: a1 = 0x20\n 33513: u64 [sp + 0x18] = a0\n 33516: ra = 384, jump @0\n      : @479 [@dyn 192] (gas: 44)\n 33523: u8 [a0 + 31] = 0x5\n 33527: a1 = u64 [sp + 0x30]\n 33530: a2 = u64 [sp + 0x38]\n 33533: a2 = a2 | a1\n 33536: a1 = 0x100000000\n 33546: u64 [sp + 0x20] = a1\n 33549: a1 = 0xffffffe0\n 33559: u64 [sp + 0x10] = s1\n 33562: a1 = s1 <u a1\n 33565: s1 = u64 [sp + 0x28]\n 33568: a1 = 0 if s1 != 0\n 33570: a1 = 0 if a2 != 0\n 33572: u8 [a0 + 30] = 0\n 33575: u8 [a0 + 29] = 0\n 33578: u8 [a0 + 28] = 0\n 33581: u8 [a0 + 27] = 0\n 33584: u8 [a0 + 26] = 0\n 33587: u8 [a0 + 25] = 0\n 33590: u8 [a0 + 24] = 0\n 33593: u8 [a0 + 23] = 0\n 33596: u8 [a0 + 22] = 0\n 33599: u8 [a0 + 21] = 0\n 33602: u8 [a0 + 20] = 0\n 33605: u8 [a0 + 19] = 0\n 33608: u8 [a0 + 18] = 0\n 33611: u8 [a0 + 17] = 0\n 33614: u8 [a0 + 16] = 0\n 33617: u8 [a0 + 15] = 0\n 33620: u8 [a0 + 14] = 0\n 33623: u8 [a0 + 13] = 0\n 33626: u8 [a0 + 12] = 0\n 33629: u8 [a0 + 11] = 0\n 33632: u8 [a0 + 10] = 0\n 33635: u8 [a0 + 9] = 0\n 33638: u8 [a0 + 8] = 0\n 33641: u8 [a0 + 7] = 0\n 33644: u8 [a0 + 6] = 0\n 33647: u8 [a0 + 5] = 0\n 33650: u8 [a0 + 4] = 0\n 33653: u8 [a0 + 3] = 0\n 33656: u8 [a0 + 2] = 0\n 33659: u8 [a0 + 1] = 0\n 33662: u8 [a0 + 0] = 0\n 33664: jump @481 if a1 != 0\n      : @480 (gas: 1)\n 33667: jump @781\n      : @481 (gas: 4)\n 33670: a0 = u64 [sp + 0x18]\n 33673: i32 a0 = a0 + 0x20\n 33676: a1 = 0x20\n 33679: ra = 386, jump @0\n      : @482 [@dyn 193] (gas: 41)\n 33686: u8 [a0 + 31] = 0\n 33689: u8 [a0 + 30] = 0\n 33692: u8 [a0 + 29] = 0\n 33695: u8 [a0 + 28] = 0\n 33698: u8 [a0 + 27] = 0\n 33701: u8 [a0 + 26] = 0\n 33704: u8 [a0 + 25] = 0\n 33707: u8 [a0 + 24] = 0\n 33710: u8 [a0 + 23] = 0\n 33713: u8 [a0 + 22] = 0\n 33716: u8 [a0 + 21] = 0\n 33719: u8 [a0 + 20] = 0\n 33722: u8 [a0 + 19] = 0\n 33725: u8 [a0 + 18] = 0\n 33728: u8 [a0 + 17] = 0\n 33731: u8 [a0 + 16] = 0\n 33734: u8 [a0 + 15] = 0\n 33737: u8 [a0 + 14] = 0\n 33740: u8 [a0 + 13] = 0\n 33743: u8 [a0 + 12] = 0\n 33746: u8 [a0 + 11] = 0\n 33749: u8 [a0 + 10] = 0\n 33752: u8 [a0 + 9] = 0\n 33755: u8 [a0 + 8] = 0\n 33758: u8 [a0 + 7] = 0\n 33761: u8 [a0 + 6] = 0\n 33764: u8 [a0 + 5] = 0\n 33767: u8 [a0 + 4] = 0x72\n 33771: u8 [a0 + 3] = 0x65\n 33775: u8 [a0 + 2] = 0x67\n 33779: u8 [a0 + 1] = 0x61\n 33783: a2 = u64 [sp + 0x20]\n 33786: a2 = a2 + 0xfffffffffffffce0\n 33790: a3 = u64 [sp + 0x68]\n 33793: a2 = a3 <u a2\n 33796: a3 = u64 [sp + 0x60]\n 33799: a2 = 0 if a3 != 0\n 33801: a3 = u64 [sp + 0x50]\n 33804: a2 = 0 if a3 != 0\n 33806: u8 [a0 + 0] = 0x65\n 33809: jump @484 if a2 != 0\n      : @483 (gas: 1)\n 33812: jump @781\n      : @484 (gas: 4)\n 33815: a0 = u64 [sp + 0x58]\n 33818: i32 a0 = a0 + 0x320\n 33822: a1 = 0x20\n 33825: ra = 388, jump @0\n      : @485 [@dyn 194] (gas: 77)\n 33832: a1 = u64 [sp + 0x30]\n 33835: a1 = reverse a1\n 33837: a2 = u64 [sp + 0x38]\n 33840: a2 = reverse a2\n 33842: a3 = reverse s1\n 33844: a4 = u64 [sp + 0x10]\n 33847: a4 = reverse a4\n 33849: a5 = a4 >> 0x38\n 33852: u8 [a0 + 0x1f] = a5\n 33855: a5 = a4 >> 0x30\n 33858: u8 [a0 + 0x1e] = a5\n 33861: a5 = a4 >> 0x28\n 33864: u8 [a0 + 0x1d] = a5\n 33867: a5 = a4 >> 0x20\n 33870: u8 [a0 + 0x1c] = a5\n 33873: a5 = a4 >> 0x18\n 33876: u8 [a0 + 0x1b] = a5\n 33879: a5 = a4 >> 0x10\n 33882: u8 [a0 + 0x1a] = a5\n 33885: a5 = a4 >> 0x8\n 33888: u8 [a0 + 0x19] = a5\n 33891: u8 [a0 + 0x18] = a4\n 33894: u8 [a0 + 0x10] = a3\n 33897: a4 = a3 >> 0x38\n 33900: u8 [a0 + 0x17] = a4\n 33903: a4 = a3 >> 0x30\n 33906: u8 [a0 + 0x16] = a4\n 33909: a4 = a3 >> 0x28\n 33912: u8 [a0 + 0x15] = a4\n 33915: a4 = a3 >> 0x20\n 33918: u8 [a0 + 0x14] = a4\n 33921: a4 = a3 >> 0x18\n 33924: u8 [a0 + 0x13] = a4\n 33927: a4 = a3 >> 0x10\n 33930: u8 [a0 + 0x12] = a4\n 33933: a3 = a3 >> 0x8\n 33936: u8 [a0 + 0x11] = a3\n 33939: u8 [a0 + 0x8] = a2\n 33942: a3 = a2 >> 0x38\n 33945: u8 [a0 + 0xf] = a3\n 33948: a3 = a2 >> 0x30\n 33951: u8 [a0 + 0xe] = a3\n 33954: a3 = a2 >> 0x28\n 33957: u8 [a0 + 0xd] = a3\n 33960: a3 = a2 >> 0x20\n 33963: u8 [a0 + 0xc] = a3\n 33966: a3 = a2 >> 0x18\n 33969: u8 [a0 + 0xb] = a3\n 33972: a3 = a2 >> 0x10\n 33975: u8 [a0 + 0xa] = a3\n 33978: a2 = a2 >> 0x8\n 33981: u8 [a0 + 0x9] = a2\n 33984: u8 [a0] = a1\n 33986: a2 = a1 >> 0x38\n 33989: u8 [a0 + 0x7] = a2\n 33992: a2 = a1 >> 0x30\n 33995: u8 [a0 + 0x6] = a2\n 33998: a2 = a1 >> 0x28\n 34001: u8 [a0 + 0x5] = a2\n 34004: a2 = a1 >> 0x20\n 34007: u8 [a0 + 0x4] = a2\n 34010: a2 = a1 >> 0x18\n 34013: u8 [a0 + 0x3] = a2\n 34016: a2 = a1 >> 0x10\n 34019: u8 [a0 + 0x2] = a2\n 34022: a1 = a1 >> 0x8\n 34025: u8 [a0 + 0x1] = a1\n 34028: s1 = sp + 0x7e8\n 34032: u64 [s1 + 96] = 0\n 34035: u64 [s1 + 88] = 0\n 34038: u64 [s1 + 72] = 0x40\n 34042: a0 = sp + 0x7ff\n 34046: a0 = a0 + 0x51\n 34049: a1 = sp + 0x7ff\n 34053: a1 = a1 + 0x31\n 34056: u64 [s1 + 80] = 0\n 34059: ra = 390, jump @56\n      : @486 [@dyn 195] (gas: 15)\n 34065: a1 = u64 [s1 + 0x80]\n 34069: a2 = u64 [s1 + 0x78]\n 34072: a0 = u64 [s1 + 0x70]\n 34075: s1 = u64 [s1 + 0x68]\n 34078: u64 [sp + 0x28] = a0\n 34081: u64 [sp + 0x30] = a1\n 34084: a0 = a0 | a1\n 34087: a1 = s1 | a2\n 34090: a1 = a1 | a0\n 34093: a1 = a1 >> 0x20\n 34096: u64 [sp + 0x38] = a2\n 34099: a0 = a0 | a2\n 34102: a0 = a0 << 0x20\n 34105: a0 = a0 | a1\n 34108: jump @488 if a0 == 0\n      : @487 (gas: 1)\n 34111: jump @781\n      : @488 (gas: 4)\n 34114: i32 a0 = s1 + 0\n 34116: a1 = 0x20\n 34119: u64 [sp + 0x18] = a0\n 34122: ra = 392, jump @0\n      : @489 [@dyn 196] (gas: 44)\n 34129: u8 [a0 + 31] = 0x7\n 34133: a1 = u64 [sp + 0x30]\n 34136: a2 = u64 [sp + 0x38]\n 34139: a2 = a2 | a1\n 34142: a1 = 0x100000000\n 34152: u64 [sp + 0x20] = a1\n 34155: a1 = 0xffffffe0\n 34165: u64 [sp + 0x10] = s1\n 34168: a1 = s1 <u a1\n 34171: s1 = u64 [sp + 0x28]\n 34174: a1 = 0 if s1 != 0\n 34176: a1 = 0 if a2 != 0\n 34178: u8 [a0 + 30] = 0\n 34181: u8 [a0 + 29] = 0\n 34184: u8 [a0 + 28] = 0\n 34187: u8 [a0 + 27] = 0\n 34190: u8 [a0 + 26] = 0\n 34193: u8 [a0 + 25] = 0\n 34196: u8 [a0 + 24] = 0\n 34199: u8 [a0 + 23] = 0\n 34202: u8 [a0 + 22] = 0\n 34205: u8 [a0 + 21] = 0\n 34208: u8 [a0 + 20] = 0\n 34211: u8 [a0 + 19] = 0\n 34214: u8 [a0 + 18] = 0\n 34217: u8 [a0 + 17] = 0\n 34220: u8 [a0 + 16] = 0\n 34223: u8 [a0 + 15] = 0\n 34226: u8 [a0 + 14] = 0\n 34229: u8 [a0 + 13] = 0\n 34232: u8 [a0 + 12] = 0\n 34235: u8 [a0 + 11] = 0\n 34238: u8 [a0 + 10] = 0\n 34241: u8 [a0 + 9] = 0\n 34244: u8 [a0 + 8] = 0\n 34247: u8 [a0 + 7] = 0\n 34250: u8 [a0 + 6] = 0\n 34253: u8 [a0 + 5] = 0\n 34256: u8 [a0 + 4] = 0\n 34259: u8 [a0 + 3] = 0\n 34262: u8 [a0 + 2] = 0\n 34265: u8 [a0 + 1] = 0\n 34268: u8 [a0 + 0] = 0\n 34270: jump @491 if a1 != 0\n      : @490 (gas: 1)\n 34273: jump @781\n      : @491 (gas: 4)\n 34276: a0 = u64 [sp + 0x18]\n 34279: i32 a0 = a0 + 0x20\n 34282: a1 = 0x20\n 34285: ra = 394, jump @0\n      : @492 [@dyn 197] (gas: 41)\n 34292: u8 [a0 + 31] = 0\n 34295: u8 [a0 + 30] = 0\n 34298: u8 [a0 + 29] = 0\n 34301: u8 [a0 + 28] = 0\n 34304: u8 [a0 + 27] = 0\n 34307: u8 [a0 + 26] = 0\n 34310: u8 [a0 + 25] = 0\n 34313: u8 [a0 + 24] = 0\n 34316: u8 [a0 + 23] = 0\n 34319: u8 [a0 + 22] = 0\n 34322: u8 [a0 + 21] = 0\n 34325: u8 [a0 + 20] = 0\n 34328: u8 [a0 + 19] = 0\n 34331: u8 [a0 + 18] = 0\n 34334: u8 [a0 + 17] = 0\n 34337: u8 [a0 + 16] = 0\n 34340: u8 [a0 + 15] = 0\n 34343: u8 [a0 + 14] = 0\n 34346: u8 [a0 + 13] = 0\n 34349: u8 [a0 + 12] = 0\n 34352: u8 [a0 + 11] = 0\n 34355: u8 [a0 + 10] = 0\n 34358: u8 [a0 + 9] = 0\n 34361: u8 [a0 + 8] = 0\n 34364: u8 [a0 + 7] = 0\n 34367: u8 [a0 + 6] = 0x74\n 34371: u8 [a0 + 5] = 0x6e\n 34375: u8 [a0 + 4] = 0x61\n 34379: u8 [a0 + 3] = 0x67\n 34383: u8 [a0 + 2] = 0x65\n 34387: u8 [a0 + 1] = 0x6c\n 34391: a2 = u64 [sp + 0x20]\n 34394: a2 = a2 + 0xfffffffffffffcc0\n 34398: a3 = u64 [sp + 0x68]\n 34401: a2 = a3 <u a2\n 34404: a3 = u64 [sp + 0x60]\n 34407: a2 = 0 if a3 != 0\n 34409: a3 = u64 [sp + 0x50]\n 34412: a2 = 0 if a3 != 0\n 34414: u8 [a0 + 0] = 0x65\n 34417: jump @494 if a2 != 0\n      : @493 (gas: 1)\n 34420: jump @781\n      : @494 (gas: 4)\n 34423: a0 = u64 [sp + 0x58]\n 34426: i32 a0 = a0 + 0x340\n 34430: a1 = 0x20\n 34433: ra = 396, jump @0\n      : @495 [@dyn 198] (gas: 76)\n 34440: a1 = u64 [sp + 0x30]\n 34443: a1 = reverse a1\n 34445: a2 = u64 [sp + 0x38]\n 34448: a2 = reverse a2\n 34450: a3 = reverse s1\n 34452: a4 = u64 [sp + 0x10]\n 34455: a4 = reverse a4\n 34457: a5 = a4 >> 0x38\n 34460: u8 [a0 + 0x1f] = a5\n 34463: a5 = a4 >> 0x30\n 34466: u8 [a0 + 0x1e] = a5\n 34469: a5 = a4 >> 0x28\n 34472: u8 [a0 + 0x1d] = a5\n 34475: a5 = a4 >> 0x20\n 34478: u8 [a0 + 0x1c] = a5\n 34481: a5 = a4 >> 0x18\n 34484: u8 [a0 + 0x1b] = a5\n 34487: a5 = a4 >> 0x10\n 34490: u8 [a0 + 0x1a] = a5\n 34493: a5 = a4 >> 0x8\n 34496: u8 [a0 + 0x19] = a5\n 34499: u8 [a0 + 0x18] = a4\n 34502: u8 [a0 + 0x10] = a3\n 34505: a4 = a3 >> 0x38\n 34508: u8 [a0 + 0x17] = a4\n 34511: a4 = a3 >> 0x30\n 34514: u8 [a0 + 0x16] = a4\n 34517: a4 = a3 >> 0x28\n 34520: u8 [a0 + 0x15] = a4\n 34523: a4 = a3 >> 0x20\n 34526: u8 [a0 + 0x14] = a4\n 34529: a4 = a3 >> 0x18\n 34532: u8 [a0 + 0x13] = a4\n 34535: a4 = a3 >> 0x10\n 34538: u8 [a0 + 0x12] = a4\n 34541: a3 = a3 >> 0x8\n 34544: u8 [a0 + 0x11] = a3\n 34547: u8 [a0 + 0x8] = a2\n 34550: a3 = a2 >> 0x38\n 34553: u8 [a0 + 0xf] = a3\n 34556: a3 = a2 >> 0x30\n 34559: u8 [a0 + 0xe] = a3\n 34562: a3 = a2 >> 0x28\n 34565: u8 [a0 + 0xd] = a3\n 34568: a3 = a2 >> 0x20\n 34571: u8 [a0 + 0xc] = a3\n 34574: a3 = a2 >> 0x18\n 34577: u8 [a0 + 0xb] = a3\n 34580: a3 = a2 >> 0x10\n 34583: u8 [a0 + 0xa] = a3\n 34586: a2 = a2 >> 0x8\n 34589: u8 [a0 + 0x9] = a2\n 34592: u8 [a0] = a1\n 34594: a2 = a1 >> 0x38\n 34597: u8 [a0 + 0x7] = a2\n 34600: a2 = a1 >> 0x30\n 34603: u8 [a0 + 0x6] = a2\n 34606: a2 = a1 >> 0x28\n 34609: u8 [a0 + 0x5] = a2\n 34612: a2 = a1 >> 0x20\n 34615: u8 [a0 + 0x4] = a2\n 34618: a2 = a1 >> 0x18\n 34621: u8 [a0 + 0x3] = a2\n 34624: a2 = a1 >> 0x10\n 34627: u8 [a0 + 0x2] = a2\n 34630: a1 = a1 >> 0x8\n 34633: u8 [a0 + 0x1] = a1\n 34636: s1 = sp + 0x7e8\n 34640: u64 [s1 + 32] = 0\n 34643: u64 [s1 + 24] = 0\n 34646: u64 [s1 + 8] = 0x40\n 34650: a0 = sp + 0x7ff\n 34654: a0 = a0 + 0x11\n 34657: a1 = sp + 0x7f0\n 34661: u64 [s1 + 16] = 0\n 34664: ra = 398, jump @56\n      : @496 [@dyn 199] (gas: 15)\n 34671: a1 = u64 [s1 + 0x40]\n 34674: a2 = u64 [s1 + 0x38]\n 34677: a0 = u64 [s1 + 0x30]\n 34680: s1 = u64 [s1 + 0x28]\n 34683: u64 [sp + 0x28] = a0\n 34686: u64 [sp + 0x30] = a1\n 34689: a0 = a0 | a1\n 34692: a1 = s1 | a2\n 34695: a1 = a1 | a0\n 34698: a1 = a1 >> 0x20\n 34701: u64 [sp + 0x38] = a2\n 34704: a0 = a0 | a2\n 34707: a0 = a0 << 0x20\n 34710: a0 = a0 | a1\n 34713: jump @498 if a0 == 0\n      : @497 (gas: 1)\n 34716: jump @781\n      : @498 (gas: 4)\n 34719: i32 a0 = s1 + 0\n 34721: a1 = 0x20\n 34724: u64 [sp + 0x18] = a0\n 34727: ra = 400, jump @0\n      : @499 [@dyn 200] (gas: 44)\n 34734: u8 [a0 + 31] = 0xa\n 34738: a1 = u64 [sp + 0x30]\n 34741: a2 = u64 [sp + 0x38]\n 34744: a2 = a2 | a1\n 34747: a1 = 0x100000000\n 34757: u64 [sp + 0x20] = a1\n 34760: a1 = 0xffffffe0\n 34770: u64 [sp + 0x10] = s1\n 34773: a1 = s1 <u a1\n 34776: s1 = u64 [sp + 0x28]\n 34779: a1 = 0 if s1 != 0\n 34781: a1 = 0 if a2 != 0\n 34783: u8 [a0 + 30] = 0\n 34786: u8 [a0 + 29] = 0\n 34789: u8 [a0 + 28] = 0\n 34792: u8 [a0 + 27] = 0\n 34795: u8 [a0 + 26] = 0\n 34798: u8 [a0 + 25] = 0\n 34801: u8 [a0 + 24] = 0\n 34804: u8 [a0 + 23] = 0\n 34807: u8 [a0 + 22] = 0\n 34810: u8 [a0 + 21] = 0\n 34813: u8 [a0 + 20] = 0\n 34816: u8 [a0 + 19] = 0\n 34819: u8 [a0 + 18] = 0\n 34822: u8 [a0 + 17] = 0\n 34825: u8 [a0 + 16] = 0\n 34828: u8 [a0 + 15] = 0\n 34831: u8 [a0 + 14] = 0\n 34834: u8 [a0 + 13] = 0\n 34837: u8 [a0 + 12] = 0\n 34840: u8 [a0 + 11] = 0\n 34843: u8 [a0 + 10] = 0\n 34846: u8 [a0 + 9] = 0\n 34849: u8 [a0 + 8] = 0\n 34852: u8 [a0 + 7] = 0\n 34855: u8 [a0 + 6] = 0\n 34858: u8 [a0 + 5] = 0\n 34861: u8 [a0 + 4] = 0\n 34864: u8 [a0 + 3] = 0\n 34867: u8 [a0 + 2] = 0\n 34870: u8 [a0 + 1] = 0\n 34873: u8 [a0 + 0] = 0\n 34875: jump @501 if a1 != 0\n      : @500 (gas: 1)\n 34878: jump @781\n      : @501 (gas: 4)\n 34881: a0 = u64 [sp + 0x18]\n 34884: i32 a0 = a0 + 0x20\n 34887: a1 = 0x20\n 34890: ra = 402, jump @0\n      : @502 [@dyn 201] (gas: 41)\n 34897: u8 [a0 + 31] = 0\n 34900: u8 [a0 + 30] = 0\n 34903: u8 [a0 + 29] = 0\n 34906: u8 [a0 + 28] = 0\n 34909: u8 [a0 + 27] = 0\n 34912: u8 [a0 + 26] = 0\n 34915: u8 [a0 + 25] = 0\n 34918: u8 [a0 + 24] = 0\n 34921: u8 [a0 + 23] = 0\n 34924: u8 [a0 + 22] = 0\n 34927: u8 [a0 + 21] = 0\n 34930: u8 [a0 + 20] = 0\n 34933: u8 [a0 + 19] = 0\n 34936: u8 [a0 + 18] = 0\n 34939: u8 [a0 + 17] = 0\n 34942: u8 [a0 + 16] = 0\n 34945: u8 [a0 + 15] = 0\n 34948: u8 [a0 + 14] = 0\n 34951: u8 [a0 + 13] = 0\n 34954: u8 [a0 + 12] = 0\n 34957: u8 [a0 + 11] = 0\n 34960: u8 [a0 + 10] = 0\n 34963: u8 [a0 + 9] = 0x67\n 34967: u8 [a0 + 8] = 0x6e\n 34971: u8 [a0 + 7] = 0x69\n 34975: u8 [a0 + 6] = 0x74\n 34979: u8 [a0 + 5] = 0x6e\n 34983: u8 [a0 + 4] = 0x61\n 34987: u8 [a0 + 3] = 0x68\n 34991: u8 [a0 + 2] = 0x63\n 34995: u8 [a0 + 1] = 0x6e\n 34999: a2 = u64 [sp + 0x20]\n 35002: a2 = a2 + 0xfffffffffffffca0\n 35006: a3 = u64 [sp + 0x68]\n 35009: a2 = a3 <u a2\n 35012: a3 = u64 [sp + 0x60]\n 35015: a2 = 0 if a3 != 0\n 35017: a3 = u64 [sp + 0x50]\n 35020: a2 = 0 if a3 != 0\n 35022: u8 [a0 + 0] = 0x65\n 35025: jump @504 if a2 != 0\n      : @503 (gas: 1)\n 35028: jump @781\n      : @504 (gas: 4)\n 35031: a0 = u64 [sp + 0x58]\n 35034: i32 a0 = a0 + 0x360\n 35038: a1 = 0x20\n 35041: ra = 404, jump @0\n      : @505 [@dyn 202] (gas: 74)\n 35048: a1 = u64 [sp + 0x30]\n 35051: a1 = reverse a1\n 35053: a2 = u64 [sp + 0x38]\n 35056: a2 = reverse a2\n 35058: a3 = reverse s1\n 35060: a4 = u64 [sp + 0x10]\n 35063: a4 = reverse a4\n 35065: a5 = a4 >> 0x38\n 35068: u8 [a0 + 0x1f] = a5\n 35071: a5 = a4 >> 0x30\n 35074: u8 [a0 + 0x1e] = a5\n 35077: a5 = a4 >> 0x28\n 35080: u8 [a0 + 0x1d] = a5\n 35083: a5 = a4 >> 0x20\n 35086: u8 [a0 + 0x1c] = a5\n 35089: a5 = a4 >> 0x18\n 35092: u8 [a0 + 0x1b] = a5\n 35095: a5 = a4 >> 0x10\n 35098: u8 [a0 + 0x1a] = a5\n 35101: a5 = a4 >> 0x8\n 35104: u8 [a0 + 0x19] = a5\n 35107: u8 [a0 + 0x18] = a4\n 35110: u8 [a0 + 0x10] = a3\n 35113: a4 = a3 >> 0x38\n 35116: u8 [a0 + 0x17] = a4\n 35119: a4 = a3 >> 0x30\n 35122: u8 [a0 + 0x16] = a4\n 35125: a4 = a3 >> 0x28\n 35128: u8 [a0 + 0x15] = a4\n 35131: a4 = a3 >> 0x20\n 35134: u8 [a0 + 0x14] = a4\n 35137: a4 = a3 >> 0x18\n 35140: u8 [a0 + 0x13] = a4\n 35143: a4 = a3 >> 0x10\n 35146: u8 [a0 + 0x12] = a4\n 35149: a3 = a3 >> 0x8\n 35152: u8 [a0 + 0x11] = a3\n 35155: u8 [a0 + 0x8] = a2\n 35158: a3 = a2 >> 0x38\n 35161: u8 [a0 + 0xf] = a3\n 35164: a3 = a2 >> 0x30\n 35167: u8 [a0 + 0xe] = a3\n 35170: a3 = a2 >> 0x28\n 35173: u8 [a0 + 0xd] = a3\n 35176: a3 = a2 >> 0x20\n 35179: u8 [a0 + 0xc] = a3\n 35182: a3 = a2 >> 0x18\n 35185: u8 [a0 + 0xb] = a3\n 35188: a3 = a2 >> 0x10\n 35191: u8 [a0 + 0xa] = a3\n 35194: a2 = a2 >> 0x8\n 35197: u8 [a0 + 0x9] = a2\n 35200: u8 [a0] = a1\n 35202: a2 = a1 >> 0x38\n 35205: u8 [a0 + 0x7] = a2\n 35208: a2 = a1 >> 0x30\n 35211: u8 [a0 + 0x6] = a2\n 35214: a2 = a1 >> 0x28\n 35217: u8 [a0 + 0x5] = a2\n 35220: a2 = a1 >> 0x20\n 35223: u8 [a0 + 0x4] = a2\n 35226: a2 = a1 >> 0x18\n 35229: u8 [a0 + 0x3] = a2\n 35232: a2 = a1 >> 0x10\n 35235: u8 [a0 + 0x2] = a2\n 35238: a1 = a1 >> 0x8\n 35241: u8 [a0 + 0x1] = a1\n 35244: u64 [sp + 1992] = 0\n 35248: u64 [sp + 1984] = 0\n 35252: u64 [sp + 1968] = 0x40\n 35257: a0 = sp + 0x7d0\n 35261: a1 = sp + 0x7b0\n 35265: u64 [sp + 1976] = 0\n 35269: ra = 406, jump @56\n      : @506 [@dyn 203] (gas: 16)\n 35276: a0 = sp + 0x7e8\n 35280: a1 = u64 [a0]\n 35282: a2 = u64 [a0 + 0xfffffffffffffff8]\n 35285: a0 = u64 [sp + 0x7d8]\n 35289: s1 = u64 [sp + 0x7d0]\n 35293: u64 [sp + 0x28] = a0\n 35296: u64 [sp + 0x30] = a1\n 35299: a0 = a0 | a1\n 35302: a1 = s1 | a2\n 35305: a1 = a1 | a0\n 35308: a1 = a1 >> 0x20\n 35311: u64 [sp + 0x38] = a2\n 35314: a0 = a0 | a2\n 35317: a0 = a0 << 0x20\n 35320: a0 = a0 | a1\n 35323: jump @508 if a0 == 0\n      : @507 (gas: 1)\n 35326: jump @781\n      : @508 (gas: 4)\n 35329: i32 a0 = s1 + 0\n 35331: a1 = 0x20\n 35334: u64 [sp + 0x18] = a0\n 35337: ra = 408, jump @0\n      : @509 [@dyn 204] (gas: 44)\n 35344: u8 [a0 + 31] = 0x9\n 35348: a1 = u64 [sp + 0x30]\n 35351: a2 = u64 [sp + 0x38]\n 35354: a2 = a2 | a1\n 35357: a1 = 0x100000000\n 35367: u64 [sp + 0x20] = a1\n 35370: a1 = 0xffffffe0\n 35380: u64 [sp + 0x10] = s1\n 35383: a1 = s1 <u a1\n 35386: s1 = u64 [sp + 0x28]\n 35389: a1 = 0 if s1 != 0\n 35391: a1 = 0 if a2 != 0\n 35393: u8 [a0 + 30] = 0\n 35396: u8 [a0 + 29] = 0\n 35399: u8 [a0 + 28] = 0\n 35402: u8 [a0 + 27] = 0\n 35405: u8 [a0 + 26] = 0\n 35408: u8 [a0 + 25] = 0\n 35411: u8 [a0 + 24] = 0\n 35414: u8 [a0 + 23] = 0\n 35417: u8 [a0 + 22] = 0\n 35420: u8 [a0 + 21] = 0\n 35423: u8 [a0 + 20] = 0\n 35426: u8 [a0 + 19] = 0\n 35429: u8 [a0 + 18] = 0\n 35432: u8 [a0 + 17] = 0\n 35435: u8 [a0 + 16] = 0\n 35438: u8 [a0 + 15] = 0\n 35441: u8 [a0 + 14] = 0\n 35444: u8 [a0 + 13] = 0\n 35447: u8 [a0 + 12] = 0\n 35450: u8 [a0 + 11] = 0\n 35453: u8 [a0 + 10] = 0\n 35456: u8 [a0 + 9] = 0\n 35459: u8 [a0 + 8] = 0\n 35462: u8 [a0 + 7] = 0\n 35465: u8 [a0 + 6] = 0\n 35468: u8 [a0 + 5] = 0\n 35471: u8 [a0 + 4] = 0\n 35474: u8 [a0 + 3] = 0\n 35477: u8 [a0 + 2] = 0\n 35480: u8 [a0 + 1] = 0\n 35483: u8 [a0 + 0] = 0\n 35485: jump @511 if a1 != 0\n      : @510 (gas: 1)\n 35488: jump @781\n      : @511 (gas: 4)\n 35491: a0 = u64 [sp + 0x18]\n 35494: i32 a0 = a0 + 0x20\n 35497: a1 = 0x20\n 35500: ra = 410, jump @0\n      : @512 [@dyn 205] (gas: 41)\n 35507: u8 [a0 + 31] = 0\n 35510: u8 [a0 + 30] = 0\n 35513: u8 [a0 + 29] = 0\n 35516: u8 [a0 + 28] = 0\n 35519: u8 [a0 + 27] = 0\n 35522: u8 [a0 + 26] = 0\n 35525: u8 [a0 + 25] = 0\n 35528: u8 [a0 + 24] = 0\n 35531: u8 [a0 + 23] = 0\n 35534: u8 [a0 + 22] = 0\n 35537: u8 [a0 + 21] = 0\n 35540: u8 [a0 + 20] = 0\n 35543: u8 [a0 + 19] = 0\n 35546: u8 [a0 + 18] = 0\n 35549: u8 [a0 + 17] = 0\n 35552: u8 [a0 + 16] = 0\n 35555: u8 [a0 + 15] = 0\n 35558: u8 [a0 + 14] = 0\n 35561: u8 [a0 + 13] = 0\n 35564: u8 [a0 + 12] = 0\n 35567: u8 [a0 + 11] = 0\n 35570: u8 [a0 + 10] = 0\n 35573: u8 [a0 + 9] = 0\n 35576: u8 [a0 + 8] = 0x63\n 35580: u8 [a0 + 7] = 0x69\n 35584: u8 [a0 + 6] = 0x74\n 35588: u8 [a0 + 5] = 0x65\n 35592: u8 [a0 + 4] = 0x67\n 35596: u8 [a0 + 3] = 0x72\n 35600: u8 [a0 + 2] = 0x65\n 35604: u8 [a0 + 1] = 0x6e\n 35608: a2 = u64 [sp + 0x20]\n 35611: a2 = a2 + 0xfffffffffffffc80\n 35615: a3 = u64 [sp + 0x68]\n 35618: a2 = a3 <u a2\n 35621: a3 = u64 [sp + 0x60]\n 35624: a2 = 0 if a3 != 0\n 35626: a3 = u64 [sp + 0x50]\n 35629: a2 = 0 if a3 != 0\n 35631: u8 [a0 + 0] = 0x65\n 35634: jump @514 if a2 != 0\n      : @513 (gas: 1)\n 35637: jump @781\n      : @514 (gas: 4)\n 35640: a0 = u64 [sp + 0x58]\n 35643: i32 a0 = a0 + 0x380\n 35647: a1 = 0x20\n 35650: ra = 412, jump @0\n      : @515 [@dyn 206] (gas: 74)\n 35657: a1 = u64 [sp + 0x30]\n 35660: a1 = reverse a1\n 35662: a2 = u64 [sp + 0x38]\n 35665: a2 = reverse a2\n 35667: a3 = reverse s1\n 35669: a4 = u64 [sp + 0x10]\n 35672: a4 = reverse a4\n 35674: a5 = a4 >> 0x38\n 35677: u8 [a0 + 0x1f] = a5\n 35680: a5 = a4 >> 0x30\n 35683: u8 [a0 + 0x1e] = a5\n 35686: a5 = a4 >> 0x28\n 35689: u8 [a0 + 0x1d] = a5\n 35692: a5 = a4 >> 0x20\n 35695: u8 [a0 + 0x1c] = a5\n 35698: a5 = a4 >> 0x18\n 35701: u8 [a0 + 0x1b] = a5\n 35704: a5 = a4 >> 0x10\n 35707: u8 [a0 + 0x1a] = a5\n 35710: a5 = a4 >> 0x8\n 35713: u8 [a0 + 0x19] = a5\n 35716: u8 [a0 + 0x18] = a4\n 35719: u8 [a0 + 0x10] = a3\n 35722: a4 = a3 >> 0x38\n 35725: u8 [a0 + 0x17] = a4\n 35728: a4 = a3 >> 0x30\n 35731: u8 [a0 + 0x16] = a4\n 35734: a4 = a3 >> 0x28\n 35737: u8 [a0 + 0x15] = a4\n 35740: a4 = a3 >> 0x20\n 35743: u8 [a0 + 0x14] = a4\n 35746: a4 = a3 >> 0x18\n 35749: u8 [a0 + 0x13] = a4\n 35752: a4 = a3 >> 0x10\n 35755: u8 [a0 + 0x12] = a4\n 35758: a3 = a3 >> 0x8\n 35761: u8 [a0 + 0x11] = a3\n 35764: u8 [a0 + 0x8] = a2\n 35767: a3 = a2 >> 0x38\n 35770: u8 [a0 + 0xf] = a3\n 35773: a3 = a2 >> 0x30\n 35776: u8 [a0 + 0xe] = a3\n 35779: a3 = a2 >> 0x28\n 35782: u8 [a0 + 0xd] = a3\n 35785: a3 = a2 >> 0x20\n 35788: u8 [a0 + 0xc] = a3\n 35791: a3 = a2 >> 0x18\n 35794: u8 [a0 + 0xb] = a3\n 35797: a3 = a2 >> 0x10\n 35800: u8 [a0 + 0xa] = a3\n 35803: a2 = a2 >> 0x8\n 35806: u8 [a0 + 0x9] = a2\n 35809: u8 [a0] = a1\n 35811: a2 = a1 >> 0x38\n 35814: u8 [a0 + 0x7] = a2\n 35817: a2 = a1 >> 0x30\n 35820: u8 [a0 + 0x6] = a2\n 35823: a2 = a1 >> 0x28\n 35826: u8 [a0 + 0x5] = a2\n 35829: a2 = a1 >> 0x20\n 35832: u8 [a0 + 0x4] = a2\n 35835: a2 = a1 >> 0x18\n 35838: u8 [a0 + 0x3] = a2\n 35841: a2 = a1 >> 0x10\n 35844: u8 [a0 + 0x2] = a2\n 35847: a1 = a1 >> 0x8\n 35850: u8 [a0 + 0x1] = a1\n 35853: u64 [sp + 1928] = 0\n 35857: u64 [sp + 1920] = 0\n 35861: u64 [sp + 1904] = 0x40\n 35866: a0 = sp + 0x790\n 35870: a1 = sp + 0x770\n 35874: u64 [sp + 1912] = 0\n 35878: ra = 414, jump @56\n      : @516 [@dyn 207] (gas: 15)\n 35885: a1 = u64 [sp + 0x7a8]\n 35889: a2 = u64 [sp + 0x7a0]\n 35893: a0 = u64 [sp + 0x798]\n 35897: s1 = u64 [sp + 0x790]\n 35901: u64 [sp + 0x28] = a0\n 35904: u64 [sp + 0x30] = a1\n 35907: a0 = a0 | a1\n 35910: a1 = s1 | a2\n 35913: a1 = a1 | a0\n 35916: a1 = a1 >> 0x20\n 35919: u64 [sp + 0x38] = a2\n 35922: a0 = a0 | a2\n 35925: a0 = a0 << 0x20\n 35928: a0 = a0 | a1\n 35931: jump @518 if a0 == 0\n      : @517 (gas: 1)\n 35934: jump @781\n      : @518 (gas: 4)\n 35937: i32 a0 = s1 + 0\n 35939: a1 = 0x20\n 35942: u64 [sp + 0x18] = a0\n 35945: ra = 416, jump @0\n      : @519 [@dyn 208] (gas: 44)\n 35952: u8 [a0 + 31] = 0xc\n 35956: a1 = u64 [sp + 0x30]\n 35959: a2 = u64 [sp + 0x38]\n 35962: a2 = a2 | a1\n 35965: a1 = 0x100000000\n 35975: u64 [sp + 0x20] = a1\n 35978: a1 = 0xffffffe0\n 35988: u64 [sp + 0x10] = s1\n 35991: a1 = s1 <u a1\n 35994: s1 = u64 [sp + 0x28]\n 35997: a1 = 0 if s1 != 0\n 35999: a1 = 0 if a2 != 0\n 36001: u8 [a0 + 30] = 0\n 36004: u8 [a0 + 29] = 0\n 36007: u8 [a0 + 28] = 0\n 36010: u8 [a0 + 27] = 0\n 36013: u8 [a0 + 26] = 0\n 36016: u8 [a0 + 25] = 0\n 36019: u8 [a0 + 24] = 0\n 36022: u8 [a0 + 23] = 0\n 36025: u8 [a0 + 22] = 0\n 36028: u8 [a0 + 21] = 0\n 36031: u8 [a0 + 20] = 0\n 36034: u8 [a0 + 19] = 0\n 36037: u8 [a0 + 18] = 0\n 36040: u8 [a0 + 17] = 0\n 36043: u8 [a0 + 16] = 0\n 36046: u8 [a0 + 15] = 0\n 36049: u8 [a0 + 14] = 0\n 36052: u8 [a0 + 13] = 0\n 36055: u8 [a0 + 12] = 0\n 36058: u8 [a0 + 11] = 0\n 36061: u8 [a0 + 10] = 0\n 36064: u8 [a0 + 9] = 0\n 36067: u8 [a0 + 8] = 0\n 36070: u8 [a0 + 7] = 0\n 36073: u8 [a0 + 6] = 0\n 36076: u8 [a0 + 5] = 0\n 36079: u8 [a0 + 4] = 0\n 36082: u8 [a0 + 3] = 0\n 36085: u8 [a0 + 2] = 0\n 36088: u8 [a0 + 1] = 0\n 36091: u8 [a0 + 0] = 0\n 36093: jump @521 if a1 != 0\n      : @520 (gas: 1)\n 36096: jump @781\n      : @521 (gas: 4)\n 36099: a0 = u64 [sp + 0x18]\n 36102: i32 a0 = a0 + 0x20\n 36105: a1 = 0x20\n 36108: ra = 418, jump @0\n      : @522 [@dyn 209] (gas: 42)\n 36115: u8 [a0 + 31] = 0\n 36118: u8 [a0 + 30] = 0\n 36121: u8 [a0 + 29] = 0\n 36124: u8 [a0 + 28] = 0\n 36127: u8 [a0 + 27] = 0\n 36130: u8 [a0 + 26] = 0\n 36133: u8 [a0 + 25] = 0\n 36136: u8 [a0 + 24] = 0\n 36139: u8 [a0 + 23] = 0\n 36142: u8 [a0 + 22] = 0\n 36145: u8 [a0 + 21] = 0\n 36148: u8 [a0 + 20] = 0\n 36151: u8 [a0 + 19] = 0\n 36154: u8 [a0 + 18] = 0\n 36157: u8 [a0 + 17] = 0\n 36160: u8 [a0 + 16] = 0\n 36163: u8 [a0 + 15] = 0\n 36166: u8 [a0 + 14] = 0\n 36169: u8 [a0 + 13] = 0\n 36172: u8 [a0 + 12] = 0\n 36175: u8 [a0 + 11] = 0x63\n 36179: u8 [a0 + 10] = 0x69\n 36183: u8 [a0 + 9] = 0x74\n 36187: u8 [a0 + 8] = 0x73\n 36191: a4 = 0x61\n 36194: u8 [a0 + 0x7] = a4\n 36197: u8 [a0 + 6] = 0x69\n 36201: u8 [a0 + 5] = 0x73\n 36205: u8 [a0 + 4] = 0x75\n 36209: u8 [a0 + 3] = 0x68\n 36213: u8 [a0 + 2] = 0x74\n 36217: u8 [a0 + 1] = 0x6e\n 36221: a2 = u64 [sp + 0x20]\n 36224: a2 = a2 + 0xfffffffffffffc60\n 36228: a3 = u64 [sp + 0x68]\n 36231: a2 = a3 <u a2\n 36234: a3 = u64 [sp + 0x60]\n 36237: a2 = 0 if a3 != 0\n 36239: a3 = u64 [sp + 0x50]\n 36242: a2 = 0 if a3 != 0\n 36244: u8 [a0 + 0] = 0x65\n 36247: jump @524 if a2 != 0\n      : @523 (gas: 1)\n 36250: jump @781\n      : @524 (gas: 4)\n 36253: a0 = u64 [sp + 0x58]\n 36256: i32 a0 = a0 + 0x3a0\n 36260: a1 = 0x20\n 36263: ra = 420, jump @0\n      : @525 [@dyn 210] (gas: 74)\n 36270: a1 = u64 [sp + 0x30]\n 36273: a1 = reverse a1\n 36275: a2 = u64 [sp + 0x38]\n 36278: a2 = reverse a2\n 36280: a3 = reverse s1\n 36282: a4 = u64 [sp + 0x10]\n 36285: a4 = reverse a4\n 36287: a5 = a4 >> 0x38\n 36290: u8 [a0 + 0x1f] = a5\n 36293: a5 = a4 >> 0x30\n 36296: u8 [a0 + 0x1e] = a5\n 36299: a5 = a4 >> 0x28\n 36302: u8 [a0 + 0x1d] = a5\n 36305: a5 = a4 >> 0x20\n 36308: u8 [a0 + 0x1c] = a5\n 36311: a5 = a4 >> 0x18\n 36314: u8 [a0 + 0x1b] = a5\n 36317: a5 = a4 >> 0x10\n 36320: u8 [a0 + 0x1a] = a5\n 36323: a5 = a4 >> 0x8\n 36326: u8 [a0 + 0x19] = a5\n 36329: u8 [a0 + 0x18] = a4\n 36332: u8 [a0 + 0x10] = a3\n 36335: a4 = a3 >> 0x38\n 36338: u8 [a0 + 0x17] = a4\n 36341: a4 = a3 >> 0x30\n 36344: u8 [a0 + 0x16] = a4\n 36347: a4 = a3 >> 0x28\n 36350: u8 [a0 + 0x15] = a4\n 36353: a4 = a3 >> 0x20\n 36356: u8 [a0 + 0x14] = a4\n 36359: a4 = a3 >> 0x18\n 36362: u8 [a0 + 0x13] = a4\n 36365: a4 = a3 >> 0x10\n 36368: u8 [a0 + 0x12] = a4\n 36371: a3 = a3 >> 0x8\n 36374: u8 [a0 + 0x11] = a3\n 36377: u8 [a0 + 0x8] = a2\n 36380: a3 = a2 >> 0x38\n 36383: u8 [a0 + 0xf] = a3\n 36386: a3 = a2 >> 0x30\n 36389: u8 [a0 + 0xe] = a3\n 36392: a3 = a2 >> 0x28\n 36395: u8 [a0 + 0xd] = a3\n 36398: a3 = a2 >> 0x20\n 36401: u8 [a0 + 0xc] = a3\n 36404: a3 = a2 >> 0x18\n 36407: u8 [a0 + 0xb] = a3\n 36410: a3 = a2 >> 0x10\n 36413: u8 [a0 + 0xa] = a3\n 36416: a2 = a2 >> 0x8\n 36419: u8 [a0 + 0x9] = a2\n 36422: u8 [a0] = a1\n 36424: a2 = a1 >> 0x38\n 36427: u8 [a0 + 0x7] = a2\n 36430: a2 = a1 >> 0x30\n 36433: u8 [a0 + 0x6] = a2\n 36436: a2 = a1 >> 0x28\n 36439: u8 [a0 + 0x5] = a2\n 36442: a2 = a1 >> 0x20\n 36445: u8 [a0 + 0x4] = a2\n 36448: a2 = a1 >> 0x18\n 36451: u8 [a0 + 0x3] = a2\n 36454: a2 = a1 >> 0x10\n 36457: u8 [a0 + 0x2] = a2\n 36460: a1 = a1 >> 0x8\n 36463: u8 [a0 + 0x1] = a1\n 36466: u64 [sp + 1864] = 0\n 36470: u64 [sp + 1856] = 0\n 36474: u64 [sp + 1840] = 0x40\n 36479: a0 = sp + 0x750\n 36483: a1 = sp + 0x730\n 36487: u64 [sp + 1848] = 0\n 36491: ra = 422, jump @56\n      : @526 [@dyn 211] (gas: 15)\n 36498: a1 = u64 [sp + 0x768]\n 36502: a2 = u64 [sp + 0x760]\n 36506: a0 = u64 [sp + 0x758]\n 36510: s1 = u64 [sp + 0x750]\n 36514: u64 [sp + 0x28] = a0\n 36517: u64 [sp + 0x30] = a1\n 36520: a0 = a0 | a1\n 36523: a1 = s1 | a2\n 36526: a1 = a1 | a0\n 36529: a1 = a1 >> 0x20\n 36532: u64 [sp + 0x38] = a2\n 36535: a0 = a0 | a2\n 36538: a0 = a0 << 0x20\n 36541: a0 = a0 | a1\n 36544: jump @528 if a0 == 0\n      : @527 (gas: 1)\n 36547: jump @781\n      : @528 (gas: 4)\n 36550: i32 a0 = s1 + 0\n 36552: a1 = 0x20\n 36555: u64 [sp + 0x18] = a0\n 36558: ra = 424, jump @0\n      : @529 [@dyn 212] (gas: 44)\n 36565: u8 [a0 + 31] = 0x9\n 36569: a1 = u64 [sp + 0x30]\n 36572: a2 = u64 [sp + 0x38]\n 36575: a2 = a2 | a1\n 36578: a1 = 0x100000000\n 36588: u64 [sp + 0x20] = a1\n 36591: a1 = 0xffffffe0\n 36601: u64 [sp + 0x10] = s1\n 36604: a1 = s1 <u a1\n 36607: s1 = u64 [sp + 0x28]\n 36610: a1 = 0 if s1 != 0\n 36612: a1 = 0 if a2 != 0\n 36614: u8 [a0 + 30] = 0\n 36617: u8 [a0 + 29] = 0\n 36620: u8 [a0 + 28] = 0\n 36623: u8 [a0 + 27] = 0\n 36626: u8 [a0 + 26] = 0\n 36629: u8 [a0 + 25] = 0\n 36632: u8 [a0 + 24] = 0\n 36635: u8 [a0 + 23] = 0\n 36638: u8 [a0 + 22] = 0\n 36641: u8 [a0 + 21] = 0\n 36644: u8 [a0 + 20] = 0\n 36647: u8 [a0 + 19] = 0\n 36650: u8 [a0 + 18] = 0\n 36653: u8 [a0 + 17] = 0\n 36656: u8 [a0 + 16] = 0\n 36659: u8 [a0 + 15] = 0\n 36662: u8 [a0 + 14] = 0\n 36665: u8 [a0 + 13] = 0\n 36668: u8 [a0 + 12] = 0\n 36671: u8 [a0 + 11] = 0\n 36674: u8 [a0 + 10] = 0\n 36677: u8 [a0 + 9] = 0\n 36680: u8 [a0 + 8] = 0\n 36683: u8 [a0 + 7] = 0\n 36686: u8 [a0 + 6] = 0\n 36689: u8 [a0 + 5] = 0\n 36692: u8 [a0 + 4] = 0\n 36695: u8 [a0 + 3] = 0\n 36698: u8 [a0 + 2] = 0\n 36701: u8 [a0 + 1] = 0\n 36704: u8 [a0 + 0] = 0\n 36706: jump @531 if a1 != 0\n      : @530 (gas: 1)\n 36709: jump @781\n      : @531 (gas: 4)\n 36712: a0 = u64 [sp + 0x18]\n 36715: i32 a0 = a0 + 0x20\n 36718: a1 = 0x20\n 36721: ra = 426, jump @0\n      : @532 [@dyn 213] (gas: 41)\n 36728: u8 [a0 + 31] = 0\n 36731: u8 [a0 + 30] = 0\n 36734: u8 [a0 + 29] = 0\n 36737: u8 [a0 + 28] = 0\n 36740: u8 [a0 + 27] = 0\n 36743: u8 [a0 + 26] = 0\n 36746: u8 [a0 + 25] = 0\n 36749: u8 [a0 + 24] = 0\n 36752: u8 [a0 + 23] = 0\n 36755: u8 [a0 + 22] = 0\n 36758: u8 [a0 + 21] = 0\n 36761: u8 [a0 + 20] = 0\n 36764: u8 [a0 + 19] = 0\n 36767: u8 [a0 + 18] = 0\n 36770: u8 [a0 + 17] = 0\n 36773: u8 [a0 + 16] = 0\n 36776: u8 [a0 + 15] = 0\n 36779: u8 [a0 + 14] = 0\n 36782: u8 [a0 + 13] = 0\n 36785: u8 [a0 + 12] = 0\n 36788: u8 [a0 + 11] = 0\n 36791: u8 [a0 + 10] = 0\n 36794: u8 [a0 + 9] = 0\n 36797: u8 [a0 + 8] = 0x74\n 36801: u8 [a0 + 7] = 0x6e\n 36805: u8 [a0 + 6] = 0x65\n 36809: u8 [a0 + 5] = 0x6c\n 36813: u8 [a0 + 4] = 0x6c\n 36817: u8 [a0 + 3] = 0x65\n 36821: u8 [a0 + 2] = 0x63\n 36825: u8 [a0 + 1] = 0x78\n 36829: a2 = u64 [sp + 0x20]\n 36832: a2 = a2 + 0xfffffffffffffc40\n 36836: a3 = u64 [sp + 0x68]\n 36839: a2 = a3 <u a2\n 36842: a3 = u64 [sp + 0x60]\n 36845: a2 = 0 if a3 != 0\n 36847: a3 = u64 [sp + 0x50]\n 36850: a2 = 0 if a3 != 0\n 36852: u8 [a0 + 0] = 0x65\n 36855: jump @534 if a2 != 0\n      : @533 (gas: 1)\n 36858: jump @781\n      : @534 (gas: 4)\n 36861: a0 = u64 [sp + 0x58]\n 36864: i32 a0 = a0 + 0x3c0\n 36868: a1 = 0x20\n 36871: ra = 428, jump @0\n      : @535 [@dyn 214] (gas: 74)\n 36878: a1 = u64 [sp + 0x30]\n 36881: a1 = reverse a1\n 36883: a2 = u64 [sp + 0x38]\n 36886: a2 = reverse a2\n 36888: a3 = reverse s1\n 36890: a4 = u64 [sp + 0x10]\n 36893: a4 = reverse a4\n 36895: a5 = a4 >> 0x38\n 36898: u8 [a0 + 0x1f] = a5\n 36901: a5 = a4 >> 0x30\n 36904: u8 [a0 + 0x1e] = a5\n 36907: a5 = a4 >> 0x28\n 36910: u8 [a0 + 0x1d] = a5\n 36913: a5 = a4 >> 0x20\n 36916: u8 [a0 + 0x1c] = a5\n 36919: a5 = a4 >> 0x18\n 36922: u8 [a0 + 0x1b] = a5\n 36925: a5 = a4 >> 0x10\n 36928: u8 [a0 + 0x1a] = a5\n 36931: a5 = a4 >> 0x8\n 36934: u8 [a0 + 0x19] = a5\n 36937: u8 [a0 + 0x18] = a4\n 36940: u8 [a0 + 0x10] = a3\n 36943: a4 = a3 >> 0x38\n 36946: u8 [a0 + 0x17] = a4\n 36949: a4 = a3 >> 0x30\n 36952: u8 [a0 + 0x16] = a4\n 36955: a4 = a3 >> 0x28\n 36958: u8 [a0 + 0x15] = a4\n 36961: a4 = a3 >> 0x20\n 36964: u8 [a0 + 0x14] = a4\n 36967: a4 = a3 >> 0x18\n 36970: u8 [a0 + 0x13] = a4\n 36973: a4 = a3 >> 0x10\n 36976: u8 [a0 + 0x12] = a4\n 36979: a3 = a3 >> 0x8\n 36982: u8 [a0 + 0x11] = a3\n 36985: u8 [a0 + 0x8] = a2\n 36988: a3 = a2 >> 0x38\n 36991: u8 [a0 + 0xf] = a3\n 36994: a3 = a2 >> 0x30\n 36997: u8 [a0 + 0xe] = a3\n 37000: a3 = a2 >> 0x28\n 37003: u8 [a0 + 0xd] = a3\n 37006: a3 = a2 >> 0x20\n 37009: u8 [a0 + 0xc] = a3\n 37012: a3 = a2 >> 0x18\n 37015: u8 [a0 + 0xb] = a3\n 37018: a3 = a2 >> 0x10\n 37021: u8 [a0 + 0xa] = a3\n 37024: a2 = a2 >> 0x8\n 37027: u8 [a0 + 0x9] = a2\n 37030: u8 [a0] = a1\n 37032: a2 = a1 >> 0x38\n 37035: u8 [a0 + 0x7] = a2\n 37038: a2 = a1 >> 0x30\n 37041: u8 [a0 + 0x6] = a2\n 37044: a2 = a1 >> 0x28\n 37047: u8 [a0 + 0x5] = a2\n 37050: a2 = a1 >> 0x20\n 37053: u8 [a0 + 0x4] = a2\n 37056: a2 = a1 >> 0x18\n 37059: u8 [a0 + 0x3] = a2\n 37062: a2 = a1 >> 0x10\n 37065: u8 [a0 + 0x2] = a2\n 37068: a1 = a1 >> 0x8\n 37071: u8 [a0 + 0x1] = a1\n 37074: u64 [sp + 1800] = 0\n 37078: u64 [sp + 1792] = 0\n 37082: u64 [sp + 1776] = 0x40\n 37087: a0 = sp + 0x710\n 37091: a1 = sp + 0x6f0\n 37095: u64 [sp + 1784] = 0\n 37099: ra = 430, jump @56\n      : @536 [@dyn 215] (gas: 15)\n 37106: a1 = u64 [sp + 0x728]\n 37110: a2 = u64 [sp + 0x720]\n 37114: a0 = u64 [sp + 0x718]\n 37118: s1 = u64 [sp + 0x710]\n 37122: u64 [sp + 0x28] = a0\n 37125: u64 [sp + 0x30] = a1\n 37128: a0 = a0 | a1\n 37131: a1 = s1 | a2\n 37134: a1 = a1 | a0\n 37137: a1 = a1 >> 0x20\n 37140: u64 [sp + 0x38] = a2\n 37143: a0 = a0 | a2\n 37146: a0 = a0 << 0x20\n 37149: a0 = a0 | a1\n 37152: jump @538 if a0 == 0\n      : @537 (gas: 1)\n 37155: jump @781\n      : @538 (gas: 4)\n 37158: i32 a0 = s1 + 0\n 37160: a1 = 0x20\n 37163: u64 [sp + 0x18] = a0\n 37166: ra = 432, jump @0\n      : @539 [@dyn 216] (gas: 44)\n 37173: u8 [a0 + 31] = 0xb\n 37177: a1 = u64 [sp + 0x30]\n 37180: a2 = u64 [sp + 0x38]\n 37183: a2 = a2 | a1\n 37186: a1 = 0x100000000\n 37196: u64 [sp + 0x20] = a1\n 37199: a1 = 0xffffffe0\n 37209: u64 [sp + 0x10] = s1\n 37212: a1 = s1 <u a1\n 37215: s1 = u64 [sp + 0x28]\n 37218: a1 = 0 if s1 != 0\n 37220: a1 = 0 if a2 != 0\n 37222: u8 [a0 + 30] = 0\n 37225: u8 [a0 + 29] = 0\n 37228: u8 [a0 + 28] = 0\n 37231: u8 [a0 + 27] = 0\n 37234: u8 [a0 + 26] = 0\n 37237: u8 [a0 + 25] = 0\n 37240: u8 [a0 + 24] = 0\n 37243: u8 [a0 + 23] = 0\n 37246: u8 [a0 + 22] = 0\n 37249: u8 [a0 + 21] = 0\n 37252: u8 [a0 + 20] = 0\n 37255: u8 [a0 + 19] = 0\n 37258: u8 [a0 + 18] = 0\n 37261: u8 [a0 + 17] = 0\n 37264: u8 [a0 + 16] = 0\n 37267: u8 [a0 + 15] = 0\n 37270: u8 [a0 + 14] = 0\n 37273: u8 [a0 + 13] = 0\n 37276: u8 [a0 + 12] = 0\n 37279: u8 [a0 + 11] = 0\n 37282: u8 [a0 + 10] = 0\n 37285: u8 [a0 + 9] = 0\n 37288: u8 [a0 + 8] = 0\n 37291: u8 [a0 + 7] = 0\n 37294: u8 [a0 + 6] = 0\n 37297: u8 [a0 + 5] = 0\n 37300: u8 [a0 + 4] = 0\n 37303: u8 [a0 + 3] = 0\n 37306: u8 [a0 + 2] = 0\n 37309: u8 [a0 + 1] = 0\n 37312: u8 [a0 + 0] = 0\n 37314: jump @541 if a1 != 0\n      : @540 (gas: 1)\n 37317: jump @781\n      : @541 (gas: 4)\n 37320: a0 = u64 [sp + 0x18]\n 37323: i32 a0 = a0 + 0x20\n 37326: a1 = 0x20\n 37329: ra = 434, jump @0\n      : @542 [@dyn 217] (gas: 41)\n 37336: u8 [a0 + 31] = 0\n 37339: u8 [a0 + 30] = 0\n 37342: u8 [a0 + 29] = 0\n 37345: u8 [a0 + 28] = 0\n 37348: u8 [a0 + 27] = 0\n 37351: u8 [a0 + 26] = 0\n 37354: u8 [a0 + 25] = 0\n 37357: u8 [a0 + 24] = 0\n 37360: u8 [a0 + 23] = 0\n 37363: u8 [a0 + 22] = 0\n 37366: u8 [a0 + 21] = 0\n 37369: u8 [a0 + 20] = 0\n 37372: u8 [a0 + 19] = 0\n 37375: u8 [a0 + 18] = 0\n 37378: u8 [a0 + 17] = 0\n 37381: u8 [a0 + 16] = 0\n 37384: u8 [a0 + 15] = 0\n 37387: u8 [a0 + 14] = 0\n 37390: u8 [a0 + 13] = 0\n 37393: u8 [a0 + 12] = 0\n 37396: u8 [a0 + 11] = 0\n 37399: u8 [a0 + 10] = 0x6c\n 37403: u8 [a0 + 9] = 0x61\n 37407: u8 [a0 + 8] = 0x6e\n 37411: u8 [a0 + 7] = 0x6f\n 37415: u8 [a0 + 6] = 0x69\n 37419: u8 [a0 + 5] = 0x74\n 37423: u8 [a0 + 4] = 0x70\n 37427: u8 [a0 + 3] = 0x65\n 37431: u8 [a0 + 2] = 0x63\n 37435: u8 [a0 + 1] = 0x78\n 37439: a2 = u64 [sp + 0x20]\n 37442: a2 = a2 + 0xfffffffffffffc20\n 37446: a3 = u64 [sp + 0x68]\n 37449: a2 = a3 <u a2\n 37452: a3 = u64 [sp + 0x60]\n 37455: a2 = 0 if a3 != 0\n 37457: a3 = u64 [sp + 0x50]\n 37460: a2 = 0 if a3 != 0\n 37462: u8 [a0 + 0] = 0x65\n 37465: jump @544 if a2 != 0\n      : @543 (gas: 1)\n 37468: jump @781\n      : @544 (gas: 4)\n 37471: a0 = u64 [sp + 0x58]\n 37474: i32 a0 = a0 + 0x3e0\n 37478: a1 = 0x20\n 37481: ra = 436, jump @0\n      : @545 [@dyn 218] (gas: 74)\n 37488: a1 = u64 [sp + 0x30]\n 37491: a1 = reverse a1\n 37493: a2 = u64 [sp + 0x38]\n 37496: a2 = reverse a2\n 37498: a3 = reverse s1\n 37500: a4 = u64 [sp + 0x10]\n 37503: a4 = reverse a4\n 37505: a5 = a4 >> 0x38\n 37508: u8 [a0 + 0x1f] = a5\n 37511: a5 = a4 >> 0x30\n 37514: u8 [a0 + 0x1e] = a5\n 37517: a5 = a4 >> 0x28\n 37520: u8 [a0 + 0x1d] = a5\n 37523: a5 = a4 >> 0x20\n 37526: u8 [a0 + 0x1c] = a5\n 37529: a5 = a4 >> 0x18\n 37532: u8 [a0 + 0x1b] = a5\n 37535: a5 = a4 >> 0x10\n 37538: u8 [a0 + 0x1a] = a5\n 37541: a5 = a4 >> 0x8\n 37544: u8 [a0 + 0x19] = a5\n 37547: u8 [a0 + 0x18] = a4\n 37550: u8 [a0 + 0x10] = a3\n 37553: a4 = a3 >> 0x38\n 37556: u8 [a0 + 0x17] = a4\n 37559: a4 = a3 >> 0x30\n 37562: u8 [a0 + 0x16] = a4\n 37565: a4 = a3 >> 0x28\n 37568: u8 [a0 + 0x15] = a4\n 37571: a4 = a3 >> 0x20\n 37574: u8 [a0 + 0x14] = a4\n 37577: a4 = a3 >> 0x18\n 37580: u8 [a0 + 0x13] = a4\n 37583: a4 = a3 >> 0x10\n 37586: u8 [a0 + 0x12] = a4\n 37589: a3 = a3 >> 0x8\n 37592: u8 [a0 + 0x11] = a3\n 37595: u8 [a0 + 0x8] = a2\n 37598: a3 = a2 >> 0x38\n 37601: u8 [a0 + 0xf] = a3\n 37604: a3 = a2 >> 0x30\n 37607: u8 [a0 + 0xe] = a3\n 37610: a3 = a2 >> 0x28\n 37613: u8 [a0 + 0xd] = a3\n 37616: a3 = a2 >> 0x20\n 37619: u8 [a0 + 0xc] = a3\n 37622: a3 = a2 >> 0x18\n 37625: u8 [a0 + 0xb] = a3\n 37628: a3 = a2 >> 0x10\n 37631: u8 [a0 + 0xa] = a3\n 37634: a2 = a2 >> 0x8\n 37637: u8 [a0 + 0x9] = a2\n 37640: u8 [a0] = a1\n 37642: a2 = a1 >> 0x38\n 37645: u8 [a0 + 0x7] = a2\n 37648: a2 = a1 >> 0x30\n 37651: u8 [a0 + 0x6] = a2\n 37654: a2 = a1 >> 0x28\n 37657: u8 [a0 + 0x5] = a2\n 37660: a2 = a1 >> 0x20\n 37663: u8 [a0 + 0x4] = a2\n 37666: a2 = a1 >> 0x18\n 37669: u8 [a0 + 0x3] = a2\n 37672: a2 = a1 >> 0x10\n 37675: u8 [a0 + 0x2] = a2\n 37678: a1 = a1 >> 0x8\n 37681: u8 [a0 + 0x1] = a1\n 37684: u64 [sp + 1736] = 0\n 37688: u64 [sp + 1728] = 0\n 37692: u64 [sp + 1712] = 0x40\n 37697: a0 = sp + 0x6d0\n 37701: a1 = sp + 0x6b0\n 37705: u64 [sp + 1720] = 0\n 37709: ra = 438, jump @56\n      : @546 [@dyn 219] (gas: 15)\n 37716: a1 = u64 [sp + 0x6e8]\n 37720: a2 = u64 [sp + 0x6e0]\n 37724: a0 = u64 [sp + 0x6d8]\n 37728: s1 = u64 [sp + 0x6d0]\n 37732: u64 [sp + 0x28] = a0\n 37735: u64 [sp + 0x30] = a1\n 37738: a0 = a0 | a1\n 37741: a1 = s1 | a2\n 37744: a1 = a1 | a0\n 37747: a1 = a1 >> 0x20\n 37750: u64 [sp + 0x38] = a2\n 37753: a0 = a0 | a2\n 37756: a0 = a0 << 0x20\n 37759: a0 = a0 | a1\n 37762: jump @548 if a0 == 0\n      : @547 (gas: 1)\n 37765: jump @781\n      : @548 (gas: 4)\n 37768: i32 a0 = s1 + 0\n 37770: a1 = 0x20\n 37773: u64 [sp + 0x18] = a0\n 37776: ra = 440, jump @0\n      : @549 [@dyn 220] (gas: 44)\n 37783: u8 [a0 + 31] = 0x8\n 37787: a1 = u64 [sp + 0x30]\n 37790: a2 = u64 [sp + 0x38]\n 37793: a2 = a2 | a1\n 37796: a1 = 0x100000000\n 37806: u64 [sp + 0x20] = a1\n 37809: a1 = 0xffffffe0\n 37819: u64 [sp + 0x10] = s1\n 37822: a1 = s1 <u a1\n 37825: s1 = u64 [sp + 0x28]\n 37828: a1 = 0 if s1 != 0\n 37830: a1 = 0 if a2 != 0\n 37832: u8 [a0 + 30] = 0\n 37835: u8 [a0 + 29] = 0\n 37838: u8 [a0 + 28] = 0\n 37841: u8 [a0 + 27] = 0\n 37844: u8 [a0 + 26] = 0\n 37847: u8 [a0 + 25] = 0\n 37850: u8 [a0 + 24] = 0\n 37853: u8 [a0 + 23] = 0\n 37856: u8 [a0 + 22] = 0\n 37859: u8 [a0 + 21] = 0\n 37862: u8 [a0 + 20] = 0\n 37865: u8 [a0 + 19] = 0\n 37868: u8 [a0 + 18] = 0\n 37871: u8 [a0 + 17] = 0\n 37874: u8 [a0 + 16] = 0\n 37877: u8 [a0 + 15] = 0\n 37880: u8 [a0 + 14] = 0\n 37883: u8 [a0 + 13] = 0\n 37886: u8 [a0 + 12] = 0\n 37889: u8 [a0 + 11] = 0\n 37892: u8 [a0 + 10] = 0\n 37895: u8 [a0 + 9] = 0\n 37898: u8 [a0 + 8] = 0\n 37901: u8 [a0 + 7] = 0\n 37904: u8 [a0 + 6] = 0\n 37907: u8 [a0 + 5] = 0\n 37910: u8 [a0 + 4] = 0\n 37913: u8 [a0 + 3] = 0\n 37916: u8 [a0 + 2] = 0\n 37919: u8 [a0 + 1] = 0\n 37922: u8 [a0 + 0] = 0\n 37924: jump @551 if a1 != 0\n      : @550 (gas: 1)\n 37927: jump @781\n      : @551 (gas: 4)\n 37930: a0 = u64 [sp + 0x18]\n 37933: i32 a0 = a0 + 0x20\n 37936: a1 = 0x20\n 37939: ra = 442, jump @0\n      : @552 [@dyn 221] (gas: 41)\n 37946: u8 [a0 + 31] = 0\n 37949: u8 [a0 + 30] = 0\n 37952: u8 [a0 + 29] = 0\n 37955: u8 [a0 + 28] = 0\n 37958: u8 [a0 + 27] = 0\n 37961: u8 [a0 + 26] = 0\n 37964: u8 [a0 + 25] = 0\n 37967: u8 [a0 + 24] = 0\n 37970: u8 [a0 + 23] = 0\n 37973: u8 [a0 + 22] = 0\n 37976: u8 [a0 + 21] = 0\n 37979: u8 [a0 + 20] = 0\n 37982: u8 [a0 + 19] = 0\n 37985: u8 [a0 + 18] = 0\n 37988: u8 [a0 + 17] = 0\n 37991: u8 [a0 + 16] = 0\n 37994: u8 [a0 + 15] = 0\n 37997: u8 [a0 + 14] = 0\n 38000: u8 [a0 + 13] = 0\n 38003: u8 [a0 + 12] = 0\n 38006: u8 [a0 + 11] = 0\n 38009: u8 [a0 + 10] = 0\n 38012: u8 [a0 + 9] = 0\n 38015: u8 [a0 + 8] = 0\n 38018: u8 [a0 + 7] = 0x67\n 38022: u8 [a0 + 6] = 0x6e\n 38026: u8 [a0 + 5] = 0x69\n 38030: u8 [a0 + 4] = 0x74\n 38034: u8 [a0 + 3] = 0x69\n 38038: u8 [a0 + 2] = 0x63\n 38042: u8 [a0 + 1] = 0x78\n 38046: a2 = u64 [sp + 0x20]\n 38049: a2 = a2 + 0xfffffffffffffc00\n 38053: a3 = u64 [sp + 0x68]\n 38056: a2 = a3 <u a2\n 38059: a3 = u64 [sp + 0x60]\n 38062: a2 = 0 if a3 != 0\n 38064: a3 = u64 [sp + 0x50]\n 38067: a2 = 0 if a3 != 0\n 38069: u8 [a0 + 0] = 0x65\n 38072: jump @554 if a2 != 0\n      : @553 (gas: 1)\n 38075: jump @781\n      : @554 (gas: 4)\n 38078: a0 = u64 [sp + 0x58]\n 38081: i32 a0 = a0 + 0x400\n 38085: a1 = 0x20\n 38088: ra = 444, jump @0\n      : @555 [@dyn 222] (gas: 74)\n 38095: a1 = u64 [sp + 0x30]\n 38098: a1 = reverse a1\n 38100: a2 = u64 [sp + 0x38]\n 38103: a2 = reverse a2\n 38105: a3 = reverse s1\n 38107: a4 = u64 [sp + 0x10]\n 38110: a4 = reverse a4\n 38112: a5 = a4 >> 0x38\n 38115: u8 [a0 + 0x1f] = a5\n 38118: a5 = a4 >> 0x30\n 38121: u8 [a0 + 0x1e] = a5\n 38124: a5 = a4 >> 0x28\n 38127: u8 [a0 + 0x1d] = a5\n 38130: a5 = a4 >> 0x20\n 38133: u8 [a0 + 0x1c] = a5\n 38136: a5 = a4 >> 0x18\n 38139: u8 [a0 + 0x1b] = a5\n 38142: a5 = a4 >> 0x10\n 38145: u8 [a0 + 0x1a] = a5\n 38148: a5 = a4 >> 0x8\n 38151: u8 [a0 + 0x19] = a5\n 38154: u8 [a0 + 0x18] = a4\n 38157: u8 [a0 + 0x10] = a3\n 38160: a4 = a3 >> 0x38\n 38163: u8 [a0 + 0x17] = a4\n 38166: a4 = a3 >> 0x30\n 38169: u8 [a0 + 0x16] = a4\n 38172: a4 = a3 >> 0x28\n 38175: u8 [a0 + 0x15] = a4\n 38178: a4 = a3 >> 0x20\n 38181: u8 [a0 + 0x14] = a4\n 38184: a4 = a3 >> 0x18\n 38187: u8 [a0 + 0x13] = a4\n 38190: a4 = a3 >> 0x10\n 38193: u8 [a0 + 0x12] = a4\n 38196: a3 = a3 >> 0x8\n 38199: u8 [a0 + 0x11] = a3\n 38202: u8 [a0 + 0x8] = a2\n 38205: a3 = a2 >> 0x38\n 38208: u8 [a0 + 0xf] = a3\n 38211: a3 = a2 >> 0x30\n 38214: u8 [a0 + 0xe] = a3\n 38217: a3 = a2 >> 0x28\n 38220: u8 [a0 + 0xd] = a3\n 38223: a3 = a2 >> 0x20\n 38226: u8 [a0 + 0xc] = a3\n 38229: a3 = a2 >> 0x18\n 38232: u8 [a0 + 0xb] = a3\n 38235: a3 = a2 >> 0x10\n 38238: u8 [a0 + 0xa] = a3\n 38241: a2 = a2 >> 0x8\n 38244: u8 [a0 + 0x9] = a2\n 38247: u8 [a0] = a1\n 38249: a2 = a1 >> 0x38\n 38252: u8 [a0 + 0x7] = a2\n 38255: a2 = a1 >> 0x30\n 38258: u8 [a0 + 0x6] = a2\n 38261: a2 = a1 >> 0x28\n 38264: u8 [a0 + 0x5] = a2\n 38267: a2 = a1 >> 0x20\n 38270: u8 [a0 + 0x4] = a2\n 38273: a2 = a1 >> 0x18\n 38276: u8 [a0 + 0x3] = a2\n 38279: a2 = a1 >> 0x10\n 38282: u8 [a0 + 0x2] = a2\n 38285: a1 = a1 >> 0x8\n 38288: u8 [a0 + 0x1] = a1\n 38291: u64 [sp + 1672] = 0\n 38295: u64 [sp + 1664] = 0\n 38299: u64 [sp + 1648] = 0x40\n 38304: a0 = sp + 0x690\n 38308: a1 = sp + 0x670\n 38312: u64 [sp + 1656] = 0\n 38316: ra = 446, jump @56\n      : @556 [@dyn 223] (gas: 15)\n 38323: a1 = u64 [sp + 0x6a8]\n 38327: a2 = u64 [sp + 0x6a0]\n 38331: a0 = u64 [sp + 0x698]\n 38335: s1 = u64 [sp + 0x690]\n 38339: u64 [sp + 0x28] = a0\n 38342: u64 [sp + 0x30] = a1\n 38345: a0 = a0 | a1\n 38348: a1 = s1 | a2\n 38351: a1 = a1 | a0\n 38354: a1 = a1 >> 0x20\n 38357: u64 [sp + 0x38] = a2\n 38360: a0 = a0 | a2\n 38363: a0 = a0 << 0x20\n 38366: a0 = a0 | a1\n 38369: jump @558 if a0 == 0\n      : @557 (gas: 1)\n 38372: jump @781\n      : @558 (gas: 4)\n 38375: i32 a0 = s1 + 0\n 38377: a1 = 0x20\n 38380: u64 [sp + 0x18] = a0\n 38383: ra = 448, jump @0\n      : @559 [@dyn 224] (gas: 44)\n 38390: u8 [a0 + 31] = 0xd\n 38394: a1 = u64 [sp + 0x30]\n 38397: a2 = u64 [sp + 0x38]\n 38400: a2 = a2 | a1\n 38403: a1 = 0x100000000\n 38413: u64 [sp + 0x20] = a1\n 38416: a1 = 0xffffffe0\n 38426: u64 [sp + 0x10] = s1\n 38429: a1 = s1 <u a1\n 38432: s1 = u64 [sp + 0x28]\n 38435: a1 = 0 if s1 != 0\n 38437: a1 = 0 if a2 != 0\n 38439: u8 [a0 + 30] = 0\n 38442: u8 [a0 + 29] = 0\n 38445: u8 [a0 + 28] = 0\n 38448: u8 [a0 + 27] = 0\n 38451: u8 [a0 + 26] = 0\n 38454: u8 [a0 + 25] = 0\n 38457: u8 [a0 + 24] = 0\n 38460: u8 [a0 + 23] = 0\n 38463: u8 [a0 + 22] = 0\n 38466: u8 [a0 + 21] = 0\n 38469: u8 [a0 + 20] = 0\n 38472: u8 [a0 + 19] = 0\n 38475: u8 [a0 + 18] = 0\n 38478: u8 [a0 + 17] = 0\n 38481: u8 [a0 + 16] = 0\n 38484: u8 [a0 + 15] = 0\n 38487: u8 [a0 + 14] = 0\n 38490: u8 [a0 + 13] = 0\n 38493: u8 [a0 + 12] = 0\n 38496: u8 [a0 + 11] = 0\n 38499: u8 [a0 + 10] = 0\n 38502: u8 [a0 + 9] = 0\n 38505: u8 [a0 + 8] = 0\n 38508: u8 [a0 + 7] = 0\n 38511: u8 [a0 + 6] = 0\n 38514: u8 [a0 + 5] = 0\n 38517: u8 [a0 + 4] = 0\n 38520: u8 [a0 + 3] = 0\n 38523: u8 [a0 + 2] = 0\n 38526: u8 [a0 + 1] = 0\n 38529: u8 [a0 + 0] = 0\n 38531: jump @561 if a1 != 0\n      : @560 (gas: 1)\n 38534: jump @781\n      : @561 (gas: 4)\n 38537: a0 = u64 [sp + 0x18]\n 38540: i32 a0 = a0 + 0x20\n 38543: a1 = 0x20\n 38546: ra = 450, jump @0\n      : @562 [@dyn 225] (gas: 41)\n 38553: u8 [a0 + 31] = 0\n 38556: u8 [a0 + 30] = 0\n 38559: u8 [a0 + 29] = 0\n 38562: u8 [a0 + 28] = 0\n 38565: u8 [a0 + 27] = 0\n 38568: u8 [a0 + 26] = 0\n 38571: u8 [a0 + 25] = 0\n 38574: u8 [a0 + 24] = 0\n 38577: u8 [a0 + 23] = 0\n 38580: u8 [a0 + 22] = 0\n 38583: u8 [a0 + 21] = 0\n 38586: u8 [a0 + 20] = 0\n 38589: u8 [a0 + 19] = 0\n 38592: u8 [a0 + 18] = 0\n 38595: u8 [a0 + 17] = 0\n 38598: u8 [a0 + 16] = 0\n 38601: u8 [a0 + 15] = 0\n 38604: u8 [a0 + 14] = 0\n 38607: u8 [a0 + 13] = 0\n 38610: u8 [a0 + 12] = 0x79\n 38614: u8 [a0 + 11] = 0x72\n 38618: u8 [a0 + 10] = 0x61\n 38622: u8 [a0 + 9] = 0x6e\n 38626: u8 [a0 + 8] = 0x69\n 38630: u8 [a0 + 7] = 0x64\n 38634: u8 [a0 + 6] = 0x72\n 38638: u8 [a0 + 5] = 0x6f\n 38642: u8 [a0 + 4] = 0x61\n 38646: u8 [a0 + 3] = 0x72\n 38650: u8 [a0 + 2] = 0x74\n 38654: u8 [a0 + 1] = 0x78\n 38658: a2 = u64 [sp + 0x20]\n 38661: a2 = a2 + 0xfffffffffffffbe0\n 38665: a3 = u64 [sp + 0x68]\n 38668: a2 = a3 <u a2\n 38671: a3 = u64 [sp + 0x60]\n 38674: a2 = 0 if a3 != 0\n 38676: a3 = u64 [sp + 0x50]\n 38679: a2 = 0 if a3 != 0\n 38681: u8 [a0 + 0] = 0x65\n 38684: jump @564 if a2 != 0\n      : @563 (gas: 1)\n 38687: jump @781\n      : @564 (gas: 4)\n 38690: a0 = u64 [sp + 0x58]\n 38693: i32 a0 = a0 + 0x420\n 38697: a1 = 0x20\n 38700: ra = 452, jump @0\n      : @565 [@dyn 226] (gas: 74)\n 38707: a1 = u64 [sp + 0x30]\n 38710: a1 = reverse a1\n 38712: a2 = u64 [sp + 0x38]\n 38715: a2 = reverse a2\n 38717: a3 = reverse s1\n 38719: a4 = u64 [sp + 0x10]\n 38722: a4 = reverse a4\n 38724: a5 = a4 >> 0x38\n 38727: u8 [a0 + 0x1f] = a5\n 38730: a5 = a4 >> 0x30\n 38733: u8 [a0 + 0x1e] = a5\n 38736: a5 = a4 >> 0x28\n 38739: u8 [a0 + 0x1d] = a5\n 38742: a5 = a4 >> 0x20\n 38745: u8 [a0 + 0x1c] = a5\n 38748: a5 = a4 >> 0x18\n 38751: u8 [a0 + 0x1b] = a5\n 38754: a5 = a4 >> 0x10\n 38757: u8 [a0 + 0x1a] = a5\n 38760: a5 = a4 >> 0x8\n 38763: u8 [a0 + 0x19] = a5\n 38766: u8 [a0 + 0x18] = a4\n 38769: u8 [a0 + 0x10] = a3\n 38772: a4 = a3 >> 0x38\n 38775: u8 [a0 + 0x17] = a4\n 38778: a4 = a3 >> 0x30\n 38781: u8 [a0 + 0x16] = a4\n 38784: a4 = a3 >> 0x28\n 38787: u8 [a0 + 0x15] = a4\n 38790: a4 = a3 >> 0x20\n 38793: u8 [a0 + 0x14] = a4\n 38796: a4 = a3 >> 0x18\n 38799: u8 [a0 + 0x13] = a4\n 38802: a4 = a3 >> 0x10\n 38805: u8 [a0 + 0x12] = a4\n 38808: a3 = a3 >> 0x8\n 38811: u8 [a0 + 0x11] = a3\n 38814: u8 [a0 + 0x8] = a2\n 38817: a3 = a2 >> 0x38\n 38820: u8 [a0 + 0xf] = a3\n 38823: a3 = a2 >> 0x30\n 38826: u8 [a0 + 0xe] = a3\n 38829: a3 = a2 >> 0x28\n 38832: u8 [a0 + 0xd] = a3\n 38835: a3 = a2 >> 0x20\n 38838: u8 [a0 + 0xc] = a3\n 38841: a3 = a2 >> 0x18\n 38844: u8 [a0 + 0xb] = a3\n 38847: a3 = a2 >> 0x10\n 38850: u8 [a0 + 0xa] = a3\n 38853: a2 = a2 >> 0x8\n 38856: u8 [a0 + 0x9] = a2\n 38859: u8 [a0] = a1\n 38861: a2 = a1 >> 0x38\n 38864: u8 [a0 + 0x7] = a2\n 38867: a2 = a1 >> 0x30\n 38870: u8 [a0 + 0x6] = a2\n 38873: a2 = a1 >> 0x28\n 38876: u8 [a0 + 0x5] = a2\n 38879: a2 = a1 >> 0x20\n 38882: u8 [a0 + 0x4] = a2\n 38885: a2 = a1 >> 0x18\n 38888: u8 [a0 + 0x3] = a2\n 38891: a2 = a1 >> 0x10\n 38894: u8 [a0 + 0x2] = a2\n 38897: a1 = a1 >> 0x8\n 38900: u8 [a0 + 0x1] = a1\n 38903: u64 [sp + 1608] = 0\n 38907: u64 [sp + 1600] = 0\n 38911: u64 [sp + 1584] = 0x40\n 38916: a0 = sp + 0x650\n 38920: a1 = sp + 0x630\n 38924: u64 [sp + 1592] = 0\n 38928: ra = 454, jump @56\n      : @566 [@dyn 227] (gas: 15)\n 38935: a1 = u64 [sp + 0x668]\n 38939: a2 = u64 [sp + 0x660]\n 38943: a0 = u64 [sp + 0x658]\n 38947: s1 = u64 [sp + 0x650]\n 38951: u64 [sp + 0x28] = a0\n 38954: u64 [sp + 0x30] = a1\n 38957: a0 = a0 | a1\n 38960: a1 = s1 | a2\n 38963: a1 = a1 | a0\n 38966: a1 = a1 >> 0x20\n 38969: u64 [sp + 0x38] = a2\n 38972: a0 = a0 | a2\n 38975: a0 = a0 << 0x20\n 38978: a0 = a0 | a1\n 38981: jump @568 if a0 == 0\n      : @567 (gas: 1)\n 38984: jump @781\n      : @568 (gas: 4)\n 38987: i32 a0 = s1 + 0\n 38989: a1 = 0x20\n 38992: u64 [sp + 0x18] = a0\n 38995: ra = 456, jump @0\n      : @569 [@dyn 228] (gas: 44)\n 39002: u8 [a0 + 31] = 0x8\n 39006: a1 = u64 [sp + 0x30]\n 39009: a2 = u64 [sp + 0x38]\n 39012: a2 = a2 | a1\n 39015: a1 = 0x100000000\n 39025: u64 [sp + 0x20] = a1\n 39028: a1 = 0xffffffe0\n 39038: u64 [sp + 0x10] = s1\n 39041: a1 = s1 <u a1\n 39044: s1 = u64 [sp + 0x28]\n 39047: a1 = 0 if s1 != 0\n 39049: a1 = 0 if a2 != 0\n 39051: u8 [a0 + 30] = 0\n 39054: u8 [a0 + 29] = 0\n 39057: u8 [a0 + 28] = 0\n 39060: u8 [a0 + 27] = 0\n 39063: u8 [a0 + 26] = 0\n 39066: u8 [a0 + 25] = 0\n 39069: u8 [a0 + 24] = 0\n 39072: u8 [a0 + 23] = 0\n 39075: u8 [a0 + 22] = 0\n 39078: u8 [a0 + 21] = 0\n 39081: u8 [a0 + 20] = 0\n 39084: u8 [a0 + 19] = 0\n 39087: u8 [a0 + 18] = 0\n 39090: u8 [a0 + 17] = 0\n 39093: u8 [a0 + 16] = 0\n 39096: u8 [a0 + 15] = 0\n 39099: u8 [a0 + 14] = 0\n 39102: u8 [a0 + 13] = 0\n 39105: u8 [a0 + 12] = 0\n 39108: u8 [a0 + 11] = 0\n 39111: u8 [a0 + 10] = 0\n 39114: u8 [a0 + 9] = 0\n 39117: u8 [a0 + 8] = 0\n 39120: u8 [a0 + 7] = 0\n 39123: u8 [a0 + 6] = 0\n 39126: u8 [a0 + 5] = 0\n 39129: u8 [a0 + 4] = 0\n 39132: u8 [a0 + 3] = 0\n 39135: u8 [a0 + 2] = 0\n 39138: u8 [a0 + 1] = 0\n 39141: u8 [a0 + 0] = 0\n 39143: jump @571 if a1 != 0\n      : @570 (gas: 1)\n 39146: jump @781\n      : @571 (gas: 4)\n 39149: a0 = u64 [sp + 0x18]\n 39152: i32 a0 = a0 + 0x20\n 39155: a1 = 0x20\n 39158: ra = 458, jump @0\n      : @572 [@dyn 229] (gas: 41)\n 39165: u8 [a0 + 31] = 0\n 39168: u8 [a0 + 30] = 0\n 39171: u8 [a0 + 29] = 0\n 39174: u8 [a0 + 28] = 0\n 39177: u8 [a0 + 27] = 0\n 39180: u8 [a0 + 26] = 0\n 39183: u8 [a0 + 25] = 0\n 39186: u8 [a0 + 24] = 0\n 39189: u8 [a0 + 23] = 0\n 39192: u8 [a0 + 22] = 0\n 39195: u8 [a0 + 21] = 0\n 39198: u8 [a0 + 20] = 0\n 39201: u8 [a0 + 19] = 0\n 39204: u8 [a0 + 18] = 0\n 39207: u8 [a0 + 17] = 0\n 39210: u8 [a0 + 16] = 0\n 39213: u8 [a0 + 15] = 0\n 39216: u8 [a0 + 14] = 0\n 39219: u8 [a0 + 13] = 0\n 39222: u8 [a0 + 12] = 0\n 39225: u8 [a0 + 11] = 0\n 39228: u8 [a0 + 10] = 0\n 39231: u8 [a0 + 9] = 0\n 39234: u8 [a0 + 8] = 0\n 39237: u8 [a0 + 7] = 0x73\n 39241: u8 [a0 + 6] = 0x75\n 39245: u8 [a0 + 5] = 0x6f\n 39249: u8 [a0 + 4] = 0x6c\n 39253: u8 [a0 + 3] = 0x75\n 39257: u8 [a0 + 2] = 0x62\n 39261: u8 [a0 + 1] = 0x61\n 39265: a2 = u64 [sp + 0x20]\n 39268: a2 = a2 + 0xfffffffffffffbc0\n 39272: a3 = u64 [sp + 0x68]\n 39275: a2 = a3 <u a2\n 39278: a3 = u64 [sp + 0x60]\n 39281: a2 = 0 if a3 != 0\n 39283: a3 = u64 [sp + 0x50]\n 39286: a2 = 0 if a3 != 0\n 39288: u8 [a0 + 0] = 0x66\n 39291: jump @574 if a2 != 0\n      : @573 (gas: 1)\n 39294: jump @781\n      : @574 (gas: 4)\n 39297: a0 = u64 [sp + 0x58]\n 39300: i32 a0 = a0 + 0x440\n 39304: a1 = 0x20\n 39307: ra = 460, jump @0\n      : @575 [@dyn 230] (gas: 74)\n 39314: a1 = u64 [sp + 0x30]\n 39317: a1 = reverse a1\n 39319: a2 = u64 [sp + 0x38]\n 39322: a2 = reverse a2\n 39324: a3 = reverse s1\n 39326: a4 = u64 [sp + 0x10]\n 39329: a4 = reverse a4\n 39331: a5 = a4 >> 0x38\n 39334: u8 [a0 + 0x1f] = a5\n 39337: a5 = a4 >> 0x30\n 39340: u8 [a0 + 0x1e] = a5\n 39343: a5 = a4 >> 0x28\n 39346: u8 [a0 + 0x1d] = a5\n 39349: a5 = a4 >> 0x20\n 39352: u8 [a0 + 0x1c] = a5\n 39355: a5 = a4 >> 0x18\n 39358: u8 [a0 + 0x1b] = a5\n 39361: a5 = a4 >> 0x10\n 39364: u8 [a0 + 0x1a] = a5\n 39367: a5 = a4 >> 0x8\n 39370: u8 [a0 + 0x19] = a5\n 39373: u8 [a0 + 0x18] = a4\n 39376: u8 [a0 + 0x10] = a3\n 39379: a4 = a3 >> 0x38\n 39382: u8 [a0 + 0x17] = a4\n 39385: a4 = a3 >> 0x30\n 39388: u8 [a0 + 0x16] = a4\n 39391: a4 = a3 >> 0x28\n 39394: u8 [a0 + 0x15] = a4\n 39397: a4 = a3 >> 0x20\n 39400: u8 [a0 + 0x14] = a4\n 39403: a4 = a3 >> 0x18\n 39406: u8 [a0 + 0x13] = a4\n 39409: a4 = a3 >> 0x10\n 39412: u8 [a0 + 0x12] = a4\n 39415: a3 = a3 >> 0x8\n 39418: u8 [a0 + 0x11] = a3\n 39421: u8 [a0 + 0x8] = a2\n 39424: a3 = a2 >> 0x38\n 39427: u8 [a0 + 0xf] = a3\n 39430: a3 = a2 >> 0x30\n 39433: u8 [a0 + 0xe] = a3\n 39436: a3 = a2 >> 0x28\n 39439: u8 [a0 + 0xd] = a3\n 39442: a3 = a2 >> 0x20\n 39445: u8 [a0 + 0xc] = a3\n 39448: a3 = a2 >> 0x18\n 39451: u8 [a0 + 0xb] = a3\n 39454: a3 = a2 >> 0x10\n 39457: u8 [a0 + 0xa] = a3\n 39460: a2 = a2 >> 0x8\n 39463: u8 [a0 + 0x9] = a2\n 39466: u8 [a0] = a1\n 39468: a2 = a1 >> 0x38\n 39471: u8 [a0 + 0x7] = a2\n 39474: a2 = a1 >> 0x30\n 39477: u8 [a0 + 0x6] = a2\n 39480: a2 = a1 >> 0x28\n 39483: u8 [a0 + 0x5] = a2\n 39486: a2 = a1 >> 0x20\n 39489: u8 [a0 + 0x4] = a2\n 39492: a2 = a1 >> 0x18\n 39495: u8 [a0 + 0x3] = a2\n 39498: a2 = a1 >> 0x10\n 39501: u8 [a0 + 0x2] = a2\n 39504: a1 = a1 >> 0x8\n 39507: u8 [a0 + 0x1] = a1\n 39510: u64 [sp + 1544] = 0\n 39514: u64 [sp + 1536] = 0\n 39518: u64 [sp + 1520] = 0x40\n 39523: a0 = sp + 0x610\n 39527: a1 = sp + 0x5f0\n 39531: u64 [sp + 1528] = 0\n 39535: ra = 462, jump @56\n      : @576 [@dyn 231] (gas: 15)\n 39542: a1 = u64 [sp + 0x628]\n 39546: a2 = u64 [sp + 0x620]\n 39550: a0 = u64 [sp + 0x618]\n 39554: s1 = u64 [sp + 0x610]\n 39558: u64 [sp + 0x28] = a0\n 39561: u64 [sp + 0x30] = a1\n 39564: a0 = a0 | a1\n 39567: a1 = s1 | a2\n 39570: a1 = a1 | a0\n 39573: a1 = a1 >> 0x20\n 39576: u64 [sp + 0x38] = a2\n 39579: a0 = a0 | a2\n 39582: a0 = a0 << 0x20\n 39585: a0 = a0 | a1\n 39588: jump @578 if a0 == 0\n      : @577 (gas: 1)\n 39591: jump @781\n      : @578 (gas: 4)\n 39594: i32 a0 = s1 + 0\n 39596: a1 = 0x20\n 39599: u64 [sp + 0x18] = a0\n 39602: ra = 464, jump @0\n      : @579 [@dyn 232] (gas: 44)\n 39609: u8 [a0 + 31] = 0x9\n 39613: a1 = u64 [sp + 0x30]\n 39616: a2 = u64 [sp + 0x38]\n 39619: a2 = a2 | a1\n 39622: a1 = 0x100000000\n 39632: u64 [sp + 0x20] = a1\n 39635: a1 = 0xffffffe0\n 39645: u64 [sp + 0x10] = s1\n 39648: a1 = s1 <u a1\n 39651: s1 = u64 [sp + 0x28]\n 39654: a1 = 0 if s1 != 0\n 39656: a1 = 0 if a2 != 0\n 39658: u8 [a0 + 30] = 0\n 39661: u8 [a0 + 29] = 0\n 39664: u8 [a0 + 28] = 0\n 39667: u8 [a0 + 27] = 0\n 39670: u8 [a0 + 26] = 0\n 39673: u8 [a0 + 25] = 0\n 39676: u8 [a0 + 24] = 0\n 39679: u8 [a0 + 23] = 0\n 39682: u8 [a0 + 22] = 0\n 39685: u8 [a0 + 21] = 0\n 39688: u8 [a0 + 20] = 0\n 39691: u8 [a0 + 19] = 0\n 39694: u8 [a0 + 18] = 0\n 39697: u8 [a0 + 17] = 0\n 39700: u8 [a0 + 16] = 0\n 39703: u8 [a0 + 15] = 0\n 39706: u8 [a0 + 14] = 0\n 39709: u8 [a0 + 13] = 0\n 39712: u8 [a0 + 12] = 0\n 39715: u8 [a0 + 11] = 0\n 39718: u8 [a0 + 10] = 0\n 39721: u8 [a0 + 9] = 0\n 39724: u8 [a0 + 8] = 0\n 39727: u8 [a0 + 7] = 0\n 39730: u8 [a0 + 6] = 0\n 39733: u8 [a0 + 5] = 0\n 39736: u8 [a0 + 4] = 0\n 39739: u8 [a0 + 3] = 0\n 39742: u8 [a0 + 2] = 0\n 39745: u8 [a0 + 1] = 0\n 39748: u8 [a0 + 0] = 0\n 39750: jump @581 if a1 != 0\n      : @580 (gas: 1)\n 39753: jump @781\n      : @581 (gas: 4)\n 39756: a0 = u64 [sp + 0x18]\n 39759: i32 a0 = a0 + 0x20\n 39762: a1 = 0x20\n 39765: ra = 466, jump @0\n      : @582 [@dyn 233] (gas: 41)\n 39772: u8 [a0 + 31] = 0\n 39775: u8 [a0 + 30] = 0\n 39778: u8 [a0 + 29] = 0\n 39781: u8 [a0 + 28] = 0\n 39784: u8 [a0 + 27] = 0\n 39787: u8 [a0 + 26] = 0\n 39790: u8 [a0 + 25] = 0\n 39793: u8 [a0 + 24] = 0\n 39796: u8 [a0 + 23] = 0\n 39799: u8 [a0 + 22] = 0\n 39802: u8 [a0 + 21] = 0\n 39805: u8 [a0 + 20] = 0\n 39808: u8 [a0 + 19] = 0\n 39811: u8 [a0 + 18] = 0\n 39814: u8 [a0 + 17] = 0\n 39817: u8 [a0 + 16] = 0\n 39820: u8 [a0 + 15] = 0\n 39823: u8 [a0 + 14] = 0\n 39826: u8 [a0 + 13] = 0\n 39829: u8 [a0 + 12] = 0\n 39832: u8 [a0 + 11] = 0\n 39835: u8 [a0 + 10] = 0\n 39838: u8 [a0 + 9] = 0\n 39841: u8 [a0 + 8] = 0x63\n 39845: u8 [a0 + 7] = 0x69\n 39849: u8 [a0 + 6] = 0x74\n 39853: u8 [a0 + 5] = 0x73\n 39857: u8 [a0 + 4] = 0x61\n 39861: u8 [a0 + 3] = 0x74\n 39865: u8 [a0 + 2] = 0x6e\n 39869: u8 [a0 + 1] = 0x61\n 39873: a2 = u64 [sp + 0x20]\n 39876: a2 = a2 + 0xfffffffffffffba0\n 39880: a3 = u64 [sp + 0x68]\n 39883: a2 = a3 <u a2\n 39886: a3 = u64 [sp + 0x60]\n 39889: a2 = 0 if a3 != 0\n 39891: a3 = u64 [sp + 0x50]\n 39894: a2 = 0 if a3 != 0\n 39896: u8 [a0 + 0] = 0x66\n 39899: jump @584 if a2 != 0\n      : @583 (gas: 1)\n 39902: jump @781\n      : @584 (gas: 4)\n 39905: a0 = u64 [sp + 0x58]\n 39908: i32 a0 = a0 + 0x460\n 39912: a1 = 0x20\n 39915: ra = 468, jump @0\n      : @585 [@dyn 234] (gas: 74)\n 39922: a1 = u64 [sp + 0x30]\n 39925: a1 = reverse a1\n 39927: a2 = u64 [sp + 0x38]\n 39930: a2 = reverse a2\n 39932: a3 = reverse s1\n 39934: a4 = u64 [sp + 0x10]\n 39937: a4 = reverse a4\n 39939: a5 = a4 >> 0x38\n 39942: u8 [a0 + 0x1f] = a5\n 39945: a5 = a4 >> 0x30\n 39948: u8 [a0 + 0x1e] = a5\n 39951: a5 = a4 >> 0x28\n 39954: u8 [a0 + 0x1d] = a5\n 39957: a5 = a4 >> 0x20\n 39960: u8 [a0 + 0x1c] = a5\n 39963: a5 = a4 >> 0x18\n 39966: u8 [a0 + 0x1b] = a5\n 39969: a5 = a4 >> 0x10\n 39972: u8 [a0 + 0x1a] = a5\n 39975: a5 = a4 >> 0x8\n 39978: u8 [a0 + 0x19] = a5\n 39981: u8 [a0 + 0x18] = a4\n 39984: u8 [a0 + 0x10] = a3\n 39987: a4 = a3 >> 0x38\n 39990: u8 [a0 + 0x17] = a4\n 39993: a4 = a3 >> 0x30\n 39996: u8 [a0 + 0x16] = a4\n 39999: a4 = a3 >> 0x28\n 40002: u8 [a0 + 0x15] = a4\n 40005: a4 = a3 >> 0x20\n 40008: u8 [a0 + 0x14] = a4\n 40011: a4 = a3 >> 0x18\n 40014: u8 [a0 + 0x13] = a4\n 40017: a4 = a3 >> 0x10\n 40020: u8 [a0 + 0x12] = a4\n 40023: a3 = a3 >> 0x8\n 40026: u8 [a0 + 0x11] = a3\n 40029: u8 [a0 + 0x8] = a2\n 40032: a3 = a2 >> 0x38\n 40035: u8 [a0 + 0xf] = a3\n 40038: a3 = a2 >> 0x30\n 40041: u8 [a0 + 0xe] = a3\n 40044: a3 = a2 >> 0x28\n 40047: u8 [a0 + 0xd] = a3\n 40050: a3 = a2 >> 0x20\n 40053: u8 [a0 + 0xc] = a3\n 40056: a3 = a2 >> 0x18\n 40059: u8 [a0 + 0xb] = a3\n 40062: a3 = a2 >> 0x10\n 40065: u8 [a0 + 0xa] = a3\n 40068: a2 = a2 >> 0x8\n 40071: u8 [a0 + 0x9] = a2\n 40074: u8 [a0] = a1\n 40076: a2 = a1 >> 0x38\n 40079: u8 [a0 + 0x7] = a2\n 40082: a2 = a1 >> 0x30\n 40085: u8 [a0 + 0x6] = a2\n 40088: a2 = a1 >> 0x28\n 40091: u8 [a0 + 0x5] = a2\n 40094: a2 = a1 >> 0x20\n 40097: u8 [a0 + 0x4] = a2\n 40100: a2 = a1 >> 0x18\n 40103: u8 [a0 + 0x3] = a2\n 40106: a2 = a1 >> 0x10\n 40109: u8 [a0 + 0x2] = a2\n 40112: a1 = a1 >> 0x8\n 40115: u8 [a0 + 0x1] = a1\n 40118: u64 [sp + 1480] = 0\n 40122: u64 [sp + 1472] = 0\n 40126: u64 [sp + 1456] = 0x40\n 40131: a0 = sp + 0x5d0\n 40135: a1 = sp + 0x5b0\n 40139: u64 [sp + 1464] = 0\n 40143: ra = 470, jump @56\n      : @586 [@dyn 235] (gas: 15)\n 40150: a1 = u64 [sp + 0x5e8]\n 40154: a2 = u64 [sp + 0x5e0]\n 40158: a0 = u64 [sp + 0x5d8]\n 40162: s1 = u64 [sp + 0x5d0]\n 40166: u64 [sp + 0x28] = a0\n 40169: u64 [sp + 0x30] = a1\n 40172: a0 = a0 | a1\n 40175: a1 = s1 | a2\n 40178: a1 = a1 | a0\n 40181: a1 = a1 >> 0x20\n 40184: u64 [sp + 0x38] = a2\n 40187: a0 = a0 | a2\n 40190: a0 = a0 << 0x20\n 40193: a0 = a0 | a1\n 40196: jump @588 if a0 == 0\n      : @587 (gas: 1)\n 40199: jump @781\n      : @588 (gas: 4)\n 40202: i32 a0 = s1 + 0\n 40204: a1 = 0x20\n 40207: u64 [sp + 0x18] = a0\n 40210: ra = 472, jump @0\n      : @589 [@dyn 236] (gas: 44)\n 40217: u8 [a0 + 31] = 0x8\n 40221: a1 = u64 [sp + 0x30]\n 40224: a2 = u64 [sp + 0x38]\n 40227: a2 = a2 | a1\n 40230: a1 = 0x100000000\n 40240: u64 [sp + 0x20] = a1\n 40243: a1 = 0xffffffe0\n 40253: u64 [sp + 0x10] = s1\n 40256: a1 = s1 <u a1\n 40259: s1 = u64 [sp + 0x28]\n 40262: a1 = 0 if s1 != 0\n 40264: a1 = 0 if a2 != 0\n 40266: u8 [a0 + 30] = 0\n 40269: u8 [a0 + 29] = 0\n 40272: u8 [a0 + 28] = 0\n 40275: u8 [a0 + 27] = 0\n 40278: u8 [a0 + 26] = 0\n 40281: u8 [a0 + 25] = 0\n 40284: u8 [a0 + 24] = 0\n 40287: u8 [a0 + 23] = 0\n 40290: u8 [a0 + 22] = 0\n 40293: u8 [a0 + 21] = 0\n 40296: u8 [a0 + 20] = 0\n 40299: u8 [a0 + 19] = 0\n 40302: u8 [a0 + 18] = 0\n 40305: u8 [a0 + 17] = 0\n 40308: u8 [a0 + 16] = 0\n 40311: u8 [a0 + 15] = 0\n 40314: u8 [a0 + 14] = 0\n 40317: u8 [a0 + 13] = 0\n 40320: u8 [a0 + 12] = 0\n 40323: u8 [a0 + 11] = 0\n 40326: u8 [a0 + 10] = 0\n 40329: u8 [a0 + 9] = 0\n 40332: u8 [a0 + 8] = 0\n 40335: u8 [a0 + 7] = 0\n 40338: u8 [a0 + 6] = 0\n 40341: u8 [a0 + 5] = 0\n 40344: u8 [a0 + 4] = 0\n 40347: u8 [a0 + 3] = 0\n 40350: u8 [a0 + 2] = 0\n 40353: u8 [a0 + 1] = 0\n 40356: u8 [a0 + 0] = 0\n 40358: jump @591 if a1 != 0\n      : @590 (gas: 1)\n 40361: jump @781\n      : @591 (gas: 4)\n 40364: a0 = u64 [sp + 0x18]\n 40367: i32 a0 = a0 + 0x20\n 40370: a1 = 0x20\n 40373: ra = 474, jump @0\n      : @592 [@dyn 237] (gas: 41)\n 40380: u8 [a0 + 31] = 0\n 40383: u8 [a0 + 30] = 0\n 40386: u8 [a0 + 29] = 0\n 40389: u8 [a0 + 28] = 0\n 40392: u8 [a0 + 27] = 0\n 40395: u8 [a0 + 26] = 0\n 40398: u8 [a0 + 25] = 0\n 40401: u8 [a0 + 24] = 0\n 40404: u8 [a0 + 23] = 0\n 40407: u8 [a0 + 22] = 0\n 40410: u8 [a0 + 21] = 0\n 40413: u8 [a0 + 20] = 0\n 40416: u8 [a0 + 19] = 0\n 40419: u8 [a0 + 18] = 0\n 40422: u8 [a0 + 17] = 0\n 40425: u8 [a0 + 16] = 0\n 40428: u8 [a0 + 15] = 0\n 40431: u8 [a0 + 14] = 0\n 40434: u8 [a0 + 13] = 0\n 40437: u8 [a0 + 12] = 0\n 40440: u8 [a0 + 11] = 0\n 40443: u8 [a0 + 10] = 0\n 40446: u8 [a0 + 9] = 0\n 40449: u8 [a0 + 8] = 0\n 40452: u8 [a0 + 7] = 0x73\n 40456: u8 [a0 + 6] = 0x73\n 40460: u8 [a0 + 5] = 0x65\n 40464: u8 [a0 + 4] = 0x6c\n 40468: u8 [a0 + 3] = 0x72\n 40472: u8 [a0 + 2] = 0x61\n 40476: u8 [a0 + 1] = 0x65\n 40480: a2 = u64 [sp + 0x20]\n 40483: a2 = a2 + 0xfffffffffffffb80\n 40487: a3 = u64 [sp + 0x68]\n 40490: a2 = a3 <u a2\n 40493: a3 = u64 [sp + 0x60]\n 40496: a2 = 0 if a3 != 0\n 40498: a3 = u64 [sp + 0x50]\n 40501: a2 = 0 if a3 != 0\n 40503: u8 [a0 + 0] = 0x66\n 40506: jump @594 if a2 != 0\n      : @593 (gas: 1)\n 40509: jump @781\n      : @594 (gas: 4)\n 40512: a0 = u64 [sp + 0x58]\n 40515: i32 a0 = a0 + 0x480\n 40519: a1 = 0x20\n 40522: ra = 476, jump @0\n      : @595 [@dyn 238] (gas: 74)\n 40529: a1 = u64 [sp + 0x30]\n 40532: a1 = reverse a1\n 40534: a2 = u64 [sp + 0x38]\n 40537: a2 = reverse a2\n 40539: a3 = reverse s1\n 40541: a4 = u64 [sp + 0x10]\n 40544: a4 = reverse a4\n 40546: a5 = a4 >> 0x38\n 40549: u8 [a0 + 0x1f] = a5\n 40552: a5 = a4 >> 0x30\n 40555: u8 [a0 + 0x1e] = a5\n 40558: a5 = a4 >> 0x28\n 40561: u8 [a0 + 0x1d] = a5\n 40564: a5 = a4 >> 0x20\n 40567: u8 [a0 + 0x1c] = a5\n 40570: a5 = a4 >> 0x18\n 40573: u8 [a0 + 0x1b] = a5\n 40576: a5 = a4 >> 0x10\n 40579: u8 [a0 + 0x1a] = a5\n 40582: a5 = a4 >> 0x8\n 40585: u8 [a0 + 0x19] = a5\n 40588: u8 [a0 + 0x18] = a4\n 40591: u8 [a0 + 0x10] = a3\n 40594: a4 = a3 >> 0x38\n 40597: u8 [a0 + 0x17] = a4\n 40600: a4 = a3 >> 0x30\n 40603: u8 [a0 + 0x16] = a4\n 40606: a4 = a3 >> 0x28\n 40609: u8 [a0 + 0x15] = a4\n 40612: a4 = a3 >> 0x20\n 40615: u8 [a0 + 0x14] = a4\n 40618: a4 = a3 >> 0x18\n 40621: u8 [a0 + 0x13] = a4\n 40624: a4 = a3 >> 0x10\n 40627: u8 [a0 + 0x12] = a4\n 40630: a3 = a3 >> 0x8\n 40633: u8 [a0 + 0x11] = a3\n 40636: u8 [a0 + 0x8] = a2\n 40639: a3 = a2 >> 0x38\n 40642: u8 [a0 + 0xf] = a3\n 40645: a3 = a2 >> 0x30\n 40648: u8 [a0 + 0xe] = a3\n 40651: a3 = a2 >> 0x28\n 40654: u8 [a0 + 0xd] = a3\n 40657: a3 = a2 >> 0x20\n 40660: u8 [a0 + 0xc] = a3\n 40663: a3 = a2 >> 0x18\n 40666: u8 [a0 + 0xb] = a3\n 40669: a3 = a2 >> 0x10\n 40672: u8 [a0 + 0xa] = a3\n 40675: a2 = a2 >> 0x8\n 40678: u8 [a0 + 0x9] = a2\n 40681: u8 [a0] = a1\n 40683: a2 = a1 >> 0x38\n 40686: u8 [a0 + 0x7] = a2\n 40689: a2 = a1 >> 0x30\n 40692: u8 [a0 + 0x6] = a2\n 40695: a2 = a1 >> 0x28\n 40698: u8 [a0 + 0x5] = a2\n 40701: a2 = a1 >> 0x20\n 40704: u8 [a0 + 0x4] = a2\n 40707: a2 = a1 >> 0x18\n 40710: u8 [a0 + 0x3] = a2\n 40713: a2 = a1 >> 0x10\n 40716: u8 [a0 + 0x2] = a2\n 40719: a1 = a1 >> 0x8\n 40722: u8 [a0 + 0x1] = a1\n 40725: u64 [sp + 1416] = 0\n 40729: u64 [sp + 1408] = 0\n 40733: u64 [sp + 1392] = 0x40\n 40738: a0 = sp + 0x590\n 40742: a1 = sp + 0x570\n 40746: u64 [sp + 1400] = 0\n 40750: ra = 478, jump @56\n      : @596 [@dyn 239] (gas: 15)\n 40757: a1 = u64 [sp + 0x5a8]\n 40761: a2 = u64 [sp + 0x5a0]\n 40765: a0 = u64 [sp + 0x598]\n 40769: s1 = u64 [sp + 0x590]\n 40773: u64 [sp + 0x28] = a0\n 40776: u64 [sp + 0x30] = a1\n 40779: a0 = a0 | a1\n 40782: a1 = s1 | a2\n 40785: a1 = a1 | a0\n 40788: a1 = a1 >> 0x20\n 40791: u64 [sp + 0x38] = a2\n 40794: a0 = a0 | a2\n 40797: a0 = a0 << 0x20\n 40800: a0 = a0 | a1\n 40803: jump @598 if a0 == 0\n      : @597 (gas: 1)\n 40806: jump @781\n      : @598 (gas: 4)\n 40809: i32 a0 = s1 + 0\n 40811: a1 = 0x20\n 40814: u64 [sp + 0x18] = a0\n 40817: ra = 480, jump @0\n      : @599 [@dyn 240] (gas: 44)\n 40824: u8 [a0 + 31] = 0x8\n 40828: a1 = u64 [sp + 0x30]\n 40831: a2 = u64 [sp + 0x38]\n 40834: a2 = a2 | a1\n 40837: a1 = 0x100000000\n 40847: u64 [sp + 0x20] = a1\n 40850: a1 = 0xffffffe0\n 40860: u64 [sp + 0x10] = s1\n 40863: a1 = s1 <u a1\n 40866: s1 = u64 [sp + 0x28]\n 40869: a1 = 0 if s1 != 0\n 40871: a1 = 0 if a2 != 0\n 40873: u8 [a0 + 30] = 0\n 40876: u8 [a0 + 29] = 0\n 40879: u8 [a0 + 28] = 0\n 40882: u8 [a0 + 27] = 0\n 40885: u8 [a0 + 26] = 0\n 40888: u8 [a0 + 25] = 0\n 40891: u8 [a0 + 24] = 0\n 40894: u8 [a0 + 23] = 0\n 40897: u8 [a0 + 22] = 0\n 40900: u8 [a0 + 21] = 0\n 40903: u8 [a0 + 20] = 0\n 40906: u8 [a0 + 19] = 0\n 40909: u8 [a0 + 18] = 0\n 40912: u8 [a0 + 17] = 0\n 40915: u8 [a0 + 16] = 0\n 40918: u8 [a0 + 15] = 0\n 40921: u8 [a0 + 14] = 0\n 40924: u8 [a0 + 13] = 0\n 40927: u8 [a0 + 12] = 0\n 40930: u8 [a0 + 11] = 0\n 40933: u8 [a0 + 10] = 0\n 40936: u8 [a0 + 9] = 0\n 40939: u8 [a0 + 8] = 0\n 40942: u8 [a0 + 7] = 0\n 40945: u8 [a0 + 6] = 0\n 40948: u8 [a0 + 5] = 0\n 40951: u8 [a0 + 4] = 0\n 40954: u8 [a0 + 3] = 0\n 40957: u8 [a0 + 2] = 0\n 40960: u8 [a0 + 1] = 0\n 40963: u8 [a0 + 0] = 0\n 40965: jump @601 if a1 != 0\n      : @600 (gas: 1)\n 40968: jump @781\n      : @601 (gas: 4)\n 40971: a0 = u64 [sp + 0x18]\n 40974: i32 a0 = a0 + 0x20\n 40977: a1 = 0x20\n 40980: ra = 482, jump @0\n      : @602 [@dyn 241] (gas: 41)\n 40987: u8 [a0 + 31] = 0\n 40990: u8 [a0 + 30] = 0\n 40993: u8 [a0 + 29] = 0\n 40996: u8 [a0 + 28] = 0\n 40999: u8 [a0 + 27] = 0\n 41002: u8 [a0 + 26] = 0\n 41005: u8 [a0 + 25] = 0\n 41008: u8 [a0 + 24] = 0\n 41011: u8 [a0 + 23] = 0\n 41014: u8 [a0 + 22] = 0\n 41017: u8 [a0 + 21] = 0\n 41020: u8 [a0 + 20] = 0\n 41023: u8 [a0 + 19] = 0\n 41026: u8 [a0 + 18] = 0\n 41029: u8 [a0 + 17] = 0\n 41032: u8 [a0 + 16] = 0\n 41035: u8 [a0 + 15] = 0\n 41038: u8 [a0 + 14] = 0\n 41041: u8 [a0 + 13] = 0\n 41044: u8 [a0 + 12] = 0\n 41047: u8 [a0 + 11] = 0\n 41050: u8 [a0 + 10] = 0\n 41053: u8 [a0 + 9] = 0\n 41056: u8 [a0 + 8] = 0\n 41059: u8 [a0 + 7] = 0x79\n 41063: u8 [a0 + 6] = 0x6c\n 41067: u8 [a0 + 5] = 0x64\n 41071: u8 [a0 + 4] = 0x6e\n 41075: u8 [a0 + 3] = 0x65\n 41079: u8 [a0 + 2] = 0x69\n 41083: u8 [a0 + 1] = 0x72\n 41087: a2 = u64 [sp + 0x20]\n 41090: a2 = a2 + 0xfffffffffffffb60\n 41094: a3 = u64 [sp + 0x68]\n 41097: a2 = a3 <u a2\n 41100: a3 = u64 [sp + 0x60]\n 41103: a2 = 0 if a3 != 0\n 41105: a3 = u64 [sp + 0x50]\n 41108: a2 = 0 if a3 != 0\n 41110: u8 [a0 + 0] = 0x66\n 41113: jump @604 if a2 != 0\n      : @603 (gas: 1)\n 41116: jump @781\n      : @604 (gas: 4)\n 41119: a0 = u64 [sp + 0x58]\n 41122: i32 a0 = a0 + 0x4a0\n 41126: a1 = 0x20\n 41129: ra = 484, jump @0\n      : @605 [@dyn 242] (gas: 74)\n 41136: a1 = u64 [sp + 0x30]\n 41139: a1 = reverse a1\n 41141: a2 = u64 [sp + 0x38]\n 41144: a2 = reverse a2\n 41146: a3 = reverse s1\n 41148: a4 = u64 [sp + 0x10]\n 41151: a4 = reverse a4\n 41153: a5 = a4 >> 0x38\n 41156: u8 [a0 + 0x1f] = a5\n 41159: a5 = a4 >> 0x30\n 41162: u8 [a0 + 0x1e] = a5\n 41165: a5 = a4 >> 0x28\n 41168: u8 [a0 + 0x1d] = a5\n 41171: a5 = a4 >> 0x20\n 41174: u8 [a0 + 0x1c] = a5\n 41177: a5 = a4 >> 0x18\n 41180: u8 [a0 + 0x1b] = a5\n 41183: a5 = a4 >> 0x10\n 41186: u8 [a0 + 0x1a] = a5\n 41189: a5 = a4 >> 0x8\n 41192: u8 [a0 + 0x19] = a5\n 41195: u8 [a0 + 0x18] = a4\n 41198: u8 [a0 + 0x10] = a3\n 41201: a4 = a3 >> 0x38\n 41204: u8 [a0 + 0x17] = a4\n 41207: a4 = a3 >> 0x30\n 41210: u8 [a0 + 0x16] = a4\n 41213: a4 = a3 >> 0x28\n 41216: u8 [a0 + 0x15] = a4\n 41219: a4 = a3 >> 0x20\n 41222: u8 [a0 + 0x14] = a4\n 41225: a4 = a3 >> 0x18\n 41228: u8 [a0 + 0x13] = a4\n 41231: a4 = a3 >> 0x10\n 41234: u8 [a0 + 0x12] = a4\n 41237: a3 = a3 >> 0x8\n 41240: u8 [a0 + 0x11] = a3\n 41243: u8 [a0 + 0x8] = a2\n 41246: a3 = a2 >> 0x38\n 41249: u8 [a0 + 0xf] = a3\n 41252: a3 = a2 >> 0x30\n 41255: u8 [a0 + 0xe] = a3\n 41258: a3 = a2 >> 0x28\n 41261: u8 [a0 + 0xd] = a3\n 41264: a3 = a2 >> 0x20\n 41267: u8 [a0 + 0xc] = a3\n 41270: a3 = a2 >> 0x18\n 41273: u8 [a0 + 0xb] = a3\n 41276: a3 = a2 >> 0x10\n 41279: u8 [a0 + 0xa] = a3\n 41282: a2 = a2 >> 0x8\n 41285: u8 [a0 + 0x9] = a2\n 41288: u8 [a0] = a1\n 41290: a2 = a1 >> 0x38\n 41293: u8 [a0 + 0x7] = a2\n 41296: a2 = a1 >> 0x30\n 41299: u8 [a0 + 0x6] = a2\n 41302: a2 = a1 >> 0x28\n 41305: u8 [a0 + 0x5] = a2\n 41308: a2 = a1 >> 0x20\n 41311: u8 [a0 + 0x4] = a2\n 41314: a2 = a1 >> 0x18\n 41317: u8 [a0 + 0x3] = a2\n 41320: a2 = a1 >> 0x10\n 41323: u8 [a0 + 0x2] = a2\n 41326: a1 = a1 >> 0x8\n 41329: u8 [a0 + 0x1] = a1\n 41332: u64 [sp + 1352] = 0\n 41336: u64 [sp + 1344] = 0\n 41340: u64 [sp + 1328] = 0x40\n 41345: a0 = sp + 0x550\n 41349: a1 = sp + 0x530\n 41353: u64 [sp + 1336] = 0\n 41357: ra = 486, jump @56\n      : @606 [@dyn 243] (gas: 15)\n 41364: a1 = u64 [sp + 0x568]\n 41368: a2 = u64 [sp + 0x560]\n 41372: a0 = u64 [sp + 0x558]\n 41376: s1 = u64 [sp + 0x550]\n 41380: u64 [sp + 0x28] = a0\n 41383: u64 [sp + 0x30] = a1\n 41386: a0 = a0 | a1\n 41389: a1 = s1 | a2\n 41392: a1 = a1 | a0\n 41395: a1 = a1 >> 0x20\n 41398: u64 [sp + 0x38] = a2\n 41401: a0 = a0 | a2\n 41404: a0 = a0 << 0x20\n 41407: a0 = a0 | a1\n 41410: jump @608 if a0 == 0\n      : @607 (gas: 1)\n 41413: jump @781\n      : @608 (gas: 4)\n 41416: i32 a0 = s1 + 0\n 41418: a1 = 0x20\n 41421: u64 [sp + 0x20] = a0\n 41424: ra = 488, jump @0\n      : @609 [@dyn 244] (gas: 44)\n 41431: u8 [a0 + 31] = 0x3\n 41435: a1 = u64 [sp + 0x30]\n 41438: a2 = u64 [sp + 0x38]\n 41441: a2 = a2 | a1\n 41444: a1 = 0x100000000\n 41454: u64 [sp + 0x18] = a1\n 41457: a1 = 0xffffffe0\n 41467: u64 [sp + 0x10] = s1\n 41470: a1 = s1 <u a1\n 41473: s1 = u64 [sp + 0x28]\n 41476: a1 = 0 if s1 != 0\n 41478: a1 = 0 if a2 != 0\n 41480: u8 [a0 + 30] = 0\n 41483: u8 [a0 + 29] = 0\n 41486: u8 [a0 + 28] = 0\n 41489: u8 [a0 + 27] = 0\n 41492: u8 [a0 + 26] = 0\n 41495: u8 [a0 + 25] = 0\n 41498: u8 [a0 + 24] = 0\n 41501: u8 [a0 + 23] = 0\n 41504: u8 [a0 + 22] = 0\n 41507: u8 [a0 + 21] = 0\n 41510: u8 [a0 + 20] = 0\n 41513: u8 [a0 + 19] = 0\n 41516: u8 [a0 + 18] = 0\n 41519: u8 [a0 + 17] = 0\n 41522: u8 [a0 + 16] = 0\n 41525: u8 [a0 + 15] = 0\n 41528: u8 [a0 + 14] = 0\n 41531: u8 [a0 + 13] = 0\n 41534: u8 [a0 + 12] = 0\n 41537: u8 [a0 + 11] = 0\n 41540: u8 [a0 + 10] = 0\n 41543: u8 [a0 + 9] = 0\n 41546: u8 [a0 + 8] = 0\n 41549: u8 [a0 + 7] = 0\n 41552: u8 [a0 + 6] = 0\n 41555: u8 [a0 + 5] = 0\n 41558: u8 [a0 + 4] = 0\n 41561: u8 [a0 + 3] = 0\n 41564: u8 [a0 + 2] = 0\n 41567: u8 [a0 + 1] = 0\n 41570: u8 [a0 + 0] = 0\n 41572: jump @611 if a1 != 0\n      : @610 (gas: 1)\n 41575: jump @781\n      : @611 (gas: 4)\n 41578: a0 = u64 [sp + 0x20]\n 41581: i32 a0 = a0 + 0x20\n 41584: a1 = 0x20\n 41587: ra = 490, jump @0\n      : @612 [@dyn 245] (gas: 41)\n 41594: u8 [a0 + 31] = 0\n 41597: u8 [a0 + 30] = 0\n 41600: u8 [a0 + 29] = 0\n 41603: u8 [a0 + 28] = 0\n 41606: u8 [a0 + 27] = 0\n 41609: u8 [a0 + 26] = 0\n 41612: u8 [a0 + 25] = 0\n 41615: u8 [a0 + 24] = 0\n 41618: u8 [a0 + 23] = 0\n 41621: u8 [a0 + 22] = 0\n 41624: u8 [a0 + 21] = 0\n 41627: u8 [a0 + 20] = 0\n 41630: u8 [a0 + 19] = 0\n 41633: u8 [a0 + 18] = 0\n 41636: u8 [a0 + 17] = 0\n 41639: u8 [a0 + 16] = 0\n 41642: u8 [a0 + 15] = 0\n 41645: u8 [a0 + 14] = 0\n 41648: u8 [a0 + 13] = 0\n 41651: u8 [a0 + 12] = 0\n 41654: u8 [a0 + 11] = 0\n 41657: u8 [a0 + 10] = 0\n 41660: u8 [a0 + 9] = 0\n 41663: u8 [a0 + 8] = 0\n 41666: u8 [a0 + 7] = 0\n 41669: u8 [a0 + 6] = 0\n 41672: u8 [a0 + 5] = 0\n 41675: u8 [a0 + 4] = 0\n 41678: u8 [a0 + 3] = 0\n 41681: u8 [a0 + 2] = 0x6e\n 41685: u8 [a0 + 1] = 0x75\n 41689: a2 = u64 [sp + 0x18]\n 41692: a2 = a2 + 0xfffffffffffffb40\n 41696: a3 = u64 [sp + 0x68]\n 41699: a2 = a3 <u a2\n 41702: a3 = u64 [sp + 0x60]\n 41705: a2 = 0 if a3 != 0\n 41707: a3 = u64 [sp + 0x50]\n 41710: a2 = 0 if a3 != 0\n 41712: u8 [a0 + 0] = 0x66\n 41715: jump @614 if a2 != 0\n      : @613 (gas: 1)\n 41718: jump @781\n      : @614 (gas: 4)\n 41721: a0 = u64 [sp + 0x58]\n 41724: i32 a0 = a0 + 0x4c0\n 41728: a1 = 0x20\n 41731: ra = 492, jump @0\n      : @615 [@dyn 246] (gas: 74)\n 41738: a1 = u64 [sp + 0x30]\n 41741: a1 = reverse a1\n 41743: a2 = u64 [sp + 0x38]\n 41746: a2 = reverse a2\n 41748: a3 = reverse s1\n 41750: a4 = u64 [sp + 0x10]\n 41753: a4 = reverse a4\n 41755: a5 = a4 >> 0x38\n 41758: u8 [a0 + 0x1f] = a5\n 41761: a5 = a4 >> 0x30\n 41764: u8 [a0 + 0x1e] = a5\n 41767: a5 = a4 >> 0x28\n 41770: u8 [a0 + 0x1d] = a5\n 41773: a5 = a4 >> 0x20\n 41776: u8 [a0 + 0x1c] = a5\n 41779: a5 = a4 >> 0x18\n 41782: u8 [a0 + 0x1b] = a5\n 41785: a5 = a4 >> 0x10\n 41788: u8 [a0 + 0x1a] = a5\n 41791: a5 = a4 >> 0x8\n 41794: u8 [a0 + 0x19] = a5\n 41797: u8 [a0 + 0x18] = a4\n 41800: u8 [a0 + 0x10] = a3\n 41803: a4 = a3 >> 0x38\n 41806: u8 [a0 + 0x17] = a4\n 41809: a4 = a3 >> 0x30\n 41812: u8 [a0 + 0x16] = a4\n 41815: a4 = a3 >> 0x28\n 41818: u8 [a0 + 0x15] = a4\n 41821: a4 = a3 >> 0x20\n 41824: u8 [a0 + 0x14] = a4\n 41827: a4 = a3 >> 0x18\n 41830: u8 [a0 + 0x13] = a4\n 41833: a4 = a3 >> 0x10\n 41836: u8 [a0 + 0x12] = a4\n 41839: a3 = a3 >> 0x8\n 41842: u8 [a0 + 0x11] = a3\n 41845: u8 [a0 + 0x8] = a2\n 41848: a3 = a2 >> 0x38\n 41851: u8 [a0 + 0xf] = a3\n 41854: a3 = a2 >> 0x30\n 41857: u8 [a0 + 0xe] = a3\n 41860: a3 = a2 >> 0x28\n 41863: u8 [a0 + 0xd] = a3\n 41866: a3 = a2 >> 0x20\n 41869: u8 [a0 + 0xc] = a3\n 41872: a3 = a2 >> 0x18\n 41875: u8 [a0 + 0xb] = a3\n 41878: a3 = a2 >> 0x10\n 41881: u8 [a0 + 0xa] = a3\n 41884: a2 = a2 >> 0x8\n 41887: u8 [a0 + 0x9] = a2\n 41890: u8 [a0] = a1\n 41892: a2 = a1 >> 0x38\n 41895: u8 [a0 + 0x7] = a2\n 41898: a2 = a1 >> 0x30\n 41901: u8 [a0 + 0x6] = a2\n 41904: a2 = a1 >> 0x28\n 41907: u8 [a0 + 0x5] = a2\n 41910: a2 = a1 >> 0x20\n 41913: u8 [a0 + 0x4] = a2\n 41916: a2 = a1 >> 0x18\n 41919: u8 [a0 + 0x3] = a2\n 41922: a2 = a1 >> 0x10\n 41925: u8 [a0 + 0x2] = a2\n 41928: a1 = a1 >> 0x8\n 41931: u8 [a0 + 0x1] = a1\n 41934: u64 [sp + 1288] = 0\n 41938: u64 [sp + 1280] = 0\n 41942: u64 [sp + 1264] = 0x40\n 41947: a0 = sp + 0x510\n 41951: a1 = sp + 0x4f0\n 41955: u64 [sp + 1272] = 0\n 41959: ra = 494, jump @56\n      : @616 [@dyn 247] (gas: 15)\n 41966: a1 = u64 [sp + 0x528]\n 41970: a2 = u64 [sp + 0x520]\n 41974: a0 = u64 [sp + 0x518]\n 41978: s1 = u64 [sp + 0x510]\n 41982: u64 [sp + 0x28] = a0\n 41985: u64 [sp + 0x30] = a1\n 41988: a0 = a0 | a1\n 41991: a1 = s1 | a2\n 41994: a1 = a1 | a0\n 41997: a1 = a1 >> 0x20\n 42000: u64 [sp + 0x38] = a2\n 42003: a0 = a0 | a2\n 42006: a0 = a0 << 0x20\n 42009: a0 = a0 | a1\n 42012: jump @618 if a0 == 0\n      : @617 (gas: 1)\n 42015: jump @781\n      : @618 (gas: 4)\n 42018: i32 a0 = s1 + 0\n 42020: a1 = 0x20\n 42023: u64 [sp + 0x18] = a0\n 42026: ra = 496, jump @0\n      : @619 [@dyn 248] (gas: 44)\n 42033: u8 [a0 + 31] = 0x5\n 42037: a1 = u64 [sp + 0x30]\n 42040: a2 = u64 [sp + 0x38]\n 42043: a2 = a2 | a1\n 42046: a1 = 0x100000000\n 42056: u64 [sp + 0x20] = a1\n 42059: a1 = 0xffffffe0\n 42069: u64 [sp + 0x10] = s1\n 42072: a1 = s1 <u a1\n 42075: s1 = u64 [sp + 0x28]\n 42078: a1 = 0 if s1 != 0\n 42080: a1 = 0 if a2 != 0\n 42082: u8 [a0 + 30] = 0\n 42085: u8 [a0 + 29] = 0\n 42088: u8 [a0 + 28] = 0\n 42091: u8 [a0 + 27] = 0\n 42094: u8 [a0 + 26] = 0\n 42097: u8 [a0 + 25] = 0\n 42100: u8 [a0 + 24] = 0\n 42103: u8 [a0 + 23] = 0\n 42106: u8 [a0 + 22] = 0\n 42109: u8 [a0 + 21] = 0\n 42112: u8 [a0 + 20] = 0\n 42115: u8 [a0 + 19] = 0\n 42118: u8 [a0 + 18] = 0\n 42121: u8 [a0 + 17] = 0\n 42124: u8 [a0 + 16] = 0\n 42127: u8 [a0 + 15] = 0\n 42130: u8 [a0 + 14] = 0\n 42133: u8 [a0 + 13] = 0\n 42136: u8 [a0 + 12] = 0\n 42139: u8 [a0 + 11] = 0\n 42142: u8 [a0 + 10] = 0\n 42145: u8 [a0 + 9] = 0\n 42148: u8 [a0 + 8] = 0\n 42151: u8 [a0 + 7] = 0\n 42154: u8 [a0 + 6] = 0\n 42157: u8 [a0 + 5] = 0\n 42160: u8 [a0 + 4] = 0\n 42163: u8 [a0 + 3] = 0\n 42166: u8 [a0 + 2] = 0\n 42169: u8 [a0 + 1] = 0\n 42172: u8 [a0 + 0] = 0\n 42174: jump @621 if a1 != 0\n      : @620 (gas: 1)\n 42177: jump @781\n      : @621 (gas: 4)\n 42180: a0 = u64 [sp + 0x18]\n 42183: i32 a0 = a0 + 0x20\n 42186: a1 = 0x20\n 42189: ra = 498, jump @0\n      : @622 [@dyn 249] (gas: 41)\n 42196: u8 [a0 + 31] = 0\n 42199: u8 [a0 + 30] = 0\n 42202: u8 [a0 + 29] = 0\n 42205: u8 [a0 + 28] = 0\n 42208: u8 [a0 + 27] = 0\n 42211: u8 [a0 + 26] = 0\n 42214: u8 [a0 + 25] = 0\n 42217: u8 [a0 + 24] = 0\n 42220: u8 [a0 + 23] = 0\n 42223: u8 [a0 + 22] = 0\n 42226: u8 [a0 + 21] = 0\n 42229: u8 [a0 + 20] = 0\n 42232: u8 [a0 + 19] = 0\n 42235: u8 [a0 + 18] = 0\n 42238: u8 [a0 + 17] = 0\n 42241: u8 [a0 + 16] = 0\n 42244: u8 [a0 + 15] = 0\n 42247: u8 [a0 + 14] = 0\n 42250: u8 [a0 + 13] = 0\n 42253: u8 [a0 + 12] = 0\n 42256: u8 [a0 + 11] = 0\n 42259: u8 [a0 + 10] = 0\n 42262: u8 [a0 + 9] = 0\n 42265: u8 [a0 + 8] = 0\n 42268: u8 [a0 + 7] = 0\n 42271: u8 [a0 + 6] = 0\n 42274: u8 [a0 + 5] = 0\n 42277: u8 [a0 + 4] = 0x79\n 42281: u8 [a0 + 3] = 0x6e\n 42285: u8 [a0 + 2] = 0x6e\n 42289: u8 [a0 + 1] = 0x75\n 42293: a2 = u64 [sp + 0x20]\n 42296: a2 = a2 + 0xfffffffffffffb20\n 42300: a3 = u64 [sp + 0x68]\n 42303: a2 = a3 <u a2\n 42306: a3 = u64 [sp + 0x60]\n 42309: a2 = 0 if a3 != 0\n 42311: a3 = u64 [sp + 0x50]\n 42314: a2 = 0 if a3 != 0\n 42316: u8 [a0 + 0] = 0x66\n 42319: jump @624 if a2 != 0\n      : @623 (gas: 1)\n 42322: jump @781\n      : @624 (gas: 4)\n 42325: a0 = u64 [sp + 0x58]\n 42328: i32 a0 = a0 + 0x4e0\n 42332: a1 = 0x20\n 42335: ra = 500, jump @0\n      : @625 [@dyn 250] (gas: 74)\n 42342: a1 = u64 [sp + 0x30]\n 42345: a1 = reverse a1\n 42347: a2 = u64 [sp + 0x38]\n 42350: a2 = reverse a2\n 42352: a3 = reverse s1\n 42354: a4 = u64 [sp + 0x10]\n 42357: a4 = reverse a4\n 42359: a5 = a4 >> 0x38\n 42362: u8 [a0 + 0x1f] = a5\n 42365: a5 = a4 >> 0x30\n 42368: u8 [a0 + 0x1e] = a5\n 42371: a5 = a4 >> 0x28\n 42374: u8 [a0 + 0x1d] = a5\n 42377: a5 = a4 >> 0x20\n 42380: u8 [a0 + 0x1c] = a5\n 42383: a5 = a4 >> 0x18\n 42386: u8 [a0 + 0x1b] = a5\n 42389: a5 = a4 >> 0x10\n 42392: u8 [a0 + 0x1a] = a5\n 42395: a5 = a4 >> 0x8\n 42398: u8 [a0 + 0x19] = a5\n 42401: u8 [a0 + 0x18] = a4\n 42404: u8 [a0 + 0x10] = a3\n 42407: a4 = a3 >> 0x38\n 42410: u8 [a0 + 0x17] = a4\n 42413: a4 = a3 >> 0x30\n 42416: u8 [a0 + 0x16] = a4\n 42419: a4 = a3 >> 0x28\n 42422: u8 [a0 + 0x15] = a4\n 42425: a4 = a3 >> 0x20\n 42428: u8 [a0 + 0x14] = a4\n 42431: a4 = a3 >> 0x18\n 42434: u8 [a0 + 0x13] = a4\n 42437: a4 = a3 >> 0x10\n 42440: u8 [a0 + 0x12] = a4\n 42443: a3 = a3 >> 0x8\n 42446: u8 [a0 + 0x11] = a3\n 42449: u8 [a0 + 0x8] = a2\n 42452: a3 = a2 >> 0x38\n 42455: u8 [a0 + 0xf] = a3\n 42458: a3 = a2 >> 0x30\n 42461: u8 [a0 + 0xe] = a3\n 42464: a3 = a2 >> 0x28\n 42467: u8 [a0 + 0xd] = a3\n 42470: a3 = a2 >> 0x20\n 42473: u8 [a0 + 0xc] = a3\n 42476: a3 = a2 >> 0x18\n 42479: u8 [a0 + 0xb] = a3\n 42482: a3 = a2 >> 0x10\n 42485: u8 [a0 + 0xa] = a3\n 42488: a2 = a2 >> 0x8\n 42491: u8 [a0 + 0x9] = a2\n 42494: u8 [a0] = a1\n 42496: a2 = a1 >> 0x38\n 42499: u8 [a0 + 0x7] = a2\n 42502: a2 = a1 >> 0x30\n 42505: u8 [a0 + 0x6] = a2\n 42508: a2 = a1 >> 0x28\n 42511: u8 [a0 + 0x5] = a2\n 42514: a2 = a1 >> 0x20\n 42517: u8 [a0 + 0x4] = a2\n 42520: a2 = a1 >> 0x18\n 42523: u8 [a0 + 0x3] = a2\n 42526: a2 = a1 >> 0x10\n 42529: u8 [a0 + 0x2] = a2\n 42532: a1 = a1 >> 0x8\n 42535: u8 [a0 + 0x1] = a1\n 42538: u64 [sp + 1224] = 0\n 42542: u64 [sp + 1216] = 0\n 42546: u64 [sp + 1200] = 0x40\n 42551: a0 = sp + 0x4d0\n 42555: a1 = sp + 0x4b0\n 42559: u64 [sp + 1208] = 0\n 42563: ra = 502, jump @56\n      : @626 [@dyn 251] (gas: 15)\n 42570: a1 = u64 [sp + 0x4e8]\n 42574: a2 = u64 [sp + 0x4e0]\n 42578: a0 = u64 [sp + 0x4d8]\n 42582: s1 = u64 [sp + 0x4d0]\n 42586: u64 [sp + 0x28] = a0\n 42589: u64 [sp + 0x30] = a1\n 42592: a0 = a0 | a1\n 42595: a1 = s1 | a2\n 42598: a1 = a1 | a0\n 42601: a1 = a1 >> 0x20\n 42604: u64 [sp + 0x38] = a2\n 42607: a0 = a0 | a2\n 42610: a0 = a0 << 0x20\n 42613: a0 = a0 | a1\n 42616: jump @628 if a0 == 0\n      : @627 (gas: 1)\n 42619: jump @781\n      : @628 (gas: 4)\n 42622: i32 a0 = s1 + 0\n 42624: a1 = 0x20\n 42627: u64 [sp + 0x18] = a0\n 42630: ra = 504, jump @0\n      : @629 [@dyn 252] (gas: 44)\n 42637: u8 [a0 + 31] = 0x8\n 42641: a1 = u64 [sp + 0x30]\n 42644: a2 = u64 [sp + 0x38]\n 42647: a2 = a2 | a1\n 42650: a1 = 0x100000000\n 42660: u64 [sp + 0x20] = a1\n 42663: a1 = 0xffffffe0\n 42673: u64 [sp + 0x10] = s1\n 42676: a1 = s1 <u a1\n 42679: s1 = u64 [sp + 0x28]\n 42682: a1 = 0 if s1 != 0\n 42684: a1 = 0 if a2 != 0\n 42686: u8 [a0 + 30] = 0\n 42689: u8 [a0 + 29] = 0\n 42692: u8 [a0 + 28] = 0\n 42695: u8 [a0 + 27] = 0\n 42698: u8 [a0 + 26] = 0\n 42701: u8 [a0 + 25] = 0\n 42704: u8 [a0 + 24] = 0\n 42707: u8 [a0 + 23] = 0\n 42710: u8 [a0 + 22] = 0\n 42713: u8 [a0 + 21] = 0\n 42716: u8 [a0 + 20] = 0\n 42719: u8 [a0 + 19] = 0\n 42722: u8 [a0 + 18] = 0\n 42725: u8 [a0 + 17] = 0\n 42728: u8 [a0 + 16] = 0\n 42731: u8 [a0 + 15] = 0\n 42734: u8 [a0 + 14] = 0\n 42737: u8 [a0 + 13] = 0\n 42740: u8 [a0 + 12] = 0\n 42743: u8 [a0 + 11] = 0\n 42746: u8 [a0 + 10] = 0\n 42749: u8 [a0 + 9] = 0\n 42752: u8 [a0 + 8] = 0\n 42755: u8 [a0 + 7] = 0\n 42758: u8 [a0 + 6] = 0\n 42761: u8 [a0 + 5] = 0\n 42764: u8 [a0 + 4] = 0\n 42767: u8 [a0 + 3] = 0\n 42770: u8 [a0 + 2] = 0\n 42773: u8 [a0 + 1] = 0\n 42776: u8 [a0 + 0] = 0\n 42778: jump @631 if a1 != 0\n      : @630 (gas: 1)\n 42781: jump @781\n      : @631 (gas: 4)\n 42784: a0 = u64 [sp + 0x18]\n 42787: i32 a0 = a0 + 0x20\n 42790: a1 = 0x20\n 42793: ra = 506, jump @0\n      : @632 [@dyn 253] (gas: 41)\n 42800: u8 [a0 + 31] = 0\n 42803: u8 [a0 + 30] = 0\n 42806: u8 [a0 + 29] = 0\n 42809: u8 [a0 + 28] = 0\n 42812: u8 [a0 + 27] = 0\n 42815: u8 [a0 + 26] = 0\n 42818: u8 [a0 + 25] = 0\n 42821: u8 [a0 + 24] = 0\n 42824: u8 [a0 + 23] = 0\n 42827: u8 [a0 + 22] = 0\n 42830: u8 [a0 + 21] = 0\n 42833: u8 [a0 + 20] = 0\n 42836: u8 [a0 + 19] = 0\n 42839: u8 [a0 + 18] = 0\n 42842: u8 [a0 + 17] = 0\n 42845: u8 [a0 + 16] = 0\n 42848: u8 [a0 + 15] = 0\n 42851: u8 [a0 + 14] = 0\n 42854: u8 [a0 + 13] = 0\n 42857: u8 [a0 + 12] = 0\n 42860: u8 [a0 + 11] = 0\n 42863: u8 [a0 + 10] = 0\n 42866: u8 [a0 + 9] = 0\n 42869: u8 [a0 + 8] = 0\n 42872: u8 [a0 + 7] = 0x73\n 42876: u8 [a0 + 6] = 0x75\n 42880: u8 [a0 + 5] = 0x6f\n 42884: u8 [a0 + 4] = 0x72\n 42888: u8 [a0 + 3] = 0x65\n 42892: u8 [a0 + 2] = 0x6e\n 42896: u8 [a0 + 1] = 0x65\n 42900: a2 = u64 [sp + 0x20]\n 42903: a2 = a2 + 0xfffffffffffffb00\n 42907: a3 = u64 [sp + 0x68]\n 42910: a2 = a3 <u a2\n 42913: a3 = u64 [sp + 0x60]\n 42916: a2 = 0 if a3 != 0\n 42918: a3 = u64 [sp + 0x50]\n 42921: a2 = 0 if a3 != 0\n 42923: u8 [a0 + 0] = 0x67\n 42926: jump @634 if a2 != 0\n      : @633 (gas: 1)\n 42929: jump @781\n      : @634 (gas: 4)\n 42932: a0 = u64 [sp + 0x58]\n 42935: i32 a0 = a0 + 0x500\n 42939: a1 = 0x20\n 42942: ra = 508, jump @0\n      : @635 [@dyn 254] (gas: 74)\n 42949: a1 = u64 [sp + 0x30]\n 42952: a1 = reverse a1\n 42954: a2 = u64 [sp + 0x38]\n 42957: a2 = reverse a2\n 42959: a3 = reverse s1\n 42961: a4 = u64 [sp + 0x10]\n 42964: a4 = reverse a4\n 42966: a5 = a4 >> 0x38\n 42969: u8 [a0 + 0x1f] = a5\n 42972: a5 = a4 >> 0x30\n 42975: u8 [a0 + 0x1e] = a5\n 42978: a5 = a4 >> 0x28\n 42981: u8 [a0 + 0x1d] = a5\n 42984: a5 = a4 >> 0x20\n 42987: u8 [a0 + 0x1c] = a5\n 42990: a5 = a4 >> 0x18\n 42993: u8 [a0 + 0x1b] = a5\n 42996: a5 = a4 >> 0x10\n 42999: u8 [a0 + 0x1a] = a5\n 43002: a5 = a4 >> 0x8\n 43005: u8 [a0 + 0x19] = a5\n 43008: u8 [a0 + 0x18] = a4\n 43011: u8 [a0 + 0x10] = a3\n 43014: a4 = a3 >> 0x38\n 43017: u8 [a0 + 0x17] = a4\n 43020: a4 = a3 >> 0x30\n 43023: u8 [a0 + 0x16] = a4\n 43026: a4 = a3 >> 0x28\n 43029: u8 [a0 + 0x15] = a4\n 43032: a4 = a3 >> 0x20\n 43035: u8 [a0 + 0x14] = a4\n 43038: a4 = a3 >> 0x18\n 43041: u8 [a0 + 0x13] = a4\n 43044: a4 = a3 >> 0x10\n 43047: u8 [a0 + 0x12] = a4\n 43050: a3 = a3 >> 0x8\n 43053: u8 [a0 + 0x11] = a3\n 43056: u8 [a0 + 0x8] = a2\n 43059: a3 = a2 >> 0x38\n 43062: u8 [a0 + 0xf] = a3\n 43065: a3 = a2 >> 0x30\n 43068: u8 [a0 + 0xe] = a3\n 43071: a3 = a2 >> 0x28\n 43074: u8 [a0 + 0xd] = a3\n 43077: a3 = a2 >> 0x20\n 43080: u8 [a0 + 0xc] = a3\n 43083: a3 = a2 >> 0x18\n 43086: u8 [a0 + 0xb] = a3\n 43089: a3 = a2 >> 0x10\n 43092: u8 [a0 + 0xa] = a3\n 43095: a2 = a2 >> 0x8\n 43098: u8 [a0 + 0x9] = a2\n 43101: u8 [a0] = a1\n 43103: a2 = a1 >> 0x38\n 43106: u8 [a0 + 0x7] = a2\n 43109: a2 = a1 >> 0x30\n 43112: u8 [a0 + 0x6] = a2\n 43115: a2 = a1 >> 0x28\n 43118: u8 [a0 + 0x5] = a2\n 43121: a2 = a1 >> 0x20\n 43124: u8 [a0 + 0x4] = a2\n 43127: a2 = a1 >> 0x18\n 43130: u8 [a0 + 0x3] = a2\n 43133: a2 = a1 >> 0x10\n 43136: u8 [a0 + 0x2] = a2\n 43139: a1 = a1 >> 0x8\n 43142: u8 [a0 + 0x1] = a1\n 43145: u64 [sp + 1160] = 0\n 43149: u64 [sp + 1152] = 0\n 43153: u64 [sp + 1136] = 0x40\n 43158: a0 = sp + 0x490\n 43162: a1 = sp + 0x470\n 43166: u64 [sp + 1144] = 0\n 43170: ra = 510, jump @56\n      : @636 [@dyn 255] (gas: 15)\n 43177: a1 = u64 [sp + 0x4a8]\n 43181: a2 = u64 [sp + 0x4a0]\n 43185: a0 = u64 [sp + 0x498]\n 43189: s1 = u64 [sp + 0x490]\n 43193: u64 [sp + 0x28] = a0\n 43196: u64 [sp + 0x30] = a1\n 43199: a0 = a0 | a1\n 43202: a1 = s1 | a2\n 43205: a1 = a1 | a0\n 43208: a1 = a1 >> 0x20\n 43211: u64 [sp + 0x38] = a2\n 43214: a0 = a0 | a2\n 43217: a0 = a0 << 0x20\n 43220: a0 = a0 | a1\n 43223: jump @638 if a0 == 0\n      : @637 (gas: 1)\n 43226: jump @781\n      : @638 (gas: 4)\n 43229: i32 a0 = s1 + 0\n 43231: a1 = 0x20\n 43234: u64 [sp + 0x18] = a0\n 43237: ra = 512, jump @0\n      : @639 [@dyn 256] (gas: 44)\n 43244: u8 [a0 + 31] = 0x6\n 43248: a1 = u64 [sp + 0x30]\n 43251: a2 = u64 [sp + 0x38]\n 43254: a2 = a2 | a1\n 43257: a1 = 0x100000000\n 43267: u64 [sp + 0x20] = a1\n 43270: a1 = 0xffffffe0\n 43280: u64 [sp + 0x10] = s1\n 43283: a1 = s1 <u a1\n 43286: s1 = u64 [sp + 0x28]\n 43289: a1 = 0 if s1 != 0\n 43291: a1 = 0 if a2 != 0\n 43293: u8 [a0 + 30] = 0\n 43296: u8 [a0 + 29] = 0\n 43299: u8 [a0 + 28] = 0\n 43302: u8 [a0 + 27] = 0\n 43305: u8 [a0 + 26] = 0\n 43308: u8 [a0 + 25] = 0\n 43311: u8 [a0 + 24] = 0\n 43314: u8 [a0 + 23] = 0\n 43317: u8 [a0 + 22] = 0\n 43320: u8 [a0 + 21] = 0\n 43323: u8 [a0 + 20] = 0\n 43326: u8 [a0 + 19] = 0\n 43329: u8 [a0 + 18] = 0\n 43332: u8 [a0 + 17] = 0\n 43335: u8 [a0 + 16] = 0\n 43338: u8 [a0 + 15] = 0\n 43341: u8 [a0 + 14] = 0\n 43344: u8 [a0 + 13] = 0\n 43347: u8 [a0 + 12] = 0\n 43350: u8 [a0 + 11] = 0\n 43353: u8 [a0 + 10] = 0\n 43356: u8 [a0 + 9] = 0\n 43359: u8 [a0 + 8] = 0\n 43362: u8 [a0 + 7] = 0\n 43365: u8 [a0 + 6] = 0\n 43368: u8 [a0 + 5] = 0\n 43371: u8 [a0 + 4] = 0\n 43374: u8 [a0 + 3] = 0\n 43377: u8 [a0 + 2] = 0\n 43380: u8 [a0 + 1] = 0\n 43383: u8 [a0 + 0] = 0\n 43385: jump @641 if a1 != 0\n      : @640 (gas: 1)\n 43388: jump @781\n      : @641 (gas: 4)\n 43391: a0 = u64 [sp + 0x18]\n 43394: i32 a0 = a0 + 0x20\n 43397: a1 = 0x20\n 43400: ra = 514, jump @0\n      : @642 [@dyn 257] (gas: 41)\n 43407: u8 [a0 + 31] = 0\n 43410: u8 [a0 + 30] = 0\n 43413: u8 [a0 + 29] = 0\n 43416: u8 [a0 + 28] = 0\n 43419: u8 [a0 + 27] = 0\n 43422: u8 [a0 + 26] = 0\n 43425: u8 [a0 + 25] = 0\n 43428: u8 [a0 + 24] = 0\n 43431: u8 [a0 + 23] = 0\n 43434: u8 [a0 + 22] = 0\n 43437: u8 [a0 + 21] = 0\n 43440: u8 [a0 + 20] = 0\n 43443: u8 [a0 + 19] = 0\n 43446: u8 [a0 + 18] = 0\n 43449: u8 [a0 + 17] = 0\n 43452: u8 [a0 + 16] = 0\n 43455: u8 [a0 + 15] = 0\n 43458: u8 [a0 + 14] = 0\n 43461: u8 [a0 + 13] = 0\n 43464: u8 [a0 + 12] = 0\n 43467: u8 [a0 + 11] = 0\n 43470: u8 [a0 + 10] = 0\n 43473: u8 [a0 + 9] = 0\n 43476: u8 [a0 + 8] = 0\n 43479: u8 [a0 + 7] = 0\n 43482: u8 [a0 + 6] = 0\n 43485: u8 [a0 + 5] = 0x65\n 43489: u8 [a0 + 4] = 0x6c\n 43493: u8 [a0 + 3] = 0x74\n 43497: u8 [a0 + 2] = 0x6e\n 43501: u8 [a0 + 1] = 0x65\n 43505: a2 = u64 [sp + 0x20]\n 43508: a2 = a2 + 0xfffffffffffffae0\n 43512: a3 = u64 [sp + 0x68]\n 43515: a2 = a3 <u a2\n 43518: a3 = u64 [sp + 0x60]\n 43521: a2 = 0 if a3 != 0\n 43523: a3 = u64 [sp + 0x50]\n 43526: a2 = 0 if a3 != 0\n 43528: u8 [a0 + 0] = 0x67\n 43531: jump @644 if a2 != 0\n      : @643 (gas: 1)\n 43534: jump @781\n      : @644 (gas: 4)\n 43537: a0 = u64 [sp + 0x58]\n 43540: i32 a0 = a0 + 0x520\n 43544: a1 = 0x20\n 43547: ra = 516, jump @0\n      : @645 [@dyn 258] (gas: 74)\n 43554: a1 = u64 [sp + 0x30]\n 43557: a1 = reverse a1\n 43559: a2 = u64 [sp + 0x38]\n 43562: a2 = reverse a2\n 43564: a3 = reverse s1\n 43566: a4 = u64 [sp + 0x10]\n 43569: a4 = reverse a4\n 43571: a5 = a4 >> 0x38\n 43574: u8 [a0 + 0x1f] = a5\n 43577: a5 = a4 >> 0x30\n 43580: u8 [a0 + 0x1e] = a5\n 43583: a5 = a4 >> 0x28\n 43586: u8 [a0 + 0x1d] = a5\n 43589: a5 = a4 >> 0x20\n 43592: u8 [a0 + 0x1c] = a5\n 43595: a5 = a4 >> 0x18\n 43598: u8 [a0 + 0x1b] = a5\n 43601: a5 = a4 >> 0x10\n 43604: u8 [a0 + 0x1a] = a5\n 43607: a5 = a4 >> 0x8\n 43610: u8 [a0 + 0x19] = a5\n 43613: u8 [a0 + 0x18] = a4\n 43616: u8 [a0 + 0x10] = a3\n 43619: a4 = a3 >> 0x38\n 43622: u8 [a0 + 0x17] = a4\n 43625: a4 = a3 >> 0x30\n 43628: u8 [a0 + 0x16] = a4\n 43631: a4 = a3 >> 0x28\n 43634: u8 [a0 + 0x15] = a4\n 43637: a4 = a3 >> 0x20\n 43640: u8 [a0 + 0x14] = a4\n 43643: a4 = a3 >> 0x18\n 43646: u8 [a0 + 0x13] = a4\n 43649: a4 = a3 >> 0x10\n 43652: u8 [a0 + 0x12] = a4\n 43655: a3 = a3 >> 0x8\n 43658: u8 [a0 + 0x11] = a3\n 43661: u8 [a0 + 0x8] = a2\n 43664: a3 = a2 >> 0x38\n 43667: u8 [a0 + 0xf] = a3\n 43670: a3 = a2 >> 0x30\n 43673: u8 [a0 + 0xe] = a3\n 43676: a3 = a2 >> 0x28\n 43679: u8 [a0 + 0xd] = a3\n 43682: a3 = a2 >> 0x20\n 43685: u8 [a0 + 0xc] = a3\n 43688: a3 = a2 >> 0x18\n 43691: u8 [a0 + 0xb] = a3\n 43694: a3 = a2 >> 0x10\n 43697: u8 [a0 + 0xa] = a3\n 43700: a2 = a2 >> 0x8\n 43703: u8 [a0 + 0x9] = a2\n 43706: u8 [a0] = a1\n 43708: a2 = a1 >> 0x38\n 43711: u8 [a0 + 0x7] = a2\n 43714: a2 = a1 >> 0x30\n 43717: u8 [a0 + 0x6] = a2\n 43720: a2 = a1 >> 0x28\n 43723: u8 [a0 + 0x5] = a2\n 43726: a2 = a1 >> 0x20\n 43729: u8 [a0 + 0x4] = a2\n 43732: a2 = a1 >> 0x18\n 43735: u8 [a0 + 0x3] = a2\n 43738: a2 = a1 >> 0x10\n 43741: u8 [a0 + 0x2] = a2\n 43744: a1 = a1 >> 0x8\n 43747: u8 [a0 + 0x1] = a1\n 43750: u64 [sp + 1096] = 0\n 43754: u64 [sp + 1088] = 0\n 43758: u64 [sp + 1072] = 0x40\n 43763: a0 = sp + 0x450\n 43767: a1 = sp + 0x430\n 43771: u64 [sp + 1080] = 0\n 43775: ra = 518, jump @56\n      : @646 [@dyn 259] (gas: 15)\n 43782: a1 = u64 [sp + 0x468]\n 43786: a2 = u64 [sp + 0x460]\n 43790: a0 = u64 [sp + 0x458]\n 43794: s1 = u64 [sp + 0x450]\n 43798: u64 [sp + 0x28] = a0\n 43801: u64 [sp + 0x30] = a1\n 43804: a0 = a0 | a1\n 43807: a1 = s1 | a2\n 43810: a1 = a1 | a0\n 43813: a1 = a1 >> 0x20\n 43816: u64 [sp + 0x38] = a2\n 43819: a0 = a0 | a2\n 43822: a0 = a0 << 0x20\n 43825: a0 = a0 | a1\n 43828: jump @648 if a0 == 0\n      : @647 (gas: 1)\n 43831: jump @781\n      : @648 (gas: 4)\n 43834: i32 a0 = s1 + 0\n 43836: a1 = 0x20\n 43839: u64 [sp + 0x18] = a0\n 43842: ra = 520, jump @0\n      : @649 [@dyn 260] (gas: 44)\n 43849: u8 [a0 + 31] = 0x8\n 43853: a1 = u64 [sp + 0x30]\n 43856: a2 = u64 [sp + 0x38]\n 43859: a2 = a2 | a1\n 43862: a1 = 0x100000000\n 43872: u64 [sp + 0x20] = a1\n 43875: a1 = 0xffffffe0\n 43885: u64 [sp + 0x10] = s1\n 43888: a1 = s1 <u a1\n 43891: s1 = u64 [sp + 0x28]\n 43894: a1 = 0 if s1 != 0\n 43896: a1 = 0 if a2 != 0\n 43898: u8 [a0 + 30] = 0\n 43901: u8 [a0 + 29] = 0\n 43904: u8 [a0 + 28] = 0\n 43907: u8 [a0 + 27] = 0\n 43910: u8 [a0 + 26] = 0\n 43913: u8 [a0 + 25] = 0\n 43916: u8 [a0 + 24] = 0\n 43919: u8 [a0 + 23] = 0\n 43922: u8 [a0 + 22] = 0\n 43925: u8 [a0 + 21] = 0\n 43928: u8 [a0 + 20] = 0\n 43931: u8 [a0 + 19] = 0\n 43934: u8 [a0 + 18] = 0\n 43937: u8 [a0 + 17] = 0\n 43940: u8 [a0 + 16] = 0\n 43943: u8 [a0 + 15] = 0\n 43946: u8 [a0 + 14] = 0\n 43949: u8 [a0 + 13] = 0\n 43952: u8 [a0 + 12] = 0\n 43955: u8 [a0 + 11] = 0\n 43958: u8 [a0 + 10] = 0\n 43961: u8 [a0 + 9] = 0\n 43964: u8 [a0 + 8] = 0\n 43967: u8 [a0 + 7] = 0\n 43970: u8 [a0 + 6] = 0\n 43973: u8 [a0 + 5] = 0\n 43976: u8 [a0 + 4] = 0\n 43979: u8 [a0 + 3] = 0\n 43982: u8 [a0 + 2] = 0\n 43985: u8 [a0 + 1] = 0\n 43988: u8 [a0 + 0] = 0\n 43990: jump @651 if a1 != 0\n      : @650 (gas: 1)\n 43993: jump @781\n      : @651 (gas: 4)\n 43996: a0 = u64 [sp + 0x18]\n 43999: i32 a0 = a0 + 0x20\n 44002: a1 = 0x20\n 44005: ra = 522, jump @0\n      : @652 [@dyn 261] (gas: 41)\n 44012: u8 [a0 + 31] = 0\n 44015: u8 [a0 + 30] = 0\n 44018: u8 [a0 + 29] = 0\n 44021: u8 [a0 + 28] = 0\n 44024: u8 [a0 + 27] = 0\n 44027: u8 [a0 + 26] = 0\n 44030: u8 [a0 + 25] = 0\n 44033: u8 [a0 + 24] = 0\n 44036: u8 [a0 + 23] = 0\n 44039: u8 [a0 + 22] = 0\n 44042: u8 [a0 + 21] = 0\n 44045: u8 [a0 + 20] = 0\n 44048: u8 [a0 + 19] = 0\n 44051: u8 [a0 + 18] = 0\n 44054: u8 [a0 + 17] = 0\n 44057: u8 [a0 + 16] = 0\n 44060: u8 [a0 + 15] = 0\n 44063: u8 [a0 + 14] = 0\n 44066: u8 [a0 + 13] = 0\n 44069: u8 [a0 + 12] = 0\n 44072: u8 [a0 + 11] = 0\n 44075: u8 [a0 + 10] = 0\n 44078: u8 [a0 + 9] = 0\n 44081: u8 [a0 + 8] = 0\n 44084: u8 [a0 + 7] = 0x73\n 44088: u8 [a0 + 6] = 0x75\n 44092: u8 [a0 + 5] = 0x6f\n 44096: u8 [a0 + 4] = 0x69\n 44100: u8 [a0 + 3] = 0x72\n 44104: u8 [a0 + 2] = 0x6f\n 44108: u8 [a0 + 1] = 0x6c\n 44112: a2 = u64 [sp + 0x20]\n 44115: a2 = a2 + 0xfffffffffffffac0\n 44119: a3 = u64 [sp + 0x68]\n 44122: a2 = a3 <u a2\n 44125: a3 = u64 [sp + 0x60]\n 44128: a2 = 0 if a3 != 0\n 44130: a3 = u64 [sp + 0x50]\n 44133: a2 = 0 if a3 != 0\n 44135: u8 [a0 + 0] = 0x67\n 44138: jump @654 if a2 != 0\n      : @653 (gas: 1)\n 44141: jump @781\n      : @654 (gas: 4)\n 44144: a0 = u64 [sp + 0x58]\n 44147: i32 a0 = a0 + 0x540\n 44151: a1 = 0x20\n 44154: ra = 524, jump @0\n      : @655 [@dyn 262] (gas: 74)\n 44161: a1 = u64 [sp + 0x30]\n 44164: a1 = reverse a1\n 44166: a2 = u64 [sp + 0x38]\n 44169: a2 = reverse a2\n 44171: a3 = reverse s1\n 44173: a4 = u64 [sp + 0x10]\n 44176: a4 = reverse a4\n 44178: a5 = a4 >> 0x38\n 44181: u8 [a0 + 0x1f] = a5\n 44184: a5 = a4 >> 0x30\n 44187: u8 [a0 + 0x1e] = a5\n 44190: a5 = a4 >> 0x28\n 44193: u8 [a0 + 0x1d] = a5\n 44196: a5 = a4 >> 0x20\n 44199: u8 [a0 + 0x1c] = a5\n 44202: a5 = a4 >> 0x18\n 44205: u8 [a0 + 0x1b] = a5\n 44208: a5 = a4 >> 0x10\n 44211: u8 [a0 + 0x1a] = a5\n 44214: a5 = a4 >> 0x8\n 44217: u8 [a0 + 0x19] = a5\n 44220: u8 [a0 + 0x18] = a4\n 44223: u8 [a0 + 0x10] = a3\n 44226: a4 = a3 >> 0x38\n 44229: u8 [a0 + 0x17] = a4\n 44232: a4 = a3 >> 0x30\n 44235: u8 [a0 + 0x16] = a4\n 44238: a4 = a3 >> 0x28\n 44241: u8 [a0 + 0x15] = a4\n 44244: a4 = a3 >> 0x20\n 44247: u8 [a0 + 0x14] = a4\n 44250: a4 = a3 >> 0x18\n 44253: u8 [a0 + 0x13] = a4\n 44256: a4 = a3 >> 0x10\n 44259: u8 [a0 + 0x12] = a4\n 44262: a3 = a3 >> 0x8\n 44265: u8 [a0 + 0x11] = a3\n 44268: u8 [a0 + 0x8] = a2\n 44271: a3 = a2 >> 0x38\n 44274: u8 [a0 + 0xf] = a3\n 44277: a3 = a2 >> 0x30\n 44280: u8 [a0 + 0xe] = a3\n 44283: a3 = a2 >> 0x28\n 44286: u8 [a0 + 0xd] = a3\n 44289: a3 = a2 >> 0x20\n 44292: u8 [a0 + 0xc] = a3\n 44295: a3 = a2 >> 0x18\n 44298: u8 [a0 + 0xb] = a3\n 44301: a3 = a2 >> 0x10\n 44304: u8 [a0 + 0xa] = a3\n 44307: a2 = a2 >> 0x8\n 44310: u8 [a0 + 0x9] = a2\n 44313: u8 [a0] = a1\n 44315: a2 = a1 >> 0x38\n 44318: u8 [a0 + 0x7] = a2\n 44321: a2 = a1 >> 0x30\n 44324: u8 [a0 + 0x6] = a2\n 44327: a2 = a1 >> 0x28\n 44330: u8 [a0 + 0x5] = a2\n 44333: a2 = a1 >> 0x20\n 44336: u8 [a0 + 0x4] = a2\n 44339: a2 = a1 >> 0x18\n 44342: u8 [a0 + 0x3] = a2\n 44345: a2 = a1 >> 0x10\n 44348: u8 [a0 + 0x2] = a2\n 44351: a1 = a1 >> 0x8\n 44354: u8 [a0 + 0x1] = a1\n 44357: u64 [sp + 1032] = 0\n 44361: u64 [sp + 1024] = 0\n 44365: u64 [sp + 1008] = 0x40\n 44370: a0 = sp + 0x410\n 44374: a1 = sp + 0x3f0\n 44378: u64 [sp + 1016] = 0\n 44382: ra = 526, jump @56\n      : @656 [@dyn 263] (gas: 15)\n 44389: a1 = u64 [sp + 0x428]\n 44393: a2 = u64 [sp + 0x420]\n 44397: a0 = u64 [sp + 0x418]\n 44401: s1 = u64 [sp + 0x410]\n 44405: u64 [sp + 0x28] = a0\n 44408: u64 [sp + 0x30] = a1\n 44411: a0 = a0 | a1\n 44414: a1 = s1 | a2\n 44417: a1 = a1 | a0\n 44420: a1 = a1 >> 0x20\n 44423: u64 [sp + 0x38] = a2\n 44426: a0 = a0 | a2\n 44429: a0 = a0 << 0x20\n 44432: a0 = a0 | a1\n 44435: jump @658 if a0 == 0\n      : @657 (gas: 1)\n 44438: jump @781\n      : @658 (gas: 4)\n 44441: i32 a0 = s1 + 0\n 44443: a1 = 0x20\n 44446: u64 [sp + 0x20] = a0\n 44449: ra = 528, jump @0\n      : @659 [@dyn 264] (gas: 44)\n 44456: u8 [a0 + 31] = 0x4\n 44460: a1 = u64 [sp + 0x30]\n 44463: a2 = u64 [sp + 0x38]\n 44466: a2 = a2 | a1\n 44469: a1 = 0x100000000\n 44479: u64 [sp + 0x18] = a1\n 44482: a1 = 0xffffffe0\n 44492: u64 [sp + 0x10] = s1\n 44495: a1 = s1 <u a1\n 44498: s1 = u64 [sp + 0x28]\n 44501: a1 = 0 if s1 != 0\n 44503: a1 = 0 if a2 != 0\n 44505: u8 [a0 + 30] = 0\n 44508: u8 [a0 + 29] = 0\n 44511: u8 [a0 + 28] = 0\n 44514: u8 [a0 + 27] = 0\n 44517: u8 [a0 + 26] = 0\n 44520: u8 [a0 + 25] = 0\n 44523: u8 [a0 + 24] = 0\n 44526: u8 [a0 + 23] = 0\n 44529: u8 [a0 + 22] = 0\n 44532: u8 [a0 + 21] = 0\n 44535: u8 [a0 + 20] = 0\n 44538: u8 [a0 + 19] = 0\n 44541: u8 [a0 + 18] = 0\n 44544: u8 [a0 + 17] = 0\n 44547: u8 [a0 + 16] = 0\n 44550: u8 [a0 + 15] = 0\n 44553: u8 [a0 + 14] = 0\n 44556: u8 [a0 + 13] = 0\n 44559: u8 [a0 + 12] = 0\n 44562: u8 [a0 + 11] = 0\n 44565: u8 [a0 + 10] = 0\n 44568: u8 [a0 + 9] = 0\n 44571: u8 [a0 + 8] = 0\n 44574: u8 [a0 + 7] = 0\n 44577: u8 [a0 + 6] = 0\n 44580: u8 [a0 + 5] = 0\n 44583: u8 [a0 + 4] = 0\n 44586: u8 [a0 + 3] = 0\n 44589: u8 [a0 + 2] = 0\n 44592: u8 [a0 + 1] = 0\n 44595: u8 [a0 + 0] = 0\n 44597: jump @661 if a1 != 0\n      : @660 (gas: 1)\n 44600: jump @781\n      : @661 (gas: 4)\n 44603: a0 = u64 [sp + 0x20]\n 44606: i32 a0 = a0 + 0x20\n 44609: a1 = 0x20\n 44612: ra = 530, jump @0\n      : @662 [@dyn 265] (gas: 41)\n 44619: u8 [a0 + 31] = 0\n 44622: u8 [a0 + 30] = 0\n 44625: u8 [a0 + 29] = 0\n 44628: u8 [a0 + 28] = 0\n 44631: u8 [a0 + 27] = 0\n 44634: u8 [a0 + 26] = 0\n 44637: u8 [a0 + 25] = 0\n 44640: u8 [a0 + 24] = 0\n 44643: u8 [a0 + 23] = 0\n 44646: u8 [a0 + 22] = 0\n 44649: u8 [a0 + 21] = 0\n 44652: u8 [a0 + 20] = 0\n 44655: u8 [a0 + 19] = 0\n 44658: u8 [a0 + 18] = 0\n 44661: u8 [a0 + 17] = 0\n 44664: u8 [a0 + 16] = 0\n 44667: u8 [a0 + 15] = 0\n 44670: u8 [a0 + 14] = 0\n 44673: u8 [a0 + 13] = 0\n 44676: u8 [a0 + 12] = 0\n 44679: u8 [a0 + 11] = 0\n 44682: u8 [a0 + 10] = 0\n 44685: u8 [a0 + 9] = 0\n 44688: u8 [a0 + 8] = 0\n 44691: u8 [a0 + 7] = 0\n 44694: u8 [a0 + 6] = 0\n 44697: u8 [a0 + 5] = 0\n 44700: u8 [a0 + 4] = 0\n 44703: u8 [a0 + 3] = 0x64\n 44707: u8 [a0 + 2] = 0x6f\n 44711: u8 [a0 + 1] = 0x6f\n 44715: a2 = u64 [sp + 0x18]\n 44718: a2 = a2 + 0xfffffffffffffaa0\n 44722: a3 = u64 [sp + 0x68]\n 44725: a2 = a3 <u a2\n 44728: a3 = u64 [sp + 0x60]\n 44731: a2 = 0 if a3 != 0\n 44733: a3 = u64 [sp + 0x50]\n 44736: a2 = 0 if a3 != 0\n 44738: u8 [a0 + 0] = 0x67\n 44741: jump @664 if a2 != 0\n      : @663 (gas: 1)\n 44744: jump @781\n      : @664 (gas: 4)\n 44747: a0 = u64 [sp + 0x58]\n 44750: i32 a0 = a0 + 0x560\n 44754: a1 = 0x20\n 44757: ra = 532, jump @0\n      : @665 [@dyn 266] (gas: 74)\n 44764: a1 = u64 [sp + 0x30]\n 44767: a1 = reverse a1\n 44769: a2 = u64 [sp + 0x38]\n 44772: a2 = reverse a2\n 44774: a3 = reverse s1\n 44776: a4 = u64 [sp + 0x10]\n 44779: a4 = reverse a4\n 44781: a5 = a4 >> 0x38\n 44784: u8 [a0 + 0x1f] = a5\n 44787: a5 = a4 >> 0x30\n 44790: u8 [a0 + 0x1e] = a5\n 44793: a5 = a4 >> 0x28\n 44796: u8 [a0 + 0x1d] = a5\n 44799: a5 = a4 >> 0x20\n 44802: u8 [a0 + 0x1c] = a5\n 44805: a5 = a4 >> 0x18\n 44808: u8 [a0 + 0x1b] = a5\n 44811: a5 = a4 >> 0x10\n 44814: u8 [a0 + 0x1a] = a5\n 44817: a5 = a4 >> 0x8\n 44820: u8 [a0 + 0x19] = a5\n 44823: u8 [a0 + 0x18] = a4\n 44826: u8 [a0 + 0x10] = a3\n 44829: a4 = a3 >> 0x38\n 44832: u8 [a0 + 0x17] = a4\n 44835: a4 = a3 >> 0x30\n 44838: u8 [a0 + 0x16] = a4\n 44841: a4 = a3 >> 0x28\n 44844: u8 [a0 + 0x15] = a4\n 44847: a4 = a3 >> 0x20\n 44850: u8 [a0 + 0x14] = a4\n 44853: a4 = a3 >> 0x18\n 44856: u8 [a0 + 0x13] = a4\n 44859: a4 = a3 >> 0x10\n 44862: u8 [a0 + 0x12] = a4\n 44865: a3 = a3 >> 0x8\n 44868: u8 [a0 + 0x11] = a3\n 44871: u8 [a0 + 0x8] = a2\n 44874: a3 = a2 >> 0x38\n 44877: u8 [a0 + 0xf] = a3\n 44880: a3 = a2 >> 0x30\n 44883: u8 [a0 + 0xe] = a3\n 44886: a3 = a2 >> 0x28\n 44889: u8 [a0 + 0xd] = a3\n 44892: a3 = a2 >> 0x20\n 44895: u8 [a0 + 0xc] = a3\n 44898: a3 = a2 >> 0x18\n 44901: u8 [a0 + 0xb] = a3\n 44904: a3 = a2 >> 0x10\n 44907: u8 [a0 + 0xa] = a3\n 44910: a2 = a2 >> 0x8\n 44913: u8 [a0 + 0x9] = a2\n 44916: u8 [a0] = a1\n 44918: a2 = a1 >> 0x38\n 44921: u8 [a0 + 0x7] = a2\n 44924: a2 = a1 >> 0x30\n 44927: u8 [a0 + 0x6] = a2\n 44930: a2 = a1 >> 0x28\n 44933: u8 [a0 + 0x5] = a2\n 44936: a2 = a1 >> 0x20\n 44939: u8 [a0 + 0x4] = a2\n 44942: a2 = a1 >> 0x18\n 44945: u8 [a0 + 0x3] = a2\n 44948: a2 = a1 >> 0x10\n 44951: u8 [a0 + 0x2] = a2\n 44954: a1 = a1 >> 0x8\n 44957: u8 [a0 + 0x1] = a1\n 44960: u64 [sp + 968] = 0\n 44964: u64 [sp + 960] = 0\n 44968: u64 [sp + 944] = 0x40\n 44973: a0 = sp + 0x3d0\n 44977: a1 = sp + 0x3b0\n 44981: u64 [sp + 952] = 0\n 44985: ra = 534, jump @56\n      : @666 [@dyn 267] (gas: 15)\n 44992: a1 = u64 [sp + 0x3e8]\n 44996: a2 = u64 [sp + 0x3e0]\n 45000: a0 = u64 [sp + 0x3d8]\n 45004: s1 = u64 [sp + 0x3d0]\n 45008: u64 [sp + 0x28] = a0\n 45011: u64 [sp + 0x30] = a1\n 45014: a0 = a0 | a1\n 45017: a1 = s1 | a2\n 45020: a1 = a1 | a0\n 45023: a1 = a1 >> 0x20\n 45026: u64 [sp + 0x38] = a2\n 45029: a0 = a0 | a2\n 45032: a0 = a0 << 0x20\n 45035: a0 = a0 | a1\n 45038: jump @668 if a0 == 0\n      : @667 (gas: 1)\n 45041: jump @781\n      : @668 (gas: 4)\n 45044: i32 a0 = s1 + 0\n 45046: a1 = 0x20\n 45049: u64 [sp + 0x18] = a0\n 45052: ra = 536, jump @0\n      : @669 [@dyn 268] (gas: 44)\n 45059: u8 [a0 + 31] = 0x8\n 45063: a1 = u64 [sp + 0x30]\n 45066: a2 = u64 [sp + 0x38]\n 45069: a2 = a2 | a1\n 45072: a1 = 0x100000000\n 45082: u64 [sp + 0x20] = a1\n 45085: a1 = 0xffffffe0\n 45095: u64 [sp + 0x10] = s1\n 45098: a1 = s1 <u a1\n 45101: s1 = u64 [sp + 0x28]\n 45104: a1 = 0 if s1 != 0\n 45106: a1 = 0 if a2 != 0\n 45108: u8 [a0 + 30] = 0\n 45111: u8 [a0 + 29] = 0\n 45114: u8 [a0 + 28] = 0\n 45117: u8 [a0 + 27] = 0\n 45120: u8 [a0 + 26] = 0\n 45123: u8 [a0 + 25] = 0\n 45126: u8 [a0 + 24] = 0\n 45129: u8 [a0 + 23] = 0\n 45132: u8 [a0 + 22] = 0\n 45135: u8 [a0 + 21] = 0\n 45138: u8 [a0 + 20] = 0\n 45141: u8 [a0 + 19] = 0\n 45144: u8 [a0 + 18] = 0\n 45147: u8 [a0 + 17] = 0\n 45150: u8 [a0 + 16] = 0\n 45153: u8 [a0 + 15] = 0\n 45156: u8 [a0 + 14] = 0\n 45159: u8 [a0 + 13] = 0\n 45162: u8 [a0 + 12] = 0\n 45165: u8 [a0 + 11] = 0\n 45168: u8 [a0 + 10] = 0\n 45171: u8 [a0 + 9] = 0\n 45174: u8 [a0 + 8] = 0\n 45177: u8 [a0 + 7] = 0\n 45180: u8 [a0 + 6] = 0\n 45183: u8 [a0 + 5] = 0\n 45186: u8 [a0 + 4] = 0\n 45189: u8 [a0 + 3] = 0\n 45192: u8 [a0 + 2] = 0\n 45195: u8 [a0 + 1] = 0\n 45198: u8 [a0 + 0] = 0\n 45200: jump @671 if a1 != 0\n      : @670 (gas: 1)\n 45203: jump @781\n      : @671 (gas: 4)\n 45206: a0 = u64 [sp + 0x18]\n 45209: i32 a0 = a0 + 0x20\n 45212: a1 = 0x20\n 45215: ra = 538, jump @0\n      : @672 [@dyn 269] (gas: 41)\n 45222: u8 [a0 + 31] = 0\n 45225: u8 [a0 + 30] = 0\n 45228: u8 [a0 + 29] = 0\n 45231: u8 [a0 + 28] = 0\n 45234: u8 [a0 + 27] = 0\n 45237: u8 [a0 + 26] = 0\n 45240: u8 [a0 + 25] = 0\n 45243: u8 [a0 + 24] = 0\n 45246: u8 [a0 + 23] = 0\n 45249: u8 [a0 + 22] = 0\n 45252: u8 [a0 + 21] = 0\n 45255: u8 [a0 + 20] = 0\n 45258: u8 [a0 + 19] = 0\n 45261: u8 [a0 + 18] = 0\n 45264: u8 [a0 + 17] = 0\n 45267: u8 [a0 + 16] = 0\n 45270: u8 [a0 + 15] = 0\n 45273: u8 [a0 + 14] = 0\n 45276: u8 [a0 + 13] = 0\n 45279: u8 [a0 + 12] = 0\n 45282: u8 [a0 + 11] = 0\n 45285: u8 [a0 + 10] = 0\n 45288: u8 [a0 + 9] = 0\n 45291: u8 [a0 + 8] = 0\n 45294: u8 [a0 + 7] = 0x73\n 45298: u8 [a0 + 6] = 0x75\n 45302: u8 [a0 + 5] = 0x6f\n 45306: u8 [a0 + 4] = 0x65\n 45310: u8 [a0 + 3] = 0x67\n 45314: u8 [a0 + 2] = 0x72\n 45318: u8 [a0 + 1] = 0x6f\n 45322: a1 = u64 [sp + 0x20]\n 45325: a1 = a1 + 0xfffffffffffffa80\n 45329: a3 = u64 [sp + 0x68]\n 45332: a1 = a3 <u a1\n 45335: a3 = u64 [sp + 0x60]\n 45338: a1 = 0 if a3 != 0\n 45340: a3 = u64 [sp + 0x50]\n 45343: a1 = 0 if a3 != 0\n 45345: u8 [a0 + 0] = 0x67\n 45348: jump @674 if a1 != 0\n      : @673 (gas: 1)\n 45351: jump @781\n      : @674 (gas: 4)\n 45354: a0 = u64 [sp + 0x58]\n 45357: i32 a0 = a0 + 0x580\n 45361: a1 = 0x20\n 45364: ra = 540, jump @0\n      : @675 [@dyn 270] (gas: 74)\n 45371: a1 = u64 [sp + 0x30]\n 45374: a1 = reverse a1\n 45376: a2 = u64 [sp + 0x38]\n 45379: a2 = reverse a2\n 45381: a3 = reverse s1\n 45383: a4 = u64 [sp + 0x10]\n 45386: a4 = reverse a4\n 45388: a5 = a4 >> 0x38\n 45391: u8 [a0 + 0x1f] = a5\n 45394: a5 = a4 >> 0x30\n 45397: u8 [a0 + 0x1e] = a5\n 45400: a5 = a4 >> 0x28\n 45403: u8 [a0 + 0x1d] = a5\n 45406: a5 = a4 >> 0x20\n 45409: u8 [a0 + 0x1c] = a5\n 45412: a5 = a4 >> 0x18\n 45415: u8 [a0 + 0x1b] = a5\n 45418: a5 = a4 >> 0x10\n 45421: u8 [a0 + 0x1a] = a5\n 45424: a5 = a4 >> 0x8\n 45427: u8 [a0 + 0x19] = a5\n 45430: u8 [a0 + 0x18] = a4\n 45433: u8 [a0 + 0x10] = a3\n 45436: a4 = a3 >> 0x38\n 45439: u8 [a0 + 0x17] = a4\n 45442: a4 = a3 >> 0x30\n 45445: u8 [a0 + 0x16] = a4\n 45448: a4 = a3 >> 0x28\n 45451: u8 [a0 + 0x15] = a4\n 45454: a4 = a3 >> 0x20\n 45457: u8 [a0 + 0x14] = a4\n 45460: a4 = a3 >> 0x18\n 45463: u8 [a0 + 0x13] = a4\n 45466: a4 = a3 >> 0x10\n 45469: u8 [a0 + 0x12] = a4\n 45472: a3 = a3 >> 0x8\n 45475: u8 [a0 + 0x11] = a3\n 45478: u8 [a0 + 0x8] = a2\n 45481: a3 = a2 >> 0x38\n 45484: u8 [a0 + 0xf] = a3\n 45487: a3 = a2 >> 0x30\n 45490: u8 [a0 + 0xe] = a3\n 45493: a3 = a2 >> 0x28\n 45496: u8 [a0 + 0xd] = a3\n 45499: a3 = a2 >> 0x20\n 45502: u8 [a0 + 0xc] = a3\n 45505: a3 = a2 >> 0x18\n 45508: u8 [a0 + 0xb] = a3\n 45511: a3 = a2 >> 0x10\n 45514: u8 [a0 + 0xa] = a3\n 45517: a2 = a2 >> 0x8\n 45520: u8 [a0 + 0x9] = a2\n 45523: u8 [a0] = a1\n 45525: a2 = a1 >> 0x38\n 45528: u8 [a0 + 0x7] = a2\n 45531: a2 = a1 >> 0x30\n 45534: u8 [a0 + 0x6] = a2\n 45537: a2 = a1 >> 0x28\n 45540: u8 [a0 + 0x5] = a2\n 45543: a2 = a1 >> 0x20\n 45546: u8 [a0 + 0x4] = a2\n 45549: a2 = a1 >> 0x18\n 45552: u8 [a0 + 0x3] = a2\n 45555: a2 = a1 >> 0x10\n 45558: u8 [a0 + 0x2] = a2\n 45561: a1 = a1 >> 0x8\n 45564: u8 [a0 + 0x1] = a1\n 45567: u64 [sp + 904] = 0\n 45571: u64 [sp + 896] = 0\n 45575: u64 [sp + 880] = 0x40\n 45580: a0 = sp + 0x390\n 45584: a1 = sp + 0x370\n 45588: u64 [sp + 888] = 0\n 45592: ra = 542, jump @56\n      : @676 [@dyn 271] (gas: 15)\n 45599: a1 = u64 [sp + 0x3a8]\n 45603: a2 = u64 [sp + 0x3a0]\n 45607: a0 = u64 [sp + 0x398]\n 45611: s1 = u64 [sp + 0x390]\n 45615: u64 [sp + 0x28] = a0\n 45618: u64 [sp + 0x30] = a1\n 45621: a0 = a0 | a1\n 45624: a1 = s1 | a2\n 45627: a1 = a1 | a0\n 45630: a1 = a1 >> 0x20\n 45633: u64 [sp + 0x38] = a2\n 45636: a0 = a0 | a2\n 45639: a0 = a0 << 0x20\n 45642: a0 = a0 | a1\n 45645: jump @678 if a0 == 0\n      : @677 (gas: 1)\n 45648: jump @781\n      : @678 (gas: 4)\n 45651: i32 a0 = s1 + 0\n 45653: a1 = 0x20\n 45656: u64 [sp + 0x18] = a0\n 45659: ra = 544, jump @0\n      : @679 [@dyn 272] (gas: 44)\n 45666: u8 [a0 + 31] = 0x8\n 45670: a1 = u64 [sp + 0x30]\n 45673: a2 = u64 [sp + 0x38]\n 45676: a2 = a2 | a1\n 45679: a1 = 0x100000000\n 45689: u64 [sp + 0x20] = a1\n 45692: a1 = 0xffffffe0\n 45702: u64 [sp + 0x10] = s1\n 45705: a1 = s1 <u a1\n 45708: s1 = u64 [sp + 0x28]\n 45711: a1 = 0 if s1 != 0\n 45713: a1 = 0 if a2 != 0\n 45715: u8 [a0 + 30] = 0\n 45718: u8 [a0 + 29] = 0\n 45721: u8 [a0 + 28] = 0\n 45724: u8 [a0 + 27] = 0\n 45727: u8 [a0 + 26] = 0\n 45730: u8 [a0 + 25] = 0\n 45733: u8 [a0 + 24] = 0\n 45736: u8 [a0 + 23] = 0\n 45739: u8 [a0 + 22] = 0\n 45742: u8 [a0 + 21] = 0\n 45745: u8 [a0 + 20] = 0\n 45748: u8 [a0 + 19] = 0\n 45751: u8 [a0 + 18] = 0\n 45754: u8 [a0 + 17] = 0\n 45757: u8 [a0 + 16] = 0\n 45760: u8 [a0 + 15] = 0\n 45763: u8 [a0 + 14] = 0\n 45766: u8 [a0 + 13] = 0\n 45769: u8 [a0 + 12] = 0\n 45772: u8 [a0 + 11] = 0\n 45775: u8 [a0 + 10] = 0\n 45778: u8 [a0 + 9] = 0\n 45781: u8 [a0 + 8] = 0\n 45784: u8 [a0 + 7] = 0\n 45787: u8 [a0 + 6] = 0\n 45790: u8 [a0 + 5] = 0\n 45793: u8 [a0 + 4] = 0\n 45796: u8 [a0 + 3] = 0\n 45799: u8 [a0 + 2] = 0\n 45802: u8 [a0 + 1] = 0\n 45805: u8 [a0 + 0] = 0\n 45807: jump @681 if a1 != 0\n      : @680 (gas: 1)\n 45810: jump @781\n      : @681 (gas: 4)\n 45813: a0 = u64 [sp + 0x18]\n 45816: i32 a0 = a0 + 0x20\n 45819: a1 = 0x20\n 45822: ra = 546, jump @0\n      : @682 [@dyn 273] (gas: 41)\n 45829: u8 [a0 + 31] = 0\n 45832: u8 [a0 + 30] = 0\n 45835: u8 [a0 + 29] = 0\n 45838: u8 [a0 + 28] = 0\n 45841: u8 [a0 + 27] = 0\n 45844: u8 [a0 + 26] = 0\n 45847: u8 [a0 + 25] = 0\n 45850: u8 [a0 + 24] = 0\n 45853: u8 [a0 + 23] = 0\n 45856: u8 [a0 + 22] = 0\n 45859: u8 [a0 + 21] = 0\n 45862: u8 [a0 + 20] = 0\n 45865: u8 [a0 + 19] = 0\n 45868: u8 [a0 + 18] = 0\n 45871: u8 [a0 + 17] = 0\n 45874: u8 [a0 + 16] = 0\n 45877: u8 [a0 + 15] = 0\n 45880: u8 [a0 + 14] = 0\n 45883: u8 [a0 + 13] = 0\n 45886: u8 [a0 + 12] = 0\n 45889: u8 [a0 + 11] = 0\n 45892: u8 [a0 + 10] = 0\n 45895: u8 [a0 + 9] = 0\n 45898: u8 [a0 + 8] = 0\n 45901: u8 [a0 + 7] = 0x6c\n 45905: u8 [a0 + 6] = 0x75\n 45909: u8 [a0 + 5] = 0x66\n 45913: u8 [a0 + 4] = 0x65\n 45917: u8 [a0 + 3] = 0x63\n 45921: u8 [a0 + 2] = 0x61\n 45925: u8 [a0 + 1] = 0x72\n 45929: a2 = u64 [sp + 0x20]\n 45932: a2 = a2 + 0xfffffffffffffa60\n 45936: a3 = u64 [sp + 0x68]\n 45939: a2 = a3 <u a2\n 45942: a3 = u64 [sp + 0x60]\n 45945: a2 = 0 if a3 != 0\n 45947: a3 = u64 [sp + 0x50]\n 45950: a2 = 0 if a3 != 0\n 45952: u8 [a0 + 0] = 0x67\n 45955: jump @684 if a2 != 0\n      : @683 (gas: 1)\n 45958: jump @781\n      : @684 (gas: 4)\n 45961: a0 = u64 [sp + 0x58]\n 45964: i32 a0 = a0 + 0x5a0\n 45968: a1 = 0x20\n 45971: ra = 548, jump @0\n      : @685 [@dyn 274] (gas: 74)\n 45978: a1 = u64 [sp + 0x30]\n 45981: a1 = reverse a1\n 45983: a2 = u64 [sp + 0x38]\n 45986: a2 = reverse a2\n 45988: a3 = reverse s1\n 45990: a4 = u64 [sp + 0x10]\n 45993: a4 = reverse a4\n 45995: a5 = a4 >> 0x38\n 45998: u8 [a0 + 0x1f] = a5\n 46001: a5 = a4 >> 0x30\n 46004: u8 [a0 + 0x1e] = a5\n 46007: a5 = a4 >> 0x28\n 46010: u8 [a0 + 0x1d] = a5\n 46013: a5 = a4 >> 0x20\n 46016: u8 [a0 + 0x1c] = a5\n 46019: a5 = a4 >> 0x18\n 46022: u8 [a0 + 0x1b] = a5\n 46025: a5 = a4 >> 0x10\n 46028: u8 [a0 + 0x1a] = a5\n 46031: a5 = a4 >> 0x8\n 46034: u8 [a0 + 0x19] = a5\n 46037: u8 [a0 + 0x18] = a4\n 46040: u8 [a0 + 0x10] = a3\n 46043: a4 = a3 >> 0x38\n 46046: u8 [a0 + 0x17] = a4\n 46049: a4 = a3 >> 0x30\n 46052: u8 [a0 + 0x16] = a4\n 46055: a4 = a3 >> 0x28\n 46058: u8 [a0 + 0x15] = a4\n 46061: a4 = a3 >> 0x20\n 46064: u8 [a0 + 0x14] = a4\n 46067: a4 = a3 >> 0x18\n 46070: u8 [a0 + 0x13] = a4\n 46073: a4 = a3 >> 0x10\n 46076: u8 [a0 + 0x12] = a4\n 46079: a3 = a3 >> 0x8\n 46082: u8 [a0 + 0x11] = a3\n 46085: u8 [a0 + 0x8] = a2\n 46088: a3 = a2 >> 0x38\n 46091: u8 [a0 + 0xf] = a3\n 46094: a3 = a2 >> 0x30\n 46097: u8 [a0 + 0xe] = a3\n 46100: a3 = a2 >> 0x28\n 46103: u8 [a0 + 0xd] = a3\n 46106: a3 = a2 >> 0x20\n 46109: u8 [a0 + 0xc] = a3\n 46112: a3 = a2 >> 0x18\n 46115: u8 [a0 + 0xb] = a3\n 46118: a3 = a2 >> 0x10\n 46121: u8 [a0 + 0xa] = a3\n 46124: a2 = a2 >> 0x8\n 46127: u8 [a0 + 0x9] = a2\n 46130: u8 [a0] = a1\n 46132: a2 = a1 >> 0x38\n 46135: u8 [a0 + 0x7] = a2\n 46138: a2 = a1 >> 0x30\n 46141: u8 [a0 + 0x6] = a2\n 46144: a2 = a1 >> 0x28\n 46147: u8 [a0 + 0x5] = a2\n 46150: a2 = a1 >> 0x20\n 46153: u8 [a0 + 0x4] = a2\n 46156: a2 = a1 >> 0x18\n 46159: u8 [a0 + 0x3] = a2\n 46162: a2 = a1 >> 0x10\n 46165: u8 [a0 + 0x2] = a2\n 46168: a1 = a1 >> 0x8\n 46171: u8 [a0 + 0x1] = a1\n 46174: u64 [sp + 840] = 0\n 46178: u64 [sp + 832] = 0\n 46182: u64 [sp + 816] = 0x40\n 46187: a0 = sp + 0x350\n 46191: a1 = sp + 0x330\n 46195: u64 [sp + 824] = 0\n 46199: ra = 550, jump @56\n      : @686 [@dyn 275] (gas: 15)\n 46206: a1 = u64 [sp + 0x368]\n 46210: a2 = u64 [sp + 0x360]\n 46214: a0 = u64 [sp + 0x358]\n 46218: s1 = u64 [sp + 0x350]\n 46222: u64 [sp + 0x28] = a0\n 46225: u64 [sp + 0x30] = a1\n 46228: a0 = a0 | a1\n 46231: a1 = s1 | a2\n 46234: a1 = a1 | a0\n 46237: a1 = a1 >> 0x20\n 46240: u64 [sp + 0x38] = a2\n 46243: a0 = a0 | a2\n 46246: a0 = a0 << 0x20\n 46249: a0 = a0 | a1\n 46252: jump @688 if a0 == 0\n      : @687 (gas: 1)\n 46255: jump @781\n      : @688 (gas: 4)\n 46258: i32 a0 = s1 + 0\n 46260: a1 = 0x20\n 46263: u64 [sp + 0x18] = a0\n 46266: ra = 552, jump @0\n      : @689 [@dyn 276] (gas: 44)\n 46273: u8 [a0 + 31] = 0x5\n 46277: a1 = u64 [sp + 0x30]\n 46280: a2 = u64 [sp + 0x38]\n 46283: a2 = a2 | a1\n 46286: a1 = 0x100000000\n 46296: u64 [sp + 0x20] = a1\n 46299: a1 = 0xffffffe0\n 46309: u64 [sp + 0x10] = s1\n 46312: a1 = s1 <u a1\n 46315: s1 = u64 [sp + 0x28]\n 46318: a1 = 0 if s1 != 0\n 46320: a1 = 0 if a2 != 0\n 46322: u8 [a0 + 30] = 0\n 46325: u8 [a0 + 29] = 0\n 46328: u8 [a0 + 28] = 0\n 46331: u8 [a0 + 27] = 0\n 46334: u8 [a0 + 26] = 0\n 46337: u8 [a0 + 25] = 0\n 46340: u8 [a0 + 24] = 0\n 46343: u8 [a0 + 23] = 0\n 46346: u8 [a0 + 22] = 0\n 46349: u8 [a0 + 21] = 0\n 46352: u8 [a0 + 20] = 0\n 46355: u8 [a0 + 19] = 0\n 46358: u8 [a0 + 18] = 0\n 46361: u8 [a0 + 17] = 0\n 46364: u8 [a0 + 16] = 0\n 46367: u8 [a0 + 15] = 0\n 46370: u8 [a0 + 14] = 0\n 46373: u8 [a0 + 13] = 0\n 46376: u8 [a0 + 12] = 0\n 46379: u8 [a0 + 11] = 0\n 46382: u8 [a0 + 10] = 0\n 46385: u8 [a0 + 9] = 0\n 46388: u8 [a0 + 8] = 0\n 46391: u8 [a0 + 7] = 0\n 46394: u8 [a0 + 6] = 0\n 46397: u8 [a0 + 5] = 0\n 46400: u8 [a0 + 4] = 0\n 46403: u8 [a0 + 3] = 0\n 46406: u8 [a0 + 2] = 0\n 46409: u8 [a0 + 1] = 0\n 46412: u8 [a0 + 0] = 0\n 46414: jump @691 if a1 != 0\n      : @690 (gas: 1)\n 46417: jump @781\n      : @691 (gas: 4)\n 46420: a0 = u64 [sp + 0x18]\n 46423: i32 a0 = a0 + 0x20\n 46426: a1 = 0x20\n 46429: ra = 554, jump @0\n      : @692 [@dyn 277] (gas: 41)\n 46436: u8 [a0 + 31] = 0\n 46439: u8 [a0 + 30] = 0\n 46442: u8 [a0 + 29] = 0\n 46445: u8 [a0 + 28] = 0\n 46448: u8 [a0 + 27] = 0\n 46451: u8 [a0 + 26] = 0\n 46454: u8 [a0 + 25] = 0\n 46457: u8 [a0 + 24] = 0\n 46460: u8 [a0 + 23] = 0\n 46463: u8 [a0 + 22] = 0\n 46466: u8 [a0 + 21] = 0\n 46469: u8 [a0 + 20] = 0\n 46472: u8 [a0 + 19] = 0\n 46475: u8 [a0 + 18] = 0\n 46478: u8 [a0 + 17] = 0\n 46481: u8 [a0 + 16] = 0\n 46484: u8 [a0 + 15] = 0\n 46487: u8 [a0 + 14] = 0\n 46490: u8 [a0 + 13] = 0\n 46493: u8 [a0 + 12] = 0\n 46496: u8 [a0 + 11] = 0\n 46499: u8 [a0 + 10] = 0\n 46502: u8 [a0 + 9] = 0\n 46505: u8 [a0 + 8] = 0\n 46508: u8 [a0 + 7] = 0\n 46511: u8 [a0 + 6] = 0\n 46514: u8 [a0 + 5] = 0\n 46517: u8 [a0 + 4] = 0x74\n 46521: u8 [a0 + 3] = 0x61\n 46525: u8 [a0 + 2] = 0x65\n 46529: u8 [a0 + 1] = 0x72\n 46533: a2 = u64 [sp + 0x20]\n 46536: a2 = a2 + 0xfffffffffffffa40\n 46540: a3 = u64 [sp + 0x68]\n 46543: a2 = a3 <u a2\n 46546: a3 = u64 [sp + 0x60]\n 46549: a2 = 0 if a3 != 0\n 46551: a3 = u64 [sp + 0x50]\n 46554: a2 = 0 if a3 != 0\n 46556: u8 [a0 + 0] = 0x67\n 46559: jump @694 if a2 != 0\n      : @693 (gas: 1)\n 46562: jump @781\n      : @694 (gas: 4)\n 46565: a0 = u64 [sp + 0x58]\n 46568: i32 a0 = a0 + 0x5c0\n 46572: a1 = 0x20\n 46575: ra = 556, jump @0\n      : @695 [@dyn 278] (gas: 74)\n 46582: a1 = u64 [sp + 0x30]\n 46585: a1 = reverse a1\n 46587: a2 = u64 [sp + 0x38]\n 46590: a2 = reverse a2\n 46592: a3 = reverse s1\n 46594: a4 = u64 [sp + 0x10]\n 46597: a4 = reverse a4\n 46599: a5 = a4 >> 0x38\n 46602: u8 [a0 + 0x1f] = a5\n 46605: a5 = a4 >> 0x30\n 46608: u8 [a0 + 0x1e] = a5\n 46611: a5 = a4 >> 0x28\n 46614: u8 [a0 + 0x1d] = a5\n 46617: a5 = a4 >> 0x20\n 46620: u8 [a0 + 0x1c] = a5\n 46623: a5 = a4 >> 0x18\n 46626: u8 [a0 + 0x1b] = a5\n 46629: a5 = a4 >> 0x10\n 46632: u8 [a0 + 0x1a] = a5\n 46635: a5 = a4 >> 0x8\n 46638: u8 [a0 + 0x19] = a5\n 46641: u8 [a0 + 0x18] = a4\n 46644: u8 [a0 + 0x10] = a3\n 46647: a4 = a3 >> 0x38\n 46650: u8 [a0 + 0x17] = a4\n 46653: a4 = a3 >> 0x30\n 46656: u8 [a0 + 0x16] = a4\n 46659: a4 = a3 >> 0x28\n 46662: u8 [a0 + 0x15] = a4\n 46665: a4 = a3 >> 0x20\n 46668: u8 [a0 + 0x14] = a4\n 46671: a4 = a3 >> 0x18\n 46674: u8 [a0 + 0x13] = a4\n 46677: a4 = a3 >> 0x10\n 46680: u8 [a0 + 0x12] = a4\n 46683: a3 = a3 >> 0x8\n 46686: u8 [a0 + 0x11] = a3\n 46689: u8 [a0 + 0x8] = a2\n 46692: a3 = a2 >> 0x38\n 46695: u8 [a0 + 0xf] = a3\n 46698: a3 = a2 >> 0x30\n 46701: u8 [a0 + 0xe] = a3\n 46704: a3 = a2 >> 0x28\n 46707: u8 [a0 + 0xd] = a3\n 46710: a3 = a2 >> 0x20\n 46713: u8 [a0 + 0xc] = a3\n 46716: a3 = a2 >> 0x18\n 46719: u8 [a0 + 0xb] = a3\n 46722: a3 = a2 >> 0x10\n 46725: u8 [a0 + 0xa] = a3\n 46728: a2 = a2 >> 0x8\n 46731: u8 [a0 + 0x9] = a2\n 46734: u8 [a0] = a1\n 46736: a2 = a1 >> 0x38\n 46739: u8 [a0 + 0x7] = a2\n 46742: a2 = a1 >> 0x30\n 46745: u8 [a0 + 0x6] = a2\n 46748: a2 = a1 >> 0x28\n 46751: u8 [a0 + 0x5] = a2\n 46754: a2 = a1 >> 0x20\n 46757: u8 [a0 + 0x4] = a2\n 46760: a2 = a1 >> 0x18\n 46763: u8 [a0 + 0x3] = a2\n 46766: a2 = a1 >> 0x10\n 46769: u8 [a0 + 0x2] = a2\n 46772: a1 = a1 >> 0x8\n 46775: u8 [a0 + 0x1] = a1\n 46778: u64 [sp + 776] = 0\n 46782: u64 [sp + 768] = 0\n 46786: u64 [sp + 752] = 0x40\n 46791: a0 = sp + 0x310\n 46795: a1 = sp + 0x2f0\n 46799: u64 [sp + 760] = 0\n 46803: ra = 558, jump @56\n      : @696 [@dyn 279] (gas: 15)\n 46810: a1 = u64 [sp + 0x328]\n 46814: a2 = u64 [sp + 0x320]\n 46818: a0 = u64 [sp + 0x318]\n 46822: s1 = u64 [sp + 0x310]\n 46826: u64 [sp + 0x28] = a0\n 46829: u64 [sp + 0x30] = a1\n 46832: a0 = a0 | a1\n 46835: a1 = s1 | a2\n 46838: a1 = a1 | a0\n 46841: a1 = a1 >> 0x20\n 46844: u64 [sp + 0x38] = a2\n 46847: a0 = a0 | a2\n 46850: a0 = a0 << 0x20\n 46853: a0 = a0 | a1\n 46856: jump @698 if a0 == 0\n      : @697 (gas: 1)\n 46859: jump @781\n      : @698 (gas: 4)\n 46862: i32 a0 = s1 + 0\n 46864: a1 = 0x20\n 46867: u64 [sp + 0x18] = a0\n 46870: ra = 560, jump @0\n      : @699 [@dyn 280] (gas: 44)\n 46877: u8 [a0 + 31] = 0x5\n 46881: a1 = u64 [sp + 0x30]\n 46884: a2 = u64 [sp + 0x38]\n 46887: a2 = a2 | a1\n 46890: a1 = 0x100000000\n 46900: u64 [sp + 0x20] = a1\n 46903: a1 = 0xffffffe0\n 46913: u64 [sp + 0x10] = s1\n 46916: a1 = s1 <u a1\n 46919: s1 = u64 [sp + 0x28]\n 46922: a1 = 0 if s1 != 0\n 46924: a1 = 0 if a2 != 0\n 46926: u8 [a0 + 30] = 0\n 46929: u8 [a0 + 29] = 0\n 46932: u8 [a0 + 28] = 0\n 46935: u8 [a0 + 27] = 0\n 46938: u8 [a0 + 26] = 0\n 46941: u8 [a0 + 25] = 0\n 46944: u8 [a0 + 24] = 0\n 46947: u8 [a0 + 23] = 0\n 46950: u8 [a0 + 22] = 0\n 46953: u8 [a0 + 21] = 0\n 46956: u8 [a0 + 20] = 0\n 46959: u8 [a0 + 19] = 0\n 46962: u8 [a0 + 18] = 0\n 46965: u8 [a0 + 17] = 0\n 46968: u8 [a0 + 16] = 0\n 46971: u8 [a0 + 15] = 0\n 46974: u8 [a0 + 14] = 0\n 46977: u8 [a0 + 13] = 0\n 46980: u8 [a0 + 12] = 0\n 46983: u8 [a0 + 11] = 0\n 46986: u8 [a0 + 10] = 0\n 46989: u8 [a0 + 9] = 0\n 46992: u8 [a0 + 8] = 0\n 46995: u8 [a0 + 7] = 0\n 46998: u8 [a0 + 6] = 0\n 47001: u8 [a0 + 5] = 0\n 47004: u8 [a0 + 4] = 0\n 47007: u8 [a0 + 3] = 0\n 47010: u8 [a0 + 2] = 0\n 47013: u8 [a0 + 1] = 0\n 47016: u8 [a0 + 0] = 0\n 47018: jump @701 if a1 != 0\n      : @700 (gas: 1)\n 47021: jump @781\n      : @701 (gas: 4)\n 47024: a0 = u64 [sp + 0x18]\n 47027: i32 a0 = a0 + 0x20\n 47030: a1 = 0x20\n 47033: ra = 562, jump @0\n      : @702 [@dyn 281] (gas: 41)\n 47040: u8 [a0 + 31] = 0\n 47043: u8 [a0 + 30] = 0\n 47046: u8 [a0 + 29] = 0\n 47049: u8 [a0 + 28] = 0\n 47052: u8 [a0 + 27] = 0\n 47055: u8 [a0 + 26] = 0\n 47058: u8 [a0 + 25] = 0\n 47061: u8 [a0 + 24] = 0\n 47064: u8 [a0 + 23] = 0\n 47067: u8 [a0 + 22] = 0\n 47070: u8 [a0 + 21] = 0\n 47073: u8 [a0 + 20] = 0\n 47076: u8 [a0 + 19] = 0\n 47079: u8 [a0 + 18] = 0\n 47082: u8 [a0 + 17] = 0\n 47085: u8 [a0 + 16] = 0\n 47088: u8 [a0 + 15] = 0\n 47091: u8 [a0 + 14] = 0\n 47094: u8 [a0 + 13] = 0\n 47097: u8 [a0 + 12] = 0\n 47100: u8 [a0 + 11] = 0\n 47103: u8 [a0 + 10] = 0\n 47106: u8 [a0 + 9] = 0\n 47109: u8 [a0 + 8] = 0\n 47112: u8 [a0 + 7] = 0\n 47115: u8 [a0 + 6] = 0\n 47118: u8 [a0 + 5] = 0\n 47121: u8 [a0 + 4] = 0x79\n 47125: u8 [a0 + 3] = 0x70\n 47129: u8 [a0 + 2] = 0x70\n 47133: u8 [a0 + 1] = 0x61\n 47137: a2 = u64 [sp + 0x20]\n 47140: a2 = a2 + 0xfffffffffffffa20\n 47144: a3 = u64 [sp + 0x68]\n 47147: a2 = a3 <u a2\n 47150: a3 = u64 [sp + 0x60]\n 47153: a2 = 0 if a3 != 0\n 47155: a3 = u64 [sp + 0x50]\n 47158: a2 = 0 if a3 != 0\n 47160: u8 [a0 + 0] = 0x68\n 47163: jump @704 if a2 != 0\n      : @703 (gas: 1)\n 47166: jump @781\n      : @704 (gas: 4)\n 47169: a0 = u64 [sp + 0x58]\n 47172: i32 a0 = a0 + 0x5e0\n 47176: a1 = 0x20\n 47179: ra = 564, jump @0\n      : @705 [@dyn 282] (gas: 74)\n 47186: a1 = u64 [sp + 0x30]\n 47189: a1 = reverse a1\n 47191: a2 = u64 [sp + 0x38]\n 47194: a2 = reverse a2\n 47196: a3 = reverse s1\n 47198: a4 = u64 [sp + 0x10]\n 47201: a4 = reverse a4\n 47203: a5 = a4 >> 0x38\n 47206: u8 [a0 + 0x1f] = a5\n 47209: a5 = a4 >> 0x30\n 47212: u8 [a0 + 0x1e] = a5\n 47215: a5 = a4 >> 0x28\n 47218: u8 [a0 + 0x1d] = a5\n 47221: a5 = a4 >> 0x20\n 47224: u8 [a0 + 0x1c] = a5\n 47227: a5 = a4 >> 0x18\n 47230: u8 [a0 + 0x1b] = a5\n 47233: a5 = a4 >> 0x10\n 47236: u8 [a0 + 0x1a] = a5\n 47239: a5 = a4 >> 0x8\n 47242: u8 [a0 + 0x19] = a5\n 47245: u8 [a0 + 0x18] = a4\n 47248: u8 [a0 + 0x10] = a3\n 47251: a4 = a3 >> 0x38\n 47254: u8 [a0 + 0x17] = a4\n 47257: a4 = a3 >> 0x30\n 47260: u8 [a0 + 0x16] = a4\n 47263: a4 = a3 >> 0x28\n 47266: u8 [a0 + 0x15] = a4\n 47269: a4 = a3 >> 0x20\n 47272: u8 [a0 + 0x14] = a4\n 47275: a4 = a3 >> 0x18\n 47278: u8 [a0 + 0x13] = a4\n 47281: a4 = a3 >> 0x10\n 47284: u8 [a0 + 0x12] = a4\n 47287: a3 = a3 >> 0x8\n 47290: u8 [a0 + 0x11] = a3\n 47293: u8 [a0 + 0x8] = a2\n 47296: a3 = a2 >> 0x38\n 47299: u8 [a0 + 0xf] = a3\n 47302: a3 = a2 >> 0x30\n 47305: u8 [a0 + 0xe] = a3\n 47308: a3 = a2 >> 0x28\n 47311: u8 [a0 + 0xd] = a3\n 47314: a3 = a2 >> 0x20\n 47317: u8 [a0 + 0xc] = a3\n 47320: a3 = a2 >> 0x18\n 47323: u8 [a0 + 0xb] = a3\n 47326: a3 = a2 >> 0x10\n 47329: u8 [a0 + 0xa] = a3\n 47332: a2 = a2 >> 0x8\n 47335: u8 [a0 + 0x9] = a2\n 47338: u8 [a0] = a1\n 47340: a2 = a1 >> 0x38\n 47343: u8 [a0 + 0x7] = a2\n 47346: a2 = a1 >> 0x30\n 47349: u8 [a0 + 0x6] = a2\n 47352: a2 = a1 >> 0x28\n 47355: u8 [a0 + 0x5] = a2\n 47358: a2 = a1 >> 0x20\n 47361: u8 [a0 + 0x4] = a2\n 47364: a2 = a1 >> 0x18\n 47367: u8 [a0 + 0x3] = a2\n 47370: a2 = a1 >> 0x10\n 47373: u8 [a0 + 0x2] = a2\n 47376: a1 = a1 >> 0x8\n 47379: u8 [a0 + 0x1] = a1\n 47382: u64 [sp + 712] = 0\n 47386: u64 [sp + 704] = 0\n 47390: u64 [sp + 688] = 0x40\n 47395: a0 = sp + 0x2d0\n 47399: a1 = sp + 0x2b0\n 47403: u64 [sp + 696] = 0\n 47407: ra = 566, jump @56\n      : @706 [@dyn 283] (gas: 15)\n 47414: a1 = u64 [sp + 0x2e8]\n 47418: a2 = u64 [sp + 0x2e0]\n 47422: a0 = u64 [sp + 0x2d8]\n 47426: s1 = u64 [sp + 0x2d0]\n 47430: u64 [sp + 0x28] = a0\n 47433: u64 [sp + 0x30] = a1\n 47436: a0 = a0 | a1\n 47439: a1 = s1 | a2\n 47442: a1 = a1 | a0\n 47445: a1 = a1 >> 0x20\n 47448: u64 [sp + 0x38] = a2\n 47451: a0 = a0 | a2\n 47454: a0 = a0 << 0x20\n 47457: a0 = a0 | a1\n 47460: jump @708 if a0 == 0\n      : @707 (gas: 1)\n 47463: jump @781\n      : @708 (gas: 4)\n 47466: i32 a0 = s1 + 0\n 47468: a1 = 0x20\n 47471: u64 [sp + 0x18] = a0\n 47474: ra = 568, jump @0\n      : @709 [@dyn 284] (gas: 44)\n 47481: u8 [a0 + 31] = 0xa\n 47485: a1 = u64 [sp + 0x30]\n 47488: a2 = u64 [sp + 0x38]\n 47491: a2 = a2 | a1\n 47494: a1 = 0x100000000\n 47504: u64 [sp + 0x20] = a1\n 47507: a1 = 0xffffffe0\n 47517: u64 [sp + 0x10] = s1\n 47520: a1 = s1 <u a1\n 47523: s1 = u64 [sp + 0x28]\n 47526: a1 = 0 if s1 != 0\n 47528: a1 = 0 if a2 != 0\n 47530: u8 [a0 + 30] = 0\n 47533: u8 [a0 + 29] = 0\n 47536: u8 [a0 + 28] = 0\n 47539: u8 [a0 + 27] = 0\n 47542: u8 [a0 + 26] = 0\n 47545: u8 [a0 + 25] = 0\n 47548: u8 [a0 + 24] = 0\n 47551: u8 [a0 + 23] = 0\n 47554: u8 [a0 + 22] = 0\n 47557: u8 [a0 + 21] = 0\n 47560: u8 [a0 + 20] = 0\n 47563: u8 [a0 + 19] = 0\n 47566: u8 [a0 + 18] = 0\n 47569: u8 [a0 + 17] = 0\n 47572: u8 [a0 + 16] = 0\n 47575: u8 [a0 + 15] = 0\n 47578: u8 [a0 + 14] = 0\n 47581: u8 [a0 + 13] = 0\n 47584: u8 [a0 + 12] = 0\n 47587: u8 [a0 + 11] = 0\n 47590: u8 [a0 + 10] = 0\n 47593: u8 [a0 + 9] = 0\n 47596: u8 [a0 + 8] = 0\n 47599: u8 [a0 + 7] = 0\n 47602: u8 [a0 + 6] = 0\n 47605: u8 [a0 + 5] = 0\n 47608: u8 [a0 + 4] = 0\n 47611: u8 [a0 + 3] = 0\n 47614: u8 [a0 + 2] = 0\n 47617: u8 [a0 + 1] = 0\n 47620: u8 [a0 + 0] = 0\n 47622: jump @711 if a1 != 0\n      : @710 (gas: 1)\n 47625: jump @781\n      : @711 (gas: 4)\n 47628: a0 = u64 [sp + 0x18]\n 47631: i32 a0 = a0 + 0x20\n 47634: a1 = 0x20\n 47637: ra = 570, jump @0\n      : @712 [@dyn 285] (gas: 41)\n 47644: u8 [a0 + 31] = 0\n 47647: u8 [a0 + 30] = 0\n 47650: u8 [a0 + 29] = 0\n 47653: u8 [a0 + 28] = 0\n 47656: u8 [a0 + 27] = 0\n 47659: u8 [a0 + 26] = 0\n 47662: u8 [a0 + 25] = 0\n 47665: u8 [a0 + 24] = 0\n 47668: u8 [a0 + 23] = 0\n 47671: u8 [a0 + 22] = 0\n 47674: u8 [a0 + 21] = 0\n 47677: u8 [a0 + 20] = 0\n 47680: u8 [a0 + 19] = 0\n 47683: u8 [a0 + 18] = 0\n 47686: u8 [a0 + 17] = 0\n 47689: u8 [a0 + 16] = 0\n 47692: u8 [a0 + 15] = 0\n 47695: u8 [a0 + 14] = 0\n 47698: u8 [a0 + 13] = 0\n 47701: u8 [a0 + 12] = 0\n 47704: u8 [a0 + 11] = 0\n 47707: u8 [a0 + 10] = 0\n 47710: u8 [a0 + 9] = 0x73\n 47714: u8 [a0 + 8] = 0x75\n 47718: u8 [a0 + 7] = 0x6f\n 47722: u8 [a0 + 6] = 0x69\n 47726: u8 [a0 + 5] = 0x6e\n 47730: u8 [a0 + 4] = 0x6f\n 47734: u8 [a0 + 3] = 0x6d\n 47738: u8 [a0 + 2] = 0x72\n 47742: u8 [a0 + 1] = 0x61\n 47746: a2 = u64 [sp + 0x20]\n 47749: a2 = a2 + 0xfffffffffffffa00\n 47753: a3 = u64 [sp + 0x68]\n 47756: a2 = a3 <u a2\n 47759: a3 = u64 [sp + 0x60]\n 47762: a2 = 0 if a3 != 0\n 47764: a3 = u64 [sp + 0x50]\n 47767: a2 = 0 if a3 != 0\n 47769: u8 [a0 + 0] = 0x68\n 47772: jump @714 if a2 != 0\n      : @713 (gas: 1)\n 47775: jump @781\n      : @714 (gas: 4)\n 47778: a0 = u64 [sp + 0x58]\n 47781: i32 a0 = a0 + 0x600\n 47785: a1 = 0x20\n 47788: ra = 572, jump @0\n      : @715 [@dyn 286] (gas: 74)\n 47795: a1 = u64 [sp + 0x30]\n 47798: a1 = reverse a1\n 47800: a2 = u64 [sp + 0x38]\n 47803: a2 = reverse a2\n 47805: a3 = reverse s1\n 47807: a4 = u64 [sp + 0x10]\n 47810: a4 = reverse a4\n 47812: a5 = a4 >> 0x38\n 47815: u8 [a0 + 0x1f] = a5\n 47818: a5 = a4 >> 0x30\n 47821: u8 [a0 + 0x1e] = a5\n 47824: a5 = a4 >> 0x28\n 47827: u8 [a0 + 0x1d] = a5\n 47830: a5 = a4 >> 0x20\n 47833: u8 [a0 + 0x1c] = a5\n 47836: a5 = a4 >> 0x18\n 47839: u8 [a0 + 0x1b] = a5\n 47842: a5 = a4 >> 0x10\n 47845: u8 [a0 + 0x1a] = a5\n 47848: a5 = a4 >> 0x8\n 47851: u8 [a0 + 0x19] = a5\n 47854: u8 [a0 + 0x18] = a4\n 47857: u8 [a0 + 0x10] = a3\n 47860: a4 = a3 >> 0x38\n 47863: u8 [a0 + 0x17] = a4\n 47866: a4 = a3 >> 0x30\n 47869: u8 [a0 + 0x16] = a4\n 47872: a4 = a3 >> 0x28\n 47875: u8 [a0 + 0x15] = a4\n 47878: a4 = a3 >> 0x20\n 47881: u8 [a0 + 0x14] = a4\n 47884: a4 = a3 >> 0x18\n 47887: u8 [a0 + 0x13] = a4\n 47890: a4 = a3 >> 0x10\n 47893: u8 [a0 + 0x12] = a4\n 47896: a3 = a3 >> 0x8\n 47899: u8 [a0 + 0x11] = a3\n 47902: u8 [a0 + 0x8] = a2\n 47905: a3 = a2 >> 0x38\n 47908: u8 [a0 + 0xf] = a3\n 47911: a3 = a2 >> 0x30\n 47914: u8 [a0 + 0xe] = a3\n 47917: a3 = a2 >> 0x28\n 47920: u8 [a0 + 0xd] = a3\n 47923: a3 = a2 >> 0x20\n 47926: u8 [a0 + 0xc] = a3\n 47929: a3 = a2 >> 0x18\n 47932: u8 [a0 + 0xb] = a3\n 47935: a3 = a2 >> 0x10\n 47938: u8 [a0 + 0xa] = a3\n 47941: a2 = a2 >> 0x8\n 47944: u8 [a0 + 0x9] = a2\n 47947: u8 [a0] = a1\n 47949: a2 = a1 >> 0x38\n 47952: u8 [a0 + 0x7] = a2\n 47955: a2 = a1 >> 0x30\n 47958: u8 [a0 + 0x6] = a2\n 47961: a2 = a1 >> 0x28\n 47964: u8 [a0 + 0x5] = a2\n 47967: a2 = a1 >> 0x20\n 47970: u8 [a0 + 0x4] = a2\n 47973: a2 = a1 >> 0x18\n 47976: u8 [a0 + 0x3] = a2\n 47979: a2 = a1 >> 0x10\n 47982: u8 [a0 + 0x2] = a2\n 47985: a1 = a1 >> 0x8\n 47988: u8 [a0 + 0x1] = a1\n 47991: u64 [sp + 648] = 0\n 47995: u64 [sp + 640] = 0\n 47999: u64 [sp + 624] = 0x40\n 48004: a0 = sp + 0x290\n 48008: a1 = sp + 0x270\n 48012: u64 [sp + 632] = 0\n 48016: ra = 574, jump @56\n      : @716 [@dyn 287] (gas: 15)\n 48023: a1 = u64 [sp + 0x2a8]\n 48027: a2 = u64 [sp + 0x2a0]\n 48031: a0 = u64 [sp + 0x298]\n 48035: s1 = u64 [sp + 0x290]\n 48039: u64 [sp + 0x28] = a0\n 48042: u64 [sp + 0x30] = a1\n 48045: a0 = a0 | a1\n 48048: a1 = s1 | a2\n 48051: a1 = a1 | a0\n 48054: a1 = a1 >> 0x20\n 48057: u64 [sp + 0x38] = a2\n 48060: a0 = a0 | a2\n 48063: a0 = a0 << 0x20\n 48066: a0 = a0 | a1\n 48069: jump @718 if a0 == 0\n      : @717 (gas: 1)\n 48072: jump @781\n      : @718 (gas: 4)\n 48075: i32 a0 = s1 + 0\n 48077: a1 = 0x20\n 48080: u64 [sp + 0x18] = a0\n 48083: ra = 576, jump @0\n      : @719 [@dyn 288] (gas: 44)\n 48090: u8 [a0 + 31] = 0x7\n 48094: a1 = u64 [sp + 0x30]\n 48097: a2 = u64 [sp + 0x38]\n 48100: a2 = a2 | a1\n 48103: a1 = 0x100000000\n 48113: u64 [sp + 0x20] = a1\n 48116: a1 = 0xffffffe0\n 48126: u64 [sp + 0x10] = s1\n 48129: a1 = s1 <u a1\n 48132: s1 = u64 [sp + 0x28]\n 48135: a1 = 0 if s1 != 0\n 48137: a1 = 0 if a2 != 0\n 48139: u8 [a0 + 30] = 0\n 48142: u8 [a0 + 29] = 0\n 48145: u8 [a0 + 28] = 0\n 48148: u8 [a0 + 27] = 0\n 48151: u8 [a0 + 26] = 0\n 48154: u8 [a0 + 25] = 0\n 48157: u8 [a0 + 24] = 0\n 48160: u8 [a0 + 23] = 0\n 48163: u8 [a0 + 22] = 0\n 48166: u8 [a0 + 21] = 0\n 48169: u8 [a0 + 20] = 0\n 48172: u8 [a0 + 19] = 0\n 48175: u8 [a0 + 18] = 0\n 48178: u8 [a0 + 17] = 0\n 48181: u8 [a0 + 16] = 0\n 48184: u8 [a0 + 15] = 0\n 48187: u8 [a0 + 14] = 0\n 48190: u8 [a0 + 13] = 0\n 48193: u8 [a0 + 12] = 0\n 48196: u8 [a0 + 11] = 0\n 48199: u8 [a0 + 10] = 0\n 48202: u8 [a0 + 9] = 0\n 48205: u8 [a0 + 8] = 0\n 48208: u8 [a0 + 7] = 0\n 48211: u8 [a0 + 6] = 0\n 48214: u8 [a0 + 5] = 0\n 48217: u8 [a0 + 4] = 0\n 48220: u8 [a0 + 3] = 0\n 48223: u8 [a0 + 2] = 0\n 48226: u8 [a0 + 1] = 0\n 48229: u8 [a0 + 0] = 0\n 48231: jump @721 if a1 != 0\n      : @720 (gas: 1)\n 48234: jump @781\n      : @721 (gas: 4)\n 48237: a0 = u64 [sp + 0x18]\n 48240: i32 a0 = a0 + 0x20\n 48243: a1 = 0x20\n 48246: ra = 578, jump @0\n      : @722 [@dyn 289] (gas: 41)\n 48253: u8 [a0 + 31] = 0\n 48256: u8 [a0 + 30] = 0\n 48259: u8 [a0 + 29] = 0\n 48262: u8 [a0 + 28] = 0\n 48265: u8 [a0 + 27] = 0\n 48268: u8 [a0 + 26] = 0\n 48271: u8 [a0 + 25] = 0\n 48274: u8 [a0 + 24] = 0\n 48277: u8 [a0 + 23] = 0\n 48280: u8 [a0 + 22] = 0\n 48283: u8 [a0 + 21] = 0\n 48286: u8 [a0 + 20] = 0\n 48289: u8 [a0 + 19] = 0\n 48292: u8 [a0 + 18] = 0\n 48295: u8 [a0 + 17] = 0\n 48298: u8 [a0 + 16] = 0\n 48301: u8 [a0 + 15] = 0\n 48304: u8 [a0 + 14] = 0\n 48307: u8 [a0 + 13] = 0\n 48310: u8 [a0 + 12] = 0\n 48313: u8 [a0 + 11] = 0\n 48316: u8 [a0 + 10] = 0\n 48319: u8 [a0 + 9] = 0\n 48322: u8 [a0 + 8] = 0\n 48325: u8 [a0 + 7] = 0\n 48328: u8 [a0 + 6] = 0x6c\n 48332: u8 [a0 + 5] = 0x75\n 48336: u8 [a0 + 4] = 0x66\n 48340: u8 [a0 + 3] = 0x70\n 48344: u8 [a0 + 2] = 0x6c\n 48348: u8 [a0 + 1] = 0x65\n 48352: a2 = u64 [sp + 0x20]\n 48355: a2 = a2 + 0xfffffffffffff9e0\n 48359: a3 = u64 [sp + 0x68]\n 48362: a2 = a3 <u a2\n 48365: a3 = u64 [sp + 0x60]\n 48368: a2 = 0 if a3 != 0\n 48370: a3 = u64 [sp + 0x50]\n 48373: a2 = 0 if a3 != 0\n 48375: u8 [a0 + 0] = 0x68\n 48378: jump @724 if a2 != 0\n      : @723 (gas: 1)\n 48381: jump @781\n      : @724 (gas: 4)\n 48384: a0 = u64 [sp + 0x58]\n 48387: i32 a0 = a0 + 0x620\n 48391: a1 = 0x20\n 48394: ra = 580, jump @0\n      : @725 [@dyn 290] (gas: 74)\n 48401: a1 = u64 [sp + 0x30]\n 48404: a1 = reverse a1\n 48406: a2 = u64 [sp + 0x38]\n 48409: a2 = reverse a2\n 48411: a3 = reverse s1\n 48413: a4 = u64 [sp + 0x10]\n 48416: a4 = reverse a4\n 48418: a5 = a4 >> 0x38\n 48421: u8 [a0 + 0x1f] = a5\n 48424: a5 = a4 >> 0x30\n 48427: u8 [a0 + 0x1e] = a5\n 48430: a5 = a4 >> 0x28\n 48433: u8 [a0 + 0x1d] = a5\n 48436: a5 = a4 >> 0x20\n 48439: u8 [a0 + 0x1c] = a5\n 48442: a5 = a4 >> 0x18\n 48445: u8 [a0 + 0x1b] = a5\n 48448: a5 = a4 >> 0x10\n 48451: u8 [a0 + 0x1a] = a5\n 48454: a5 = a4 >> 0x8\n 48457: u8 [a0 + 0x19] = a5\n 48460: u8 [a0 + 0x18] = a4\n 48463: u8 [a0 + 0x10] = a3\n 48466: a4 = a3 >> 0x38\n 48469: u8 [a0 + 0x17] = a4\n 48472: a4 = a3 >> 0x30\n 48475: u8 [a0 + 0x16] = a4\n 48478: a4 = a3 >> 0x28\n 48481: u8 [a0 + 0x15] = a4\n 48484: a4 = a3 >> 0x20\n 48487: u8 [a0 + 0x14] = a4\n 48490: a4 = a3 >> 0x18\n 48493: u8 [a0 + 0x13] = a4\n 48496: a4 = a3 >> 0x10\n 48499: u8 [a0 + 0x12] = a4\n 48502: a3 = a3 >> 0x8\n 48505: u8 [a0 + 0x11] = a3\n 48508: u8 [a0 + 0x8] = a2\n 48511: a3 = a2 >> 0x38\n 48514: u8 [a0 + 0xf] = a3\n 48517: a3 = a2 >> 0x30\n 48520: u8 [a0 + 0xe] = a3\n 48523: a3 = a2 >> 0x28\n 48526: u8 [a0 + 0xd] = a3\n 48529: a3 = a2 >> 0x20\n 48532: u8 [a0 + 0xc] = a3\n 48535: a3 = a2 >> 0x18\n 48538: u8 [a0 + 0xb] = a3\n 48541: a3 = a2 >> 0x10\n 48544: u8 [a0 + 0xa] = a3\n 48547: a2 = a2 >> 0x8\n 48550: u8 [a0 + 0x9] = a2\n 48553: u8 [a0] = a1\n 48555: a2 = a1 >> 0x38\n 48558: u8 [a0 + 0x7] = a2\n 48561: a2 = a1 >> 0x30\n 48564: u8 [a0 + 0x6] = a2\n 48567: a2 = a1 >> 0x28\n 48570: u8 [a0 + 0x5] = a2\n 48573: a2 = a1 >> 0x20\n 48576: u8 [a0 + 0x4] = a2\n 48579: a2 = a1 >> 0x18\n 48582: u8 [a0 + 0x3] = a2\n 48585: a2 = a1 >> 0x10\n 48588: u8 [a0 + 0x2] = a2\n 48591: a1 = a1 >> 0x8\n 48594: u8 [a0 + 0x1] = a1\n 48597: u64 [sp + 584] = 0\n 48601: u64 [sp + 576] = 0\n 48605: u64 [sp + 560] = 0x40\n 48610: a0 = sp + 0x250\n 48614: a1 = sp + 0x230\n 48618: u64 [sp + 568] = 0\n 48622: ra = 582, jump @56\n      : @726 [@dyn 291] (gas: 15)\n 48629: a1 = u64 [sp + 0x268]\n 48633: a2 = u64 [sp + 0x260]\n 48637: a0 = u64 [sp + 0x258]\n 48641: s1 = u64 [sp + 0x250]\n 48645: u64 [sp + 0x28] = a0\n 48648: u64 [sp + 0x30] = a1\n 48651: a0 = a0 | a1\n 48654: a1 = s1 | a2\n 48657: a1 = a1 | a0\n 48660: a1 = a1 >> 0x20\n 48663: u64 [sp + 0x38] = a2\n 48666: a0 = a0 | a2\n 48669: a0 = a0 << 0x20\n 48672: a0 = a0 | a1\n 48675: jump @728 if a0 == 0\n      : @727 (gas: 1)\n 48678: jump @781\n      : @728 (gas: 4)\n 48681: i32 a0 = s1 + 0\n 48683: a1 = 0x20\n 48686: u64 [sp + 0x18] = a0\n 48689: ra = 584, jump @0\n      : @729 [@dyn 292] (gas: 44)\n 48696: u8 [a0 + 31] = 0x6\n 48700: a1 = u64 [sp + 0x30]\n 48703: a2 = u64 [sp + 0x38]\n 48706: a2 = a2 | a1\n 48709: a1 = 0x100000000\n 48719: u64 [sp + 0x20] = a1\n 48722: a1 = 0xffffffe0\n 48732: u64 [sp + 0x10] = s1\n 48735: a1 = s1 <u a1\n 48738: s1 = u64 [sp + 0x28]\n 48741: a1 = 0 if s1 != 0\n 48743: a1 = 0 if a2 != 0\n 48745: u8 [a0 + 30] = 0\n 48748: u8 [a0 + 29] = 0\n 48751: u8 [a0 + 28] = 0\n 48754: u8 [a0 + 27] = 0\n 48757: u8 [a0 + 26] = 0\n 48760: u8 [a0 + 25] = 0\n 48763: u8 [a0 + 24] = 0\n 48766: u8 [a0 + 23] = 0\n 48769: u8 [a0 + 22] = 0\n 48772: u8 [a0 + 21] = 0\n 48775: u8 [a0 + 20] = 0\n 48778: u8 [a0 + 19] = 0\n 48781: u8 [a0 + 18] = 0\n 48784: u8 [a0 + 17] = 0\n 48787: u8 [a0 + 16] = 0\n 48790: u8 [a0 + 15] = 0\n 48793: u8 [a0 + 14] = 0\n 48796: u8 [a0 + 13] = 0\n 48799: u8 [a0 + 12] = 0\n 48802: u8 [a0 + 11] = 0\n 48805: u8 [a0 + 10] = 0\n 48808: u8 [a0 + 9] = 0\n 48811: u8 [a0 + 8] = 0\n 48814: u8 [a0 + 7] = 0\n 48817: u8 [a0 + 6] = 0\n 48820: u8 [a0 + 5] = 0\n 48823: u8 [a0 + 4] = 0\n 48826: u8 [a0 + 3] = 0\n 48829: u8 [a0 + 2] = 0\n 48832: u8 [a0 + 1] = 0\n 48835: u8 [a0 + 0] = 0\n 48837: jump @731 if a1 != 0\n      : @730 (gas: 1)\n 48840: jump @781\n      : @731 (gas: 4)\n 48843: a0 = u64 [sp + 0x18]\n 48846: i32 a0 = a0 + 0x20\n 48849: a1 = 0x20\n 48852: ra = 586, jump @0\n      : @732 [@dyn 293] (gas: 41)\n 48859: u8 [a0 + 31] = 0\n 48862: u8 [a0 + 30] = 0\n 48865: u8 [a0 + 29] = 0\n 48868: u8 [a0 + 28] = 0\n 48871: u8 [a0 + 27] = 0\n 48874: u8 [a0 + 26] = 0\n 48877: u8 [a0 + 25] = 0\n 48880: u8 [a0 + 24] = 0\n 48883: u8 [a0 + 23] = 0\n 48886: u8 [a0 + 22] = 0\n 48889: u8 [a0 + 21] = 0\n 48892: u8 [a0 + 20] = 0\n 48895: u8 [a0 + 19] = 0\n 48898: u8 [a0 + 18] = 0\n 48901: u8 [a0 + 17] = 0\n 48904: u8 [a0 + 16] = 0\n 48907: u8 [a0 + 15] = 0\n 48910: u8 [a0 + 14] = 0\n 48913: u8 [a0 + 13] = 0\n 48916: u8 [a0 + 12] = 0\n 48919: u8 [a0 + 11] = 0\n 48922: u8 [a0 + 10] = 0\n 48925: u8 [a0 + 9] = 0\n 48928: u8 [a0 + 8] = 0\n 48931: u8 [a0 + 7] = 0\n 48934: u8 [a0 + 6] = 0\n 48937: u8 [a0 + 5] = 0x74\n 48941: u8 [a0 + 4] = 0x73\n 48945: u8 [a0 + 3] = 0x65\n 48949: u8 [a0 + 2] = 0x6e\n 48953: u8 [a0 + 1] = 0x6f\n 48957: a2 = u64 [sp + 0x20]\n 48960: a2 = a2 + 0xfffffffffffff9c0\n 48964: a3 = u64 [sp + 0x68]\n 48967: a2 = a3 <u a2\n 48970: a3 = u64 [sp + 0x60]\n 48973: a2 = 0 if a3 != 0\n 48975: a3 = u64 [sp + 0x50]\n 48978: a2 = 0 if a3 != 0\n 48980: u8 [a0 + 0] = 0x68\n 48983: jump @734 if a2 != 0\n      : @733 (gas: 1)\n 48986: jump @781\n      : @734 (gas: 4)\n 48989: a0 = u64 [sp + 0x58]\n 48992: i32 a0 = a0 + 0x640\n 48996: a1 = 0x20\n 48999: ra = 588, jump @0\n      : @735 [@dyn 294] (gas: 74)\n 49006: a1 = u64 [sp + 0x30]\n 49009: a1 = reverse a1\n 49011: a2 = u64 [sp + 0x38]\n 49014: a2 = reverse a2\n 49016: a3 = reverse s1\n 49018: a4 = u64 [sp + 0x10]\n 49021: a4 = reverse a4\n 49023: a5 = a4 >> 0x38\n 49026: u8 [a0 + 0x1f] = a5\n 49029: a5 = a4 >> 0x30\n 49032: u8 [a0 + 0x1e] = a5\n 49035: a5 = a4 >> 0x28\n 49038: u8 [a0 + 0x1d] = a5\n 49041: a5 = a4 >> 0x20\n 49044: u8 [a0 + 0x1c] = a5\n 49047: a5 = a4 >> 0x18\n 49050: u8 [a0 + 0x1b] = a5\n 49053: a5 = a4 >> 0x10\n 49056: u8 [a0 + 0x1a] = a5\n 49059: a5 = a4 >> 0x8\n 49062: u8 [a0 + 0x19] = a5\n 49065: u8 [a0 + 0x18] = a4\n 49068: u8 [a0 + 0x10] = a3\n 49071: a4 = a3 >> 0x38\n 49074: u8 [a0 + 0x17] = a4\n 49077: a4 = a3 >> 0x30\n 49080: u8 [a0 + 0x16] = a4\n 49083: a4 = a3 >> 0x28\n 49086: u8 [a0 + 0x15] = a4\n 49089: a4 = a3 >> 0x20\n 49092: u8 [a0 + 0x14] = a4\n 49095: a4 = a3 >> 0x18\n 49098: u8 [a0 + 0x13] = a4\n 49101: a4 = a3 >> 0x10\n 49104: u8 [a0 + 0x12] = a4\n 49107: a3 = a3 >> 0x8\n 49110: u8 [a0 + 0x11] = a3\n 49113: u8 [a0 + 0x8] = a2\n 49116: a3 = a2 >> 0x38\n 49119: u8 [a0 + 0xf] = a3\n 49122: a3 = a2 >> 0x30\n 49125: u8 [a0 + 0xe] = a3\n 49128: a3 = a2 >> 0x28\n 49131: u8 [a0 + 0xd] = a3\n 49134: a3 = a2 >> 0x20\n 49137: u8 [a0 + 0xc] = a3\n 49140: a3 = a2 >> 0x18\n 49143: u8 [a0 + 0xb] = a3\n 49146: a3 = a2 >> 0x10\n 49149: u8 [a0 + 0xa] = a3\n 49152: a2 = a2 >> 0x8\n 49155: u8 [a0 + 0x9] = a2\n 49158: u8 [a0] = a1\n 49160: a2 = a1 >> 0x38\n 49163: u8 [a0 + 0x7] = a2\n 49166: a2 = a1 >> 0x30\n 49169: u8 [a0 + 0x6] = a2\n 49172: a2 = a1 >> 0x28\n 49175: u8 [a0 + 0x5] = a2\n 49178: a2 = a1 >> 0x20\n 49181: u8 [a0 + 0x4] = a2\n 49184: a2 = a1 >> 0x18\n 49187: u8 [a0 + 0x3] = a2\n 49190: a2 = a1 >> 0x10\n 49193: u8 [a0 + 0x2] = a2\n 49196: a1 = a1 >> 0x8\n 49199: u8 [a0 + 0x1] = a1\n 49202: u64 [sp + 520] = 0\n 49206: u64 [sp + 512] = 0\n 49210: u64 [sp + 496] = 0x40\n 49215: a0 = sp + 0x210\n 49219: a1 = sp + 0x1f0\n 49223: u64 [sp + 504] = 0\n 49227: ra = 590, jump @56\n      : @736 [@dyn 295] (gas: 15)\n 49234: a1 = u64 [sp + 0x228]\n 49238: a2 = u64 [sp + 0x220]\n 49242: a0 = u64 [sp + 0x218]\n 49246: s1 = u64 [sp + 0x210]\n 49250: u64 [sp + 0x28] = a0\n 49253: u64 [sp + 0x30] = a1\n 49256: a0 = a0 | a1\n 49259: a1 = s1 | a2\n 49262: a1 = a1 | a0\n 49265: a1 = a1 >> 0x20\n 49268: u64 [sp + 0x38] = a2\n 49271: a0 = a0 | a2\n 49274: a0 = a0 << 0x20\n 49277: a0 = a0 | a1\n 49280: jump @738 if a0 == 0\n      : @737 (gas: 1)\n 49283: jump @781\n      : @738 (gas: 4)\n 49286: i32 a0 = s1 + 0\n 49288: a1 = 0x20\n 49291: u64 [sp + 0x18] = a0\n 49294: ra = 592, jump @0\n      : @739 [@dyn 296] (gas: 44)\n 49301: u8 [a0 + 31] = 0x9\n 49305: a1 = u64 [sp + 0x30]\n 49308: a2 = u64 [sp + 0x38]\n 49311: a2 = a2 | a1\n 49314: a1 = 0x100000000\n 49324: u64 [sp + 0x20] = a1\n 49327: a1 = 0xffffffe0\n 49337: u64 [sp + 0x10] = s1\n 49340: a1 = s1 <u a1\n 49343: s1 = u64 [sp + 0x28]\n 49346: a1 = 0 if s1 != 0\n 49348: a1 = 0 if a2 != 0\n 49350: u8 [a0 + 30] = 0\n 49353: u8 [a0 + 29] = 0\n 49356: u8 [a0 + 28] = 0\n 49359: u8 [a0 + 27] = 0\n 49362: u8 [a0 + 26] = 0\n 49365: u8 [a0 + 25] = 0\n 49368: u8 [a0 + 24] = 0\n 49371: u8 [a0 + 23] = 0\n 49374: u8 [a0 + 22] = 0\n 49377: u8 [a0 + 21] = 0\n 49380: u8 [a0 + 20] = 0\n 49383: u8 [a0 + 19] = 0\n 49386: u8 [a0 + 18] = 0\n 49389: u8 [a0 + 17] = 0\n 49392: u8 [a0 + 16] = 0\n 49395: u8 [a0 + 15] = 0\n 49398: u8 [a0 + 14] = 0\n 49401: u8 [a0 + 13] = 0\n 49404: u8 [a0 + 12] = 0\n 49407: u8 [a0 + 11] = 0\n 49410: u8 [a0 + 10] = 0\n 49413: u8 [a0 + 9] = 0\n 49416: u8 [a0 + 8] = 0\n 49419: u8 [a0 + 7] = 0\n 49422: u8 [a0 + 6] = 0\n 49425: u8 [a0 + 5] = 0\n 49428: u8 [a0 + 4] = 0\n 49431: u8 [a0 + 3] = 0\n 49434: u8 [a0 + 2] = 0\n 49437: u8 [a0 + 1] = 0\n 49440: u8 [a0 + 0] = 0\n 49442: jump @741 if a1 != 0\n      : @740 (gas: 1)\n 49445: jump @781\n      : @741 (gas: 4)\n 49448: a0 = u64 [sp + 0x18]\n 49451: i32 a0 = a0 + 0x20\n 49454: a1 = 0x20\n 49457: ra = 594, jump @0\n      : @742 [@dyn 297] (gas: 41)\n 49464: u8 [a0 + 31] = 0\n 49467: u8 [a0 + 30] = 0\n 49470: u8 [a0 + 29] = 0\n 49473: u8 [a0 + 28] = 0\n 49476: u8 [a0 + 27] = 0\n 49479: u8 [a0 + 26] = 0\n 49482: u8 [a0 + 25] = 0\n 49485: u8 [a0 + 24] = 0\n 49488: u8 [a0 + 23] = 0\n 49491: u8 [a0 + 22] = 0\n 49494: u8 [a0 + 21] = 0\n 49497: u8 [a0 + 20] = 0\n 49500: u8 [a0 + 19] = 0\n 49503: u8 [a0 + 18] = 0\n 49506: u8 [a0 + 17] = 0\n 49509: u8 [a0 + 16] = 0\n 49512: u8 [a0 + 15] = 0\n 49515: u8 [a0 + 14] = 0\n 49518: u8 [a0 + 13] = 0\n 49521: u8 [a0 + 12] = 0\n 49524: u8 [a0 + 11] = 0\n 49527: u8 [a0 + 10] = 0\n 49530: u8 [a0 + 9] = 0\n 49533: u8 [a0 + 8] = 0x65\n 49537: u8 [a0 + 7] = 0x6c\n 49541: u8 [a0 + 6] = 0x62\n 49545: u8 [a0 + 5] = 0x61\n 49549: u8 [a0 + 4] = 0x72\n 49553: u8 [a0 + 3] = 0x6f\n 49557: u8 [a0 + 2] = 0x6e\n 49561: u8 [a0 + 1] = 0x6f\n 49565: a2 = u64 [sp + 0x20]\n 49568: a2 = a2 + 0xfffffffffffff9a0\n 49572: a3 = u64 [sp + 0x68]\n 49575: a2 = a3 <u a2\n 49578: a3 = u64 [sp + 0x60]\n 49581: a2 = 0 if a3 != 0\n 49583: a3 = u64 [sp + 0x50]\n 49586: a2 = 0 if a3 != 0\n 49588: u8 [a0 + 0] = 0x68\n 49591: jump @781 if a2 == 0\n      : @743 (gas: 4)\n 49595: a0 = u64 [sp + 0x58]\n 49598: i32 a0 = a0 + 0x660\n 49602: a1 = 0x20\n 49605: ra = 596, jump @0\n      : @744 [@dyn 298] (gas: 74)\n 49612: a1 = u64 [sp + 0x30]\n 49615: a1 = reverse a1\n 49617: a2 = u64 [sp + 0x38]\n 49620: a2 = reverse a2\n 49622: a3 = reverse s1\n 49624: a4 = u64 [sp + 0x10]\n 49627: a4 = reverse a4\n 49629: a5 = a4 >> 0x38\n 49632: u8 [a0 + 0x1f] = a5\n 49635: a5 = a4 >> 0x30\n 49638: u8 [a0 + 0x1e] = a5\n 49641: a5 = a4 >> 0x28\n 49644: u8 [a0 + 0x1d] = a5\n 49647: a5 = a4 >> 0x20\n 49650: u8 [a0 + 0x1c] = a5\n 49653: a5 = a4 >> 0x18\n 49656: u8 [a0 + 0x1b] = a5\n 49659: a5 = a4 >> 0x10\n 49662: u8 [a0 + 0x1a] = a5\n 49665: a5 = a4 >> 0x8\n 49668: u8 [a0 + 0x19] = a5\n 49671: u8 [a0 + 0x18] = a4\n 49674: u8 [a0 + 0x10] = a3\n 49677: a4 = a3 >> 0x38\n 49680: u8 [a0 + 0x17] = a4\n 49683: a4 = a3 >> 0x30\n 49686: u8 [a0 + 0x16] = a4\n 49689: a4 = a3 >> 0x28\n 49692: u8 [a0 + 0x15] = a4\n 49695: a4 = a3 >> 0x20\n 49698: u8 [a0 + 0x14] = a4\n 49701: a4 = a3 >> 0x18\n 49704: u8 [a0 + 0x13] = a4\n 49707: a4 = a3 >> 0x10\n 49710: u8 [a0 + 0x12] = a4\n 49713: a3 = a3 >> 0x8\n 49716: u8 [a0 + 0x11] = a3\n 49719: u8 [a0 + 0x8] = a2\n 49722: a3 = a2 >> 0x38\n 49725: u8 [a0 + 0xf] = a3\n 49728: a3 = a2 >> 0x30\n 49731: u8 [a0 + 0xe] = a3\n 49734: a3 = a2 >> 0x28\n 49737: u8 [a0 + 0xd] = a3\n 49740: a3 = a2 >> 0x20\n 49743: u8 [a0 + 0xc] = a3\n 49746: a3 = a2 >> 0x18\n 49749: u8 [a0 + 0xb] = a3\n 49752: a3 = a2 >> 0x10\n 49755: u8 [a0 + 0xa] = a3\n 49758: a2 = a2 >> 0x8\n 49761: u8 [a0 + 0x9] = a2\n 49764: u8 [a0] = a1\n 49766: a2 = a1 >> 0x38\n 49769: u8 [a0 + 0x7] = a2\n 49772: a2 = a1 >> 0x30\n 49775: u8 [a0 + 0x6] = a2\n 49778: a2 = a1 >> 0x28\n 49781: u8 [a0 + 0x5] = a2\n 49784: a2 = a1 >> 0x20\n 49787: u8 [a0 + 0x4] = a2\n 49790: a2 = a1 >> 0x18\n 49793: u8 [a0 + 0x3] = a2\n 49796: a2 = a1 >> 0x10\n 49799: u8 [a0 + 0x2] = a2\n 49802: a1 = a1 >> 0x8\n 49805: u8 [a0 + 0x1] = a1\n 49808: u64 [sp + 456] = 0\n 49812: u64 [sp + 448] = 0\n 49816: u64 [sp + 432] = 0x40\n 49821: a0 = sp + 0x1d0\n 49825: a1 = sp + 0x1b0\n 49829: u64 [sp + 440] = 0\n 49833: ra = 598, jump @56\n      : @745 [@dyn 299] (gas: 15)\n 49840: a1 = u64 [sp + 0x1e8]\n 49844: a2 = u64 [sp + 0x1e0]\n 49848: a0 = u64 [sp + 0x1d8]\n 49852: s1 = u64 [sp + 0x1d0]\n 49856: u64 [sp + 0x28] = a0\n 49859: u64 [sp + 0x30] = a1\n 49862: a0 = a0 | a1\n 49865: a1 = s1 | a2\n 49868: a1 = a1 | a0\n 49871: a1 = a1 >> 0x20\n 49874: u64 [sp + 0x38] = a2\n 49877: a0 = a0 | a2\n 49880: a0 = a0 << 0x20\n 49883: a0 = a0 | a1\n 49886: jump @781 if a0 != 0\n      : @746 (gas: 4)\n 49890: i32 a0 = s1 + 0\n 49892: a1 = 0x20\n 49895: u64 [sp + 0x18] = a0\n 49898: ra = 600, jump @0\n      : @747 [@dyn 300] (gas: 44)\n 49905: u8 [a0 + 31] = 0x8\n 49909: a1 = u64 [sp + 0x30]\n 49912: a2 = u64 [sp + 0x38]\n 49915: a2 = a2 | a1\n 49918: a1 = 0x100000000\n 49928: u64 [sp + 0x20] = a1\n 49931: a1 = 0xffffffe0\n 49941: u64 [sp + 0x10] = s1\n 49944: a1 = s1 <u a1\n 49947: s1 = u64 [sp + 0x28]\n 49950: a1 = 0 if s1 != 0\n 49952: a1 = 0 if a2 != 0\n 49954: u8 [a0 + 30] = 0\n 49957: u8 [a0 + 29] = 0\n 49960: u8 [a0 + 28] = 0\n 49963: u8 [a0 + 27] = 0\n 49966: u8 [a0 + 26] = 0\n 49969: u8 [a0 + 25] = 0\n 49972: u8 [a0 + 24] = 0\n 49975: u8 [a0 + 23] = 0\n 49978: u8 [a0 + 22] = 0\n 49981: u8 [a0 + 21] = 0\n 49984: u8 [a0 + 20] = 0\n 49987: u8 [a0 + 19] = 0\n 49990: u8 [a0 + 18] = 0\n 49993: u8 [a0 + 17] = 0\n 49996: u8 [a0 + 16] = 0\n 49999: u8 [a0 + 15] = 0\n 50002: u8 [a0 + 14] = 0\n 50005: u8 [a0 + 13] = 0\n 50008: u8 [a0 + 12] = 0\n 50011: u8 [a0 + 11] = 0\n 50014: u8 [a0 + 10] = 0\n 50017: u8 [a0 + 9] = 0\n 50020: u8 [a0 + 8] = 0\n 50023: u8 [a0 + 7] = 0\n 50026: u8 [a0 + 6] = 0\n 50029: u8 [a0 + 5] = 0\n 50032: u8 [a0 + 4] = 0\n 50035: u8 [a0 + 3] = 0\n 50038: u8 [a0 + 2] = 0\n 50041: u8 [a0 + 1] = 0\n 50044: u8 [a0 + 0] = 0\n 50046: jump @781 if a1 == 0\n      : @748 (gas: 4)\n 50050: a0 = u64 [sp + 0x18]\n 50053: i32 a0 = a0 + 0x20\n 50056: a1 = 0x20\n 50059: ra = 602, jump @0\n      : @749 [@dyn 301] (gas: 41)\n 50066: u8 [a0 + 31] = 0\n 50069: u8 [a0 + 30] = 0\n 50072: u8 [a0 + 29] = 0\n 50075: u8 [a0 + 28] = 0\n 50078: u8 [a0 + 27] = 0\n 50081: u8 [a0 + 26] = 0\n 50084: u8 [a0 + 25] = 0\n 50087: u8 [a0 + 24] = 0\n 50090: u8 [a0 + 23] = 0\n 50093: u8 [a0 + 22] = 0\n 50096: u8 [a0 + 21] = 0\n 50099: u8 [a0 + 20] = 0\n 50102: u8 [a0 + 19] = 0\n 50105: u8 [a0 + 18] = 0\n 50108: u8 [a0 + 17] = 0\n 50111: u8 [a0 + 16] = 0\n 50114: u8 [a0 + 15] = 0\n 50117: u8 [a0 + 14] = 0\n 50120: u8 [a0 + 13] = 0\n 50123: u8 [a0 + 12] = 0\n 50126: u8 [a0 + 11] = 0\n 50129: u8 [a0 + 10] = 0\n 50132: u8 [a0 + 9] = 0\n 50135: u8 [a0 + 8] = 0\n 50138: u8 [a0 + 7] = 0x73\n 50142: u8 [a0 + 6] = 0x75\n 50146: u8 [a0 + 5] = 0x6f\n 50150: u8 [a0 + 4] = 0x72\n 50154: u8 [a0 + 3] = 0x6f\n 50158: u8 [a0 + 2] = 0x6d\n 50162: u8 [a0 + 1] = 0x75\n 50166: a2 = u64 [sp + 0x20]\n 50169: a2 = a2 + 0xfffffffffffff980\n 50173: a3 = u64 [sp + 0x68]\n 50176: a2 = a3 <u a2\n 50179: a3 = u64 [sp + 0x60]\n 50182: a2 = 0 if a3 != 0\n 50184: a3 = u64 [sp + 0x50]\n 50187: a2 = 0 if a3 != 0\n 50189: u8 [a0 + 0] = 0x68\n 50192: jump @781 if a2 == 0\n      : @750 (gas: 4)\n 50196: a0 = u64 [sp + 0x58]\n 50199: i32 a0 = a0 + 0x680\n 50203: a1 = 0x20\n 50206: ra = 604, jump @0\n      : @751 [@dyn 302] (gas: 74)\n 50213: a1 = u64 [sp + 0x30]\n 50216: a1 = reverse a1\n 50218: a2 = u64 [sp + 0x38]\n 50221: a2 = reverse a2\n 50223: a3 = reverse s1\n 50225: a4 = u64 [sp + 0x10]\n 50228: a4 = reverse a4\n 50230: a5 = a4 >> 0x38\n 50233: u8 [a0 + 0x1f] = a5\n 50236: a5 = a4 >> 0x30\n 50239: u8 [a0 + 0x1e] = a5\n 50242: a5 = a4 >> 0x28\n 50245: u8 [a0 + 0x1d] = a5\n 50248: a5 = a4 >> 0x20\n 50251: u8 [a0 + 0x1c] = a5\n 50254: a5 = a4 >> 0x18\n 50257: u8 [a0 + 0x1b] = a5\n 50260: a5 = a4 >> 0x10\n 50263: u8 [a0 + 0x1a] = a5\n 50266: a5 = a4 >> 0x8\n 50269: u8 [a0 + 0x19] = a5\n 50272: u8 [a0 + 0x18] = a4\n 50275: u8 [a0 + 0x10] = a3\n 50278: a4 = a3 >> 0x38\n 50281: u8 [a0 + 0x17] = a4\n 50284: a4 = a3 >> 0x30\n 50287: u8 [a0 + 0x16] = a4\n 50290: a4 = a3 >> 0x28\n 50293: u8 [a0 + 0x15] = a4\n 50296: a4 = a3 >> 0x20\n 50299: u8 [a0 + 0x14] = a4\n 50302: a4 = a3 >> 0x18\n 50305: u8 [a0 + 0x13] = a4\n 50308: a4 = a3 >> 0x10\n 50311: u8 [a0 + 0x12] = a4\n 50314: a3 = a3 >> 0x8\n 50317: u8 [a0 + 0x11] = a3\n 50320: u8 [a0 + 0x8] = a2\n 50323: a3 = a2 >> 0x38\n 50326: u8 [a0 + 0xf] = a3\n 50329: a3 = a2 >> 0x30\n 50332: u8 [a0 + 0xe] = a3\n 50335: a3 = a2 >> 0x28\n 50338: u8 [a0 + 0xd] = a3\n 50341: a3 = a2 >> 0x20\n 50344: u8 [a0 + 0xc] = a3\n 50347: a3 = a2 >> 0x18\n 50350: u8 [a0 + 0xb] = a3\n 50353: a3 = a2 >> 0x10\n 50356: u8 [a0 + 0xa] = a3\n 50359: a2 = a2 >> 0x8\n 50362: u8 [a0 + 0x9] = a2\n 50365: u8 [a0] = a1\n 50367: a2 = a1 >> 0x38\n 50370: u8 [a0 + 0x7] = a2\n 50373: a2 = a1 >> 0x30\n 50376: u8 [a0 + 0x6] = a2\n 50379: a2 = a1 >> 0x28\n 50382: u8 [a0 + 0x5] = a2\n 50385: a2 = a1 >> 0x20\n 50388: u8 [a0 + 0x4] = a2\n 50391: a2 = a1 >> 0x18\n 50394: u8 [a0 + 0x3] = a2\n 50397: a2 = a1 >> 0x10\n 50400: u8 [a0 + 0x2] = a2\n 50403: a1 = a1 >> 0x8\n 50406: u8 [a0 + 0x1] = a1\n 50409: u64 [sp + 392] = 0\n 50413: u64 [sp + 384] = 0\n 50417: u64 [sp + 368] = 0x40\n 50422: a0 = sp + 0x190\n 50426: a1 = sp + 0x170\n 50430: u64 [sp + 376] = 0\n 50434: ra = 606, jump @56\n      : @752 [@dyn 303] (gas: 15)\n 50441: a1 = u64 [sp + 0x1a8]\n 50445: a2 = u64 [sp + 0x1a0]\n 50449: a0 = u64 [sp + 0x198]\n 50453: s1 = u64 [sp + 0x190]\n 50457: u64 [sp + 0x28] = a0\n 50460: u64 [sp + 0x30] = a1\n 50463: a0 = a0 | a1\n 50466: a1 = s1 | a2\n 50469: a1 = a1 | a0\n 50472: a1 = a1 >> 0x20\n 50475: u64 [sp + 0x38] = a2\n 50478: a0 = a0 | a2\n 50481: a0 = a0 << 0x20\n 50484: a0 = a0 | a1\n 50487: jump @781 if a0 != 0\n      : @753 (gas: 4)\n 50491: i32 a0 = s1 + 0\n 50493: a1 = 0x20\n 50496: u64 [sp + 0x18] = a0\n 50499: ra = 608, jump @0\n      : @754 [@dyn 304] (gas: 44)\n 50506: u8 [a0 + 31] = 0xb\n 50510: a1 = u64 [sp + 0x30]\n 50513: a2 = u64 [sp + 0x38]\n 50516: a2 = a2 | a1\n 50519: a1 = 0x100000000\n 50529: u64 [sp + 0x20] = a1\n 50532: a1 = 0xffffffe0\n 50542: u64 [sp + 0x10] = s1\n 50545: a1 = s1 <u a1\n 50548: s1 = u64 [sp + 0x28]\n 50551: a1 = 0 if s1 != 0\n 50553: a1 = 0 if a2 != 0\n 50555: u8 [a0 + 30] = 0\n 50558: u8 [a0 + 29] = 0\n 50561: u8 [a0 + 28] = 0\n 50564: u8 [a0 + 27] = 0\n 50567: u8 [a0 + 26] = 0\n 50570: u8 [a0 + 25] = 0\n 50573: u8 [a0 + 24] = 0\n 50576: u8 [a0 + 23] = 0\n 50579: u8 [a0 + 22] = 0\n 50582: u8 [a0 + 21] = 0\n 50585: u8 [a0 + 20] = 0\n 50588: u8 [a0 + 19] = 0\n 50591: u8 [a0 + 18] = 0\n 50594: u8 [a0 + 17] = 0\n 50597: u8 [a0 + 16] = 0\n 50600: u8 [a0 + 15] = 0\n 50603: u8 [a0 + 14] = 0\n 50606: u8 [a0 + 13] = 0\n 50609: u8 [a0 + 12] = 0\n 50612: u8 [a0 + 11] = 0\n 50615: u8 [a0 + 10] = 0\n 50618: u8 [a0 + 9] = 0\n 50621: u8 [a0 + 8] = 0\n 50624: u8 [a0 + 7] = 0\n 50627: u8 [a0 + 6] = 0\n 50630: u8 [a0 + 5] = 0\n 50633: u8 [a0 + 4] = 0\n 50636: u8 [a0 + 3] = 0\n 50639: u8 [a0 + 2] = 0\n 50642: u8 [a0 + 1] = 0\n 50645: u8 [a0 + 0] = 0\n 50647: jump @781 if a1 == 0\n      : @755 (gas: 4)\n 50651: a0 = u64 [sp + 0x18]\n 50654: i32 a0 = a0 + 0x20\n 50657: a1 = 0x20\n 50660: ra = 610, jump @0\n      : @756 [@dyn 305] (gas: 41)\n 50667: u8 [a0 + 31] = 0\n 50670: u8 [a0 + 30] = 0\n 50673: u8 [a0 + 29] = 0\n 50676: u8 [a0 + 28] = 0\n 50679: u8 [a0 + 27] = 0\n 50682: u8 [a0 + 26] = 0\n 50685: u8 [a0 + 25] = 0\n 50688: u8 [a0 + 24] = 0\n 50691: u8 [a0 + 23] = 0\n 50694: u8 [a0 + 22] = 0\n 50697: u8 [a0 + 21] = 0\n 50700: u8 [a0 + 20] = 0\n 50703: u8 [a0 + 19] = 0\n 50706: u8 [a0 + 18] = 0\n 50709: u8 [a0 + 17] = 0\n 50712: u8 [a0 + 16] = 0\n 50715: u8 [a0 + 15] = 0\n 50718: u8 [a0 + 14] = 0\n 50721: u8 [a0 + 13] = 0\n 50724: u8 [a0 + 12] = 0\n 50727: u8 [a0 + 11] = 0\n 50730: u8 [a0 + 10] = 0x65\n 50734: u8 [a0 + 9] = 0x76\n 50738: u8 [a0 + 8] = 0x69\n 50742: u8 [a0 + 7] = 0x74\n 50746: u8 [a0 + 6] = 0x61\n 50750: u8 [a0 + 5] = 0x6e\n 50754: u8 [a0 + 4] = 0x69\n 50758: u8 [a0 + 3] = 0x67\n 50762: u8 [a0 + 2] = 0x61\n 50766: u8 [a0 + 1] = 0x6d\n 50770: a2 = u64 [sp + 0x20]\n 50773: a2 = a2 + 0xfffffffffffff960\n 50777: a3 = u64 [sp + 0x68]\n 50780: a2 = a3 <u a2\n 50783: a3 = u64 [sp + 0x60]\n 50786: a2 = 0 if a3 != 0\n 50788: a3 = u64 [sp + 0x50]\n 50791: a2 = 0 if a3 != 0\n 50793: u8 [a0 + 0] = 0x69\n 50796: jump @781 if a2 == 0\n      : @757 (gas: 4)\n 50800: a0 = u64 [sp + 0x58]\n 50803: i32 a0 = a0 + 0x6a0\n 50807: a1 = 0x20\n 50810: ra = 612, jump @0\n      : @758 [@dyn 306] (gas: 74)\n 50817: a1 = u64 [sp + 0x30]\n 50820: a1 = reverse a1\n 50822: a2 = u64 [sp + 0x38]\n 50825: a2 = reverse a2\n 50827: a3 = reverse s1\n 50829: a4 = u64 [sp + 0x10]\n 50832: a4 = reverse a4\n 50834: a5 = a4 >> 0x38\n 50837: u8 [a0 + 0x1f] = a5\n 50840: a5 = a4 >> 0x30\n 50843: u8 [a0 + 0x1e] = a5\n 50846: a5 = a4 >> 0x28\n 50849: u8 [a0 + 0x1d] = a5\n 50852: a5 = a4 >> 0x20\n 50855: u8 [a0 + 0x1c] = a5\n 50858: a5 = a4 >> 0x18\n 50861: u8 [a0 + 0x1b] = a5\n 50864: a5 = a4 >> 0x10\n 50867: u8 [a0 + 0x1a] = a5\n 50870: a5 = a4 >> 0x8\n 50873: u8 [a0 + 0x19] = a5\n 50876: u8 [a0 + 0x18] = a4\n 50879: u8 [a0 + 0x10] = a3\n 50882: a4 = a3 >> 0x38\n 50885: u8 [a0 + 0x17] = a4\n 50888: a4 = a3 >> 0x30\n 50891: u8 [a0 + 0x16] = a4\n 50894: a4 = a3 >> 0x28\n 50897: u8 [a0 + 0x15] = a4\n 50900: a4 = a3 >> 0x20\n 50903: u8 [a0 + 0x14] = a4\n 50906: a4 = a3 >> 0x18\n 50909: u8 [a0 + 0x13] = a4\n 50912: a4 = a3 >> 0x10\n 50915: u8 [a0 + 0x12] = a4\n 50918: a3 = a3 >> 0x8\n 50921: u8 [a0 + 0x11] = a3\n 50924: u8 [a0 + 0x8] = a2\n 50927: a3 = a2 >> 0x38\n 50930: u8 [a0 + 0xf] = a3\n 50933: a3 = a2 >> 0x30\n 50936: u8 [a0 + 0xe] = a3\n 50939: a3 = a2 >> 0x28\n 50942: u8 [a0 + 0xd] = a3\n 50945: a3 = a2 >> 0x20\n 50948: u8 [a0 + 0xc] = a3\n 50951: a3 = a2 >> 0x18\n 50954: u8 [a0 + 0xb] = a3\n 50957: a3 = a2 >> 0x10\n 50960: u8 [a0 + 0xa] = a3\n 50963: a2 = a2 >> 0x8\n 50966: u8 [a0 + 0x9] = a2\n 50969: u8 [a0] = a1\n 50971: a2 = a1 >> 0x38\n 50974: u8 [a0 + 0x7] = a2\n 50977: a2 = a1 >> 0x30\n 50980: u8 [a0 + 0x6] = a2\n 50983: a2 = a1 >> 0x28\n 50986: u8 [a0 + 0x5] = a2\n 50989: a2 = a1 >> 0x20\n 50992: u8 [a0 + 0x4] = a2\n 50995: a2 = a1 >> 0x18\n 50998: u8 [a0 + 0x3] = a2\n 51001: a2 = a1 >> 0x10\n 51004: u8 [a0 + 0x2] = a2\n 51007: a1 = a1 >> 0x8\n 51010: u8 [a0 + 0x1] = a1\n 51013: u64 [sp + 328] = 0\n 51017: u64 [sp + 320] = 0\n 51021: u64 [sp + 304] = 0x40\n 51026: a0 = sp + 0x150\n 51030: a1 = sp + 0x130\n 51034: u64 [sp + 312] = 0\n 51038: ra = 614, jump @56\n      : @759 [@dyn 307] (gas: 15)\n 51045: a1 = u64 [sp + 0x168]\n 51049: a2 = u64 [sp + 0x160]\n 51053: a0 = u64 [sp + 0x158]\n 51057: s1 = u64 [sp + 0x150]\n 51061: u64 [sp + 0x28] = a0\n 51064: u64 [sp + 0x30] = a1\n 51067: a0 = a0 | a1\n 51070: a1 = s1 | a2\n 51073: a1 = a1 | a0\n 51076: a1 = a1 >> 0x20\n 51079: u64 [sp + 0x38] = a2\n 51082: a0 = a0 | a2\n 51085: a0 = a0 << 0x20\n 51088: a0 = a0 | a1\n 51091: jump @781 if a0 != 0\n      : @760 (gas: 4)\n 51095: i32 a0 = s1 + 0\n 51097: a1 = 0x20\n 51100: u64 [sp + 0x18] = a0\n 51103: ra = 616, jump @0\n      : @761 [@dyn 308] (gas: 44)\n 51110: u8 [a0 + 31] = 0xa\n 51114: a1 = u64 [sp + 0x30]\n 51117: a2 = u64 [sp + 0x38]\n 51120: a2 = a2 | a1\n 51123: a1 = 0x100000000\n 51133: u64 [sp + 0x20] = a1\n 51136: a1 = 0xffffffe0\n 51146: u64 [sp + 0x10] = s1\n 51149: a1 = s1 <u a1\n 51152: s1 = u64 [sp + 0x28]\n 51155: a1 = 0 if s1 != 0\n 51157: a1 = 0 if a2 != 0\n 51159: u8 [a0 + 30] = 0\n 51162: u8 [a0 + 29] = 0\n 51165: u8 [a0 + 28] = 0\n 51168: u8 [a0 + 27] = 0\n 51171: u8 [a0 + 26] = 0\n 51174: u8 [a0 + 25] = 0\n 51177: u8 [a0 + 24] = 0\n 51180: u8 [a0 + 23] = 0\n 51183: u8 [a0 + 22] = 0\n 51186: u8 [a0 + 21] = 0\n 51189: u8 [a0 + 20] = 0\n 51192: u8 [a0 + 19] = 0\n 51195: u8 [a0 + 18] = 0\n 51198: u8 [a0 + 17] = 0\n 51201: u8 [a0 + 16] = 0\n 51204: u8 [a0 + 15] = 0\n 51207: u8 [a0 + 14] = 0\n 51210: u8 [a0 + 13] = 0\n 51213: u8 [a0 + 12] = 0\n 51216: u8 [a0 + 11] = 0\n 51219: u8 [a0 + 10] = 0\n 51222: u8 [a0 + 9] = 0\n 51225: u8 [a0 + 8] = 0\n 51228: u8 [a0 + 7] = 0\n 51231: u8 [a0 + 6] = 0\n 51234: u8 [a0 + 5] = 0\n 51237: u8 [a0 + 4] = 0\n 51240: u8 [a0 + 3] = 0\n 51243: u8 [a0 + 2] = 0\n 51246: u8 [a0 + 1] = 0\n 51249: u8 [a0 + 0] = 0\n 51251: jump @781 if a1 == 0\n      : @762 (gas: 4)\n 51255: a0 = u64 [sp + 0x18]\n 51258: i32 a0 = a0 + 0x20\n 51261: a1 = 0x20\n 51264: ra = 618, jump @0\n      : @763 [@dyn 309] (gas: 41)\n 51271: u8 [a0 + 31] = 0\n 51274: u8 [a0 + 30] = 0\n 51277: u8 [a0 + 29] = 0\n 51280: u8 [a0 + 28] = 0\n 51283: u8 [a0 + 27] = 0\n 51286: u8 [a0 + 26] = 0\n 51289: u8 [a0 + 25] = 0\n 51292: u8 [a0 + 24] = 0\n 51295: u8 [a0 + 23] = 0\n 51298: u8 [a0 + 22] = 0\n 51301: u8 [a0 + 21] = 0\n 51304: u8 [a0 + 20] = 0\n 51307: u8 [a0 + 19] = 0\n 51310: u8 [a0 + 18] = 0\n 51313: u8 [a0 + 17] = 0\n 51316: u8 [a0 + 16] = 0\n 51319: u8 [a0 + 15] = 0\n 51322: u8 [a0 + 14] = 0\n 51325: u8 [a0 + 13] = 0\n 51328: u8 [a0 + 12] = 0\n 51331: u8 [a0 + 11] = 0\n 51334: u8 [a0 + 10] = 0\n 51337: u8 [a0 + 9] = 0x65\n 51341: u8 [a0 + 8] = 0x76\n 51345: u8 [a0 + 7] = 0x69\n 51349: u8 [a0 + 6] = 0x73\n 51353: u8 [a0 + 5] = 0x73\n 51357: u8 [a0 + 4] = 0x65\n 51361: u8 [a0 + 3] = 0x72\n 51365: u8 [a0 + 2] = 0x70\n 51369: u8 [a0 + 1] = 0x6d\n 51373: a1 = u64 [sp + 0x20]\n 51376: a1 = a1 + 0xfffffffffffff940\n 51380: a3 = u64 [sp + 0x68]\n 51383: a1 = a3 <u a1\n 51386: a3 = u64 [sp + 0x60]\n 51389: a1 = 0 if a3 != 0\n 51391: a3 = u64 [sp + 0x50]\n 51394: a1 = 0 if a3 != 0\n 51396: u8 [a0 + 0] = 0x69\n 51399: jump @781 if a1 == 0\n      : @764 (gas: 4)\n 51403: a0 = u64 [sp + 0x58]\n 51406: i32 a0 = a0 + 0x6c0\n 51410: a1 = 0x20\n 51413: ra = 620, jump @0\n      : @765 [@dyn 310] (gas: 74)\n 51420: a1 = u64 [sp + 0x30]\n 51423: a1 = reverse a1\n 51425: a2 = u64 [sp + 0x38]\n 51428: a2 = reverse a2\n 51430: a3 = reverse s1\n 51432: a4 = u64 [sp + 0x10]\n 51435: a4 = reverse a4\n 51437: a5 = a4 >> 0x38\n 51440: u8 [a0 + 0x1f] = a5\n 51443: a5 = a4 >> 0x30\n 51446: u8 [a0 + 0x1e] = a5\n 51449: a5 = a4 >> 0x28\n 51452: u8 [a0 + 0x1d] = a5\n 51455: a5 = a4 >> 0x20\n 51458: u8 [a0 + 0x1c] = a5\n 51461: a5 = a4 >> 0x18\n 51464: u8 [a0 + 0x1b] = a5\n 51467: a5 = a4 >> 0x10\n 51470: u8 [a0 + 0x1a] = a5\n 51473: a5 = a4 >> 0x8\n 51476: u8 [a0 + 0x19] = a5\n 51479: u8 [a0 + 0x18] = a4\n 51482: u8 [a0 + 0x10] = a3\n 51485: a4 = a3 >> 0x38\n 51488: u8 [a0 + 0x17] = a4\n 51491: a4 = a3 >> 0x30\n 51494: u8 [a0 + 0x16] = a4\n 51497: a4 = a3 >> 0x28\n 51500: u8 [a0 + 0x15] = a4\n 51503: a4 = a3 >> 0x20\n 51506: u8 [a0 + 0x14] = a4\n 51509: a4 = a3 >> 0x18\n 51512: u8 [a0 + 0x13] = a4\n 51515: a4 = a3 >> 0x10\n 51518: u8 [a0 + 0x12] = a4\n 51521: a3 = a3 >> 0x8\n 51524: u8 [a0 + 0x11] = a3\n 51527: u8 [a0 + 0x8] = a2\n 51530: a3 = a2 >> 0x38\n 51533: u8 [a0 + 0xf] = a3\n 51536: a3 = a2 >> 0x30\n 51539: u8 [a0 + 0xe] = a3\n 51542: a3 = a2 >> 0x28\n 51545: u8 [a0 + 0xd] = a3\n 51548: a3 = a2 >> 0x20\n 51551: u8 [a0 + 0xc] = a3\n 51554: a3 = a2 >> 0x18\n 51557: u8 [a0 + 0xb] = a3\n 51560: a3 = a2 >> 0x10\n 51563: u8 [a0 + 0xa] = a3\n 51566: a2 = a2 >> 0x8\n 51569: u8 [a0 + 0x9] = a2\n 51572: u8 [a0] = a1\n 51574: a2 = a1 >> 0x38\n 51577: u8 [a0 + 0x7] = a2\n 51580: a2 = a1 >> 0x30\n 51583: u8 [a0 + 0x6] = a2\n 51586: a2 = a1 >> 0x28\n 51589: u8 [a0 + 0x5] = a2\n 51592: a2 = a1 >> 0x20\n 51595: u8 [a0 + 0x4] = a2\n 51598: a2 = a1 >> 0x18\n 51601: u8 [a0 + 0x3] = a2\n 51604: a2 = a1 >> 0x10\n 51607: u8 [a0 + 0x2] = a2\n 51610: a1 = a1 >> 0x8\n 51613: u8 [a0 + 0x1] = a1\n 51616: u64 [sp + 264] = 0\n 51620: u64 [sp + 256] = 0\n 51624: u64 [sp + 240] = 0x40\n 51629: a0 = sp + 0x110\n 51633: a1 = sp + 0xf0\n 51637: u64 [sp + 248] = 0\n 51641: ra = 622, jump @56\n      : @766 [@dyn 311] (gas: 15)\n 51648: a1 = u64 [sp + 0x128]\n 51652: a2 = u64 [sp + 0x120]\n 51656: a0 = u64 [sp + 0x118]\n 51660: s1 = u64 [sp + 0x110]\n 51664: u64 [sp + 0x28] = a0\n 51667: u64 [sp + 0x30] = a1\n 51670: a0 = a0 | a1\n 51673: a1 = s1 | a2\n 51676: a1 = a1 | a0\n 51679: a1 = a1 >> 0x20\n 51682: u64 [sp + 0x38] = a2\n 51685: a0 = a0 | a2\n 51688: a0 = a0 << 0x20\n 51691: a0 = a0 | a1\n 51694: jump @781 if a0 != 0\n      : @767 (gas: 4)\n 51698: i32 a0 = s1 + 0\n 51700: a1 = 0x20\n 51703: u64 [sp + 0x18] = a0\n 51706: ra = 624, jump @0\n      : @768 [@dyn 312] (gas: 44)\n 51713: u8 [a0 + 31] = 0xb\n 51717: a1 = u64 [sp + 0x30]\n 51720: a2 = u64 [sp + 0x38]\n 51723: a2 = a2 | a1\n 51726: a1 = 0x100000000\n 51736: u64 [sp + 0x20] = a1\n 51739: a1 = 0xffffffe0\n 51749: u64 [sp + 0x10] = s1\n 51752: a1 = s1 <u a1\n 51755: s1 = u64 [sp + 0x28]\n 51758: a1 = 0 if s1 != 0\n 51760: a1 = 0 if a2 != 0\n 51762: u8 [a0 + 30] = 0\n 51765: u8 [a0 + 29] = 0\n 51768: u8 [a0 + 28] = 0\n 51771: u8 [a0 + 27] = 0\n 51774: u8 [a0 + 26] = 0\n 51777: u8 [a0 + 25] = 0\n 51780: u8 [a0 + 24] = 0\n 51783: u8 [a0 + 23] = 0\n 51786: u8 [a0 + 22] = 0\n 51789: u8 [a0 + 21] = 0\n 51792: u8 [a0 + 20] = 0\n 51795: u8 [a0 + 19] = 0\n 51798: u8 [a0 + 18] = 0\n 51801: u8 [a0 + 17] = 0\n 51804: u8 [a0 + 16] = 0\n 51807: u8 [a0 + 15] = 0\n 51810: u8 [a0 + 14] = 0\n 51813: u8 [a0 + 13] = 0\n 51816: u8 [a0 + 12] = 0\n 51819: u8 [a0 + 11] = 0\n 51822: u8 [a0 + 10] = 0\n 51825: u8 [a0 + 9] = 0\n 51828: u8 [a0 + 8] = 0\n 51831: u8 [a0 + 7] = 0\n 51834: u8 [a0 + 6] = 0\n 51837: u8 [a0 + 5] = 0\n 51840: u8 [a0 + 4] = 0\n 51843: u8 [a0 + 3] = 0\n 51846: u8 [a0 + 2] = 0\n 51849: u8 [a0 + 1] = 0\n 51852: u8 [a0 + 0] = 0\n 51854: jump @781 if a1 == 0\n      : @769 (gas: 4)\n 51858: a0 = u64 [sp + 0x18]\n 51861: i32 a0 = a0 + 0x20\n 51864: a1 = 0x20\n 51867: ra = 626, jump @0\n      : @770 [@dyn 313] (gas: 42)\n 51874: u8 [a0 + 31] = 0\n 51877: u8 [a0 + 30] = 0\n 51880: u8 [a0 + 29] = 0\n 51883: u8 [a0 + 28] = 0\n 51886: u8 [a0 + 27] = 0\n 51889: u8 [a0 + 26] = 0\n 51892: u8 [a0 + 25] = 0\n 51895: u8 [a0 + 24] = 0\n 51898: u8 [a0 + 23] = 0\n 51901: u8 [a0 + 22] = 0\n 51904: u8 [a0 + 21] = 0\n 51907: u8 [a0 + 20] = 0\n 51910: u8 [a0 + 19] = 0\n 51913: u8 [a0 + 18] = 0\n 51916: u8 [a0 + 17] = 0\n 51919: u8 [a0 + 16] = 0\n 51922: u8 [a0 + 15] = 0\n 51925: u8 [a0 + 14] = 0\n 51928: u8 [a0 + 13] = 0\n 51931: u8 [a0 + 12] = 0\n 51934: u8 [a0 + 11] = 0\n 51937: u8 [a0 + 10] = 0x74\n 51941: u8 [a0 + 9] = 0x6e\n 51945: u8 [a0 + 8] = 0x65\n 51949: u8 [a0 + 7] = 0x64\n 51953: u8 [a0 + 6] = 0x6e\n 51957: u8 [a0 + 5] = 0x65\n 51961: a4 = 0x70\n 51964: u8 [a0 + 0x4] = a4\n 51967: u8 [a0 + 3] = 0x65\n 51971: u8 [a0 + 2] = 0x64\n 51975: u8 [a0 + 1] = 0x6e\n 51979: a2 = u64 [sp + 0x20]\n 51982: a2 = a2 + 0xfffffffffffff920\n 51986: a3 = u64 [sp + 0x68]\n 51989: a2 = a3 <u a2\n 51992: a3 = u64 [sp + 0x60]\n 51995: a2 = 0 if a3 != 0\n 51997: a3 = u64 [sp + 0x50]\n 52000: a2 = 0 if a3 != 0\n 52002: u8 [a0 + 0] = 0x69\n 52005: jump @781 if a2 == 0\n      : @771 (gas: 4)\n 52009: a0 = u64 [sp + 0x58]\n 52012: i32 a0 = a0 + 0x6e0\n 52016: a1 = 0x20\n 52019: ra = 628, jump @0\n      : @772 [@dyn 314] (gas: 74)\n 52026: a1 = u64 [sp + 0x30]\n 52029: a1 = reverse a1\n 52031: a2 = u64 [sp + 0x38]\n 52034: a2 = reverse a2\n 52036: a3 = reverse s1\n 52038: a4 = u64 [sp + 0x10]\n 52041: a4 = reverse a4\n 52043: a5 = a4 >> 0x38\n 52046: u8 [a0 + 0x1f] = a5\n 52049: a5 = a4 >> 0x30\n 52052: u8 [a0 + 0x1e] = a5\n 52055: a5 = a4 >> 0x28\n 52058: u8 [a0 + 0x1d] = a5\n 52061: a5 = a4 >> 0x20\n 52064: u8 [a0 + 0x1c] = a5\n 52067: a5 = a4 >> 0x18\n 52070: u8 [a0 + 0x1b] = a5\n 52073: a5 = a4 >> 0x10\n 52076: u8 [a0 + 0x1a] = a5\n 52079: a5 = a4 >> 0x8\n 52082: u8 [a0 + 0x19] = a5\n 52085: u8 [a0 + 0x18] = a4\n 52088: u8 [a0 + 0x10] = a3\n 52091: a4 = a3 >> 0x38\n 52094: u8 [a0 + 0x17] = a4\n 52097: a4 = a3 >> 0x30\n 52100: u8 [a0 + 0x16] = a4\n 52103: a4 = a3 >> 0x28\n 52106: u8 [a0 + 0x15] = a4\n 52109: a4 = a3 >> 0x20\n 52112: u8 [a0 + 0x14] = a4\n 52115: a4 = a3 >> 0x18\n 52118: u8 [a0 + 0x13] = a4\n 52121: a4 = a3 >> 0x10\n 52124: u8 [a0 + 0x12] = a4\n 52127: a3 = a3 >> 0x8\n 52130: u8 [a0 + 0x11] = a3\n 52133: u8 [a0 + 0x8] = a2\n 52136: a3 = a2 >> 0x38\n 52139: u8 [a0 + 0xf] = a3\n 52142: a3 = a2 >> 0x30\n 52145: u8 [a0 + 0xe] = a3\n 52148: a3 = a2 >> 0x28\n 52151: u8 [a0 + 0xd] = a3\n 52154: a3 = a2 >> 0x20\n 52157: u8 [a0 + 0xc] = a3\n 52160: a3 = a2 >> 0x18\n 52163: u8 [a0 + 0xb] = a3\n 52166: a3 = a2 >> 0x10\n 52169: u8 [a0 + 0xa] = a3\n 52172: a2 = a2 >> 0x8\n 52175: u8 [a0 + 0x9] = a2\n 52178: u8 [a0] = a1\n 52180: a2 = a1 >> 0x38\n 52183: u8 [a0 + 0x7] = a2\n 52186: a2 = a1 >> 0x30\n 52189: u8 [a0 + 0x6] = a2\n 52192: a2 = a1 >> 0x28\n 52195: u8 [a0 + 0x5] = a2\n 52198: a2 = a1 >> 0x20\n 52201: u8 [a0 + 0x4] = a2\n 52204: a2 = a1 >> 0x18\n 52207: u8 [a0 + 0x3] = a2\n 52210: a2 = a1 >> 0x10\n 52213: u8 [a0 + 0x2] = a2\n 52216: a1 = a1 >> 0x8\n 52219: u8 [a0 + 0x1] = a1\n 52222: u64 [sp + 200] = 0\n 52226: u64 [sp + 192] = 0\n 52230: u64 [sp + 176] = 0x40\n 52235: a0 = sp + 0xd0\n 52239: a1 = sp + 0xb0\n 52243: u64 [sp + 184] = 0\n 52247: ra = 630, jump @56\n      : @773 [@dyn 315] (gas: 15)\n 52254: a1 = u64 [sp + 0xe8]\n 52258: a2 = u64 [sp + 0xe0]\n 52262: a0 = u64 [sp + 0xd8]\n 52266: s1 = u64 [sp + 0xd0]\n 52270: u64 [sp + 0x38] = a0\n 52273: u64 [sp + 0x28] = a1\n 52276: a0 = a0 | a1\n 52279: a1 = s1 | a2\n 52282: a1 = a1 | a0\n 52285: a1 = a1 >> 0x20\n 52288: u64 [sp + 0x30] = a2\n 52291: a0 = a0 | a2\n 52294: a0 = a0 << 0x20\n 52297: a0 = a0 | a1\n 52300: jump @781 if a0 != 0\n      : @774 (gas: 4)\n 52304: i32 a0 = s1 + 0\n 52306: a1 = 0x20\n 52309: u64 [sp + 0x18] = a0\n 52312: ra = 632, jump @0\n      : @775 [@dyn 316] (gas: 44)\n 52319: u8 [a0 + 31] = 0xa\n 52323: a1 = u64 [sp + 0x28]\n 52326: a2 = u64 [sp + 0x30]\n 52329: a2 = a2 | a1\n 52332: a1 = 0x100000000\n 52342: u64 [sp + 0x20] = a1\n 52345: a1 = 0xffffffe0\n 52355: u64 [sp + 0x10] = s1\n 52358: a1 = s1 <u a1\n 52361: a3 = u64 [sp + 0x38]\n 52364: a1 = 0 if a3 != 0\n 52366: a1 = 0 if a2 != 0\n 52368: u8 [a0 + 30] = 0\n 52371: u8 [a0 + 29] = 0\n 52374: u8 [a0 + 28] = 0\n 52377: u8 [a0 + 27] = 0\n 52380: u8 [a0 + 26] = 0\n 52383: u8 [a0 + 25] = 0\n 52386: u8 [a0 + 24] = 0\n 52389: u8 [a0 + 23] = 0\n 52392: u8 [a0 + 22] = 0\n 52395: u8 [a0 + 21] = 0\n 52398: u8 [a0 + 20] = 0\n 52401: u8 [a0 + 19] = 0\n 52404: u8 [a0 + 18] = 0\n 52407: u8 [a0 + 17] = 0\n 52410: u8 [a0 + 16] = 0\n 52413: u8 [a0 + 15] = 0\n 52416: u8 [a0 + 14] = 0\n 52419: u8 [a0 + 13] = 0\n 52422: u8 [a0 + 12] = 0\n 52425: u8 [a0 + 11] = 0\n 52428: u8 [a0 + 10] = 0\n 52431: u8 [a0 + 9] = 0\n 52434: u8 [a0 + 8] = 0\n 52437: u8 [a0 + 7] = 0\n 52440: u8 [a0 + 6] = 0\n 52443: u8 [a0 + 5] = 0\n 52446: u8 [a0 + 4] = 0\n 52449: u8 [a0 + 3] = 0\n 52452: u8 [a0 + 2] = 0\n 52455: u8 [a0 + 1] = 0\n 52458: u8 [a0 + 0] = 0\n 52460: jump @781 if a1 == 0\n      : @776 (gas: 4)\n 52464: a0 = u64 [sp + 0x18]\n 52467: i32 a0 = a0 + 0x20\n 52470: a1 = 0x20\n 52473: ra = 634, jump @0\n      : @777 [@dyn 317] (gas: 41)\n 52480: u8 [a0 + 31] = 0\n 52483: u8 [a0 + 30] = 0\n 52486: u8 [a0 + 29] = 0\n 52489: u8 [a0 + 28] = 0\n 52492: u8 [a0 + 27] = 0\n 52495: u8 [a0 + 26] = 0\n 52498: u8 [a0 + 25] = 0\n 52501: u8 [a0 + 24] = 0\n 52504: u8 [a0 + 23] = 0\n 52507: u8 [a0 + 22] = 0\n 52510: u8 [a0 + 21] = 0\n 52513: u8 [a0 + 20] = 0\n 52516: u8 [a0 + 19] = 0\n 52519: u8 [a0 + 18] = 0\n 52522: u8 [a0 + 17] = 0\n 52525: u8 [a0 + 16] = 0\n 52528: u8 [a0 + 15] = 0\n 52531: u8 [a0 + 14] = 0\n 52534: u8 [a0 + 13] = 0\n 52537: u8 [a0 + 12] = 0\n 52540: u8 [a0 + 11] = 0\n 52543: u8 [a0 + 10] = 0\n 52546: u8 [a0 + 9] = 0x65\n 52550: u8 [a0 + 8] = 0x76\n 52554: u8 [a0 + 7] = 0x69\n 52558: u8 [a0 + 6] = 0x74\n 52562: u8 [a0 + 5] = 0x61\n 52566: u8 [a0 + 4] = 0x76\n 52570: u8 [a0 + 3] = 0x6f\n 52574: u8 [a0 + 2] = 0x6e\n 52578: u8 [a0 + 1] = 0x6e\n 52582: a1 = u64 [sp + 0x20]\n 52585: a1 = a1 + 0xfffffffffffff900\n 52589: a3 = u64 [sp + 0x68]\n 52592: a1 = a3 <u a1\n 52595: s1 = u64 [sp + 0x60]\n 52598: a1 = 0 if s1 != 0\n 52600: a3 = u64 [sp + 0x50]\n 52603: a1 = 0 if a3 != 0\n 52605: u8 [a0 + 0] = 0x69\n 52608: jump @781 if a1 == 0\n      : @778 (gas: 4)\n 52612: a0 = u64 [sp + 0x58]\n 52615: i32 a0 = a0 + 0x700\n 52619: a1 = 0x20\n 52622: ra = 636, jump @0\n      : @779 [@dyn 318] (gas: 115)\n 52629: a1 = u64 [sp + 0x28]\n 52632: a1 = reverse a1\n 52634: a2 = u64 [sp + 0x30]\n 52637: a2 = reverse a2\n 52639: a3 = u64 [sp + 0x38]\n 52642: a3 = reverse a3\n 52644: a4 = u64 [sp + 0x10]\n 52647: a4 = reverse a4\n 52649: a5 = a4 >> 0x38\n 52652: u8 [a0 + 0x1f] = a5\n 52655: a5 = a4 >> 0x30\n 52658: u8 [a0 + 0x1e] = a5\n 52661: a5 = a4 >> 0x28\n 52664: u8 [a0 + 0x1d] = a5\n 52667: a5 = a4 >> 0x20\n 52670: u8 [a0 + 0x1c] = a5\n 52673: a5 = a4 >> 0x18\n 52676: u8 [a0 + 0x1b] = a5\n 52679: a5 = a4 >> 0x10\n 52682: u8 [a0 + 0x1a] = a5\n 52685: a5 = a4 >> 0x8\n 52688: u8 [a0 + 0x19] = a5\n 52691: u8 [a0 + 0x18] = a4\n 52694: u8 [a0 + 0x10] = a3\n 52697: a4 = a3 >> 0x38\n 52700: u8 [a0 + 0x17] = a4\n 52703: a4 = a3 >> 0x30\n 52706: u8 [a0 + 0x16] = a4\n 52709: a4 = a3 >> 0x28\n 52712: u8 [a0 + 0x15] = a4\n 52715: a4 = a3 >> 0x20\n 52718: u8 [a0 + 0x14] = a4\n 52721: a4 = a3 >> 0x18\n 52724: u8 [a0 + 0x13] = a4\n 52727: a4 = a3 >> 0x10\n 52730: u8 [a0 + 0x12] = a4\n 52733: a3 = a3 >> 0x8\n 52736: u8 [a0 + 0x11] = a3\n 52739: u8 [a0 + 0x8] = a2\n 52742: a3 = a2 >> 0x38\n 52745: u8 [a0 + 0xf] = a3\n 52748: a3 = a2 >> 0x30\n 52751: u8 [a0 + 0xe] = a3\n 52754: a3 = a2 >> 0x28\n 52757: u8 [a0 + 0xd] = a3\n 52760: a3 = a2 >> 0x20\n 52763: u8 [a0 + 0xc] = a3\n 52766: a3 = a2 >> 0x18\n 52769: u8 [a0 + 0xb] = a3\n 52772: a3 = a2 >> 0x10\n 52775: u8 [a0 + 0xa] = a3\n 52778: a2 = a2 >> 0x8\n 52781: u8 [a0 + 0x9] = a2\n 52784: u8 [a0] = a1\n 52786: a2 = a1 >> 0x38\n 52789: u8 [a0 + 0x7] = a2\n 52792: a2 = a1 >> 0x30\n 52795: u8 [a0 + 0x6] = a2\n 52798: a2 = a1 >> 0x28\n 52801: u8 [a0 + 0x5] = a2\n 52804: a2 = a1 >> 0x20\n 52807: u8 [a0 + 0x4] = a2\n 52810: a2 = a1 >> 0x18\n 52813: u8 [a0 + 0x3] = a2\n 52816: a2 = a1 >> 0x10\n 52819: u8 [a0 + 0x2] = a2\n 52822: a1 = a1 >> 0x8\n 52825: u8 [a0 + 0x1] = a1\n 52828: a0 = u64 [sp + 0x40]\n 52831: u64 [sp + 0x88] = a0\n 52835: a0 = u64 [sp + 0x48]\n 52838: u64 [sp + 0x80] = a0\n 52842: u64 [sp + 0x78] = s1\n 52845: a0 = u64 [sp + 0x68]\n 52848: u64 [sp + 0x70] = a0\n 52851: u64 [sp + 168] = 0\n 52855: u64 [sp + 160] = 0\n 52859: u64 [sp + 152] = 0\n 52863: a0 = sp + 0x90\n 52867: a1 = sp + 0x70\n 52870: u64 [sp + 144] = 0x1\n 52875: ra = 0x27e\n 52879: sp = sp + 0xfffffffffffffec0\n 52883: u64 [sp + 0x138] = ra\n 52887: u64 [sp + 0x130] = s0\n 52891: u64 [sp + 0x128] = s1\n 52895: s0 = sp + 0x140\n 52899: sp = sp & 0xffffffffffffffe0\n 52902: a2 = u64 [a1 + 0x18]\n 52905: u64 [sp + 0x78] = a2\n 52908: a2 = u64 [a1 + 0x10]\n 52911: u64 [sp + 0x60] = a2\n 52914: a2 = u64 [a1 + 0x8]\n 52917: u64 [sp + 0x58] = a2\n 52920: a1 = u64 [a1]\n 52922: u64 [sp + 0x50] = a1\n 52925: a2 = u64 [a0]\n 52927: u64 [sp + 0x48] = a2\n 52930: a1 = u64 [a0 + 0x8]\n 52933: u64 [sp + 0x70] = a1\n 52936: a3 = u64 [a0 + 0x10]\n 52939: u64 [sp + 0x68] = a3\n 52942: s1 = u64 [a0 + 0x18]\n 52945: u64 [sp + 216] = 0\n 52949: u64 [sp + 208] = 0\n 52953: u64 [sp + 200] = 0\n 52957: u64 [sp + 192] = 0x39\n 52962: u64 [sp + 0xf8] = s1\n 52966: u64 [sp + 0xf0] = a3\n 52970: u64 [sp + 0xe8] = a1\n 52974: a0 = sp + 0xe0\n 52978: a1 = sp + 0xc0\n 52982: u64 [sp + 0xe0] = a2\n 52986: ra = 0xaa\n 52990: jump @152\n      : @780 [@dyn 319] (gas: 8)\n 52994: sp = s0 + 0xfffffffffffff800\n 52998: sp = sp + 0xfffffffffffff8b0\n 53002: sp = sp + 0x758\n 53006: ra = u64 [sp + 0x7f0]\n 53010: s0 = u64 [sp + 0x7e8]\n 53014: s1 = u64 [sp + 0x7e0]\n 53018: sp = sp + 0x7f8\n 53022: ret\n      : @781 (gas: 1)\n 53024: trap\n      : @782 (gas: 16)\n 53025: sp = sp + 0xffffffffffffff88\n 53028: u64 [sp + 0x70] = ra\n 53031: u64 [sp + 0x68] = s0\n 53034: u64 [sp + 0x60] = s1\n 53037: a5 = u64 [a1 + 0x10]\n 53040: s1 = u64 [a1 + 0x18]\n 53043: a4 = u64 [a1 + 0x8]\n 53046: s0 = u64 [a1]\n 53048: a1 = a4 | s1\n 53051: a3 = s0 | a5\n 53054: a3 = a3 | a1\n 53057: a3 = a3 >> 0x20\n 53060: a1 = a1 | a5\n 53063: a1 = a1 << 0x20\n 53066: a1 = a1 | a3\n 53069: jump @795 if a1 != 0\n      : @783 (gas: 16)\n 53073: u64 [sp + 0x28] = s1\n 53076: u64 [sp + 0x30] = a5\n 53079: u64 [sp + 0x40] = a4\n 53082: u64 [sp] = a0\n 53084: a0 = u64 [a2 + 0x18]\n 53087: u64 [sp + 0x58] = a0\n 53090: s1 = u64 [a2 + 0x10]\n 53093: a0 = u64 [a2 + 0x8]\n 53096: u64 [sp + 0x50] = a0\n 53099: a0 = u64 [a2]\n 53101: u64 [sp + 0x48] = a0\n 53104: u64 [sp + 0x20] = s0\n 53107: i32 a0 = s0 + 0\n 53109: a1 = 0x20\n 53112: u64 [sp + 0x8] = a0\n 53115: ra = 640, jump @0\n      : @784 [@dyn 320] (gas: 12)\n 53122: t0 = u64 [sp + 0x48]\n 53125: a1 = t0 | s1\n 53128: a2 = u64 [sp + 0x58]\n 53131: a3 = u64 [sp + 0x50]\n 53134: a2 = a2 | a3\n 53137: a1 = a1 | a2\n 53140: a1 = a1 >> 0x20\n 53143: u64 [sp + 0x38] = s1\n 53146: a2 = a2 | s1\n 53149: a2 = a2 << 0x20\n 53152: a1 = a1 | a2\n 53155: jump @795 if a1 != 0\n      : @785 (gas: 93)\n 53159: a1 = u8 [a0 + 0x19]\n 53162: a2 = u8 [a0 + 0x18]\n 53165: a3 = u8 [a0 + 0x1a]\n 53168: a4 = u8 [a0 + 0x1b]\n 53171: a1 = a1 << 0x8\n 53174: a1 = a1 | a2\n 53177: a3 = a3 << 0x10\n 53180: a4 = a4 << 0x18\n 53183: a3 = a3 | a4\n 53186: a1 = a1 | a3\n 53189: a2 = u8 [a0 + 0x1d]\n 53192: a3 = u8 [a0 + 0x1c]\n 53195: a4 = u8 [a0 + 0x1e]\n 53198: a5 = u8 [a0 + 0x1f]\n 53201: a2 = a2 << 0x8\n 53204: a2 = a2 | a3\n 53207: a4 = a4 << 0x10\n 53210: a5 = a5 << 0x18\n 53213: a4 = a4 | a5\n 53216: a2 = a2 | a4\n 53219: a2 = a2 << 0x20\n 53222: a1 = a1 | a2\n 53225: u64 [sp + 0x18] = a1\n 53228: a1 = u8 [a0 + 0x11]\n 53231: a2 = u8 [a0 + 0x10]\n 53234: a3 = u8 [a0 + 0x12]\n 53237: a4 = u8 [a0 + 0x13]\n 53240: a1 = a1 << 0x8\n 53243: a1 = a1 | a2\n 53246: a3 = a3 << 0x10\n 53249: a4 = a4 << 0x18\n 53252: a3 = a3 | a4\n 53255: a1 = a1 | a3\n 53258: a2 = u8 [a0 + 0x15]\n 53261: a3 = u8 [a0 + 0x14]\n 53264: a4 = u8 [a0 + 0x16]\n 53267: a5 = u8 [a0 + 0x17]\n 53270: a2 = a2 << 0x8\n 53273: a2 = a2 | a3\n 53276: a4 = a4 << 0x10\n 53279: a5 = a5 << 0x18\n 53282: a4 = a4 | a5\n 53285: a2 = a2 | a4\n 53288: a2 = a2 << 0x20\n 53291: a1 = a1 | a2\n 53294: u64 [sp + 0x10] = a1\n 53297: a1 = u8 [a0 + 0x9]\n 53300: a2 = u8 [a0 + 0x8]\n 53303: a3 = u8 [a0 + 0xa]\n 53306: a4 = u8 [a0 + 0xb]\n 53309: a1 = a1 << 0x8\n 53312: a1 = a1 | a2\n 53315: a3 = a3 << 0x10\n 53318: a4 = a4 << 0x18\n 53321: a3 = a3 | a4\n 53324: a1 = a1 | a3\n 53327: a2 = u8 [a0 + 0xd]\n 53330: a3 = u8 [a0 + 0xc]\n 53333: a4 = u8 [a0 + 0xe]\n 53336: a5 = u8 [a0 + 0xf]\n 53339: a2 = a2 << 0x8\n 53342: a2 = a2 | a3\n 53345: a4 = a4 << 0x10\n 53348: a5 = a5 << 0x18\n 53351: a4 = a4 | a5\n 53354: a2 = a2 | a4\n 53357: a2 = a2 << 0x20\n 53360: s1 = a2 | a1\n 53363: a1 = u8 [a0 + 0x1]\n 53366: a2 = u8 [a0]\n 53368: a3 = u8 [a0 + 0x2]\n 53371: a4 = u8 [a0 + 0x3]\n 53374: a1 = a1 << 0x8\n 53377: a1 = a1 | a2\n 53380: a3 = a3 << 0x10\n 53383: a4 = a4 << 0x18\n 53386: a3 = a3 | a4\n 53389: a1 = a1 | a3\n 53392: a2 = u8 [a0 + 0x5]\n 53395: a3 = u8 [a0 + 0x4]\n 53398: a4 = u8 [a0 + 0x6]\n 53401: a0 = u8 [a0 + 0x7]\n 53404: a2 = a2 << 0x8\n 53407: a2 = a2 | a3\n 53410: a4 = a4 << 0x10\n 53413: a0 = a0 << 0x18\n 53416: a0 = a0 | a4\n 53419: a0 = a0 | a2\n 53422: a0 = a0 << 0x20\n 53425: s0 = a0 | a1\n 53428: i32 a0 = t0 + 0\n 53430: a1 = 0x20\n 53433: ra = 642, jump @0\n      : @786 [@dyn 321] (gas: 73)\n 53440: a4 = s1\n 53442: a2 = u64 [sp + 0x10]\n 53445: s1 = u64 [sp + 0x18]\n 53448: t0 = u64 [sp + 0x48]\n 53451: a1 = a4 >> 0x38\n 53454: u8 [a0 + 0xf] = a1\n 53457: a1 = a4 >> 0x30\n 53460: u8 [a0 + 0xe] = a1\n 53463: a1 = a4 >> 0x28\n 53466: u8 [a0 + 0xd] = a1\n 53469: a1 = a4 >> 0x20\n 53472: u8 [a0 + 0xc] = a1\n 53475: a1 = a4 >> 0x18\n 53478: u8 [a0 + 0xb] = a1\n 53481: a1 = a4 >> 0x10\n 53484: u8 [a0 + 0xa] = a1\n 53487: a1 = a4 >> 0x8\n 53490: u8 [a0 + 0x9] = a1\n 53493: a1 = s0 >> 0x38\n 53496: u8 [a0 + 0x7] = a1\n 53499: a1 = s0 >> 0x30\n 53502: u8 [a0 + 0x6] = a1\n 53505: a1 = s0 >> 0x28\n 53508: u8 [a0 + 0x5] = a1\n 53511: a1 = s0 >> 0x20\n 53514: u8 [a0 + 0x4] = a1\n 53517: a1 = s0 >> 0x18\n 53520: u8 [a0 + 0x3] = a1\n 53523: a1 = s0 >> 0x10\n 53526: u8 [a0 + 0x2] = a1\n 53529: a1 = s0 >> 0x8\n 53532: u8 [a0 + 0x1] = a1\n 53535: a1 = a2 >> 0x38\n 53538: u8 [a0 + 0x17] = a1\n 53541: a1 = a2 >> 0x30\n 53544: u8 [a0 + 0x16] = a1\n 53547: a1 = a2 >> 0x28\n 53550: u8 [a0 + 0x15] = a1\n 53553: a1 = a2 >> 0x20\n 53556: u8 [a0 + 0x14] = a1\n 53559: a1 = a2 >> 0x18\n 53562: u8 [a0 + 0x13] = a1\n 53565: a1 = a2 >> 0x10\n 53568: u8 [a0 + 0x12] = a1\n 53571: a1 = a2 >> 0x8\n 53574: u8 [a0 + 0x11] = a1\n 53577: a1 = s1 >> 0x38\n 53580: u8 [a0 + 0x1f] = a1\n 53583: a1 = s1 >> 0x30\n 53586: u8 [a0 + 0x1e] = a1\n 53589: a1 = s1 >> 0x28\n 53592: u8 [a0 + 0x1d] = a1\n 53595: a1 = s1 >> 0x20\n 53598: u8 [a0 + 0x1c] = a1\n 53601: a1 = s1 >> 0x18\n 53604: u8 [a0 + 0x1b] = a1\n 53607: a1 = s1 >> 0x10\n 53610: u8 [a0 + 0x1a] = a1\n 53613: a1 = s1 >> 0x8\n 53616: u8 [a0 + 0x19] = a1\n 53619: ra = u64 [sp + 0x58]\n 53622: t2 = u64 [sp + 0x38]\n 53625: t1 = t2 | ra\n 53628: a1 = 0xffffffe0\n 53638: a3 = t0 <u a1\n 53641: a5 = u64 [sp + 0x50]\n 53644: a3 = 0 if a5 != 0\n 53646: a3 = 0 if t1 != 0\n 53648: u8 [a0 + 0x10] = a2\n 53651: u8 [a0 + 0x8] = a4\n 53654: u8 [a0] = s0\n 53656: u8 [a0 + 0x18] = s1\n 53659: jump @795 if a3 == 0\n      : @787 (gas: 9)\n 53663: a0 = u64 [sp + 0x30]\n 53666: a3 = u64 [sp + 0x28]\n 53669: a0 = a0 | a3\n 53672: a3 = u64 [sp + 0x20]\n 53675: a1 = a3 <u a1\n 53678: a3 = u64 [sp + 0x40]\n 53681: a1 = 0 if a3 != 0\n 53683: a1 = 0 if a0 != 0\n 53685: jump @795 if a1 == 0\n      : @788 (gas: 15)\n 53689: a1 = reverse s0\n 53691: a3 = reverse a4\n 53693: a4 = reverse a2\n 53695: s0 = reverse s1\n 53697: a0 = s0 | a3\n 53700: u64 [sp + 0x30] = a1\n 53703: u64 [sp + 0x20] = a4\n 53706: a1 = a1 | a4\n 53709: a0 = a0 | a1\n 53712: a0 = a0 >> 0x20\n 53715: u64 [sp + 0x28] = a3\n 53718: a1 = a1 | a3\n 53721: a1 = a1 << 0x20\n 53724: a0 = a0 | a1\n 53727: jump @795 if a0 != 0\n      : @789 (gas: 19)\n 53731: a3 = t0 + 0x20\n 53734: u64 [sp + 0x40] = a3\n 53737: a0 = a3 <u t0\n 53740: a1 = a5 + a0\n 53743: u64 [sp + 0x48] = a1\n 53746: a1 = a1 <u a5\n 53749: a1 = a0 if a0 == 0\n 53752: a1 = a1 + t2\n 53755: u64 [sp + 0x50] = a1\n 53758: a0 = a1 <u t2\n 53761: a0 = a0 + ra\n 53764: u64 [sp + 0x58] = a0\n 53767: i32 a0 = a3 + 0\n 53769: a1 = u64 [sp + 0x8]\n 53772: i32 a1 = a1 + 0x20\n 53775: u64 [sp + 0x38] = a1\n 53778: i32 s1 = s0 + 0\n 53780: a1 = s1\n 53782: ra = 644, jump @0\n      : @790 [@dyn 322] (gas: 5)\n 53789: u64 [sp + 0x18] = a0\n 53792: a0 = u64 [sp + 0x38]\n 53795: a1 = s1\n 53797: s1 = s0\n 53799: ra = 646, jump @0\n      : @791 [@dyn 323] (gas: 4)\n 53806: a1 = a0\n 53808: a0 = u64 [sp + 0x18]\n 53811: a2 = s0\n 53813: ra = 648, jump @8\n      : @792 [@dyn 324] (gas: 29)\n 53820: a0 = u64 [sp + 0x40]\n 53823: a0 = a0 + s0\n 53826: a1 = a0 <u s0\n 53829: a4 = u64 [sp + 0x20]\n 53832: a2 = u64 [sp + 0x48]\n 53835: a2 = a2 + a4\n 53838: a2 = a2 + a1\n 53841: a3 = a2 ^ a4\n 53844: a4 = a2 <u a4\n 53847: a4 = a1 if a3 == 0\n 53850: a5 = u64 [sp + 0x28]\n 53853: a1 = u64 [sp + 0x50]\n 53856: a1 = a1 + a5\n 53859: a4 = a4 + a1\n 53862: a3 = a4 <u a1\n 53865: a1 = a1 <u a5\n 53868: a5 = u64 [sp + 0x30]\n 53871: s0 = u64 [sp + 0x58]\n 53874: a5 = a5 + s0\n 53877: a1 = a1 + a5\n 53880: a1 = a1 + a3\n 53883: a3 = a0 | a4\n 53886: a1 = a1 | a2\n 53889: a3 = a3 | a1\n 53892: a3 = a3 >> 0x20\n 53895: a1 = a1 | a4\n 53898: a1 = a1 << 0x20\n 53901: a1 = a1 | a3\n 53904: jump @795 if a1 != 0\n      : @793 (gas: 3)\n 53908: i32 a0 = a0 + 0\n 53910: a1 = 0x20\n 53913: ra = 650, jump @0\n      : @794 [@dyn 325] (gas: 56)\n 53920: u8 [a0 + 31] = 0\n 53923: u8 [a0 + 30] = 0\n 53926: u8 [a0 + 29] = 0\n 53929: u8 [a0 + 28] = 0\n 53932: u8 [a0 + 27] = 0\n 53935: u8 [a0 + 26] = 0\n 53938: u8 [a0 + 25] = 0\n 53941: u8 [a0 + 24] = 0\n 53944: u8 [a0 + 23] = 0\n 53947: u8 [a0 + 22] = 0\n 53950: u8 [a0 + 21] = 0\n 53953: u8 [a0 + 20] = 0\n 53956: u8 [a0 + 19] = 0\n 53959: u8 [a0 + 18] = 0\n 53962: u8 [a0 + 17] = 0\n 53965: u8 [a0 + 16] = 0\n 53968: u8 [a0 + 15] = 0\n 53971: u8 [a0 + 14] = 0\n 53974: u8 [a0 + 13] = 0\n 53977: u8 [a0 + 12] = 0\n 53980: u8 [a0 + 11] = 0\n 53983: u8 [a0 + 10] = 0\n 53986: u8 [a0 + 9] = 0\n 53989: u8 [a0 + 8] = 0\n 53992: u8 [a0 + 7] = 0\n 53995: u8 [a0 + 6] = 0\n 53998: u8 [a0 + 5] = 0\n 54001: u8 [a0 + 4] = 0\n 54004: u8 [a0 + 3] = 0\n 54007: u8 [a0 + 2] = 0\n 54010: u8 [a0 + 1] = 0\n 54013: u8 [a0 + 0] = 0\n 54015: a0 = s1 + 0x1f\n 54018: a1 = 0x1ffffffe0\n 54028: a0 = a0 & a1\n 54031: a1 = u64 [sp + 0x40]\n 54034: a1 = a1 + a0\n 54037: a0 = a1 <u a0\n 54040: a2 = u64 [sp + 0x48]\n 54043: a2 = a2 + a0\n 54046: a0 = 0 if a2 != 0\n 54048: a3 = u64 [sp + 0x50]\n 54051: a0 = a0 + a3\n 54054: a3 = a0 <u a3\n 54057: a4 = u64 [sp + 0x58]\n 54060: a3 = a3 + a4\n 54063: a4 = u64 [sp]\n 54065: u64 [a4] = a1\n 54067: u64 [a4 + 0x8] = a2\n 54070: u64 [a4 + 0x10] = a0\n 54073: u64 [a4 + 0x18] = a3\n 54076: ra = u64 [sp + 0x70]\n 54079: s0 = u64 [sp + 0x68]\n 54082: s1 = u64 [sp + 0x60]\n 54085: sp = sp + 0x78\n 54088: ret\n      : @795 (gas: 1)\n 54090: trap\n      : @796 (gas: 8)\n 54091: a0 = u64 [sp + 0x110]\n 54095: a1 = u64 [sp + 0x118]\n 54099: a2 = u64 [sp + 0x108]\n 54103: a3 = u64 [sp + 0x100]\n 54107: a1 = a1 | a2\n 54110: a0 = a0 | a3\n 54113: a0 = a0 | a1\n 54116: jump @805 if a0 != 0\n      : @797 (gas: 2)\n 54120: a0 = i32 [0x20004]\n 54125: jump @805 if a0 <=u 3\n      : @798 (gas: 7)\n 54130: u64 [sp + 216] = 0\n 54134: u64 [sp + 208] = 0\n 54138: u64 [sp + 200] = 0\n 54142: a0 = sp + 0xe0\n 54146: a1 = sp + 0xc0\n 54150: u64 [sp + 192] = 0\n 54154: ra = 652, jump @915\n      : @799 [@dyn 326] (gas: 11)\n 54160: a0 = u64 [sp + 0xf8]\n 54164: u64 [sp + 0x40] = a0\n 54167: a0 = u64 [sp + 0xf0]\n 54171: u64 [sp + 0x48] = a0\n 54174: a0 = u64 [sp + 0xe8]\n 54178: u64 [sp + 0x50] = a0\n 54181: a0 = u64 [sp + 0xe0]\n 54185: u64 [sp + 0x58] = a0\n 54188: a0 = 0x40\n 54191: a1 = 0x20\n 54194: ra = 654, jump @0\n      : @800 [@dyn 327] (gas: 100)\n 54201: a1 = u8 [a0 + 0x11]\n 54204: a2 = u8 [a0 + 0x10]\n 54207: a3 = u8 [a0 + 0x12]\n 54210: a4 = u8 [a0 + 0x13]\n 54213: a1 = a1 << 0x8\n 54216: a1 = a1 | a2\n 54219: a3 = a3 << 0x10\n 54222: a4 = a4 << 0x18\n 54225: a3 = a3 | a4\n 54228: a1 = a1 | a3\n 54231: a2 = u8 [a0 + 0x15]\n 54234: a3 = u8 [a0 + 0x14]\n 54237: a4 = u8 [a0 + 0x16]\n 54240: a5 = u8 [a0 + 0x17]\n 54243: a2 = a2 << 0x8\n 54246: a2 = a2 | a3\n 54249: a4 = a4 << 0x10\n 54252: a5 = a5 << 0x18\n 54255: a4 = a4 | a5\n 54258: a2 = a2 | a4\n 54261: a2 = a2 << 0x20\n 54264: t0 = a2 | a1\n 54267: a2 = u8 [a0 + 0x1]\n 54270: a3 = u8 [a0]\n 54272: a4 = u8 [a0 + 0x2]\n 54275: a5 = u8 [a0 + 0x3]\n 54278: a2 = a2 << 0x8\n 54281: a2 = a2 | a3\n 54284: a4 = a4 << 0x10\n 54287: a5 = a5 << 0x18\n 54290: a4 = a4 | a5\n 54293: a2 = a2 | a4\n 54296: a3 = u8 [a0 + 0x5]\n 54299: a4 = u8 [a0 + 0x4]\n 54302: a5 = u8 [a0 + 0x6]\n 54305: s1 = u8 [a0 + 0x7]\n 54308: a3 = a3 << 0x8\n 54311: a3 = a3 | a4\n 54314: a5 = a5 << 0x10\n 54317: s1 = s1 << 0x18\n 54320: a5 = a5 | s1\n 54323: a3 = a3 | a5\n 54326: a3 = a3 << 0x20\n 54329: a2 = a2 | a3\n 54332: a3 = u8 [a0 + 0x19]\n 54335: a4 = u8 [a0 + 0x18]\n 54338: a5 = u8 [a0 + 0x1a]\n 54341: s1 = u8 [a0 + 0x1b]\n 54344: a3 = a3 << 0x8\n 54347: a3 = a3 | a4\n 54350: a5 = a5 << 0x10\n 54353: s1 = s1 << 0x18\n 54356: a5 = a5 | s1\n 54359: a3 = a3 | a5\n 54362: a4 = u8 [a0 + 0x1d]\n 54365: a5 = u8 [a0 + 0x1c]\n 54368: s1 = u8 [a0 + 0x1e]\n 54371: a1 = u8 [a0 + 0x1f]\n 54374: a4 = a4 << 0x8\n 54377: a4 = a4 | a5\n 54380: s1 = s1 << 0x10\n 54383: a1 = a1 << 0x18\n 54386: a1 = a1 | s1\n 54389: a1 = a1 | a4\n 54392: a1 = a1 << 0x20\n 54395: a3 = a3 | a1\n 54398: a1 = u8 [a0 + 0x9]\n 54401: a4 = u8 [a0 + 0x8]\n 54404: a5 = u8 [a0 + 0xa]\n 54407: s1 = u8 [a0 + 0xb]\n 54410: a1 = a1 << 0x8\n 54413: a1 = a1 | a4\n 54416: a5 = a5 << 0x10\n 54419: s1 = s1 << 0x18\n 54422: a5 = a5 | s1\n 54425: a1 = a1 | a5\n 54428: a4 = u8 [a0 + 0xd]\n 54431: a5 = u8 [a0 + 0xc]\n 54434: s1 = u8 [a0 + 0xe]\n 54437: a0 = u8 [a0 + 0xf]\n 54440: a4 = a4 << 0x8\n 54443: a4 = a4 | a5\n 54446: s1 = s1 << 0x10\n 54449: a0 = a0 << 0x18\n 54452: a0 = a0 | s1\n 54455: a0 = a0 | a4\n 54458: a0 = a0 << 0x20\n 54461: a0 = a0 | a1\n 54464: s1 = reverse a0\n 54466: a3 = reverse a3\n 54468: a4 = reverse a2\n 54470: a2 = reverse t0\n 54472: a0 = a2 | a4\n 54475: a1 = a3 | s1\n 54478: a1 = a1 | a0\n 54481: a1 = a1 >> 0x20\n 54484: a0 = a0 | s1\n 54487: a0 = a0 << 0x20\n 54490: a0 = a0 | a1\n 54493: jump @804 if a0 != 0\n      : @801 (gas: 19)\n 54497: a0 = a3 + 0x20\n 54500: u64 [sp + 0x18] = a0\n 54503: a0 = a0 <u a3\n 54506: a1 = a2 + a0\n 54509: u64 [sp + 0x8] = a1\n 54512: a1 = a1 <u a2\n 54515: a1 = a0 if a0 == 0\n 54518: a1 = a1 + s1\n 54521: u64 [sp + 0x10] = a1\n 54524: a0 = a1 <u s1\n 54527: a0 = a0 + a4\n 54530: u64 [sp + 0x20] = a0\n 54533: i32 a0 = a3 + 0\n 54535: a1 = 0x20\n 54538: u64 [sp] = a0\n 54540: u64 [sp + 0x30] = a3\n 54543: u64 [sp + 0x28] = a2\n 54546: u64 [sp + 0x38] = a4\n 54549: ra = 656, jump @0\n      : @802 [@dyn 328] (gas: 52)\n 54556: u8 [a0 + 31] = 0x20\n 54560: u8 [a0 + 30] = 0\n 54563: u8 [a0 + 29] = 0\n 54566: u8 [a0 + 28] = 0\n 54569: u8 [a0 + 27] = 0\n 54572: u8 [a0 + 26] = 0\n 54575: u8 [a0 + 25] = 0\n 54578: u8 [a0 + 24] = 0\n 54581: u8 [a0 + 23] = 0\n 54584: u8 [a0 + 22] = 0\n 54587: u8 [a0 + 21] = 0\n 54590: u8 [a0 + 20] = 0\n 54593: u8 [a0 + 19] = 0\n 54596: u8 [a0 + 18] = 0\n 54599: u8 [a0 + 17] = 0\n 54602: u8 [a0 + 16] = 0\n 54605: u8 [a0 + 15] = 0\n 54608: u8 [a0 + 14] = 0\n 54611: u8 [a0 + 13] = 0\n 54614: u8 [a0 + 12] = 0\n 54617: u8 [a0 + 11] = 0\n 54620: u8 [a0 + 10] = 0\n 54623: u8 [a0 + 9] = 0\n 54626: u8 [a0 + 8] = 0\n 54629: u8 [a0 + 7] = 0\n 54632: u8 [a0 + 6] = 0\n 54635: u8 [a0 + 5] = 0\n 54638: u8 [a0 + 4] = 0\n 54641: u8 [a0 + 3] = 0\n 54644: u8 [a0 + 2] = 0\n 54647: u8 [a0 + 1] = 0\n 54650: u8 [a0 + 0] = 0\n 54652: a0 = u64 [sp + 0x8]\n 54655: u64 [sp + 0x68] = a0\n 54658: a0 = u64 [sp + 0x18]\n 54661: u64 [sp + 0x60] = a0\n 54664: a0 = u64 [sp + 0x40]\n 54667: u64 [sp + 0x98] = a0\n 54671: a0 = u64 [sp + 0x48]\n 54674: u64 [sp + 0x90] = a0\n 54678: a0 = u64 [sp + 0x50]\n 54681: u64 [sp + 0x88] = a0\n 54685: a0 = u64 [sp + 0x58]\n 54688: u64 [sp + 0x80] = a0\n 54692: a0 = u64 [sp + 0x10]\n 54695: u64 [sp + 0x70] = a0\n 54698: a0 = sp + 0xa0\n 54702: a1 = sp + 0x80\n 54706: a2 = sp + 0x60\n 54709: a3 = u64 [sp + 0x20]\n 54712: u64 [sp + 0x78] = a3\n 54715: ra = 658, jump @782\n      : @803 [@dyn 329] (gas: 30)\n 54721: a0 = u64 [sp + 0xa8]\n 54725: t0 = u64 [sp + 0xb8]\n 54729: t1 = u64 [sp + 0xa0]\n 54733: a3 = u64 [sp + 0xb0]\n 54737: a1 = u64 [sp + 0x28]\n 54740: a4 = a0 ^ a1\n 54743: a5 = a0 <u a1\n 54746: t2 = a1\n 54748: a2 = u64 [sp + 0x30]\n 54751: a1 = t1 <u a2\n 54754: a5 = a1 if a4 == 0\n 54757: a4 = a3 - s1\n 54760: a3 = a3 <u s1\n 54763: s1 = u64 [sp + 0x38]\n 54766: s1 = t0 - s1\n 54769: s1 = s1 - a3\n 54772: a3 = a4 <u a5\n 54775: s1 = s1 - a3\n 54778: a4 = a4 - a5\n 54781: a0 = a0 - t2\n 54784: a1 = a0 - a1\n 54787: a0 = t1 - a2\n 54790: a1 = a1 | s1\n 54793: a2 = a0 | a4\n 54796: a2 = a2 | a1\n 54799: a1 = a1 | a4\n 54802: a2 = a2 >> 0x20\n 54805: a1 = a1 << 0x20\n 54808: a1 = a1 | a2\n 54811: jump @807 if a1 == 0\n      : @804 (gas: 1)\n 54814: trap\n      : @805 (gas: 3)\n 54815: a0 = 0\n 54817: a1 = 0\n 54819: ra = 660, jump @0\n      : @806 [@dyn 330] (gas: 5)\n 54826: i32 a1 = a0 + 0\n 54828: a0 = 0x1\n 54831: a2 = 0\n 54833: ecalli 7 // 'seal_return'\n 54835: fallthrough\n      : @807 (gas: 4)\n 54836: i32 s1 = a0 + 0\n 54838: a0 = u64 [sp]\n 54840: a1 = s1\n 54842: ra = 662, jump @0\n      : @808 [@dyn 331] (gas: 6)\n 54849: i32 a1 = a0 + 0\n 54851: a0 = 0\n 54853: a2 = s1\n 54855: ra = 0x298\n 54859: ecalli 7 // 'seal_return'\n 54861: fallthrough\n      : @809 [@dyn 332] (gas: 13)\n 54862: sp = sp + 0xfffffffffffffee0\n 54866: u64 [sp + 0x118] = ra\n 54870: u64 [sp + 0x110] = s0\n 54874: u64 [sp + 0x108] = s1\n 54878: s0 = sp + 0x120\n 54882: sp = sp & 0xffffffffffffffe0\n 54885: u64 [sp + 248] = 0\n 54889: u64 [sp + 240] = 0\n 54893: u64 [sp + 232] = 0\n 54897: u64 [sp + 224] = 0\n 54901: i32 a0 = sp + 0xe0\n 54905: ecalli 10 // 'value_transferred'\n 54907: fallthrough\n      : @810 (gas: 8)\n 54908: a0 = u64 [sp + 0xf0]\n 54912: a1 = u64 [sp + 0xf8]\n 54916: a2 = u64 [sp + 0xe8]\n 54920: a3 = u64 [sp + 0xe0]\n 54924: a1 = a1 | a2\n 54927: a0 = a0 | a3\n 54930: a0 = a0 | a1\n 54933: jump @819 if a0 != 0\n      : @811 (gas: 2)\n 54937: a0 = i32 [0x20004]\n 54942: jump @819 if a0 <=u 3\n      : @812 (gas: 44)\n 54947: a0 = sp + 0xc0\n 54951: ra = 0x29a\n 54955: sp = sp + 0xfffffffffffffae0\n 54959: u64 [sp + 0x518] = ra\n 54963: u64 [sp + 0x510] = s0\n 54967: u64 [sp + 0x508] = s1\n 54971: s0 = sp + 0x520\n 54975: sp = sp & 0xffffffffffffffe0\n 54978: s1 = sp\n 54980: u64 [s1 + 0xb0] = a0\n 54984: u64 [s1 + 1112] = 0\n 54988: u64 [s1 + 1104] = 0\n 54992: u64 [s1 + 1096] = 0\n 54996: a0 = s1 + 0x460\n 55000: a1 = s1 + 0x440\n 55004: u64 [s1 + 1088] = 0\n 55008: ra = 0x32e\n 55012: sp = sp + 0xffffffffffffff40\n 55016: u64 [sp + 0xb8] = ra\n 55020: u64 [sp + 0xb0] = s0\n 55024: u64 [sp + 0xa8] = s1\n 55028: s0 = sp + 0xc0\n 55032: sp = sp & 0xffffffffffffffe0\n 55035: u64 [sp + 0x18] = a0\n 55038: a0 = u64 [a1 + 0x18]\n 55041: a2 = u64 [a1 + 0x10]\n 55044: a3 = u64 [a1 + 0x8]\n 55047: a1 = u64 [a1]\n 55049: u64 [sp + 0x78] = a0\n 55052: u64 [sp + 0x70] = a2\n 55055: u64 [sp + 0x68] = a3\n 55058: u64 [sp + 0x60] = a1\n 55061: u64 [sp + 152] = 0\n 55065: u64 [sp + 144] = 0\n 55069: u64 [sp + 136] = 0\n 55073: u64 [sp + 128] = 0\n 55077: u32 [sp + 160] = 0x20\n 55082: i32 a1 = sp + 0x60\n 55085: i32 a3 = sp + 0x80\n 55089: i32 a4 = sp + 0xa0\n 55093: a2 = 0xffffffffffffffff\n 55096: a0 = 0\n 55098: ecalli 4 // 'get_storage'\n 55100: jump @927\n      : @813 [@dyn 333] (gas: 11)\n 55103: a0 = u64 [sp + 0xd8]\n 55107: u64 [sp + 0x40] = a0\n 55110: a0 = u64 [sp + 0xd0]\n 55114: u64 [sp + 0x48] = a0\n 55117: a0 = u64 [sp + 0xc8]\n 55121: u64 [sp + 0x50] = a0\n 55124: a0 = u64 [sp + 0xc0]\n 55128: u64 [sp + 0x58] = a0\n 55131: a0 = 0x40\n 55134: a1 = 0x20\n 55137: ra = 668, jump @0\n      : @814 [@dyn 334] (gas: 100)\n 55144: a1 = u8 [a0 + 0x11]\n 55147: a2 = u8 [a0 + 0x10]\n 55150: a3 = u8 [a0 + 0x12]\n 55153: a4 = u8 [a0 + 0x13]\n 55156: a1 = a1 << 0x8\n 55159: a1 = a1 | a2\n 55162: a3 = a3 << 0x10\n 55165: a4 = a4 << 0x18\n 55168: a3 = a3 | a4\n 55171: a1 = a1 | a3\n 55174: a2 = u8 [a0 + 0x15]\n 55177: a3 = u8 [a0 + 0x14]\n 55180: a4 = u8 [a0 + 0x16]\n 55183: a5 = u8 [a0 + 0x17]\n 55186: a2 = a2 << 0x8\n 55189: a2 = a2 | a3\n 55192: a4 = a4 << 0x10\n 55195: a5 = a5 << 0x18\n 55198: a4 = a4 | a5\n 55201: a2 = a2 | a4\n 55204: a2 = a2 << 0x20\n 55207: t0 = a2 | a1\n 55210: a2 = u8 [a0 + 0x1]\n 55213: a3 = u8 [a0]\n 55215: a4 = u8 [a0 + 0x2]\n 55218: a5 = u8 [a0 + 0x3]\n 55221: a2 = a2 << 0x8\n 55224: a2 = a2 | a3\n 55227: a4 = a4 << 0x10\n 55230: a5 = a5 << 0x18\n 55233: a4 = a4 | a5\n 55236: a2 = a2 | a4\n 55239: a3 = u8 [a0 + 0x5]\n 55242: a4 = u8 [a0 + 0x4]\n 55245: a5 = u8 [a0 + 0x6]\n 55248: s1 = u8 [a0 + 0x7]\n 55251: a3 = a3 << 0x8\n 55254: a3 = a3 | a4\n 55257: a5 = a5 << 0x10\n 55260: s1 = s1 << 0x18\n 55263: a5 = a5 | s1\n 55266: a3 = a3 | a5\n 55269: a3 = a3 << 0x20\n 55272: a2 = a2 | a3\n 55275: a3 = u8 [a0 + 0x19]\n 55278: a4 = u8 [a0 + 0x18]\n 55281: a5 = u8 [a0 + 0x1a]\n 55284: s1 = u8 [a0 + 0x1b]\n 55287: a3 = a3 << 0x8\n 55290: a3 = a3 | a4\n 55293: a5 = a5 << 0x10\n 55296: s1 = s1 << 0x18\n 55299: a5 = a5 | s1\n 55302: a3 = a3 | a5\n 55305: a4 = u8 [a0 + 0x1d]\n 55308: a5 = u8 [a0 + 0x1c]\n 55311: s1 = u8 [a0 + 0x1e]\n 55314: a1 = u8 [a0 + 0x1f]\n 55317: a4 = a4 << 0x8\n 55320: a4 = a4 | a5\n 55323: s1 = s1 << 0x10\n 55326: a1 = a1 << 0x18\n 55329: a1 = a1 | s1\n 55332: a1 = a1 | a4\n 55335: a1 = a1 << 0x20\n 55338: a3 = a3 | a1\n 55341: a1 = u8 [a0 + 0x9]\n 55344: a4 = u8 [a0 + 0x8]\n 55347: a5 = u8 [a0 + 0xa]\n 55350: s1 = u8 [a0 + 0xb]\n 55353: a1 = a1 << 0x8\n 55356: a1 = a1 | a4\n 55359: a5 = a5 << 0x10\n 55362: s1 = s1 << 0x18\n 55365: a5 = a5 | s1\n 55368: a1 = a1 | a5\n 55371: a4 = u8 [a0 + 0xd]\n 55374: a5 = u8 [a0 + 0xc]\n 55377: s1 = u8 [a0 + 0xe]\n 55380: a0 = u8 [a0 + 0xf]\n 55383: a4 = a4 << 0x8\n 55386: a4 = a4 | a5\n 55389: s1 = s1 << 0x10\n 55392: a0 = a0 << 0x18\n 55395: a0 = a0 | s1\n 55398: a0 = a0 | a4\n 55401: a0 = a0 << 0x20\n 55404: a0 = a0 | a1\n 55407: s1 = reverse a0\n 55409: a3 = reverse a3\n 55411: a4 = reverse a2\n 55413: a2 = reverse t0\n 55415: a0 = a2 | a4\n 55418: a1 = a3 | s1\n 55421: a1 = a1 | a0\n 55424: a1 = a1 >> 0x20\n 55427: a0 = a0 | s1\n 55430: a0 = a0 << 0x20\n 55433: a0 = a0 | a1\n 55436: jump @818 if a0 != 0\n      : @815 (gas: 19)\n 55440: a0 = a3 + 0x20\n 55443: u64 [sp + 0x18] = a0\n 55446: a0 = a0 <u a3\n 55449: a1 = a2 + a0\n 55452: u64 [sp + 0x8] = a1\n 55455: a1 = a1 <u a2\n 55458: a1 = a0 if a0 == 0\n 55461: a1 = a1 + s1\n 55464: u64 [sp + 0x10] = a1\n 55467: a0 = a1 <u s1\n 55470: a0 = a0 + a4\n 55473: u64 [sp + 0x20] = a0\n 55476: i32 a0 = a3 + 0\n 55478: a1 = 0x20\n 55481: u64 [sp] = a0\n 55483: u64 [sp + 0x30] = a3\n 55486: u64 [sp + 0x28] = a2\n 55489: u64 [sp + 0x38] = a4\n 55492: ra = 670, jump @0\n      : @816 [@dyn 335] (gas: 52)\n 55499: u8 [a0 + 31] = 0x20\n 55503: u8 [a0 + 30] = 0\n 55506: u8 [a0 + 29] = 0\n 55509: u8 [a0 + 28] = 0\n 55512: u8 [a0 + 27] = 0\n 55515: u8 [a0 + 26] = 0\n 55518: u8 [a0 + 25] = 0\n 55521: u8 [a0 + 24] = 0\n 55524: u8 [a0 + 23] = 0\n 55527: u8 [a0 + 22] = 0\n 55530: u8 [a0 + 21] = 0\n 55533: u8 [a0 + 20] = 0\n 55536: u8 [a0 + 19] = 0\n 55539: u8 [a0 + 18] = 0\n 55542: u8 [a0 + 17] = 0\n 55545: u8 [a0 + 16] = 0\n 55548: u8 [a0 + 15] = 0\n 55551: u8 [a0 + 14] = 0\n 55554: u8 [a0 + 13] = 0\n 55557: u8 [a0 + 12] = 0\n 55560: u8 [a0 + 11] = 0\n 55563: u8 [a0 + 10] = 0\n 55566: u8 [a0 + 9] = 0\n 55569: u8 [a0 + 8] = 0\n 55572: u8 [a0 + 7] = 0\n 55575: u8 [a0 + 6] = 0\n 55578: u8 [a0 + 5] = 0\n 55581: u8 [a0 + 4] = 0\n 55584: u8 [a0 + 3] = 0\n 55587: u8 [a0 + 2] = 0\n 55590: u8 [a0 + 1] = 0\n 55593: u8 [a0 + 0] = 0\n 55595: a0 = u64 [sp + 0x8]\n 55598: u64 [sp + 0x68] = a0\n 55601: a0 = u64 [sp + 0x18]\n 55604: u64 [sp + 0x60] = a0\n 55607: a0 = u64 [sp + 0x40]\n 55610: u64 [sp + 0x98] = a0\n 55614: a0 = u64 [sp + 0x48]\n 55617: u64 [sp + 0x90] = a0\n 55621: a0 = u64 [sp + 0x50]\n 55624: u64 [sp + 0x88] = a0\n 55628: a0 = u64 [sp + 0x58]\n 55631: u64 [sp + 0x80] = a0\n 55635: a0 = u64 [sp + 0x10]\n 55638: u64 [sp + 0x70] = a0\n 55641: a0 = sp + 0xa0\n 55645: a1 = sp + 0x80\n 55649: a2 = sp + 0x60\n 55652: a3 = u64 [sp + 0x20]\n 55655: u64 [sp + 0x78] = a3\n 55658: ra = 672, jump @782\n      : @817 [@dyn 336] (gas: 30)\n 55664: a0 = u64 [sp + 0xa8]\n 55668: t0 = u64 [sp + 0xb8]\n 55672: t1 = u64 [sp + 0xa0]\n 55676: a3 = u64 [sp + 0xb0]\n 55680: a1 = u64 [sp + 0x28]\n 55683: a4 = a0 ^ a1\n 55686: a5 = a0 <u a1\n 55689: t2 = a1\n 55691: a2 = u64 [sp + 0x30]\n 55694: a1 = t1 <u a2\n 55697: a5 = a1 if a4 == 0\n 55700: a4 = a3 - s1\n 55703: a3 = a3 <u s1\n 55706: s1 = u64 [sp + 0x38]\n 55709: s1 = t0 - s1\n 55712: s1 = s1 - a3\n 55715: a3 = a4 <u a5\n 55718: s1 = s1 - a3\n 55721: a4 = a4 - a5\n 55724: a0 = a0 - t2\n 55727: a1 = a0 - a1\n 55730: a0 = t1 - a2\n 55733: a1 = a1 | s1\n 55736: a2 = a0 | a4\n 55739: a2 = a2 | a1\n 55742: a1 = a1 | a4\n 55745: a2 = a2 >> 0x20\n 55748: a1 = a1 << 0x20\n 55751: a1 = a1 | a2\n 55754: jump @821 if a1 == 0\n      : @818 (gas: 1)\n 55757: trap\n      : @819 (gas: 3)\n 55758: a0 = 0\n 55760: a1 = 0\n 55762: ra = 674, jump @0\n      : @820 [@dyn 337] (gas: 5)\n 55769: i32 a1 = a0 + 0\n 55771: a0 = 0x1\n 55774: a2 = 0\n 55776: ecalli 7 // 'seal_return'\n 55778: fallthrough\n      : @821 (gas: 4)\n 55779: i32 s1 = a0 + 0\n 55781: a0 = u64 [sp]\n 55783: a1 = s1\n 55785: ra = 676, jump @0\n      : @822 [@dyn 338] (gas: 6)\n 55792: i32 a1 = a0 + 0\n 55794: a0 = 0\n 55796: a2 = s1\n 55798: ra = 0x2a6\n 55802: ecalli 7 // 'seal_return'\n 55804: fallthrough\n      : @823 [@dyn 339] (gas: 5)\n 55805: sp = sp + 0xfffffffffffffff8\n 55808: u64 [sp] = ra\n 55810: a0 = 0\n 55812: a1 = 0\n 55814: ra = 680, jump @0\n      : @824 [@dyn 340] (gas: 6)\n 55821: i32 a1 = a0 + 0\n 55823: a0 = 0x1\n 55826: a2 = 0\n 55828: ra = 0x2aa\n 55832: ecalli 7 // 'seal_return'\n 55834: fallthrough\n      : @825 [@dyn 341] (gas: 16)\n 55835: sp = sp + 0xffffffffffffffa8\n 55838: u64 [sp + 0x50] = ra\n 55841: u64 [sp + 0x48] = s0\n 55844: u64 [sp + 0x40] = s1\n 55847: a3 = u64 [a0 + 0x10]\n 55850: a4 = u64 [a0 + 0x18]\n 55853: a5 = u64 [a0 + 0x8]\n 55856: a0 = u64 [a0]\n 55858: a4 = a4 | a5\n 55861: a5 = a0 | a3\n 55864: a5 = a5 | a4\n 55867: a5 = a5 >> 0x20\n 55870: a3 = a3 | a4\n 55873: a3 = a3 << 0x20\n 55876: a3 = a3 | a5\n 55879: jump @833 if a3 != 0\n      : @826 (gas: 12)\n 55883: a4 = u64 [a2 + 0x18]\n 55886: a5 = u64 [a2 + 0x10]\n 55889: s0 = u64 [a2]\n 55891: s1 = u64 [a2 + 0x8]\n 55894: a2 = s0 | a5\n 55897: a3 = s1 | a4\n 55900: a2 = a2 | a3\n 55903: a2 = a2 >> 0x20\n 55906: a3 = a3 | a5\n 55909: a3 = a3 << 0x20\n 55912: a2 = a2 | a3\n 55915: jump @833 if a2 != 0\n      : @827 (gas: 18)\n 55919: u64 [sp + 0x28] = s1\n 55922: u64 [sp + 0x30] = a5\n 55925: u64 [sp + 0x38] = a4\n 55928: a2 = u64 [a1 + 0x18]\n 55931: a3 = u64 [a1 + 0x10]\n 55934: a5 = u64 [a1]\n 55936: a4 = u64 [a1 + 0x8]\n 55939: a1 = a5 | a3\n 55942: u64 [sp + 0x20] = a2\n 55945: u64 [sp + 0x10] = a4\n 55948: a2 = a2 | a4\n 55951: a1 = a1 | a2\n 55954: a1 = a1 >> 0x20\n 55957: u64 [sp + 0x18] = a3\n 55960: a2 = a2 | a3\n 55963: a2 = a2 << 0x20\n 55966: a1 = a1 | a2\n 55969: jump @833 if a1 != 0\n      : @828 (gas: 7)\n 55973: i32 a0 = a0 + 0\n 55975: u64 [sp + 0x8] = a0\n 55978: i32 a0 = a5 + 0\n 55980: i32 s1 = s0 + 0\n 55982: a1 = s1\n 55984: u64 [sp] = a5\n 55986: ra = 684, jump @0\n      : @829 [@dyn 342] (gas: 5)\n 55993: i32 a0 = a0 + 0\n 55995: a1 = s1\n 55997: a2 = u64 [sp + 0x8]\n 56000: ecalli 0 // 'call_data_copy'\n 56001: fallthrough\n      : @830 (gas: 29)\n 56002: a0 = u64 [sp]\n 56004: a0 = a0 + s0\n 56007: a1 = a0 <u s0\n 56010: a4 = u64 [sp + 0x28]\n 56013: a2 = u64 [sp + 0x10]\n 56016: a2 = a2 + a4\n 56019: a2 = a2 + a1\n 56022: a3 = a2 ^ a4\n 56025: a4 = a2 <u a4\n 56028: a4 = a1 if a3 == 0\n 56031: a5 = u64 [sp + 0x30]\n 56034: a1 = u64 [sp + 0x18]\n 56037: a1 = a1 + a5\n 56040: a4 = a4 + a1\n 56043: a3 = a4 <u a1\n 56046: a1 = a1 <u a5\n 56049: a5 = u64 [sp + 0x38]\n 56052: s1 = u64 [sp + 0x20]\n 56055: a5 = a5 + s1\n 56058: a1 = a1 + a5\n 56061: a1 = a1 + a3\n 56064: a3 = a0 | a4\n 56067: a1 = a1 | a2\n 56070: a3 = a3 | a1\n 56073: a3 = a3 >> 0x20\n 56076: a1 = a1 | a4\n 56079: a1 = a1 << 0x20\n 56082: a1 = a1 | a3\n 56085: jump @833 if a1 != 0\n      : @831 (gas: 3)\n 56088: i32 a0 = a0 + 0\n 56090: a1 = 0x20\n 56093: ra = 686, jump @0\n      : @832 [@dyn 343] (gas: 37)\n 56100: u8 [a0 + 31] = 0\n 56103: u8 [a0 + 30] = 0\n 56106: u8 [a0 + 29] = 0\n 56109: u8 [a0 + 28] = 0\n 56112: u8 [a0 + 27] = 0\n 56115: u8 [a0 + 26] = 0\n 56118: u8 [a0 + 25] = 0\n 56121: u8 [a0 + 24] = 0\n 56124: u8 [a0 + 23] = 0\n 56127: u8 [a0 + 22] = 0\n 56130: u8 [a0 + 21] = 0\n 56133: u8 [a0 + 20] = 0\n 56136: u8 [a0 + 19] = 0\n 56139: u8 [a0 + 18] = 0\n 56142: u8 [a0 + 17] = 0\n 56145: u8 [a0 + 16] = 0\n 56148: u8 [a0 + 15] = 0\n 56151: u8 [a0 + 14] = 0\n 56154: u8 [a0 + 13] = 0\n 56157: u8 [a0 + 12] = 0\n 56160: u8 [a0 + 11] = 0\n 56163: u8 [a0 + 10] = 0\n 56166: u8 [a0 + 9] = 0\n 56169: u8 [a0 + 8] = 0\n 56172: u8 [a0 + 7] = 0\n 56175: u8 [a0 + 6] = 0\n 56178: u8 [a0 + 5] = 0\n 56181: u8 [a0 + 4] = 0\n 56184: u8 [a0 + 3] = 0\n 56187: u8 [a0 + 2] = 0\n 56190: u8 [a0 + 1] = 0\n 56193: u8 [a0 + 0] = 0\n 56195: ra = u64 [sp + 0x50]\n 56198: s0 = u64 [sp + 0x48]\n 56201: s1 = u64 [sp + 0x40]\n 56204: sp = sp + 0x58\n 56207: ret\n      : @833 (gas: 1)\n 56209: trap\n      : @834 (gas: 16)\n 56210: sp = sp + 0xfffffffffffffee0\n 56214: u64 [sp + 0x118] = ra\n 56218: u64 [sp + 0x110] = s0\n 56222: u64 [sp + 0x108] = s1\n 56226: s0 = sp + 0x120\n 56230: sp = sp & 0xfffffffffffffff0\n 56233: a4 = u64 [a2 + 0x18]\n 56236: a5 = u64 [a2 + 0x10]\n 56239: s1 = u64 [a2 + 0x8]\n 56242: u64 [sp + 0x50] = a4\n 56245: u64 [sp + 0x48] = a5\n 56248: a4 = a4 | a5\n 56251: a5 = s1 <u 0x1\n 56254: a5 = 0 if a4 != 0\n 56256: u64 [sp] = a0\n 56258: jump @848 if a5 == 0\n      : @835 (gas: 35)\n 56262: a0 = u64 [a3 + 0x18]\n 56265: u64 [sp + 0x18] = a0\n 56268: a0 = u64 [a3 + 0x10]\n 56271: u64 [sp + 0x20] = a0\n 56274: a0 = u64 [a3 + 0x8]\n 56277: u64 [sp + 0x8] = a0\n 56280: a0 = u64 [a3]\n 56282: u64 [sp + 0x10] = a0\n 56285: a2 = u64 [a2]\n 56287: a0 = u64 [a1 + 0x18]\n 56290: u64 [sp + 0x70] = a0\n 56293: a0 = u64 [a1 + 0x10]\n 56296: u64 [sp + 0x78] = a0\n 56299: a0 = u64 [a1 + 0x8]\n 56302: u64 [sp + 0x68] = a0\n 56305: a0 = u64 [a1]\n 56307: u64 [sp + 0x60] = a0\n 56310: a0 = a2 + 0x1f\n 56313: u64 [sp + 0x40] = a2\n 56316: a1 = a0 <u a2\n 56319: a1 = a1 + s1\n 56322: a1 = a1 & 0x1\n 56325: a0 = a0 & 0xffffffffffffffe0\n 56328: a2 = a0 + 0x20\n 56331: a0 = a2 <u a0\n 56334: a3 = a1 + a0\n 56337: a4 = a3 <u a1\n 56340: a4 = a0 if a0 == 0\n 56343: u64 [sp + 216] = 0\n 56347: u64 [sp + 0xc0] = a2\n 56351: u64 [sp + 0xc8] = a3\n 56355: a0 = sp + 0xe0\n 56359: a1 = sp + 0xc0\n 56363: u64 [sp + 0xd0] = a4\n 56367: ra = 688, jump @56\n      : @836 [@dyn 344] (gas: 15)\n 56374: a0 = u64 [sp + 0xf8]\n 56378: a2 = u64 [sp + 0xf0]\n 56382: a1 = u64 [sp + 0xe8]\n 56386: a3 = u64 [sp + 0xe0]\n 56390: u64 [sp + 0x58] = a0\n 56393: u64 [sp + 0x30] = a1\n 56396: a0 = a0 | a1\n 56399: a1 = a3 | a2\n 56402: a1 = a1 | a0\n 56405: a1 = a1 >> 0x20\n 56408: u64 [sp + 0x38] = a2\n 56411: a0 = a0 | a2\n 56414: a0 = a0 << 0x20\n 56417: a0 = a0 | a1\n 56420: jump @847 if a0 != 0\n      : @837 (gas: 4)\n 56424: u64 [sp + 0x28] = a3\n 56427: i32 a0 = a3 + 0\n 56429: a1 = 0x20\n 56432: ra = 690, jump @0\n      : @838 [@dyn 345] (gas: 102)\n 56439: t2 = u64 [sp + 0x40]\n 56442: a1 = u64 [sp + 0x60]\n 56445: a1 = a1 + t2\n 56448: a3 = a1 <u t2\n 56451: a2 = u64 [sp + 0x68]\n 56454: a2 = a2 + s1\n 56457: a4 = a2 + a3\n 56460: a5 = a4 ^ s1\n 56463: a2 = a4 <u s1\n 56466: a2 = a3 if a5 == 0\n 56469: a5 = u64 [sp + 0x8]\n 56472: a3 = a4 ^ a5\n 56475: a4 = a5 <u a4\n 56478: a5 = u64 [sp + 0x10]\n 56481: a1 = a5 <u a1\n 56484: ra = u64 [sp + 0x48]\n 56487: a5 = u64 [sp + 0x78]\n 56490: a5 = a5 + ra\n 56493: a1 = a4 if a3 != 0\n 56496: a3 = a5 <u ra\n 56499: t1 = u64 [sp + 0x50]\n 56502: a4 = u64 [sp + 0x70]\n 56505: a4 = a4 + t1\n 56508: a3 = a3 + a4\n 56511: a2 = a2 + a5\n 56514: a4 = a2 <u a5\n 56517: a3 = a3 + a4\n 56520: a5 = u64 [sp + 0x18]\n 56523: a4 = a3 ^ a5\n 56526: a3 = a5 <u a3\n 56529: t0 = u64 [sp + 0x20]\n 56532: a5 = t0 <u a2\n 56535: a3 = a5 if a4 == 0\n 56538: a2 = a2 ^ t0\n 56541: a2 = a2 | a4\n 56544: a1 = a3 if a2 != 0\n 56547: a2 = reverse t2\n 56549: a3 = a2 >> 0x38\n 56552: u8 [a0 + 0x1f] = a3\n 56555: a3 = a2 >> 0x30\n 56558: u8 [a0 + 0x1e] = a3\n 56561: a3 = a2 >> 0x28\n 56564: u8 [a0 + 0x1d] = a3\n 56567: a3 = a2 >> 0x20\n 56570: u8 [a0 + 0x1c] = a3\n 56573: a3 = a2 >> 0x18\n 56576: u8 [a0 + 0x1b] = a3\n 56579: a3 = a2 >> 0x10\n 56582: u8 [a0 + 0x1a] = a3\n 56585: a3 = a2 >> 0x8\n 56588: u8 [a0 + 0x19] = a3\n 56591: a3 = reverse s1\n 56593: u8 [a0 + 0x18] = a2\n 56596: a2 = a3 >> 0x38\n 56599: u8 [a0 + 0x17] = a2\n 56602: a2 = a3 >> 0x30\n 56605: u8 [a0 + 0x16] = a2\n 56608: a2 = a3 >> 0x28\n 56611: u8 [a0 + 0x15] = a2\n 56614: a2 = a3 >> 0x20\n 56617: u8 [a0 + 0x14] = a2\n 56620: a2 = a3 >> 0x18\n 56623: u8 [a0 + 0x13] = a2\n 56626: a2 = a3 >> 0x10\n 56629: u8 [a0 + 0x12] = a2\n 56632: a2 = reverse ra\n 56634: u8 [a0 + 0x10] = a3\n 56637: a3 = a3 >> 0x8\n 56640: u8 [a0 + 0x11] = a3\n 56643: a3 = a2 >> 0x38\n 56646: u8 [a0 + 0xf] = a3\n 56649: a3 = a2 >> 0x30\n 56652: u8 [a0 + 0xe] = a3\n 56655: a3 = a2 >> 0x28\n 56658: u8 [a0 + 0xd] = a3\n 56661: a3 = a2 >> 0x20\n 56664: u8 [a0 + 0xc] = a3\n 56667: a3 = a2 >> 0x18\n 56670: u8 [a0 + 0xb] = a3\n 56673: a3 = a2 >> 0x10\n 56676: u8 [a0 + 0xa] = a3\n 56679: a3 = reverse t1\n 56681: u8 [a0 + 0x8] = a2\n 56684: a2 = a2 >> 0x8\n 56687: u8 [a0 + 0x9] = a2\n 56690: a2 = a3 >> 0x38\n 56693: u8 [a0 + 0x7] = a2\n 56696: a2 = a3 >> 0x30\n 56699: u8 [a0 + 0x6] = a2\n 56702: a2 = a3 >> 0x28\n 56705: u8 [a0 + 0x5] = a2\n 56708: a2 = a3 >> 0x20\n 56711: u8 [a0 + 0x4] = a2\n 56714: a2 = a3 >> 0x18\n 56717: u8 [a0 + 0x3] = a2\n 56720: a2 = a3 >> 0x10\n 56723: u8 [a0 + 0x2] = a2\n 56726: u8 [a0] = a3\n 56728: a3 = a3 >> 0x8\n 56731: u8 [a0 + 0x1] = a3\n 56734: t0 = u64 [sp + 0x60]\n 56737: jump @852 if a1 != 0\n      : @839 (gas: 12)\n 56741: a2 = u64 [sp + 0x78]\n 56744: a0 = t0 | a2\n 56747: a1 = u64 [sp + 0x70]\n 56750: a3 = u64 [sp + 0x68]\n 56753: a1 = a1 | a3\n 56756: a0 = a0 | a1\n 56759: a0 = a0 >> 0x20\n 56762: a1 = a1 | a2\n 56765: a1 = a1 << 0x20\n 56768: a0 = a0 | a1\n 56771: a3 = u64 [sp + 0x58]\n 56774: jump @847 if a0 != 0\n      : @840 (gas: 11)\n 56778: a0 = t2 | ra\n 56781: a1 = s1 | t1\n 56784: a0 = a0 | a1\n 56787: a0 = a0 >> 0x20\n 56790: a1 = a1 | ra\n 56793: a1 = a1 << 0x20\n 56796: a0 = a0 | a1\n 56799: a2 = u64 [sp + 0x38]\n 56802: a4 = u64 [sp + 0x30]\n 56805: a5 = u64 [sp + 0x28]\n 56808: jump @847 if a0 != 0\n      : @841 (gas: 7)\n 56812: u64 [sp + 0x78] = s1\n 56815: a0 = a2 | a3\n 56818: a1 = 0xffffffe0\n 56828: a1 = a5 <u a1\n 56831: a1 = 0 if a4 != 0\n 56833: a1 = 0 if a0 != 0\n 56835: jump @847 if a1 == 0\n      : @842 (gas: 16)\n 56839: s1 = a5 + 0x20\n 56842: a0 = s1 <u a5\n 56845: a1 = a4 + a0\n 56848: u64 [sp + 0x20] = a1\n 56851: a1 = a1 <u a4\n 56854: a1 = a0 if a0 == 0\n 56857: a1 = a1 + a2\n 56860: u64 [sp + 0x68] = a1\n 56863: a0 = a1 <u a2\n 56866: u64 [sp + 0x70] = a0\n 56869: i32 t0 = t0 + 0\n 56871: u64 [sp + 0x60] = t0\n 56874: i32 a0 = s1 + 0\n 56876: i32 a1 = t2 + 0\n 56878: u64 [sp + 0x18] = a1\n 56881: ra = 692, jump @0\n      : @843 [@dyn 346] (gas: 5)\n 56888: i32 a0 = a0 + 0\n 56890: a1 = u64 [sp + 0x18]\n 56893: a2 = u64 [sp + 0x60]\n 56896: ecalli 0 // 'call_data_copy'\n 56897: fallthrough\n      : @844 (gas: 31)\n 56898: a0 = u64 [sp + 0x40]\n 56901: a0 = a0 + s1\n 56904: a1 = a0 <u s1\n 56907: a2 = u64 [sp + 0x78]\n 56910: a4 = u64 [sp + 0x20]\n 56913: a2 = a2 + a4\n 56916: a2 = a2 + a1\n 56919: a3 = a2 ^ a4\n 56922: a4 = a2 <u a4\n 56925: a4 = a1 if a3 == 0\n 56928: a1 = u64 [sp + 0x48]\n 56931: a3 = u64 [sp + 0x68]\n 56934: a1 = a1 + a3\n 56937: a4 = a4 + a1\n 56940: t0 = a4 <u a1\n 56943: a1 = a1 <u a3\n 56946: a5 = u64 [sp + 0x50]\n 56949: s1 = u64 [sp + 0x58]\n 56952: a5 = a5 + s1\n 56955: a3 = u64 [sp + 0x70]\n 56958: a5 = a5 + a3\n 56961: a1 = a1 + a5\n 56964: a1 = a1 + t0\n 56967: a3 = a0 | a4\n 56970: a1 = a1 | a2\n 56973: a3 = a3 | a1\n 56976: a3 = a3 >> 0x20\n 56979: a1 = a1 | a4\n 56982: a1 = a1 << 0x20\n 56985: a1 = a1 | a3\n 56988: jump @847 if a1 != 0\n      : @845 (gas: 3)\n 56992: i32 a0 = a0 + 0\n 56994: a1 = 0x20\n 56997: ra = 694, jump @0\n      : @846 [@dyn 347] (gas: 46)\n 57004: u8 [a0 + 31] = 0\n 57007: u8 [a0 + 30] = 0\n 57010: u8 [a0 + 29] = 0\n 57013: u8 [a0 + 28] = 0\n 57016: u8 [a0 + 27] = 0\n 57019: u8 [a0 + 26] = 0\n 57022: u8 [a0 + 25] = 0\n 57025: u8 [a0 + 24] = 0\n 57028: u8 [a0 + 23] = 0\n 57031: u8 [a0 + 22] = 0\n 57034: u8 [a0 + 21] = 0\n 57037: u8 [a0 + 20] = 0\n 57040: u8 [a0 + 19] = 0\n 57043: u8 [a0 + 18] = 0\n 57046: u8 [a0 + 17] = 0\n 57049: u8 [a0 + 16] = 0\n 57052: u8 [a0 + 15] = 0\n 57055: u8 [a0 + 14] = 0\n 57058: u8 [a0 + 13] = 0\n 57061: u8 [a0 + 12] = 0\n 57064: u8 [a0 + 11] = 0\n 57067: u8 [a0 + 10] = 0\n 57070: u8 [a0 + 9] = 0\n 57073: u8 [a0 + 8] = 0\n 57076: u8 [a0 + 7] = 0\n 57079: u8 [a0 + 6] = 0\n 57082: u8 [a0 + 5] = 0\n 57085: u8 [a0 + 4] = 0\n 57088: u8 [a0 + 3] = 0\n 57091: u8 [a0 + 2] = 0\n 57094: u8 [a0 + 1] = 0\n 57097: u8 [a0 + 0] = 0\n 57099: a0 = u64 [sp]\n 57101: a1 = u64 [sp + 0x28]\n 57104: u64 [a0] = a1\n 57106: u64 [a0 + 0x18] = s1\n 57109: a1 = u64 [sp + 0x30]\n 57112: u64 [a0 + 0x8] = a1\n 57115: a1 = u64 [sp + 0x38]\n 57118: u64 [a0 + 0x10] = a1\n 57121: sp = s0 + 0xfffffffffffffee0\n 57125: ra = u64 [sp + 0x118]\n 57129: s0 = u64 [sp + 0x110]\n 57133: s1 = u64 [sp + 0x108]\n 57137: sp = sp + 0x120\n 57141: ret\n      : @847 (gas: 1)\n 57143: trap\n      : @848 (gas: 8)\n 57144: u64 [sp + 176] = 0\n 57148: u64 [sp + 168] = 0\n 57152: u64 [sp + 160] = 0\n 57156: a0 = 0x4e487b7100000000\n 57166: a1 = sp + 0xa0\n 57170: u64 [sp + 0xb8] = a0\n 57174: a0 = 0\n 57176: ra = 696, jump @23\n      : @849 [@dyn 348] (gas: 7)\n 57183: u64 [sp + 152] = 0\n 57187: u64 [sp + 144] = 0\n 57191: u64 [sp + 128] = 0x41\n 57196: a0 = 0x4\n 57199: a1 = sp + 0x80\n 57203: u64 [sp + 136] = 0\n 57207: ra = 698, jump @23\n      : @850 [@dyn 349] (gas: 3)\n 57214: a1 = 0x24\n 57217: a0 = 0\n 57219: ra = 700, jump @0\n      : @851 [@dyn 350] (gas: 5)\n 57226: i32 a1 = a0 + 0\n 57228: a0 = 0x1\n 57231: a2 = 0x24\n 57234: ecalli 7 // 'seal_return'\n 57236: fallthrough\n      : @852 (gas: 3)\n 57237: a0 = 0\n 57239: a1 = 0\n 57241: ra = 702, jump @0\n      : @853 [@dyn 351] (gas: 6)\n 57248: i32 a1 = a0 + 0\n 57250: a0 = 0x1\n 57253: a2 = 0\n 57255: ra = 0x2c0\n 57259: ecalli 7 // 'seal_return'\n 57261: fallthrough\n      : @854 [@dyn 352] (gas: 38)\n 57262: sp = sp + 0xffffffffffffff00\n 57266: u64 [sp + 0xf8] = ra\n 57270: u64 [sp + 0xf0] = s0\n 57274: u64 [sp + 0xe8] = s1\n 57278: s0 = sp + 0x100\n 57282: sp = sp & 0xffffffffffffffe0\n 57285: ra = u64 [a1]\n 57287: a4 = u64 [a2 + 0x8]\n 57290: t2 = u64 [a1 + 0x8]\n 57293: s1 = u64 [a2]\n 57295: a3 = ra + 0x1f\n 57298: t1 = a3 <u ra\n 57301: a5 = t2 + t1\n 57304: u64 [sp + 0x20] = s1\n 57307: a3 = a3 <u s1\n 57310: s1 = a5 ^ a4\n 57313: u64 [sp + 0x28] = a4\n 57316: a4 = a5 <u a4\n 57319: a4 = a3 if s1 == 0\n 57322: t0 = u64 [a1 + 0x10]\n 57325: u64 [sp + 0x38] = t2\n 57328: a3 = a5 <u t2\n 57331: a3 = t1 if t1 == 0\n 57334: t1 = u64 [a2 + 0x18]\n 57337: a5 = u64 [a1 + 0x18]\n 57340: s1 = u64 [a2 + 0x10]\n 57343: a3 = a3 + t0\n 57346: a1 = a3 <u t0\n 57349: u64 [sp + 0x30] = a5\n 57352: a1 = a1 + a5\n 57355: a2 = a1 ^ t1\n 57358: a1 = a1 <s t1\n 57361: a5 = a3 <u s1\n 57364: a1 = a5 if a2 == 0\n 57367: a3 = a3 ^ s1\n 57370: a2 = a2 | a3\n 57373: a4 = a1 if a2 != 0\n 57376: jump @859 if a4 == 0\n      : @855 (gas: 14)\n 57380: t2 = t0\n 57382: u64 [sp + 0x8] = s1\n 57385: u64 [sp + 0x10] = t1\n 57388: u64 [sp + 0x18] = a0\n 57391: a0 = ra | t2\n 57394: a1 = u64 [sp + 0x38]\n 57397: a2 = u64 [sp + 0x30]\n 57400: a1 = a1 | a2\n 57403: a0 = a0 | a1\n 57406: a0 = a0 >> 0x20\n 57409: a1 = a1 | t2\n 57412: a1 = a1 << 0x20\n 57415: a0 = a0 | a1\n 57418: jump @858 if a0 != 0\n      : @856 (gas: 41)\n 57422: s1 = t2\n 57424: i32 a1 = ra + 0\n 57426: i32 a0 = sp + 0xc0\n 57430: u64 [sp] = ra\n 57432: ecalli 1 // 'call_data_load'\n 57434: t0 = u64 [sp + 0xc0]\n 57438: t1 = u64 [sp + 0xc8]\n 57442: a2 = u64 [sp + 0xd0]\n 57446: a3 = u64 [sp + 0xd8]\n 57450: a0 = u64 [sp]\n 57452: a4 = a0 + 0x20\n 57455: a5 = a4 <u a0\n 57458: a1 = u64 [sp + 0x38]\n 57461: a0 = a1 + a5\n 57464: a1 = a0 <u a1\n 57467: a1 = a5 if a5 == 0\n 57470: a1 = a1 + s1\n 57473: a5 = a1 <u s1\n 57476: s1 = u64 [sp + 0x30]\n 57479: a5 = a5 + s1\n 57482: s1 = u64 [sp + 0x10]\n 57485: u64 [sp + 0x58] = s1\n 57488: s1 = u64 [sp + 0x8]\n 57491: u64 [sp + 0x50] = s1\n 57494: s1 = u64 [sp + 0x28]\n 57497: u64 [sp + 0x48] = s1\n 57500: s1 = u64 [sp + 0x20]\n 57503: u64 [sp + 0x40] = s1\n 57506: u64 [sp + 0x78] = a3\n 57509: u64 [sp + 0x70] = a2\n 57512: u64 [sp + 0x68] = t1\n 57515: u64 [sp + 0x60] = t0\n 57518: u64 [sp + 0x88] = a0\n 57522: u64 [sp + 0x80] = a4\n 57526: u64 [sp + 0x90] = a1\n 57530: a0 = sp + 0xa0\n 57534: a1 = sp + 0x80\n 57538: a2 = sp + 0x60\n 57541: a3 = sp + 0x40\n 57544: u64 [sp + 0x98] = a5\n 57548: ra = 706, jump @834\n      : @857 [@dyn 353] (gas: 15)\n 57554: a0 = u64 [sp + 0xb0]\n 57558: a1 = u64 [sp + 0xb8]\n 57562: a2 = u64 [sp + 0xa0]\n 57566: a3 = u64 [sp + 0xa8]\n 57570: a4 = u64 [sp + 0x18]\n 57573: u64 [a4 + 0x10] = a0\n 57576: u64 [a4 + 0x18] = a1\n 57579: u64 [a4] = a2\n 57581: u64 [a4 + 0x8] = a3\n 57584: sp = s0 + 0xffffffffffffff00\n 57588: ra = u64 [sp + 0xf8]\n 57592: s0 = u64 [sp + 0xf0]\n 57596: s1 = u64 [sp + 0xe8]\n 57600: sp = sp + 0x100\n 57604: ret\n      : @858 (gas: 1)\n 57606: trap\n      : @859 (gas: 3)\n 57607: a0 = 0\n 57609: a1 = 0\n 57611: ra = 708, jump @0\n      : @860 [@dyn 354] (gas: 6)\n 57618: i32 a1 = a0 + 0\n 57620: a0 = 0x1\n 57623: a2 = 0\n 57625: ra = 0x2c6\n 57629: ecalli 7 // 'seal_return'\n 57631: fallthrough\n      : @861 [@dyn 355] (gas: 42)\n 57632: sp = sp + 0xfffffffffffffee0\n 57636: u64 [sp + 0x118] = ra\n 57640: u64 [sp + 0x110] = s0\n 57644: u64 [sp + 0x108] = s1\n 57648: s0 = sp + 0x120\n 57652: sp = sp & 0xffffffffffffffe0\n 57655: s1 = u64 [a2 + 0x8]\n 57658: t2 = u64 [a1 + 0x8]\n 57661: a5 = u64 [a2]\n 57663: ra = u64 [a1]\n 57665: t1 = u64 [a2 + 0x10]\n 57668: a4 = s1 ^ t2\n 57671: a3 = s1 <u t2\n 57674: t0 = a5 <u ra\n 57677: a3 = t0 if a4 == 0\n 57680: u64 [sp + 0x38] = s1\n 57683: a4 = s1 - t2\n 57686: a4 = a4 - t0\n 57689: u64 [sp + 0x30] = a5\n 57692: a5 = a5 - ra\n 57695: a5 = a5 <u 0x20\n 57698: a5 = a5 ^ 0x1\n 57701: t0 = u64 [a1 + 0x10]\n 57704: s1 = a4 >u 0\n 57706: a5 = s1 if a4 != 0\n 57709: a4 = u64 [a2 + 0x18]\n 57712: s1 = u64 [a1 + 0x18]\n 57715: a1 = t1 - t0\n 57718: a2 = a1 - a3\n 57721: a1 = a1 <u a3\n 57724: u64 [sp + 0x28] = t1\n 57727: a3 = t1 <u t0\n 57730: u64 [sp + 0x20] = a4\n 57733: a4 = a4 - s1\n 57736: a4 = a4 - a3\n 57739: a4 = a4 - a1\n 57742: a1 = a4 >s 0\n 57744: a3 = a2 >u 0\n 57746: a3 = a1 if a4 != 0\n 57749: a2 = a2 | a4\n 57752: a5 = a3 if a2 != 0\n 57755: jump @870 if a5 == 0\n      : @862 (gas: 11)\n 57759: a2 = ra | t0\n 57762: u64 [sp + 0x18] = t2\n 57765: u64 [sp + 0x8] = s1\n 57768: a1 = t2 | s1\n 57771: a2 = a2 | a1\n 57774: a2 = a2 >> 0x20\n 57777: u64 [sp + 0x10] = t0\n 57780: a1 = a1 | t0\n 57783: a1 = a1 << 0x20\n 57786: a1 = a1 | a2\n 57789: jump @869 if a1 != 0\n      : @863 (gas: 6)\n 57793: u64 [sp] = a0\n 57795: s1 = ra\n 57797: i32 a1 = ra + 0\n 57799: i32 a0 = sp + 0xc0\n 57803: ecalli 1 // 'call_data_load'\n 57805: fallthrough\n      : @864 (gas: 7)\n 57806: a0 = u64 [sp + 0xd8]\n 57810: a1 = u64 [sp + 0xd0]\n 57814: a2 = u64 [sp + 0xc8]\n 57818: a3 = a1 | a0\n 57821: a4 = a2 <u 0x1\n 57824: a4 = 0 if a3 != 0\n 57826: jump @870 if a4 == 0\n      : @865 (gas: 42)\n 57830: a3 = u64 [sp + 0xc0]\n 57834: t0 = a3 + s1\n 57837: a3 = t0 <u a3\n 57840: a4 = u64 [sp + 0x18]\n 57843: a4 = a4 + a2\n 57846: t1 = a4 + a3\n 57849: a4 = t1 ^ a2\n 57852: s1 = t1 <u a2\n 57855: s1 = a3 if a4 == 0\n 57858: a2 = u64 [sp + 0x10]\n 57861: a2 = a2 + a1\n 57864: s1 = s1 + a2\n 57867: a3 = s1 <u a2\n 57870: a1 = a2 <u a1\n 57873: a2 = u64 [sp + 0x8]\n 57876: a0 = a0 + a2\n 57879: a0 = a0 + a1\n 57882: ra = a0 + a3\n 57885: a0 = t0 + 0x1f\n 57888: a1 = a0 <u t0\n 57891: a2 = t1 + a1\n 57894: a3 = a2 <u t1\n 57897: a3 = a1 if a1 == 0\n 57900: t2 = s1 + a3\n 57903: a1 = t2 <u s1\n 57906: a1 = a1 + ra\n 57909: a5 = u64 [sp + 0x38]\n 57912: a4 = a2 ^ a5\n 57915: a2 = a2 <u a5\n 57918: a5 = u64 [sp + 0x30]\n 57921: a0 = a0 <u a5\n 57924: a0 = a2 if a4 != 0\n 57927: a5 = u64 [sp + 0x28]\n 57930: a2 = t2 <u a5\n 57933: a4 = u64 [sp + 0x20]\n 57936: a3 = a1 ^ a4\n 57939: a1 = a1 <s a4\n 57942: a1 = a2 if a3 == 0\n 57945: a2 = t2 ^ a5\n 57948: a2 = a2 | a3\n 57951: a0 = a1 if a2 != 0\n 57954: jump @871 if a0 == 0\n      : @866 (gas: 11)\n 57958: a0 = t0 | s1\n 57961: u64 [sp + 0x18] = t1\n 57964: u64 [sp + 0x8] = ra\n 57967: a1 = t1 | ra\n 57970: a0 = a0 | a1\n 57973: a0 = a0 >> 0x20\n 57976: u64 [sp + 0x10] = s1\n 57979: a1 = a1 | s1\n 57982: a1 = a1 << 0x20\n 57985: a0 = a0 | a1\n 57988: jump @869 if a0 != 0\n      : @867 (gas: 40)\n 57992: i32 a1 = t0 + 0\n 57994: i32 a0 = sp + 0xe0\n 57998: s1 = t0\n 58000: ecalli 1 // 'call_data_load'\n 58002: t0 = u64 [sp + 0xe0]\n 58006: t1 = u64 [sp + 0xe8]\n 58010: a2 = u64 [sp + 0xf0]\n 58014: a3 = u64 [sp + 0xf8]\n 58018: a4 = s1 + 0x20\n 58021: a5 = a4 <u s1\n 58024: a1 = u64 [sp + 0x18]\n 58027: a0 = a1 + a5\n 58030: a1 = a0 <u a1\n 58033: a1 = a5 if a5 == 0\n 58036: a5 = u64 [sp + 0x10]\n 58039: a1 = a1 + a5\n 58042: a5 = a1 <u a5\n 58045: s1 = u64 [sp + 0x8]\n 58048: a5 = a5 + s1\n 58051: s1 = u64 [sp + 0x20]\n 58054: u64 [sp + 0x58] = s1\n 58057: s1 = u64 [sp + 0x28]\n 58060: u64 [sp + 0x50] = s1\n 58063: s1 = u64 [sp + 0x38]\n 58066: u64 [sp + 0x48] = s1\n 58069: s1 = u64 [sp + 0x30]\n 58072: u64 [sp + 0x40] = s1\n 58075: u64 [sp + 0x78] = a3\n 58078: u64 [sp + 0x70] = a2\n 58081: u64 [sp + 0x68] = t1\n 58084: u64 [sp + 0x60] = t0\n 58087: u64 [sp + 0x88] = a0\n 58091: u64 [sp + 0x80] = a4\n 58095: u64 [sp + 0x90] = a1\n 58099: a0 = sp + 0xa0\n 58103: a1 = sp + 0x80\n 58107: a2 = sp + 0x60\n 58110: a3 = sp + 0x40\n 58113: u64 [sp + 0x98] = a5\n 58117: ra = 712, jump @834\n      : @868 [@dyn 356] (gas: 15)\n 58123: a0 = u64 [sp + 0xb8]\n 58127: a1 = u64 [sp + 0xb0]\n 58131: a2 = u64 [sp + 0xa8]\n 58135: a3 = u64 [sp + 0xa0]\n 58139: a4 = u64 [sp]\n 58141: u64 [a4 + 0x18] = a0\n 58144: u64 [a4 + 0x10] = a1\n 58147: u64 [a4 + 0x8] = a2\n 58150: u64 [a4] = a3\n 58152: sp = s0 + 0xfffffffffffffee0\n 58156: ra = u64 [sp + 0x118]\n 58160: s0 = u64 [sp + 0x110]\n 58164: s1 = u64 [sp + 0x108]\n 58168: sp = sp + 0x120\n 58172: ret\n      : @869 (gas: 1)\n 58174: trap\n      : @870 (gas: 4)\n 58175: a0 = 0\n 58177: a1 = 0\n 58179: ra = 0x2ca\n 58183: jump @0\n      : @871 (gas: 2)\n 58187: a1 = 0\n 58189: ra = 714, jump @0\n      : @872 [@dyn 357] (gas: 6)\n 58196: i32 a1 = a0 + 0\n 58198: a0 = 0x1\n 58201: a2 = 0\n 58203: ra = 0x2cc\n 58207: ecalli 7 // 'seal_return'\n 58209: fallthrough\n      : @873 [@dyn 358] (gas: 9)\n 58210: a2 = u64 [a1 + 0x18]\n 58213: a3 = u64 [a1 + 0x10]\n 58216: a4 = u64 [a1 + 0x8]\n 58219: a1 = u64 [a1]\n 58221: u64 [a0 + 0x18] = a2\n 58224: u64 [a0 + 0x10] = a3\n 58227: u64 [a0 + 0x8] = a4\n 58230: u64 [a0] = a1\n 58232: ret\n      : @874 (gas: 8)\n 58234: a0 = u64 [sp + 0xb0]\n 58238: a1 = u64 [sp + 0xb8]\n 58242: a2 = u64 [sp + 0xa8]\n 58246: a3 = u64 [sp + 0xa0]\n 58250: a1 = a1 | a2\n 58253: a0 = a0 | a3\n 58256: a0 = a0 | a1\n 58259: jump @880 if a0 != 0\n      : @875 (gas: 13)\n 58263: a0 = u32 [0x20004]\n 58268: u64 [sp + 88] = 0\n 58271: u64 [sp + 80] = 0\n 58274: u64 [sp + 72] = 0\n 58277: u64 [sp + 0x40] = a0\n 58280: u64 [sp + 120] = 0\n 58283: u64 [sp + 112] = 0\n 58286: u64 [sp + 96] = 0x4\n 58290: a0 = sp + 0x80\n 58294: a1 = sp + 0x60\n 58297: a2 = sp + 0x40\n 58300: u64 [sp + 104] = 0\n 58303: ra = 718, jump @861\n      : @876 [@dyn 359] (gas: 15)\n 58309: a0 = u64 [sp + 0x80]\n 58313: a1 = u64 [sp + 0x88]\n 58317: a2 = u64 [sp + 0x90]\n 58321: a3 = u64 [sp + 0x98]\n 58325: u64 [sp + 0x18] = a3\n 58328: u64 [sp + 0x10] = a2\n 58331: u64 [sp + 0x8] = a1\n 58334: u64 [sp] = a0\n 58336: u64 [sp + 56] = 0\n 58339: u64 [sp + 48] = 0\n 58342: u64 [sp + 40] = 0\n 58345: a0 = sp + 0x20\n 58348: a1 = sp\n 58350: u64 [sp + 32] = 0\n 58353: ra = 720, jump @177\n      : @877 [@dyn 360] (gas: 3)\n 58360: a0 = 0x40\n 58363: a1 = 0x20\n 58366: ra = 722, jump @0\n      : @878 [@dyn 361] (gas: 100)\n 58373: a1 = u8 [a0 + 0x11]\n 58376: a2 = u8 [a0 + 0x10]\n 58379: a3 = u8 [a0 + 0x12]\n 58382: a4 = u8 [a0 + 0x13]\n 58385: a1 = a1 << 0x8\n 58388: a1 = a1 | a2\n 58391: a3 = a3 << 0x10\n 58394: a4 = a4 << 0x18\n 58397: a3 = a3 | a4\n 58400: a1 = a1 | a3\n 58403: a2 = u8 [a0 + 0x15]\n 58406: a3 = u8 [a0 + 0x14]\n 58409: a4 = u8 [a0 + 0x16]\n 58412: a5 = u8 [a0 + 0x17]\n 58415: a2 = a2 << 0x8\n 58418: a2 = a2 | a3\n 58421: a4 = a4 << 0x10\n 58424: a5 = a5 << 0x18\n 58427: a4 = a4 | a5\n 58430: a2 = a2 | a4\n 58433: a2 = a2 << 0x20\n 58436: t0 = a2 | a1\n 58439: a2 = u8 [a0 + 0x1]\n 58442: a3 = u8 [a0]\n 58444: a4 = u8 [a0 + 0x2]\n 58447: a5 = u8 [a0 + 0x3]\n 58450: a2 = a2 << 0x8\n 58453: a2 = a2 | a3\n 58456: a4 = a4 << 0x10\n 58459: a5 = a5 << 0x18\n 58462: a4 = a4 | a5\n 58465: a2 = a2 | a4\n 58468: a3 = u8 [a0 + 0x5]\n 58471: a4 = u8 [a0 + 0x4]\n 58474: a5 = u8 [a0 + 0x6]\n 58477: a1 = u8 [a0 + 0x7]\n 58480: a3 = a3 << 0x8\n 58483: a3 = a3 | a4\n 58486: a5 = a5 << 0x10\n 58489: a1 = a1 << 0x18\n 58492: a1 = a1 | a5\n 58495: a1 = a1 | a3\n 58498: a1 = a1 << 0x20\n 58501: t1 = a1 | a2\n 58504: a1 = u8 [a0 + 0x19]\n 58507: a3 = u8 [a0 + 0x18]\n 58510: a4 = u8 [a0 + 0x1a]\n 58513: a5 = u8 [a0 + 0x1b]\n 58516: a1 = a1 << 0x8\n 58519: a1 = a1 | a3\n 58522: a4 = a4 << 0x10\n 58525: a5 = a5 << 0x18\n 58528: a4 = a4 | a5\n 58531: a1 = a1 | a4\n 58534: a3 = u8 [a0 + 0x1d]\n 58537: a4 = u8 [a0 + 0x1c]\n 58540: a5 = u8 [a0 + 0x1e]\n 58543: a2 = u8 [a0 + 0x1f]\n 58546: a3 = a3 << 0x8\n 58549: a3 = a3 | a4\n 58552: a5 = a5 << 0x10\n 58555: a2 = a2 << 0x18\n 58558: a2 = a2 | a5\n 58561: a2 = a2 | a3\n 58564: a2 = a2 << 0x20\n 58567: a3 = a2 | a1\n 58570: a1 = u8 [a0 + 0x9]\n 58573: a2 = u8 [a0 + 0x8]\n 58576: a4 = u8 [a0 + 0xa]\n 58579: a5 = u8 [a0 + 0xb]\n 58582: a1 = a1 << 0x8\n 58585: a1 = a1 | a2\n 58588: a4 = a4 << 0x10\n 58591: a5 = a5 << 0x18\n 58594: a4 = a4 | a5\n 58597: a1 = a1 | a4\n 58600: a2 = u8 [a0 + 0xd]\n 58603: a4 = u8 [a0 + 0xc]\n 58606: a5 = u8 [a0 + 0xe]\n 58609: a0 = u8 [a0 + 0xf]\n 58612: a2 = a2 << 0x8\n 58615: a2 = a2 | a4\n 58618: a5 = a5 << 0x10\n 58621: a0 = a0 << 0x18\n 58624: a0 = a0 | a5\n 58627: a0 = a0 | a2\n 58630: a0 = a0 << 0x20\n 58633: a0 = a0 | a1\n 58636: a1 = reverse a0\n 58638: a0 = reverse a3\n 58640: a2 = reverse t1\n 58642: a3 = reverse t0\n 58644: a2 = a2 | a3\n 58647: a3 = a0 | a1\n 58650: a3 = a3 | a2\n 58653: a3 = a3 >> 0x20\n 58656: a1 = a1 | a2\n 58659: a1 = a1 << 0x20\n 58662: a1 = a1 | a3\n 58665: jump @882 if a1 == 0\n      : @879 (gas: 1)\n 58668: trap\n      : @880 (gas: 3)\n 58669: a0 = 0\n 58671: a1 = 0\n 58673: ra = 724, jump @0\n      : @881 [@dyn 362] (gas: 7)\n 58680: i32 a1 = a0 + 0\n 58682: a0 = 0x1\n 58685: a2 = 0\n 58687: ecalli 7 // 'seal_return'\n 58689: i32 a0 = a0 + 0\n 58691: ra = 0x2d6\n 58695: jump @0\n      : @882 (gas: 2)\n 58699: i32 a0 = a0 + 0\n 58701: ra = 726, jump @0\n      : @883 [@dyn 363] (gas: 6)\n 58708: i32 a1 = a0 + 0\n 58710: a0 = 0\n 58712: a2 = 0\n 58714: ra = 0x2d8\n 58718: ecalli 7 // 'seal_return'\n 58720: fallthrough\n      : @884 [@dyn 364] (gas: 6)\n 58721: u64 [a0 + 24] = 0\n 58724: u64 [a0 + 16] = 0\n 58727: u64 [a0 + 8] = 0\n 58730: a1 = 0x60\n 58733: u64 [a0] = a1\n 58735: ret\n      : @885 (gas: 20)\n 58737: sp = sp + 0xffffffffffffffb0\n 58740: u64 [sp + 0x48] = ra\n 58743: u64 [sp + 0x40] = s0\n 58746: u64 [sp + 0x38] = s1\n 58749: a4 = u64 [a1 + 0x10]\n 58752: a3 = u64 [a1 + 0x18]\n 58755: a5 = u64 [a1 + 0x8]\n 58758: s0 = u64 [a1]\n 58760: u64 [sp + 0x28] = a3\n 58763: u64 [sp + 0x20] = a5\n 58766: a1 = a5 | a3\n 58769: a3 = s0 | a4\n 58772: a3 = a3 | a1\n 58775: a3 = a3 >> 0x20\n 58778: u64 [sp + 0x30] = a4\n 58781: a1 = a1 | a4\n 58784: a1 = a1 << 0x20\n 58787: a1 = a1 | a3\n 58790: u64 [sp + 0x18] = a0\n 58793: jump @888 if a1 != 0\n      : @886 (gas: 10)\n 58797: a0 = u64 [a2 + 0x18]\n 58800: u64 [sp] = a0\n 58802: s1 = u64 [a2 + 0x10]\n 58805: a0 = u64 [a2 + 0x8]\n 58808: u64 [sp + 0x8] = a0\n 58811: a0 = u64 [a2]\n 58813: u64 [sp + 0x10] = a0\n 58816: i32 a0 = s0 + 0\n 58818: a1 = 0x20\n 58821: ra = 730, jump @0\n      : @887 [@dyn 365] (gas: 88)\n 58828: a1 = u64 [sp]\n 58830: a1 = reverse a1\n 58832: a2 = reverse s1\n 58834: a3 = u64 [sp + 0x8]\n 58837: a3 = reverse a3\n 58839: a4 = u64 [sp + 0x10]\n 58842: a4 = reverse a4\n 58844: a5 = a4 >> 0x38\n 58847: u8 [a0 + 0x1f] = a5\n 58850: a5 = a4 >> 0x30\n 58853: u8 [a0 + 0x1e] = a5\n 58856: a5 = a4 >> 0x28\n 58859: u8 [a0 + 0x1d] = a5\n 58862: a5 = a4 >> 0x20\n 58865: u8 [a0 + 0x1c] = a5\n 58868: a5 = a4 >> 0x18\n 58871: u8 [a0 + 0x1b] = a5\n 58874: a5 = a4 >> 0x10\n 58877: u8 [a0 + 0x1a] = a5\n 58880: a5 = a4 >> 0x8\n 58883: u8 [a0 + 0x19] = a5\n 58886: u8 [a0 + 0x18] = a4\n 58889: u8 [a0 + 0x10] = a3\n 58892: a4 = a3 >> 0x38\n 58895: u8 [a0 + 0x17] = a4\n 58898: a4 = a3 >> 0x30\n 58901: u8 [a0 + 0x16] = a4\n 58904: a4 = a3 >> 0x28\n 58907: u8 [a0 + 0x15] = a4\n 58910: a4 = a3 >> 0x20\n 58913: u8 [a0 + 0x14] = a4\n 58916: a4 = a3 >> 0x18\n 58919: u8 [a0 + 0x13] = a4\n 58922: a4 = a3 >> 0x10\n 58925: u8 [a0 + 0x12] = a4\n 58928: a3 = a3 >> 0x8\n 58931: u8 [a0 + 0x11] = a3\n 58934: u8 [a0 + 0x8] = a2\n 58937: a3 = a2 >> 0x38\n 58940: u8 [a0 + 0xf] = a3\n 58943: a3 = a2 >> 0x30\n 58946: u8 [a0 + 0xe] = a3\n 58949: a3 = a2 >> 0x28\n 58952: u8 [a0 + 0xd] = a3\n 58955: a3 = a2 >> 0x20\n 58958: u8 [a0 + 0xc] = a3\n 58961: a3 = a2 >> 0x18\n 58964: u8 [a0 + 0xb] = a3\n 58967: a3 = a2 >> 0x10\n 58970: u8 [a0 + 0xa] = a3\n 58973: a2 = a2 >> 0x8\n 58976: u8 [a0 + 0x9] = a2\n 58979: u8 [a0] = a1\n 58981: a2 = a1 >> 0x38\n 58984: u8 [a0 + 0x7] = a2\n 58987: a2 = a1 >> 0x30\n 58990: u8 [a0 + 0x6] = a2\n 58993: a2 = a1 >> 0x28\n 58996: u8 [a0 + 0x5] = a2\n 58999: a2 = a1 >> 0x20\n 59002: u8 [a0 + 0x4] = a2\n 59005: a2 = a1 >> 0x18\n 59008: u8 [a0 + 0x3] = a2\n 59011: a2 = a1 >> 0x10\n 59014: u8 [a0 + 0x2] = a2\n 59017: a1 = a1 >> 0x8\n 59020: u8 [a0 + 0x1] = a1\n 59023: a0 = s0 + 0x20\n 59026: a1 = a0 <u s0\n 59029: a3 = u64 [sp + 0x20]\n 59032: a2 = a3 + a1\n 59035: a3 = a2 <u a3\n 59038: a3 = a1 if a1 == 0\n 59041: a1 = u64 [sp + 0x30]\n 59044: a3 = a3 + a1\n 59047: a1 = a3 <u a1\n 59050: a4 = u64 [sp + 0x28]\n 59053: a1 = a1 + a4\n 59056: a4 = u64 [sp + 0x18]\n 59059: u64 [a4] = a0\n 59061: u64 [a4 + 0x8] = a2\n 59064: u64 [a4 + 0x10] = a3\n 59067: u64 [a4 + 0x18] = a1\n 59070: ra = u64 [sp + 0x48]\n 59073: s0 = u64 [sp + 0x40]\n 59076: s1 = u64 [sp + 0x38]\n 59079: sp = sp + 0x50\n 59082: ret\n      : @888 (gas: 1)\n 59084: trap\n      : @889 (gas: 39)\n 59085: sp = sp + 0xfffffffffffffea0\n 59089: u64 [sp + 0x158] = ra\n 59093: u64 [sp + 0x150] = s0\n 59097: u64 [sp + 0x148] = s1\n 59101: s0 = sp + 0x160\n 59105: sp = sp & 0xffffffffffffffe0\n 59108: u64 [sp + 0x8] = a0\n 59111: a0 = u64 [a2 + 0x18]\n 59114: u64 [sp + 0xb0] = a0\n 59118: a0 = u64 [a2 + 0x10]\n 59121: u64 [sp + 0xa8] = a0\n 59125: a0 = u64 [a2 + 0x8]\n 59128: u64 [sp + 0xa0] = a0\n 59132: a0 = u64 [a2]\n 59134: u64 [sp + 0xb8] = a0\n 59138: a4 = u64 [a1 + 0x18]\n 59141: a3 = u64 [a1 + 0x10]\n 59144: a2 = u64 [a1 + 0x8]\n 59147: a0 = u64 [a1]\n 59149: u64 [sp + 0x18] = a4\n 59152: u64 [sp + 0x118] = a4\n 59156: u64 [sp + 0x20] = a3\n 59159: u64 [sp + 0x110] = a3\n 59163: u64 [sp + 0x68] = a2\n 59166: u64 [sp + 0x108] = a2\n 59170: u64 [sp + 0x70] = a0\n 59173: u64 [sp + 0x100] = a0\n 59177: u64 [sp + 312] = 0\n 59181: u64 [sp + 304] = 0\n 59185: u64 [sp + 296] = 0\n 59189: u64 [sp + 288] = 0\n 59193: u32 [sp + 320] = 0x20\n 59198: i32 a1 = sp + 0x100\n 59202: i32 a3 = sp + 0x120\n 59206: i32 a4 = sp + 0x140\n 59210: a2 = 0xffffffffffffffff\n 59213: a0 = 0\n 59215: ecalli 4 // 'get_storage'\n 59217: fallthrough\n      : @890 (gas: 32)\n 59218: t0 = u64 [sp + 0x130]\n 59222: t1 = u64 [sp + 0x128]\n 59226: t2 = u64 [sp + 0x138]\n 59230: a5 = u64 [sp + 0x120]\n 59234: a0 = t0 << 0x3f\n 59237: a1 = t1 >> 0x1\n 59240: a0 = a0 | a1\n 59243: a1 = t2 << 0x3f\n 59246: a2 = t0 >> 0x1\n 59249: a1 = a1 | a2\n 59252: a2 = t1 << 0x3f\n 59255: a3 = a5 >> 0x1\n 59258: a4 = a3 | a2\n 59261: a2 = t2 >> 0x1\n 59264: u64 [sp + 0x78] = a5\n 59267: a5 = a5 & 0x1\n 59270: a3 = -a5\n 59272: ra = a4 & 0x7f\n 59275: a1 = a1 & a3\n 59278: s1 = a3 & a0\n 59281: a4 = ra if a5 == 0\n 59284: a2 = a2 & a3\n 59287: u64 [sp + 0x58] = a4\n 59290: a0 = a4 <u 0x20\n 59293: u64 [sp + 0x48] = s1\n 59296: a0 = 0 if s1 != 0\n 59298: u64 [sp + 0x50] = a1\n 59301: u64 [sp + 0x40] = a2\n 59304: a1 = a1 | a2\n 59307: a0 = 0 if a1 != 0\n 59309: a1 = a5 <u 0x1\n 59312: jump @909 if a1 != a0\n      : @891 (gas: 17)\n 59316: u64 [sp + 0x98] = a5\n 59320: u64 [sp + 0x10] = ra\n 59323: u64 [sp + 0x80] = t1\n 59327: u64 [sp + 0x88] = t0\n 59331: u64 [sp + 0x90] = t2\n 59335: a0 = u64 [sp + 0xb8]\n 59339: a2 = u64 [sp + 0xa8]\n 59343: a0 = a0 | a2\n 59346: a1 = u64 [sp + 0xb0]\n 59350: a3 = u64 [sp + 0xa0]\n 59354: a1 = a1 | a3\n 59357: a0 = a0 | a1\n 59360: a0 = a0 >> 0x20\n 59363: a1 = a1 | a2\n 59366: a1 = a1 << 0x20\n 59369: a0 = a0 | a1\n 59372: jump @908 if a0 != 0\n      : @892 (gas: 4)\n 59376: s1 = u64 [sp + 0xb8]\n 59380: i32 a0 = s1 + 0\n 59382: a1 = 0x20\n 59385: ra = 732, jump @0\n      : @893 [@dyn 366] (gas: 85)\n 59392: a1 = u64 [sp + 0x40]\n 59395: a1 = reverse a1\n 59397: a2 = u64 [sp + 0x58]\n 59400: a2 = reverse a2\n 59402: a3 = a2 >> 0x38\n 59405: u8 [a0 + 0x1f] = a3\n 59408: a3 = a2 >> 0x30\n 59411: u8 [a0 + 0x1e] = a3\n 59414: a3 = a2 >> 0x28\n 59417: u8 [a0 + 0x1d] = a3\n 59420: a3 = a2 >> 0x20\n 59423: u8 [a0 + 0x1c] = a3\n 59426: a3 = a2 >> 0x18\n 59429: u8 [a0 + 0x1b] = a3\n 59432: a3 = a2 >> 0x10\n 59435: u8 [a0 + 0x1a] = a3\n 59438: a3 = a2 >> 0x8\n 59441: u8 [a0 + 0x19] = a3\n 59444: a3 = u64 [sp + 0x48]\n 59447: a3 = reverse a3\n 59449: u8 [a0 + 0x18] = a2\n 59452: a2 = a3 >> 0x38\n 59455: u8 [a0 + 0x17] = a2\n 59458: a2 = a3 >> 0x30\n 59461: u8 [a0 + 0x16] = a2\n 59464: a2 = a3 >> 0x28\n 59467: u8 [a0 + 0x15] = a2\n 59470: a2 = a3 >> 0x20\n 59473: u8 [a0 + 0x14] = a2\n 59476: a2 = a3 >> 0x18\n 59479: u8 [a0 + 0x13] = a2\n 59482: a2 = a3 >> 0x10\n 59485: u8 [a0 + 0x12] = a2\n 59488: a2 = u64 [sp + 0x50]\n 59491: a2 = reverse a2\n 59493: u8 [a0 + 0x10] = a3\n 59496: a3 = a3 >> 0x8\n 59499: u8 [a0 + 0x11] = a3\n 59502: u8 [a0 + 0x8] = a2\n 59505: a3 = a2 >> 0x38\n 59508: u8 [a0 + 0xf] = a3\n 59511: a3 = a2 >> 0x30\n 59514: u8 [a0 + 0xe] = a3\n 59517: a3 = a2 >> 0x28\n 59520: u8 [a0 + 0xd] = a3\n 59523: a3 = a2 >> 0x20\n 59526: u8 [a0 + 0xc] = a3\n 59529: a3 = a2 >> 0x18\n 59532: u8 [a0 + 0xb] = a3\n 59535: a3 = a2 >> 0x10\n 59538: u8 [a0 + 0xa] = a3\n 59541: a2 = a2 >> 0x8\n 59544: u8 [a0 + 0x9] = a2\n 59547: u8 [a0] = a1\n 59549: a2 = a1 >> 0x38\n 59552: u8 [a0 + 0x7] = a2\n 59555: a2 = a1 >> 0x30\n 59558: u8 [a0 + 0x6] = a2\n 59561: a2 = a1 >> 0x28\n 59564: u8 [a0 + 0x5] = a2\n 59567: a2 = a1 >> 0x20\n 59570: u8 [a0 + 0x4] = a2\n 59573: a2 = a1 >> 0x18\n 59576: u8 [a0 + 0x3] = a2\n 59579: a2 = a1 >> 0x10\n 59582: u8 [a0 + 0x2] = a2\n 59585: a1 = a1 >> 0x8\n 59588: u8 [a0 + 0x1] = a1\n 59591: a0 = s1 + 0x20\n 59594: u64 [sp + 0x60] = a0\n 59597: a0 = a0 <u s1\n 59600: a3 = u64 [sp + 0xa0]\n 59604: a1 = a3 + a0\n 59607: u64 [sp + 0x28] = a1\n 59610: a1 = a1 <u a3\n 59613: a1 = a0 if a0 == 0\n 59616: a0 = u64 [sp + 0xa8]\n 59620: a1 = a1 + a0\n 59623: u64 [sp + 0x30] = a1\n 59626: a0 = a1 <u a0\n 59629: a1 = u64 [sp + 0xb0]\n 59633: a0 = a0 + a1\n 59636: u64 [sp + 0x38] = a0\n 59639: a0 = u64 [sp + 0x98]\n 59643: jump @897 if a0 != 0\n      : @894 (gas: 9)\n 59647: a0 = u64 [sp + 0xb0]\n 59651: a1 = u64 [sp + 0xa8]\n 59655: a0 = a0 | a1\n 59658: a1 = 0xffffffe0\n 59668: a2 = u64 [sp + 0xb8]\n 59672: a1 = a2 <u a1\n 59675: a1 = 0 if a3 != 0\n 59677: a1 = 0 if a0 != 0\n 59679: jump @908 if a1 == 0\n      : @895 (gas: 5)\n 59683: a0 = u64 [sp + 0x78]\n 59686: s1 = a0 & 0xffffffffffffff00\n 59690: a0 = i32 [sp + 0x60]\n 59693: a1 = 0x20\n 59696: ra = 734, jump @0\n      : @896 [@dyn 367] (gas: 73)\n 59703: t0 = 0\n 59705: t1 = 0\n 59707: u64 [sp + 176] = 0\n 59711: a3 = reverse s1\n 59713: a4 = a3 >> 0x30\n 59716: u8 [a0 + 0x1e] = a4\n 59719: a4 = a3 >> 0x28\n 59722: u8 [a0 + 0x1d] = a4\n 59725: a4 = a3 >> 0x20\n 59728: u8 [a0 + 0x1c] = a4\n 59731: a4 = a3 >> 0x18\n 59734: u8 [a0 + 0x1b] = a4\n 59737: a4 = a3 >> 0x10\n 59740: u8 [a0 + 0x1a] = a4\n 59743: a1 = u64 [sp + 0x80]\n 59747: a4 = reverse a1\n 59749: u8 [a0 + 0x18] = a3\n 59752: a3 = a3 >> 0x8\n 59755: u8 [a0 + 0x19] = a3\n 59758: a3 = a4 >> 0x38\n 59761: u8 [a0 + 0x17] = a3\n 59764: a3 = a4 >> 0x30\n 59767: u8 [a0 + 0x16] = a3\n 59770: a3 = a4 >> 0x28\n 59773: u8 [a0 + 0x15] = a3\n 59776: a3 = a4 >> 0x20\n 59779: u8 [a0 + 0x14] = a3\n 59782: a3 = a4 >> 0x18\n 59785: u8 [a0 + 0x13] = a3\n 59788: a3 = a4 >> 0x10\n 59791: u8 [a0 + 0x12] = a3\n 59794: a1 = u64 [sp + 0x88]\n 59798: a3 = reverse a1\n 59800: u8 [a0 + 0x10] = a4\n 59803: a4 = a4 >> 0x8\n 59806: u8 [a0 + 0x11] = a4\n 59809: a4 = a3 >> 0x38\n 59812: u8 [a0 + 0xf] = a4\n 59815: a4 = a3 >> 0x30\n 59818: u8 [a0 + 0xe] = a4\n 59821: a4 = a3 >> 0x28\n 59824: u8 [a0 + 0xd] = a4\n 59827: a4 = a3 >> 0x20\n 59830: u8 [a0 + 0xc] = a4\n 59833: a4 = a3 >> 0x18\n 59836: u8 [a0 + 0xb] = a4\n 59839: a4 = a3 >> 0x10\n 59842: u8 [a0 + 0xa] = a4\n 59845: a1 = u64 [sp + 0x90]\n 59849: a4 = reverse a1\n 59851: u8 [a0 + 31] = 0\n 59854: u8 [a0 + 0x8] = a3\n 59857: a3 = a3 >> 0x8\n 59860: u8 [a0 + 0x9] = a3\n 59863: u8 [a0] = a4\n 59865: a3 = a4 >> 0x38\n 59868: u8 [a0 + 0x7] = a3\n 59871: a3 = a4 >> 0x30\n 59874: u8 [a0 + 0x6] = a3\n 59877: a3 = a4 >> 0x28\n 59880: u8 [a0 + 0x5] = a3\n 59883: a3 = a4 >> 0x20\n 59886: u8 [a0 + 0x4] = a3\n 59889: a3 = a4 >> 0x18\n 59892: u8 [a0 + 0x3] = a3\n 59895: a3 = a4 >> 0x10\n 59898: u8 [a0 + 0x2] = a3\n 59901: a4 = a4 >> 0x8\n 59904: u8 [a0 + 0x1] = a4\n 59907: a0 = u64 [sp + 0x10]\n 59910: a0 = a0 >u 0\n 59912: ra = a0 << 0x5\n 59915: jump @907\n      : @897 (gas: 3)\n 59918: a1 = 0x20\n 59921: a0 = 0\n 59923: ra = 736, jump @0\n      : @898 [@dyn 368] (gas: 71)\n 59930: a1 = u64 [sp + 0x18]\n 59933: a1 = reverse a1\n 59935: a2 = u64 [sp + 0x20]\n 59938: a2 = reverse a2\n 59940: a3 = u64 [sp + 0x68]\n 59943: a3 = reverse a3\n 59945: a4 = u64 [sp + 0x70]\n 59948: a4 = reverse a4\n 59950: a5 = a4 >> 0x38\n 59953: u8 [a0 + 0x1f] = a5\n 59956: a5 = a4 >> 0x30\n 59959: u8 [a0 + 0x1e] = a5\n 59962: a5 = a4 >> 0x28\n 59965: u8 [a0 + 0x1d] = a5\n 59968: a5 = a4 >> 0x20\n 59971: u8 [a0 + 0x1c] = a5\n 59974: a5 = a4 >> 0x18\n 59977: u8 [a0 + 0x1b] = a5\n 59980: a5 = a4 >> 0x10\n 59983: u8 [a0 + 0x1a] = a5\n 59986: a5 = a4 >> 0x8\n 59989: u8 [a0 + 0x19] = a5\n 59992: u8 [a0 + 0x18] = a4\n 59995: u8 [a0 + 0x10] = a3\n 59998: a4 = a3 >> 0x38\n 60001: u8 [a0 + 0x17] = a4\n 60004: a4 = a3 >> 0x30\n 60007: u8 [a0 + 0x16] = a4\n 60010: a4 = a3 >> 0x28\n 60013: u8 [a0 + 0x15] = a4\n 60016: a4 = a3 >> 0x20\n 60019: u8 [a0 + 0x14] = a4\n 60022: a4 = a3 >> 0x18\n 60025: u8 [a0 + 0x13] = a4\n 60028: a4 = a3 >> 0x10\n 60031: u8 [a0 + 0x12] = a4\n 60034: a3 = a3 >> 0x8\n 60037: u8 [a0 + 0x11] = a3\n 60040: u8 [a0 + 0x8] = a2\n 60043: a3 = a2 >> 0x38\n 60046: u8 [a0 + 0xf] = a3\n 60049: a3 = a2 >> 0x30\n 60052: u8 [a0 + 0xe] = a3\n 60055: a3 = a2 >> 0x28\n 60058: u8 [a0 + 0xd] = a3\n 60061: a3 = a2 >> 0x20\n 60064: u8 [a0 + 0xc] = a3\n 60067: a3 = a2 >> 0x18\n 60070: u8 [a0 + 0xb] = a3\n 60073: a3 = a2 >> 0x10\n 60076: u8 [a0 + 0xa] = a3\n 60079: a2 = a2 >> 0x8\n 60082: u8 [a0 + 0x9] = a2\n 60085: u8 [a0] = a1\n 60087: a2 = a1 >> 0x38\n 60090: u8 [a0 + 0x7] = a2\n 60093: a2 = a1 >> 0x30\n 60096: u8 [a0 + 0x6] = a2\n 60099: a2 = a1 >> 0x28\n 60102: u8 [a0 + 0x5] = a2\n 60105: a2 = a1 >> 0x20\n 60108: u8 [a0 + 0x4] = a2\n 60111: a2 = a1 >> 0x18\n 60114: u8 [a0 + 0x3] = a2\n 60117: a2 = a1 >> 0x10\n 60120: u8 [a0 + 0x2] = a2\n 60123: a1 = a1 >> 0x8\n 60126: u8 [a0 + 0x1] = a1\n 60129: a1 = 0x20\n 60132: a0 = 0\n 60134: ra = 738, jump @0\n      : @899 [@dyn 369] (gas: 5)\n 60141: i32 a0 = a0 + 0\n 60143: i32 a2 = sp + 0x120\n 60147: a1 = 0x20\n 60150: ecalli 5 // 'hash_keccak_256'\n 60152: fallthrough\n      : @900 (gas: 9)\n 60153: a0 = u64 [sp + 0x78]\n 60156: a0 = a0 <u 0x2\n 60159: a1 = u64 [sp + 0x80]\n 60163: a0 = 0 if a1 != 0\n 60165: a1 = u64 [sp + 0x90]\n 60169: a2 = u64 [sp + 0x88]\n 60173: a1 = a1 | a2\n 60176: a0 = 0 if a1 != 0\n 60178: jump @902 if a0 == 0\n      : @901 (gas: 5)\n 60181: ra = 0\n 60183: t0 = 0\n 60185: t1 = 0\n 60187: u64 [sp + 176] = 0\n 60191: jump @907\n      : @902 (gas: 19)\n 60194: u64 [sp + 168] = 0\n 60198: u64 [sp + 160] = 0\n 60202: s1 = 0\n 60204: u64 [sp + 176] = 0\n 60208: a0 = u64 [sp + 0x120]\n 60212: a1 = u64 [sp + 0x128]\n 60216: a2 = u64 [sp + 0x130]\n 60220: a3 = u64 [sp + 0x138]\n 60224: a0 = reverse a0\n 60226: a5 = reverse a1\n 60228: a1 = reverse a2\n 60230: t2 = reverse a3\n 60232: i32 a3 = sp + 0x100\n 60236: u64 [sp + 0x20] = a3\n 60239: i32 a3 = sp + 0x120\n 60243: u64 [sp + 0x18] = a3\n 60246: i32 a3 = sp + 0x140\n 60250: u64 [sp + 0x10] = a3\n 60253: fallthrough\n      : @903 (gas: 20)\n 60254: u64 [sp + 0x88] = a5\n 60258: u64 [sp + 0x110] = a5\n 60262: u64 [sp + 0xb8] = a1\n 60266: u64 [sp + 0x108] = a1\n 60270: u64 [sp + 0x90] = t2\n 60274: u64 [sp + 0x100] = t2\n 60278: u64 [sp + 0x98] = a0\n 60282: u64 [sp + 0x118] = a0\n 60286: u64 [sp + 312] = 0\n 60290: u64 [sp + 304] = 0\n 60294: u64 [sp + 296] = 0\n 60298: u64 [sp + 288] = 0\n 60302: u32 [sp + 320] = 0x20\n 60307: a2 = 0xffffffffffffffff\n 60310: a0 = 0\n 60312: a1 = u64 [sp + 0x20]\n 60315: a3 = u64 [sp + 0x18]\n 60318: a4 = u64 [sp + 0x10]\n 60321: ecalli 4 // 'get_storage'\n 60323: fallthrough\n      : @904 (gas: 30)\n 60324: a0 = u64 [sp + 0x60]\n 60327: a1 = u64 [sp + 0xa8]\n 60331: a0 = a0 + a1\n 60334: a1 = a0 <u a1\n 60337: a2 = u64 [sp + 0x28]\n 60340: a4 = u64 [sp + 0xa0]\n 60344: a2 = a2 + a4\n 60347: a2 = a2 + a1\n 60350: a3 = a2 ^ a4\n 60353: a4 = a2 <u a4\n 60356: a4 = a1 if a3 == 0\n 60359: a1 = u64 [sp + 0x30]\n 60362: a1 = a1 + s1\n 60365: u64 [sp + 0x80] = s1\n 60369: a3 = a1 <u s1\n 60372: a5 = u64 [sp + 0x38]\n 60375: s1 = u64 [sp + 0xb0]\n 60379: a5 = a5 + s1\n 60382: a3 = a3 + a5\n 60385: a4 = a4 + a1\n 60388: a1 = a4 <u a1\n 60391: a1 = a1 + a3\n 60394: a1 = a1 | a2\n 60397: a2 = a0 | a4\n 60400: a2 = a2 | a1\n 60403: a1 = a1 | a4\n 60406: a2 = a2 >> 0x20\n 60409: a1 = a1 << 0x20\n 60412: a1 = a1 | a2\n 60415: jump @908 if a1 != 0\n      : @905 (gas: 10)\n 60419: a1 = u64 [sp + 0x138]\n 60423: u64 [sp + 0x70] = a1\n 60426: a1 = u64 [sp + 0x130]\n 60430: u64 [sp + 0x78] = a1\n 60433: a1 = u64 [sp + 0x128]\n 60437: u64 [sp + 0x68] = a1\n 60440: s1 = u64 [sp + 0x120]\n 60444: i32 a0 = a0 + 0\n 60446: a1 = 0x20\n 60449: ra = 740, jump @0\n      : @906 [@dyn 370] (gas: 115)\n 60456: a1 = reverse s1\n 60458: a2 = a1 >> 0x38\n 60461: u8 [a0 + 0x1f] = a2\n 60464: a2 = a1 >> 0x30\n 60467: u8 [a0 + 0x1e] = a2\n 60470: a2 = a1 >> 0x28\n 60473: u8 [a0 + 0x1d] = a2\n 60476: a2 = a1 >> 0x20\n 60479: u8 [a0 + 0x1c] = a2\n 60482: a2 = a1 >> 0x18\n 60485: u8 [a0 + 0x1b] = a2\n 60488: a2 = a1 >> 0x10\n 60491: u8 [a0 + 0x1a] = a2\n 60494: a2 = a1 >> 0x8\n 60497: u8 [a0 + 0x19] = a2\n 60500: a2 = u64 [sp + 0x68]\n 60503: a2 = reverse a2\n 60505: u8 [a0 + 0x18] = a1\n 60508: a1 = a2 >> 0x38\n 60511: u8 [a0 + 0x17] = a1\n 60514: a1 = a2 >> 0x30\n 60517: u8 [a0 + 0x16] = a1\n 60520: a1 = a2 >> 0x28\n 60523: u8 [a0 + 0x15] = a1\n 60526: a1 = a2 >> 0x20\n 60529: u8 [a0 + 0x14] = a1\n 60532: a1 = a2 >> 0x18\n 60535: u8 [a0 + 0x13] = a1\n 60538: a1 = a2 >> 0x10\n 60541: u8 [a0 + 0x12] = a1\n 60544: a1 = u64 [sp + 0x70]\n 60547: a1 = reverse a1\n 60549: a3 = u64 [sp + 0x78]\n 60552: a3 = reverse a3\n 60554: u8 [a0 + 0x10] = a2\n 60557: a2 = a2 >> 0x8\n 60560: u8 [a0 + 0x11] = a2\n 60563: u8 [a0 + 0x8] = a3\n 60566: a2 = a3 >> 0x38\n 60569: u8 [a0 + 0xf] = a2\n 60572: a2 = a3 >> 0x30\n 60575: u8 [a0 + 0xe] = a2\n 60578: a2 = a3 >> 0x28\n 60581: u8 [a0 + 0xd] = a2\n 60584: a2 = a3 >> 0x20\n 60587: u8 [a0 + 0xc] = a2\n 60590: a2 = a3 >> 0x18\n 60593: u8 [a0 + 0xb] = a2\n 60596: a2 = a3 >> 0x10\n 60599: u8 [a0 + 0xa] = a2\n 60602: a3 = a3 >> 0x8\n 60605: u8 [a0 + 0x9] = a3\n 60608: u8 [a0] = a1\n 60610: a2 = a1 >> 0x38\n 60613: u8 [a0 + 0x7] = a2\n 60616: a2 = a1 >> 0x30\n 60619: u8 [a0 + 0x6] = a2\n 60622: a2 = a1 >> 0x28\n 60625: u8 [a0 + 0x5] = a2\n 60628: a2 = a1 >> 0x20\n 60631: u8 [a0 + 0x4] = a2\n 60634: a2 = a1 >> 0x18\n 60637: u8 [a0 + 0x3] = a2\n 60640: a2 = a1 >> 0x10\n 60643: u8 [a0 + 0x2] = a2\n 60646: a1 = a1 >> 0x8\n 60649: u8 [a0 + 0x1] = a1\n 60652: t2 = u64 [sp + 0x90]\n 60656: t2 = t2 + 0x1\n 60659: a0 = t2 <u 0x1\n 60662: a1 = u64 [sp + 0xb8]\n 60666: a1 = a1 + a0\n 60669: u64 [sp + 0xb8] = a1\n 60673: a0 = u64 [sp + 0xa8]\n 60677: ra = a0 + 0x20\n 60680: a2 = ra <u a0\n 60683: a0 = u64 [sp + 0xa0]\n 60687: t0 = a0 + a2\n 60690: a3 = t0 <u a0\n 60693: a3 = a2 if a2 == 0\n 60696: a0 = u64 [sp + 0x80]\n 60700: t1 = a0 + a3\n 60703: a3 = t1 <u a0\n 60706: a5 = u64 [sp + 0xb0]\n 60710: a5 = a5 + a3\n 60713: a1 = u64 [sp + 0x50]\n 60716: a0 = t1 <u a1\n 60719: u64 [sp + 0xa8] = a0\n 60723: a2 = u64 [sp + 0x58]\n 60726: a4 = ra <u a2\n 60729: a2 = u64 [sp + 0x48]\n 60732: s1 = t0 ^ a2\n 60735: a3 = t0 <u a2\n 60738: a3 = a4 if s1 == 0\n 60741: a2 = u64 [sp + 0x40]\n 60744: a0 = a5 ^ a2\n 60747: u64 [sp + 0xb0] = a5\n 60751: s1 = a5 <u a2\n 60754: a2 = u64 [sp + 0xa8]\n 60758: s1 = a2 if a0 == 0\n 60761: a4 = t1 ^ a1\n 60764: a1 = u64 [sp + 0xb8]\n 60768: a0 = a0 | a4\n 60771: a5 = t2 | a1\n 60774: a5 = a5 <u 0x1\n 60777: a4 = u64 [sp + 0x88]\n 60781: a5 = a5 + a4\n 60784: a4 = a5 <u a4\n 60787: a3 = s1 if a0 != 0\n 60790: a0 = u64 [sp + 0x98]\n 60794: a0 = a0 + a4\n 60797: u64 [sp + 0xa8] = ra\n 60801: u64 [sp + 0xa0] = t0\n 60805: s1 = t1\n 60807: jump @903 if a3 != 0\n      : @907 (gas: 30)\n 60811: a3 = u64 [sp + 0x60]\n 60814: a3 = a3 + ra\n 60817: a0 = a3 <u ra\n 60820: a4 = u64 [sp + 0x28]\n 60823: a4 = a4 + t0\n 60826: a4 = a4 + a0\n 60829: a5 = a4 ^ t0\n 60832: a1 = a4 <u t0\n 60835: a1 = a0 if a5 == 0\n 60838: a0 = u64 [sp + 0x30]\n 60841: a0 = a0 + t1\n 60844: a1 = a1 + a0\n 60847: a5 = a1 <u a0\n 60850: a0 = a0 <u t1\n 60853: a2 = u64 [sp + 0x38]\n 60856: s1 = u64 [sp + 0xb0]\n 60860: a2 = a2 + s1\n 60863: a0 = a0 + a2\n 60866: a0 = a0 + a5\n 60869: a2 = u64 [sp + 0x8]\n 60872: u64 [a2] = a3\n 60874: u64 [a2 + 0x8] = a4\n 60877: u64 [a2 + 0x10] = a1\n 60880: u64 [a2 + 0x18] = a0\n 60883: sp = s0 + 0xfffffffffffffea0\n 60887: ra = u64 [sp + 0x158]\n 60891: s0 = u64 [sp + 0x150]\n 60895: s1 = u64 [sp + 0x148]\n 60899: sp = sp + 0x160\n 60903: ret\n      : @908 (gas: 1)\n 60905: trap\n      : @909 (gas: 8)\n 60906: u64 [sp + 240] = 0\n 60910: u64 [sp + 232] = 0\n 60914: u64 [sp + 224] = 0\n 60918: a0 = 0x4e487b7100000000\n 60928: a1 = sp + 0xe0\n 60932: u64 [sp + 0xf8] = a0\n 60936: a0 = 0\n 60938: ra = 742, jump @23\n      : @910 [@dyn 371] (gas: 7)\n 60945: u64 [sp + 216] = 0\n 60949: u64 [sp + 208] = 0\n 60953: u64 [sp + 192] = 0x22\n 60958: a0 = 0x4\n 60961: a1 = sp + 0xc0\n 60965: u64 [sp + 200] = 0\n 60969: ra = 744, jump @23\n      : @911 [@dyn 372] (gas: 3)\n 60976: a1 = 0x24\n 60979: a0 = 0\n 60981: ra = 746, jump @0\n      : @912 [@dyn 373] (gas: 6)\n 60988: i32 a1 = a0 + 0\n 60990: a0 = 0x1\n 60993: a2 = 0x24\n 60996: ra = 0x2ec\n 61000: ecalli 7 // 'seal_return'\n 61002: fallthrough\n      : @913 [@dyn 374] (gas: 27)\n 61003: sp = sp + 0xffffffffffffff80\n 61006: u64 [sp + 0x78] = ra\n 61009: u64 [sp + 0x70] = s0\n 61012: u64 [sp + 0x68] = s1\n 61015: s0 = sp + 0x80\n 61019: sp = sp & 0xfffffffffffffff0\n 61022: t0 = u64 [a1]\n 61024: t1 = u64 [a1 + 0x8]\n 61027: t2 = u64 [a1 + 0x10]\n 61030: a1 = u64 [a1 + 0x18]\n 61033: a3 = u64 [a2]\n 61035: a4 = u64 [a2 + 0x8]\n 61038: a5 = u64 [a2 + 0x10]\n 61041: a2 = u64 [a2 + 0x18]\n 61044: s1 = a0\n 61046: u64 [sp + 0x18] = a2\n 61049: u64 [sp + 0x10] = a5\n 61052: u64 [sp + 0x8] = a4\n 61055: u64 [sp] = a3\n 61057: u64 [sp + 0x38] = a1\n 61060: u64 [sp + 0x30] = t2\n 61063: u64 [sp + 0x28] = t1\n 61066: a0 = sp + 0x40\n 61069: a1 = sp + 0x20\n 61072: a2 = sp\n 61074: u64 [sp + 0x20] = t0\n 61077: ra = 750, jump @889\n      : @914 [@dyn 375] (gas: 14)\n 61083: a0 = u64 [sp + 0x50]\n 61086: a1 = u64 [sp + 0x58]\n 61089: a2 = u64 [sp + 0x40]\n 61092: a3 = u64 [sp + 0x48]\n 61095: u64 [s1 + 0x10] = a0\n 61098: u64 [s1 + 0x18] = a1\n 61101: u64 [s1] = a2\n 61103: u64 [s1 + 0x8] = a3\n 61106: sp = s0 + 0xffffffffffffff80\n 61109: ra = u64 [sp + 0x78]\n 61112: s0 = u64 [sp + 0x70]\n 61115: s1 = u64 [sp + 0x68]\n 61118: sp = sp + 0x80\n 61122: ret\n      : @915 (gas: 18)\n 61124: sp = sp + 0xffffffffffffff00\n 61128: u64 [sp + 0xf8] = ra\n 61132: u64 [sp + 0xf0] = s0\n 61136: u64 [sp + 0xe8] = s1\n 61140: s0 = sp + 0x100\n 61144: sp = sp & 0xfffffffffffffff0\n 61147: a2 = u64 [a1]\n 61149: u64 [sp + 0x20] = a2\n 61152: a2 = u64 [a1 + 0x8]\n 61155: u64 [sp + 0x10] = a2\n 61158: a2 = u64 [a1 + 0x10]\n 61161: u64 [sp + 0x8] = a2\n 61164: a1 = u64 [a1 + 0x18]\n 61167: u64 [sp] = a1\n 61169: u64 [sp + 0x18] = a0\n 61172: a0 = 0x40\n 61175: a1 = 0x20\n 61178: ra = 752, jump @0\n      : @916 [@dyn 376] (gas: 111)\n 61185: a1 = u8 [a0 + 0x1]\n 61188: a2 = u8 [a0]\n 61190: a3 = u8 [a0 + 0x2]\n 61193: a4 = u8 [a0 + 0x3]\n 61196: a1 = a1 << 0x8\n 61199: a1 = a1 | a2\n 61202: a3 = a3 << 0x10\n 61205: a4 = a4 << 0x18\n 61208: a3 = a3 | a4\n 61211: a1 = a1 | a3\n 61214: a2 = u8 [a0 + 0x5]\n 61217: a3 = u8 [a0 + 0x4]\n 61220: a4 = u8 [a0 + 0x6]\n 61223: a5 = u8 [a0 + 0x7]\n 61226: a2 = a2 << 0x8\n 61229: a2 = a2 | a3\n 61232: a4 = a4 << 0x10\n 61235: a5 = a5 << 0x18\n 61238: a4 = a4 | a5\n 61241: a2 = a2 | a4\n 61244: a2 = a2 << 0x20\n 61247: t0 = a2 | a1\n 61250: a2 = u8 [a0 + 0x9]\n 61253: a3 = u8 [a0 + 0x8]\n 61256: a4 = u8 [a0 + 0xa]\n 61259: a5 = u8 [a0 + 0xb]\n 61262: a2 = a2 << 0x8\n 61265: a2 = a2 | a3\n 61268: a4 = a4 << 0x10\n 61271: a5 = a5 << 0x18\n 61274: a4 = a4 | a5\n 61277: a2 = a2 | a4\n 61280: a3 = u8 [a0 + 0xd]\n 61283: a4 = u8 [a0 + 0xc]\n 61286: a5 = u8 [a0 + 0xe]\n 61289: s1 = u8 [a0 + 0xf]\n 61292: a3 = a3 << 0x8\n 61295: a3 = a3 | a4\n 61298: a5 = a5 << 0x10\n 61301: s1 = s1 << 0x18\n 61304: a5 = a5 | s1\n 61307: a3 = a3 | a5\n 61310: a3 = a3 << 0x20\n 61313: a2 = a2 | a3\n 61316: a3 = u8 [a0 + 0x11]\n 61319: a4 = u8 [a0 + 0x10]\n 61322: a5 = u8 [a0 + 0x12]\n 61325: s1 = u8 [a0 + 0x13]\n 61328: a3 = a3 << 0x8\n 61331: a3 = a3 | a4\n 61334: a5 = a5 << 0x10\n 61337: s1 = s1 << 0x18\n 61340: a5 = a5 | s1\n 61343: a3 = a3 | a5\n 61346: a4 = u8 [a0 + 0x15]\n 61349: a5 = u8 [a0 + 0x14]\n 61352: s1 = u8 [a0 + 0x16]\n 61355: a1 = u8 [a0 + 0x17]\n 61358: a4 = a4 << 0x8\n 61361: a4 = a4 | a5\n 61364: s1 = s1 << 0x10\n 61367: a1 = a1 << 0x18\n 61370: a1 = a1 | s1\n 61373: a1 = a1 | a4\n 61376: a1 = a1 << 0x20\n 61379: a3 = a3 | a1\n 61382: a1 = u8 [a0 + 0x19]\n 61385: a4 = u8 [a0 + 0x18]\n 61388: a5 = u8 [a0 + 0x1a]\n 61391: s1 = u8 [a0 + 0x1b]\n 61394: a1 = a1 << 0x8\n 61397: a1 = a1 | a4\n 61400: a5 = a5 << 0x10\n 61403: s1 = s1 << 0x18\n 61406: a5 = a5 | s1\n 61409: a1 = a1 | a5\n 61412: a4 = u8 [a0 + 0x1d]\n 61415: a5 = u8 [a0 + 0x1c]\n 61418: s1 = u8 [a0 + 0x1e]\n 61421: a0 = u8 [a0 + 0x1f]\n 61424: a4 = a4 << 0x8\n 61427: a4 = a4 | a5\n 61430: s1 = s1 << 0x10\n 61433: a0 = a0 << 0x18\n 61436: a0 = a0 | s1\n 61439: a0 = a0 | a4\n 61442: a0 = a0 << 0x20\n 61445: a0 = a0 | a1\n 61448: a4 = reverse a0\n 61450: u64 [sp + 0x38] = a4\n 61453: s1 = reverse a3\n 61455: a2 = reverse a2\n 61457: u64 [sp + 0x30] = a2\n 61460: a1 = reverse t0\n 61462: u64 [sp + 0x28] = a1\n 61465: a0 = u64 [sp]\n 61467: u64 [sp + 0xb8] = a0\n 61471: a0 = u64 [sp + 0x8]\n 61474: u64 [sp + 0xb0] = a0\n 61478: a0 = u64 [sp + 0x10]\n 61481: u64 [sp + 0xa8] = a0\n 61485: a0 = u64 [sp + 0x20]\n 61488: u64 [sp + 0xa0] = a0\n 61492: u64 [sp + 0x98] = a1\n 61496: u64 [sp + 0x90] = a2\n 61500: u64 [sp + 0x88] = s1\n 61504: a0 = sp + 0xc0\n 61508: a1 = sp + 0xa0\n 61512: a2 = sp + 0x80\n 61516: u64 [sp + 0x80] = a4\n 61520: ra = 754, jump @889\n      : @917 [@dyn 377] (gas: 58)\n 61526: t2 = s1\n 61528: a3 = u64 [sp + 0xc8]\n 61532: a0 = u64 [sp + 0xd8]\n 61536: u64 [sp + 0x10] = a0\n 61539: a4 = u64 [sp + 0xc0]\n 61543: t1 = u64 [sp + 0xd0]\n 61547: a5 = a3 ^ s1\n 61550: a1 = a3 <u s1\n 61553: a2 = u64 [sp + 0x38]\n 61556: s1 = a4 <u a2\n 61559: a1 = s1 if a5 == 0\n 61562: a3 = a3 - t2\n 61565: a3 = a3 - s1\n 61568: u64 [sp + 0x8] = a3\n 61571: a4 = a4 - a2\n 61574: a5 = a4 + 0x1f\n 61577: a4 = a5 <u a4\n 61580: a3 = a3 + a4\n 61583: a5 = a5 & 0xffffffffffffffe0\n 61586: a0 = a3 + t2\n 61589: a2 = a2 + a5\n 61592: u64 [sp + 0x20] = a2\n 61595: a5 = a2 <u a5\n 61598: t0 = a0 + a5\n 61601: a0 = t0 ^ a3\n 61604: a2 = t0 <u a3\n 61607: a2 = a5 if a0 == 0\n 61610: s1 = u64 [sp + 0x30]\n 61613: a0 = t1 - s1\n 61616: a5 = t1 <u s1\n 61619: t1 = s1\n 61621: ra = u64 [sp + 0x28]\n 61624: s1 = u64 [sp + 0x10]\n 61627: s1 = s1 - ra\n 61630: s1 = s1 - a5\n 61633: a5 = a0 <u a1\n 61636: s1 = s1 - a5\n 61639: a0 = a0 - a1\n 61642: a1 = u64 [sp + 0x8]\n 61645: a1 = a3 <u a1\n 61648: a1 = a4 if a4 == 0\n 61651: a1 = a1 + a0\n 61654: a0 = a1 <u a0\n 61657: a3 = a1 + t1\n 61660: a5 = a3 + a2\n 61663: a1 = a3 <u a1\n 61666: a2 = a5 <u a3\n 61669: s1 = s1 + ra\n 61672: a0 = a0 + s1\n 61675: a0 = a0 + a1\n 61678: s1 = a0 + a2\n 61681: a0 = s1 >u 0\n 61683: a1 = a5 >u 0\n 61685: a1 = a0 if s1 != 0\n 61688: a0 = a5 | s1\n 61691: a2 = t0 >u 0\n 61693: a2 = a1 if a0 != 0\n 61696: jump @921 if a2 != 0\n      : @918 (gas: 15)\n 61700: a4 = t1\n 61702: a0 = u64 [sp + 0x38]\n 61705: a1 = u64 [sp + 0x20]\n 61708: a0 = a1 <u a0\n 61711: a1 = t0 ^ t2\n 61714: a2 = t0 <u t2\n 61717: a2 = a0 if a1 == 0\n 61720: a0 = a5 <u t1\n 61723: a1 = s1 ^ ra\n 61726: a3 = s1 <u ra\n 61729: a3 = a0 if a1 == 0\n 61732: a0 = a5 ^ t1\n 61735: a0 = a0 | a1\n 61738: a3 = a2 if a0 == 0\n 61741: jump @921 if a3 != 0\n      : @919 (gas: 6)\n 61745: a0 = 0x40\n 61748: a1 = 0x20\n 61751: u64 [sp + 0x10] = t2\n 61754: u64 [sp + 0x8] = t0\n 61757: u64 [sp] = a5\n 61759: ra = 756, jump @0\n      : @920 [@dyn 378] (gas: 82)\n 61766: a1 = reverse s1\n 61768: a2 = u64 [sp]\n 61770: a2 = reverse a2\n 61772: a3 = u64 [sp + 0x8]\n 61775: a3 = reverse a3\n 61777: a4 = u64 [sp + 0x20]\n 61780: a4 = reverse a4\n 61782: u8 [a0 + 0x18] = a4\n 61785: a5 = a4 >> 0x38\n 61788: u8 [a0 + 0x1f] = a5\n 61791: a5 = a4 >> 0x30\n 61794: u8 [a0 + 0x1e] = a5\n 61797: a5 = a4 >> 0x28\n 61800: u8 [a0 + 0x1d] = a5\n 61803: a5 = a4 >> 0x20\n 61806: u8 [a0 + 0x1c] = a5\n 61809: a5 = a4 >> 0x18\n 61812: u8 [a0 + 0x1b] = a5\n 61815: a5 = a4 >> 0x10\n 61818: u8 [a0 + 0x1a] = a5\n 61821: a4 = a4 >> 0x8\n 61824: u8 [a0 + 0x19] = a4\n 61827: u8 [a0 + 0x10] = a3\n 61830: a4 = a3 >> 0x38\n 61833: u8 [a0 + 0x17] = a4\n 61836: a4 = a3 >> 0x30\n 61839: u8 [a0 + 0x16] = a4\n 61842: a4 = a3 >> 0x28\n 61845: u8 [a0 + 0x15] = a4\n 61848: a4 = a3 >> 0x20\n 61851: u8 [a0 + 0x14] = a4\n 61854: a4 = a3 >> 0x18\n 61857: u8 [a0 + 0x13] = a4\n 61860: a4 = a3 >> 0x10\n 61863: u8 [a0 + 0x12] = a4\n 61866: a3 = a3 >> 0x8\n 61869: u8 [a0 + 0x11] = a3\n 61872: u8 [a0 + 0x8] = a2\n 61875: a3 = a2 >> 0x38\n 61878: u8 [a0 + 0xf] = a3\n 61881: a3 = a2 >> 0x30\n 61884: u8 [a0 + 0xe] = a3\n 61887: a3 = a2 >> 0x28\n 61890: u8 [a0 + 0xd] = a3\n 61893: a3 = a2 >> 0x20\n 61896: u8 [a0 + 0xc] = a3\n 61899: a3 = a2 >> 0x18\n 61902: u8 [a0 + 0xb] = a3\n 61905: a3 = a2 >> 0x10\n 61908: u8 [a0 + 0xa] = a3\n 61911: a2 = a2 >> 0x8\n 61914: u8 [a0 + 0x9] = a2\n 61917: u8 [a0] = a1\n 61919: a2 = a1 >> 0x38\n 61922: u8 [a0 + 0x7] = a2\n 61925: a2 = a1 >> 0x30\n 61928: u8 [a0 + 0x6] = a2\n 61931: a2 = a1 >> 0x28\n 61934: u8 [a0 + 0x5] = a2\n 61937: a2 = a1 >> 0x20\n 61940: u8 [a0 + 0x4] = a2\n 61943: a2 = a1 >> 0x18\n 61946: u8 [a0 + 0x3] = a2\n 61949: a2 = a1 >> 0x10\n 61952: u8 [a0 + 0x2] = a2\n 61955: a1 = a1 >> 0x8\n 61958: u8 [a0 + 0x1] = a1\n 61961: a0 = u64 [sp + 0x18]\n 61964: a1 = u64 [sp + 0x38]\n 61967: u64 [a0] = a1\n 61969: a1 = u64 [sp + 0x28]\n 61972: u64 [a0 + 0x18] = a1\n 61975: a1 = u64 [sp + 0x10]\n 61978: u64 [a0 + 0x8] = a1\n 61981: a1 = u64 [sp + 0x30]\n 61984: u64 [a0 + 0x10] = a1\n 61987: sp = s0 + 0xffffffffffffff00\n 61991: ra = u64 [sp + 0xf8]\n 61995: s0 = u64 [sp + 0xf0]\n 61999: s1 = u64 [sp + 0xe8]\n 62003: sp = sp + 0x100\n 62007: ret\n      : @921 (gas: 8)\n 62009: u64 [sp + 112] = 0\n 62012: u64 [sp + 104] = 0\n 62015: u64 [sp + 96] = 0\n 62018: a0 = 0x4e487b7100000000\n 62028: a1 = sp + 0x60\n 62031: u64 [sp + 0x78] = a0\n 62034: a0 = 0\n 62036: ra = 758, jump @23\n      : @922 [@dyn 379] (gas: 7)\n 62043: u64 [sp + 88] = 0\n 62046: u64 [sp + 80] = 0\n 62049: u64 [sp + 64] = 0x41\n 62053: a0 = 0x4\n 62056: a1 = sp + 0x40\n 62059: u64 [sp + 72] = 0\n 62062: ra = 760, jump @23\n      : @923 [@dyn 380] (gas: 3)\n 62069: a1 = 0x24\n 62072: a0 = 0\n 62074: ra = 762, jump @0\n      : @924 [@dyn 381] (gas: 6)\n 62081: i32 a1 = a0 + 0\n 62083: a0 = 0x1\n 62086: a2 = 0x24\n 62089: ra = 0x2fc\n 62093: ecalli 7 // 'seal_return'\n 62095: fallthrough\n      : @925 [@dyn 382] (gas: 18)\n 62096: sp = sp + 0xffffffffffffffa0\n 62099: u64 [sp + 0x58] = ra\n 62102: u64 [sp + 0x50] = s0\n 62105: u64 [sp + 0x48] = s1\n 62108: s0 = sp + 0x60\n 62111: sp = sp & 0xfffffffffffffff0\n 62114: a2 = u64 [a1]\n 62116: a3 = u64 [a1 + 0x8]\n 62119: a4 = u64 [a1 + 0x10]\n 62122: a1 = u64 [a1 + 0x18]\n 62125: s1 = a0\n 62127: u64 [sp + 0x18] = a1\n 62130: u64 [sp + 0x10] = a4\n 62133: u64 [sp + 0x8] = a3\n 62136: a0 = sp + 0x20\n 62139: a1 = sp\n 62141: u64 [sp] = a2\n 62143: ra = 766, jump @915\n      : @926 [@dyn 383] (gas: 14)\n 62149: a0 = u64 [sp + 0x30]\n 62152: a1 = u64 [sp + 0x38]\n 62155: a2 = u64 [sp + 0x20]\n 62158: a3 = u64 [sp + 0x28]\n 62161: u64 [s1 + 0x10] = a0\n 62164: u64 [s1 + 0x18] = a1\n 62167: u64 [s1] = a2\n 62169: u64 [s1 + 0x8] = a3\n 62172: sp = s0 + 0xffffffffffffffa0\n 62175: ra = u64 [sp + 0x58]\n 62178: s0 = u64 [sp + 0x50]\n 62181: s1 = u64 [sp + 0x48]\n 62184: sp = sp + 0x60\n 62187: ret\n      : @927 (gas: 27)\n 62189: a0 = u64 [sp + 0x90]\n 62193: a1 = u64 [sp + 0x88]\n 62197: a2 = u64 [sp + 0x80]\n 62201: a3 = u64 [sp + 0x98]\n 62205: a4 = a0 << 0x3f\n 62208: a5 = a1 >> 0x1\n 62211: a4 = a4 | a5\n 62214: a5 = a3 << 0x3f\n 62217: a0 = a0 >> 0x1\n 62220: s1 = a0 | a5\n 62223: a1 = a1 << 0x3f\n 62226: a5 = a2 >> 0x1\n 62229: a5 = a5 | a1\n 62232: a3 = a3 >> 0x1\n 62235: a2 = a2 & 0x1\n 62238: a0 = -a2\n 62240: t0 = a2 <u 0x1\n 62243: a1 = a5 & 0x7f\n 62246: s1 = s1 & a0\n 62249: a4 = a4 & a0\n 62252: a1 = a5 if a2 != 0\n 62255: a3 = a3 & a0\n 62258: a0 = a1 <u 0x20\n 62261: a0 = 0 if a4 != 0\n 62263: a2 = s1 | a3\n 62266: a0 = 0 if a2 != 0\n 62268: jump @929 if t0 != a0\n      : @928 (gas: 11)\n 62271: a0 = u64 [sp + 0x18]\n 62274: u64 [a0] = a1\n 62276: u64 [a0 + 0x8] = a4\n 62279: u64 [a0 + 0x10] = s1\n 62282: u64 [a0 + 0x18] = a3\n 62285: sp = s0 + 0xffffffffffffff40\n 62289: ra = u64 [sp + 0xb8]\n 62293: s0 = u64 [sp + 0xb0]\n 62297: s1 = u64 [sp + 0xa8]\n 62301: sp = sp + 0xc0\n 62305: ret\n      : @929 (gas: 8)\n 62307: u64 [sp + 80] = 0\n 62310: u64 [sp + 72] = 0\n 62313: u64 [sp + 64] = 0\n 62316: a0 = 0x4e487b7100000000\n 62326: a1 = sp + 0x40\n 62329: u64 [sp + 0x58] = a0\n 62332: a0 = 0\n 62334: ra = 768, jump @23\n      : @930 [@dyn 384] (gas: 7)\n 62341: u64 [sp + 56] = 0\n 62344: u64 [sp + 48] = 0\n 62347: u64 [sp + 32] = 0x22\n 62351: a0 = 0x4\n 62354: a1 = sp + 0x20\n 62357: u64 [sp + 40] = 0\n 62360: ra = 770, jump @23\n      : @931 [@dyn 385] (gas: 3)\n 62367: a1 = 0x24\n 62370: a0 = 0\n 62372: ra = 772, jump @0\n      : @932 [@dyn 386] (gas: 6)\n 62379: i32 a1 = a0 + 0\n 62381: a0 = 0x1\n 62384: a2 = 0x24\n 62387: ra = 0x306\n 62391: ecalli 7 // 'seal_return'\n 62393: fallthrough\n      : @933 [@dyn 387] (gas: 9)\n 62394: a2 = u64 [a1 + 0x18]\n 62397: a3 = u64 [a1 + 0x10]\n 62400: a4 = u64 [a1 + 0x8]\n 62403: a1 = u64 [a1]\n 62405: u64 [a0 + 0x18] = a2\n 62408: u64 [a0 + 0x10] = a3\n 62411: u64 [a0 + 0x8] = a4\n 62414: u64 [a0] = a1\n 62416: ret\n      : @934 (gas: 17)\n 62418: sp = sp + 0xffffffffffffffa0\n 62421: u64 [sp + 0x58] = ra\n 62424: u64 [sp + 0x50] = s0\n 62427: u64 [sp + 0x48] = s1\n 62430: a3 = u64 [a1 + 0x18]\n 62433: a4 = u64 [a1 + 0x10]\n 62436: a5 = u64 [a1 + 0x8]\n 62439: s1 = u64 [a1]\n 62441: a1 = a5 | a3\n 62444: a2 = s1 | a4\n 62447: a2 = a2 | a1\n 62450: a2 = a2 >> 0x20\n 62453: a1 = a1 | a4\n 62456: a1 = a1 << 0x20\n 62459: a1 = a1 | a2\n 62462: u64 [sp + 0x20] = a0\n 62465: jump @943 if a1 != 0\n      : @935 (gas: 19)\n 62469: a0 = s1 + 0x20\n 62472: u64 [sp + 0x40] = a0\n 62475: a0 = a0 <u s1\n 62478: a1 = a5 + a0\n 62481: u64 [sp + 0x38] = a1\n 62484: u64 [sp + 0x8] = a5\n 62487: s0 = a1 <u a5\n 62490: s0 = a0 if a0 == 0\n 62493: s0 = s0 + a4\n 62496: u64 [sp + 0x10] = a4\n 62499: a0 = s0 <u a4\n 62502: u64 [sp + 0x18] = a3\n 62505: a0 = a0 + a3\n 62508: u64 [sp + 0x30] = a0\n 62511: u64 [sp] = s1\n 62513: i32 a0 = s1 + 0\n 62515: a1 = 0x20\n 62518: s1 = 0x20\n 62521: ra = 776, jump @0\n      : @936 [@dyn 388] (gas: 43)\n 62528: u8 [a0 + 0x1f] = s1\n 62531: a1 = u64 [sp + 0x40]\n 62534: a1 = a1 | s0\n 62537: a2 = u64 [sp + 0x38]\n 62540: a3 = u64 [sp + 0x30]\n 62543: a2 = a2 | a3\n 62546: a1 = a1 | a2\n 62549: a1 = a1 >> 0x20\n 62552: a2 = a2 | s0\n 62555: a2 = a2 << 0x20\n 62558: a1 = a1 | a2\n 62561: u8 [a0 + 30] = 0\n 62564: u8 [a0 + 29] = 0\n 62567: u8 [a0 + 28] = 0\n 62570: u8 [a0 + 27] = 0\n 62573: u8 [a0 + 26] = 0\n 62576: u8 [a0 + 25] = 0\n 62579: u8 [a0 + 24] = 0\n 62582: u8 [a0 + 23] = 0\n 62585: u8 [a0 + 22] = 0\n 62588: u8 [a0 + 21] = 0\n 62591: u8 [a0 + 20] = 0\n 62594: u8 [a0 + 19] = 0\n 62597: u8 [a0 + 18] = 0\n 62600: u8 [a0 + 17] = 0\n 62603: u8 [a0 + 16] = 0\n 62606: u8 [a0 + 15] = 0\n 62609: u8 [a0 + 14] = 0\n 62612: u8 [a0 + 13] = 0\n 62615: u8 [a0 + 12] = 0\n 62618: u8 [a0 + 11] = 0\n 62621: u8 [a0 + 10] = 0\n 62624: u8 [a0 + 9] = 0\n 62627: u8 [a0 + 8] = 0\n 62630: u8 [a0 + 7] = 0\n 62633: u8 [a0 + 6] = 0\n 62636: u8 [a0 + 5] = 0\n 62639: u8 [a0 + 4] = 0\n 62642: u8 [a0 + 3] = 0\n 62645: u8 [a0 + 2] = 0\n 62648: u8 [a0 + 1] = 0\n 62651: u8 [a0 + 0] = 0\n 62653: jump @943 if a1 != 0\n      : @937 (gas: 6)\n 62657: s1 = s0\n 62659: s0 = u64 [sp + 0x40]\n 62662: i32 a0 = s0 + 0\n 62664: a1 = 0x20\n 62667: u64 [sp + 0x28] = a0\n 62670: ra = 778, jump @0\n      : @938 [@dyn 389] (gas: 42)\n 62677: u8 [a0 + 31] = 0x21\n 62681: u8 [a0 + 30] = 0\n 62684: u8 [a0 + 29] = 0\n 62687: u8 [a0 + 28] = 0\n 62690: u8 [a0 + 27] = 0\n 62693: u8 [a0 + 26] = 0\n 62696: u8 [a0 + 25] = 0\n 62699: u8 [a0 + 24] = 0\n 62702: u8 [a0 + 23] = 0\n 62705: u8 [a0 + 22] = 0\n 62708: u8 [a0 + 21] = 0\n 62711: u8 [a0 + 20] = 0\n 62714: u8 [a0 + 19] = 0\n 62717: u8 [a0 + 18] = 0\n 62720: u8 [a0 + 17] = 0\n 62723: u8 [a0 + 16] = 0\n 62726: u8 [a0 + 15] = 0\n 62729: u8 [a0 + 14] = 0\n 62732: u8 [a0 + 13] = 0\n 62735: u8 [a0 + 12] = 0\n 62738: u8 [a0 + 11] = 0\n 62741: u8 [a0 + 10] = 0\n 62744: u8 [a0 + 9] = 0\n 62747: u8 [a0 + 8] = 0\n 62750: u8 [a0 + 7] = 0\n 62753: u8 [a0 + 6] = 0\n 62756: u8 [a0 + 5] = 0\n 62759: u8 [a0 + 4] = 0\n 62762: u8 [a0 + 3] = 0\n 62765: u8 [a0 + 2] = 0\n 62768: u8 [a0 + 1] = 0\n 62771: a1 = u64 [sp + 0x30]\n 62774: a2 = s1 | a1\n 62777: s1 = 0x100000000\n 62787: a1 = 0xffffffe0\n 62797: a1 = s0 <u a1\n 62800: s0 = a2\n 62802: a2 = u64 [sp + 0x38]\n 62805: a1 = 0 if a2 != 0\n 62807: a1 = 0 if s0 != 0\n 62809: u8 [a0 + 0] = 0\n 62811: jump @943 if a1 == 0\n      : @939 (gas: 4)\n 62815: a0 = u64 [sp + 0x28]\n 62818: i32 a0 = a0 + 0x20\n 62821: a1 = 0x20\n 62824: ra = 780, jump @0\n      : @940 [@dyn 390] (gas: 40)\n 62831: u8 [a0 + 30] = 0x79\n 62835: u8 [a0 + 21] = 0x6e\n 62839: u8 [a0 + 31] = 0x65\n 62843: u8 [a0 + 27] = 0x65\n 62847: u8 [a0 + 20] = 0x65\n 62851: u8 [a0 + 19] = 0x65\n 62855: u8 [a0 + 18] = 0x62\n 62859: u8 [a0 + 23] = 0x73\n 62863: u8 [a0 + 16] = 0x73\n 62867: u8 [a0 + 14] = 0x68\n 62871: u8 [a0 + 28] = 0x64\n 62875: u8 [a0 + 12] = 0x64\n 62879: u8 [a0 + 26] = 0x72\n 62883: u8 [a0 + 11] = 0x72\n 62887: u8 [a0 + 9] = 0x77\n 62891: u8 [a0 + 7] = 0x63\n 62895: u8 [a0 + 6] = 0x69\n 62899: u8 [a0 + 5] = 0x67\n 62903: u8 [a0 + 15] = 0x61\n 62907: u8 [a0 + 4] = 0x61\n 62911: u8 [a0 + 3] = 0x6d\n 62915: u8 [a0 + 29] = 0x20\n 62919: u8 [a0 + 22] = 0x20\n 62923: u8 [a0 + 17] = 0x20\n 62927: u8 [a0 + 13] = 0x20\n 62931: u8 [a0 + 8] = 0x20\n 62935: u8 [a0 + 2] = 0x20\n 62939: u8 [a0 + 25] = 0x6f\n 62943: u8 [a0 + 10] = 0x6f\n 62947: u8 [a0 + 1] = 0x6f\n 62951: u8 [a0 + 0] = 0x4e\n 62954: a1 = s1 + 0xffffffffffffffc0\n 62957: a2 = u64 [sp + 0x40]\n 62960: a1 = a2 <u a1\n 62963: a2 = u64 [sp + 0x38]\n 62966: a1 = 0 if a2 != 0\n 62968: a1 = 0 if s0 != 0\n 62970: s0 = 0x74\n 62973: u8 [a0 + 0x18] = s0\n 62976: jump @943 if a1 == 0\n      : @941 (gas: 4)\n 62980: a0 = u64 [sp + 0x28]\n 62983: i32 a0 = a0 + 0x40\n 62986: a1 = 0x20\n 62989: ra = 782, jump @0\n      : @942 [@dyn 391] (gas: 54)\n 62996: u8 [a0 + 31] = 0\n 62999: u8 [a0 + 30] = 0\n 63002: u8 [a0 + 29] = 0\n 63005: u8 [a0 + 28] = 0\n 63008: u8 [a0 + 27] = 0\n 63011: u8 [a0 + 26] = 0\n 63014: u8 [a0 + 25] = 0\n 63017: u8 [a0 + 24] = 0\n 63020: u8 [a0 + 23] = 0\n 63023: u8 [a0 + 22] = 0\n 63026: u8 [a0 + 21] = 0\n 63029: u8 [a0 + 20] = 0\n 63032: u8 [a0 + 19] = 0\n 63035: u8 [a0 + 18] = 0\n 63038: u8 [a0 + 17] = 0\n 63041: u8 [a0 + 16] = 0\n 63044: u8 [a0 + 15] = 0\n 63047: u8 [a0 + 14] = 0\n 63050: u8 [a0 + 13] = 0\n 63053: u8 [a0 + 12] = 0\n 63056: u8 [a0 + 11] = 0\n 63059: u8 [a0 + 10] = 0\n 63062: u8 [a0 + 9] = 0\n 63065: u8 [a0 + 8] = 0\n 63068: u8 [a0 + 7] = 0\n 63071: u8 [a0 + 6] = 0\n 63074: u8 [a0 + 5] = 0\n 63077: u8 [a0 + 4] = 0\n 63080: u8 [a0 + 3] = 0\n 63083: u8 [a0 + 2] = 0\n 63086: u8 [a0 + 1] = 0\n 63089: u8 [a0] = s0\n 63091: a1 = u64 [sp]\n 63093: a0 = a1 + 0x80\n 63097: a1 = a0 <u a1\n 63100: a3 = u64 [sp + 0x8]\n 63103: a2 = a3 + a1\n 63106: a3 = a2 <u a3\n 63109: a3 = a1 if a1 == 0\n 63112: a1 = u64 [sp + 0x10]\n 63115: a3 = a3 + a1\n 63118: a1 = a3 <u a1\n 63121: a4 = u64 [sp + 0x18]\n 63124: a1 = a1 + a4\n 63127: a4 = u64 [sp + 0x20]\n 63130: u64 [a4] = a0\n 63132: u64 [a4 + 0x8] = a2\n 63135: u64 [a4 + 0x10] = a3\n 63138: u64 [a4 + 0x18] = a1\n 63141: ra = u64 [sp + 0x58]\n 63144: s0 = u64 [sp + 0x50]\n 63147: s1 = u64 [sp + 0x48]\n 63150: sp = sp + 0x60\n 63153: ret\n      : @943 (gas: 1)\n 63155: trap\n      : @944 (gas: 20)\n 63156: a0 = u64 [sp + 0xf8]\n 63160: t0 = u64 [sp + 0xe0]\n 63164: a2 = u64 [sp + 0xf0]\n 63168: a3 = u64 [sp + 0xe8]\n 63172: a4 = a0 ^ s1\n 63175: u64 [sp + 0x38] = s1\n 63178: a1 = s1 <u a0\n 63181: a0 = u64 [sp + 0x58]\n 63184: a5 = a0 <u a2\n 63187: a5 = a1 if a4 != 0\n 63190: a1 = u64 [sp + 0x50]\n 63193: t1 = a3 ^ a1\n 63196: a3 = a1 <u a3\n 63199: a1 = u64 [sp + 0x48]\n 63202: a1 = a1 <u t0\n 63205: a1 = a3 if t1 != 0\n 63208: a0 = a0 ^ a2\n 63211: a0 = a0 | a4\n 63214: a1 = a5 if a0 != 0\n 63217: jump @948 if a1 == 0\n      : @945 (gas: 3)\n 63221: a1 = 0x20\n 63224: a0 = 0\n 63226: ra = 784, jump @0\n      : @946 [@dyn 392] (gas: 71)\n 63233: a1 = u64 [sp + 0x18]\n 63236: a1 = reverse a1\n 63238: a2 = u64 [sp + 0x20]\n 63241: a2 = reverse a2\n 63243: a3 = u64 [sp + 0x28]\n 63246: a3 = reverse a3\n 63248: a4 = u64 [sp + 0x30]\n 63251: a4 = reverse a4\n 63253: a5 = a4 >> 0x38\n 63256: u8 [a0 + 0x1f] = a5\n 63259: a5 = a4 >> 0x30\n 63262: u8 [a0 + 0x1e] = a5\n 63265: a5 = a4 >> 0x28\n 63268: u8 [a0 + 0x1d] = a5\n 63271: a5 = a4 >> 0x20\n 63274: u8 [a0 + 0x1c] = a5\n 63277: a5 = a4 >> 0x18\n 63280: u8 [a0 + 0x1b] = a5\n 63283: a5 = a4 >> 0x10\n 63286: u8 [a0 + 0x1a] = a5\n 63289: a5 = a4 >> 0x8\n 63292: u8 [a0 + 0x19] = a5\n 63295: u8 [a0 + 0x18] = a4\n 63298: u8 [a0 + 0x10] = a3\n 63301: a4 = a3 >> 0x38\n 63304: u8 [a0 + 0x17] = a4\n 63307: a4 = a3 >> 0x30\n 63310: u8 [a0 + 0x16] = a4\n 63313: a4 = a3 >> 0x28\n 63316: u8 [a0 + 0x15] = a4\n 63319: a4 = a3 >> 0x20\n 63322: u8 [a0 + 0x14] = a4\n 63325: a4 = a3 >> 0x18\n 63328: u8 [a0 + 0x13] = a4\n 63331: a4 = a3 >> 0x10\n 63334: u8 [a0 + 0x12] = a4\n 63337: a3 = a3 >> 0x8\n 63340: u8 [a0 + 0x11] = a3\n 63343: u8 [a0 + 0x8] = a2\n 63346: a3 = a2 >> 0x38\n 63349: u8 [a0 + 0xf] = a3\n 63352: a3 = a2 >> 0x30\n 63355: u8 [a0 + 0xe] = a3\n 63358: a3 = a2 >> 0x28\n 63361: u8 [a0 + 0xd] = a3\n 63364: a3 = a2 >> 0x20\n 63367: u8 [a0 + 0xc] = a3\n 63370: a3 = a2 >> 0x18\n 63373: u8 [a0 + 0xb] = a3\n 63376: a3 = a2 >> 0x10\n 63379: u8 [a0 + 0xa] = a3\n 63382: a2 = a2 >> 0x8\n 63385: u8 [a0 + 0x9] = a2\n 63388: u8 [a0] = a1\n 63390: a2 = a1 >> 0x38\n 63393: u8 [a0 + 0x7] = a2\n 63396: a2 = a1 >> 0x30\n 63399: u8 [a0 + 0x6] = a2\n 63402: a2 = a1 >> 0x28\n 63405: u8 [a0 + 0x5] = a2\n 63408: a2 = a1 >> 0x20\n 63411: u8 [a0 + 0x4] = a2\n 63414: a2 = a1 >> 0x18\n 63417: u8 [a0 + 0x3] = a2\n 63420: a2 = a1 >> 0x10\n 63423: u8 [a0 + 0x2] = a2\n 63426: a1 = a1 >> 0x8\n 63429: u8 [a0 + 0x1] = a1\n 63432: a1 = 0x20\n 63435: a0 = 0\n 63437: ra = 786, jump @0\n      : @947 [@dyn 393] (gas: 45)\n 63444: i32 a0 = a0 + 0\n 63446: i32 a2 = sp + 0xe0\n 63450: a1 = 0x20\n 63453: ecalli 5 // 'hash_keccak_256'\n 63455: a0 = u64 [sp + 0xe0]\n 63459: a1 = u64 [sp + 0xe8]\n 63463: a2 = u64 [sp + 0xf8]\n 63467: a3 = u64 [sp + 0xf0]\n 63471: t0 = reverse a0\n 63473: a1 = reverse a1\n 63475: a2 = reverse a2\n 63477: a3 = reverse a3\n 63479: a4 = u64 [sp + 0x50]\n 63482: a4 = a4 + a3\n 63485: a5 = u64 [sp + 0x48]\n 63488: a5 = a5 + a2\n 63491: a2 = a5 <u a2\n 63494: a4 = a4 + a2\n 63497: s1 = a4 ^ a3\n 63500: a3 = a4 <u a3\n 63503: a3 = a2 if s1 == 0\n 63506: a2 = u64 [sp + 0x58]\n 63509: a2 = a2 + a1\n 63512: a3 = a3 + a2\n 63515: s1 = a3 <u a2\n 63518: a0 = u64 [sp + 0x38]\n 63521: a0 = a0 + t0\n 63524: a1 = a2 <u a1\n 63527: a0 = a0 + a1\n 63530: a0 = a0 + s1\n 63533: a1 = u64 [sp + 0x40]\n 63536: u64 [a1 + 56] = 0\n 63539: u64 [a1 + 48] = 0\n 63542: u64 [a1 + 40] = 0\n 63545: u64 [a1 + 32] = 0\n 63548: u64 [a1] = a5\n 63550: u64 [a1 + 0x8] = a4\n 63553: u64 [a1 + 0x10] = a3\n 63556: u64 [a1 + 0x18] = a0\n 63559: sp = s0 + 0xfffffffffffffee0\n 63563: ra = u64 [sp + 0x118]\n 63567: s0 = u64 [sp + 0x110]\n 63571: s1 = u64 [sp + 0x108]\n 63575: sp = sp + 0x120\n 63579: ret\n      : @948 (gas: 8)\n 63581: u64 [sp + 144] = 0\n 63585: u64 [sp + 136] = 0\n 63589: u64 [sp + 128] = 0\n 63593: a0 = 0x4e487b7100000000\n 63603: a1 = sp + 0x80\n 63607: u64 [sp + 0x98] = a0\n 63611: a0 = 0\n 63613: ra = 788, jump @23\n      : @949 [@dyn 394] (gas: 7)\n 63620: u64 [sp + 120] = 0\n 63623: u64 [sp + 112] = 0\n 63626: u64 [sp + 96] = 0x32\n 63630: a0 = 0x4\n 63633: a1 = sp + 0x60\n 63636: u64 [sp + 104] = 0\n 63639: ra = 790, jump @23\n      : @950 [@dyn 395] (gas: 3)\n 63646: a1 = 0x24\n 63649: a0 = 0\n 63651: ra = 792, jump @0\n      : @951 [@dyn 396] (gas: 6)\n 63658: i32 a1 = a0 + 0\n 63660: a0 = 0x1\n 63663: a2 = 0x24\n 63666: ra = 0x31a\n 63670: ecalli 7 // 'seal_return'\n 63672: fallthrough\n      : @952 [@dyn 397] (gas: 9)\n 63673: a2 = u64 [a1 + 0x18]\n 63676: a3 = u64 [a1 + 0x10]\n 63679: a4 = u64 [a1 + 0x8]\n 63682: a1 = u64 [a1]\n 63684: u64 [a0 + 0x18] = a2\n 63687: u64 [a0 + 0x10] = a3\n 63690: u64 [a0 + 0x8] = a4\n 63693: u64 [a0] = a1\n 63695: ret\n      : @953 (gas: 39)\n 63697: sp = sp + 0xfffffffffffffea0\n 63701: u64 [sp + 0x158] = ra\n 63705: u64 [sp + 0x150] = s0\n 63709: u64 [sp + 0x148] = s1\n 63713: s0 = sp + 0x160\n 63717: sp = sp & 0xffffffffffffffe0\n 63720: u64 [sp + 0x8] = a0\n 63723: a0 = u64 [a2 + 0x18]\n 63726: u64 [sp + 0x60] = a0\n 63729: a0 = u64 [a2 + 0x10]\n 63732: u64 [sp + 0x58] = a0\n 63735: a0 = u64 [a2 + 0x8]\n 63738: u64 [sp + 0x50] = a0\n 63741: a0 = u64 [a2]\n 63743: u64 [sp + 0x48] = a0\n 63746: a4 = u64 [a1 + 0x18]\n 63749: a3 = u64 [a1 + 0x10]\n 63752: a2 = u64 [a1 + 0x8]\n 63755: a0 = u64 [a1]\n 63757: u64 [sp + 0x88] = a4\n 63761: u64 [sp + 0x118] = a4\n 63765: u64 [sp + 0x90] = a3\n 63769: u64 [sp + 0x110] = a3\n 63773: u64 [sp + 0x98] = a2\n 63777: u64 [sp + 0x108] = a2\n 63781: u64 [sp + 0xa0] = a0\n 63785: u64 [sp + 0x100] = a0\n 63789: u64 [sp + 312] = 0\n 63793: u64 [sp + 304] = 0\n 63797: u64 [sp + 296] = 0\n 63801: u64 [sp + 288] = 0\n 63805: u32 [sp + 320] = 0x20\n 63810: i32 a1 = sp + 0x100\n 63814: i32 a3 = sp + 0x120\n 63818: i32 a4 = sp + 0x140\n 63822: a2 = 0xffffffffffffffff\n 63825: a0 = 0\n 63827: ecalli 4 // 'get_storage'\n 63829: fallthrough\n      : @954 (gas: 31)\n 63830: t0 = u64 [sp + 0x130]\n 63834: t1 = u64 [sp + 0x128]\n 63838: t2 = u64 [sp + 0x138]\n 63842: ra = u64 [sp + 0x120]\n 63846: a0 = t0 << 0x3f\n 63849: a1 = t1 >> 0x1\n 63852: s1 = a1 | a0\n 63855: a0 = t2 << 0x3f\n 63858: a2 = t0 >> 0x1\n 63861: a2 = a2 | a0\n 63864: a0 = t1 << 0x3f\n 63867: a3 = ra >> 0x1\n 63870: a3 = a3 | a0\n 63873: a4 = t2 >> 0x1\n 63876: a0 = ra & 0x1\n 63879: a5 = -a0\n 63881: a1 = a3 & 0x7f\n 63884: a2 = a2 & a5\n 63887: s1 = s1 & a5\n 63890: a1 = a3 if a0 != 0\n 63893: a4 = a4 & a5\n 63896: u64 [sp + 0x28] = a1\n 63899: a1 = a1 <u 0x20\n 63902: u64 [sp + 0x30] = s1\n 63905: a1 = 0 if s1 != 0\n 63907: u64 [sp + 0x40] = a2\n 63910: u64 [sp + 0x38] = a4\n 63913: a2 = a2 | a4\n 63916: a1 = 0 if a2 != 0\n 63918: a2 = a0 <u 0x1\n 63921: jump @970 if a2 != a1\n      : @955 (gas: 4)\n 63925: u64 [sp + 0xb8] = t0\n 63929: u64 [sp + 0xb0] = t1\n 63933: u64 [sp + 0xa8] = t2\n 63937: jump @959 if a0 != 0\n      : @956 (gas: 12)\n 63941: a2 = u64 [sp + 0x58]\n 63944: a4 = u64 [sp + 0x48]\n 63947: a0 = a4 | a2\n 63950: a1 = u64 [sp + 0x60]\n 63953: a3 = u64 [sp + 0x50]\n 63956: a1 = a1 | a3\n 63959: a0 = a0 | a1\n 63962: a0 = a0 >> 0x20\n 63965: a1 = a1 | a2\n 63968: a1 = a1 << 0x20\n 63971: a0 = a0 | a1\n 63974: jump @969 if a0 != 0\n      : @957 (gas: 4)\n 63978: s1 = ra & 0xffffffffffffff00\n 63982: i32 a0 = a4 + 0\n 63984: a1 = 0x20\n 63987: ra = 796, jump @0\n      : @958 [@dyn 398] (gas: 67)\n 63994: a1 = u64 [sp + 0xa8]\n 63998: a1 = reverse a1\n 64000: a2 = u64 [sp + 0xb8]\n 64004: a2 = reverse a2\n 64006: a3 = u64 [sp + 0xb0]\n 64010: a3 = reverse a3\n 64012: a4 = reverse s1\n 64014: u8 [a0 + 31] = 0\n 64017: u8 [a0 + 0x18] = a4\n 64020: u8 [a0 + 0x10] = a3\n 64023: a5 = a4 >> 0x30\n 64026: u8 [a0 + 0x1e] = a5\n 64029: a5 = a4 >> 0x28\n 64032: u8 [a0 + 0x1d] = a5\n 64035: a5 = a4 >> 0x20\n 64038: u8 [a0 + 0x1c] = a5\n 64041: a5 = a4 >> 0x18\n 64044: u8 [a0 + 0x1b] = a5\n 64047: a5 = a4 >> 0x10\n 64050: u8 [a0 + 0x1a] = a5\n 64053: a4 = a4 >> 0x8\n 64056: u8 [a0 + 0x19] = a4\n 64059: a4 = a3 >> 0x38\n 64062: u8 [a0 + 0x17] = a4\n 64065: a4 = a3 >> 0x30\n 64068: u8 [a0 + 0x16] = a4\n 64071: a4 = a3 >> 0x28\n 64074: u8 [a0 + 0x15] = a4\n 64077: a4 = a3 >> 0x20\n 64080: u8 [a0 + 0x14] = a4\n 64083: a4 = a3 >> 0x18\n 64086: u8 [a0 + 0x13] = a4\n 64089: a4 = a3 >> 0x10\n 64092: u8 [a0 + 0x12] = a4\n 64095: a3 = a3 >> 0x8\n 64098: u8 [a0 + 0x11] = a3\n 64101: u8 [a0 + 0x8] = a2\n 64104: a3 = a2 >> 0x38\n 64107: u8 [a0 + 0xf] = a3\n 64110: a3 = a2 >> 0x30\n 64113: u8 [a0 + 0xe] = a3\n 64116: a3 = a2 >> 0x28\n 64119: u8 [a0 + 0xd] = a3\n 64122: a3 = a2 >> 0x20\n 64125: u8 [a0 + 0xc] = a3\n 64128: a3 = a2 >> 0x18\n 64131: u8 [a0 + 0xb] = a3\n 64134: a3 = a2 >> 0x10\n 64137: u8 [a0 + 0xa] = a3\n 64140: a2 = a2 >> 0x8\n 64143: u8 [a0 + 0x9] = a2\n 64146: u8 [a0] = a1\n 64148: a2 = a1 >> 0x38\n 64151: u8 [a0 + 0x7] = a2\n 64154: a2 = a1 >> 0x30\n 64157: u8 [a0 + 0x6] = a2\n 64160: a2 = a1 >> 0x28\n 64163: u8 [a0 + 0x5] = a2\n 64166: a2 = a1 >> 0x20\n 64169: u8 [a0 + 0x4] = a2\n 64172: a2 = a1 >> 0x18\n 64175: u8 [a0 + 0x3] = a2\n 64178: a2 = a1 >> 0x10\n 64181: u8 [a0 + 0x2] = a2\n 64184: a1 = a1 >> 0x8\n 64187: u8 [a0 + 0x1] = a1\n 64190: jump @968\n      : @959 (gas: 4)\n 64193: a1 = 0x20\n 64196: a0 = 0\n 64198: s1 = ra\n 64200: ra = 798, jump @0\n      : @960 [@dyn 399] (gas: 71)\n 64207: a1 = u64 [sp + 0x88]\n 64211: a1 = reverse a1\n 64213: a2 = u64 [sp + 0x90]\n 64217: a2 = reverse a2\n 64219: a3 = u64 [sp + 0x98]\n 64223: a3 = reverse a3\n 64225: a4 = u64 [sp + 0xa0]\n 64229: a4 = reverse a4\n 64231: a5 = a4 >> 0x38\n 64234: u8 [a0 + 0x1f] = a5\n 64237: a5 = a4 >> 0x30\n 64240: u8 [a0 + 0x1e] = a5\n 64243: a5 = a4 >> 0x28\n 64246: u8 [a0 + 0x1d] = a5\n 64249: a5 = a4 >> 0x20\n 64252: u8 [a0 + 0x1c] = a5\n 64255: a5 = a4 >> 0x18\n 64258: u8 [a0 + 0x1b] = a5\n 64261: a5 = a4 >> 0x10\n 64264: u8 [a0 + 0x1a] = a5\n 64267: a5 = a4 >> 0x8\n 64270: u8 [a0 + 0x19] = a5\n 64273: u8 [a0 + 0x18] = a4\n 64276: u8 [a0 + 0x10] = a3\n 64279: a4 = a3 >> 0x38\n 64282: u8 [a0 + 0x17] = a4\n 64285: a4 = a3 >> 0x30\n 64288: u8 [a0 + 0x16] = a4\n 64291: a4 = a3 >> 0x28\n 64294: u8 [a0 + 0x15] = a4\n 64297: a4 = a3 >> 0x20\n 64300: u8 [a0 + 0x14] = a4\n 64303: a4 = a3 >> 0x18\n 64306: u8 [a0 + 0x13] = a4\n 64309: a4 = a3 >> 0x10\n 64312: u8 [a0 + 0x12] = a4\n 64315: a3 = a3 >> 0x8\n 64318: u8 [a0 + 0x11] = a3\n 64321: u8 [a0 + 0x8] = a2\n 64324: a3 = a2 >> 0x38\n 64327: u8 [a0 + 0xf] = a3\n 64330: a3 = a2 >> 0x30\n 64333: u8 [a0 + 0xe] = a3\n 64336: a3 = a2 >> 0x28\n 64339: u8 [a0 + 0xd] = a3\n 64342: a3 = a2 >> 0x20\n 64345: u8 [a0 + 0xc] = a3\n 64348: a3 = a2 >> 0x18\n 64351: u8 [a0 + 0xb] = a3\n 64354: a3 = a2 >> 0x10\n 64357: u8 [a0 + 0xa] = a3\n 64360: a2 = a2 >> 0x8\n 64363: u8 [a0 + 0x9] = a2\n 64366: u8 [a0] = a1\n 64368: a2 = a1 >> 0x38\n 64371: u8 [a0 + 0x7] = a2\n 64374: a2 = a1 >> 0x30\n 64377: u8 [a0 + 0x6] = a2\n 64380: a2 = a1 >> 0x28\n 64383: u8 [a0 + 0x5] = a2\n 64386: a2 = a1 >> 0x20\n 64389: u8 [a0 + 0x4] = a2\n 64392: a2 = a1 >> 0x18\n 64395: u8 [a0 + 0x3] = a2\n 64398: a2 = a1 >> 0x10\n 64401: u8 [a0 + 0x2] = a2\n 64404: a1 = a1 >> 0x8\n 64407: u8 [a0 + 0x1] = a1\n 64410: a1 = 0x20\n 64413: a0 = 0\n 64415: ra = 800, jump @0\n      : @961 [@dyn 400] (gas: 5)\n 64422: i32 a0 = a0 + 0\n 64424: i32 a2 = sp + 0x120\n 64428: a1 = 0x20\n 64431: ecalli 5 // 'hash_keccak_256'\n 64433: fallthrough\n      : @962 (gas: 8)\n 64434: a0 = s1 <u 0x2\n 64437: a1 = u64 [sp + 0xb0]\n 64441: a0 = 0 if a1 != 0\n 64443: a1 = u64 [sp + 0xb8]\n 64447: a2 = u64 [sp + 0xa8]\n 64451: a1 = a1 | a2\n 64454: a0 = 0 if a1 != 0\n 64456: jump @968 if a0 != 0\n      : @963 (gas: 19)\n 64460: u64 [sp + 168] = 0\n 64464: u64 [sp + 160] = 0\n 64468: u64 [sp + 176] = 0\n 64472: u64 [sp + 184] = 0\n 64476: a0 = u64 [sp + 0x120]\n 64480: a1 = u64 [sp + 0x128]\n 64484: a2 = u64 [sp + 0x130]\n 64488: a3 = u64 [sp + 0x138]\n 64492: a0 = reverse a0\n 64494: a4 = reverse a1\n 64496: s1 = reverse a2\n 64498: a1 = reverse a3\n 64500: i32 a2 = sp + 0x100\n 64504: u64 [sp + 0x20] = a2\n 64507: i32 a2 = sp + 0x120\n 64511: u64 [sp + 0x18] = a2\n 64514: i32 a2 = sp + 0x140\n 64518: u64 [sp + 0x10] = a2\n 64521: fallthrough\n      : @964 (gas: 20)\n 64522: u64 [sp + 0x80] = a4\n 64526: u64 [sp + 0x110] = a4\n 64530: u64 [sp + 0x90] = s1\n 64534: u64 [sp + 0x108] = s1\n 64538: u64 [sp + 0x88] = a1\n 64542: u64 [sp + 0x100] = a1\n 64546: u64 [sp + 0x98] = a0\n 64550: u64 [sp + 0x118] = a0\n 64554: u64 [sp + 312] = 0\n 64558: u64 [sp + 304] = 0\n 64562: u64 [sp + 296] = 0\n 64566: u64 [sp + 288] = 0\n 64570: u32 [sp + 320] = 0x20\n 64575: a2 = 0xffffffffffffffff\n 64578: a0 = 0\n 64580: a1 = u64 [sp + 0x20]\n 64583: a3 = u64 [sp + 0x18]\n 64586: a4 = u64 [sp + 0x10]\n 64589: ecalli 4 // 'get_storage'\n 64591: fallthrough\n      : @965 (gas: 30)\n 64592: a0 = u64 [sp + 0x48]\n 64595: a1 = u64 [sp + 0xa8]\n 64599: a0 = a0 + a1\n 64602: a1 = a0 <u a1\n 64605: a2 = u64 [sp + 0x50]\n 64608: a4 = u64 [sp + 0xa0]\n 64612: a2 = a2 + a4\n 64615: a2 = a2 + a1\n 64618: a3 = a2 ^ a4\n 64621: a4 = a2 <u a4\n 64624: a4 = a1 if a3 == 0\n 64627: a1 = u64 [sp + 0x58]\n 64630: a3 = u64 [sp + 0xb0]\n 64634: a1 = a1 + a3\n 64637: a3 = a1 <u a3\n 64640: a5 = u64 [sp + 0x60]\n 64643: s1 = u64 [sp + 0xb8]\n 64647: a5 = a5 + s1\n 64650: a3 = a3 + a5\n 64653: a4 = a4 + a1\n 64656: a1 = a4 <u a1\n 64659: a1 = a1 + a3\n 64662: a1 = a1 | a2\n 64665: a2 = a0 | a4\n 64668: a2 = a2 | a1\n 64671: a1 = a1 | a4\n 64674: a2 = a2 >> 0x20\n 64677: a1 = a1 << 0x20\n 64680: a1 = a1 | a2\n 64683: jump @969 if a1 != 0\n      : @966 (gas: 10)\n 64687: a1 = u64 [sp + 0x138]\n 64691: u64 [sp + 0x70] = a1\n 64694: a1 = u64 [sp + 0x130]\n 64698: u64 [sp + 0x78] = a1\n 64701: a1 = u64 [sp + 0x128]\n 64705: u64 [sp + 0x68] = a1\n 64708: s1 = u64 [sp + 0x120]\n 64712: i32 a0 = a0 + 0\n 64714: a1 = 0x20\n 64717: ra = 802, jump @0\n      : @967 [@dyn 401] (gas: 111)\n 64724: a1 = reverse s1\n 64726: a2 = a1 >> 0x38\n 64729: u8 [a0 + 0x1f] = a2\n 64732: a2 = a1 >> 0x30\n 64735: u8 [a0 + 0x1e] = a2\n 64738: a2 = a1 >> 0x28\n 64741: u8 [a0 + 0x1d] = a2\n 64744: a2 = a1 >> 0x20\n 64747: u8 [a0 + 0x1c] = a2\n 64750: a2 = a1 >> 0x18\n 64753: u8 [a0 + 0x1b] = a2\n 64756: a2 = a1 >> 0x10\n 64759: u8 [a0 + 0x1a] = a2\n 64762: a2 = a1 >> 0x8\n 64765: u8 [a0 + 0x19] = a2\n 64768: a2 = u64 [sp + 0x68]\n 64771: a2 = reverse a2\n 64773: u8 [a0 + 0x18] = a1\n 64776: a1 = a2 >> 0x38\n 64779: u8 [a0 + 0x17] = a1\n 64782: a1 = a2 >> 0x30\n 64785: u8 [a0 + 0x16] = a1\n 64788: a1 = a2 >> 0x28\n 64791: u8 [a0 + 0x15] = a1\n 64794: a1 = a2 >> 0x20\n 64797: u8 [a0 + 0x14] = a1\n 64800: a1 = a2 >> 0x18\n 64803: u8 [a0 + 0x13] = a1\n 64806: a1 = a2 >> 0x10\n 64809: u8 [a0 + 0x12] = a1\n 64812: a1 = u64 [sp + 0x70]\n 64815: a1 = reverse a1\n 64817: a3 = u64 [sp + 0x78]\n 64820: a3 = reverse a3\n 64822: u8 [a0 + 0x10] = a2\n 64825: a2 = a2 >> 0x8\n 64828: u8 [a0 + 0x11] = a2\n 64831: u8 [a0 + 0x8] = a3\n 64834: a2 = a3 >> 0x38\n 64837: u8 [a0 + 0xf] = a2\n 64840: a2 = a3 >> 0x30\n 64843: u8 [a0 + 0xe] = a2\n 64846: a2 = a3 >> 0x28\n 64849: u8 [a0 + 0xd] = a2\n 64852: a2 = a3 >> 0x20\n 64855: u8 [a0 + 0xc] = a2\n 64858: a2 = a3 >> 0x18\n 64861: u8 [a0 + 0xb] = a2\n 64864: a2 = a3 >> 0x10\n 64867: u8 [a0 + 0xa] = a2\n 64870: a3 = a3 >> 0x8\n 64873: u8 [a0 + 0x9] = a3\n 64876: u8 [a0] = a1\n 64878: a2 = a1 >> 0x38\n 64881: u8 [a0 + 0x7] = a2\n 64884: a2 = a1 >> 0x30\n 64887: u8 [a0 + 0x6] = a2\n 64890: a2 = a1 >> 0x28\n 64893: u8 [a0 + 0x5] = a2\n 64896: a2 = a1 >> 0x20\n 64899: u8 [a0 + 0x4] = a2\n 64902: a2 = a1 >> 0x18\n 64905: u8 [a0 + 0x3] = a2\n 64908: a2 = a1 >> 0x10\n 64911: u8 [a0 + 0x2] = a2\n 64914: a1 = a1 >> 0x8\n 64917: u8 [a0 + 0x1] = a1\n 64920: a0 = u64 [sp + 0xa8]\n 64924: t1 = a0 + 0x20\n 64927: a2 = t1 <u a0\n 64930: a0 = u64 [sp + 0xa0]\n 64934: t2 = a0 + a2\n 64937: a3 = t2 <u a0\n 64940: a3 = a2 if a2 == 0\n 64943: a0 = u64 [sp + 0xb0]\n 64947: a2 = a0 + a3\n 64950: a3 = a2 <u a0\n 64953: a5 = u64 [sp + 0xb8]\n 64957: a5 = a5 + a3\n 64960: a4 = u64 [sp + 0x40]\n 64963: t0 = a2 <u a4\n 64966: a3 = u64 [sp + 0x28]\n 64969: a0 = t1 <u a3\n 64972: a3 = u64 [sp + 0x30]\n 64975: s1 = t2 ^ a3\n 64978: a3 = t2 <u a3\n 64981: a3 = a0 if s1 == 0\n 64984: s1 = u64 [sp + 0x38]\n 64987: a0 = a5 ^ s1\n 64990: u64 [sp + 0xb8] = a5\n 64994: s1 = a5 <u s1\n 64997: s1 = t0 if a0 == 0\n 65000: a4 = a4 ^ a2\n 65003: a4 = a4 | a0\n 65006: a3 = s1 if a4 != 0\n 65009: a1 = u64 [sp + 0x88]\n 65013: a1 = a1 + 0x1\n 65016: a4 = a1 <u 0x1\n 65019: s1 = u64 [sp + 0x90]\n 65023: s1 = s1 + a4\n 65026: a4 = a1 | s1\n 65029: a4 = a4 <u 0x1\n 65032: a0 = u64 [sp + 0x80]\n 65036: a4 = a4 + a0\n 65039: a5 = a4 <u a0\n 65042: a0 = u64 [sp + 0x98]\n 65046: a0 = a0 + a5\n 65049: u64 [sp + 0xa8] = t1\n 65053: u64 [sp + 0xa0] = t2\n 65057: u64 [sp + 0xb0] = a2\n 65061: jump @964 if a3 != 0\n      : @968 (gas: 33)\n 65065: a0 = u64 [sp + 0x48]\n 65068: a1 = u64 [sp + 0x28]\n 65071: a0 = a0 + a1\n 65074: a1 = a0 <u a1\n 65077: a2 = u64 [sp + 0x50]\n 65080: a4 = u64 [sp + 0x30]\n 65083: a2 = a2 + a4\n 65086: a2 = a2 + a1\n 65089: a3 = a2 ^ a4\n 65092: a4 = a2 <u a4\n 65095: a4 = a1 if a3 == 0\n 65098: a1 = u64 [sp + 0x58]\n 65101: a5 = u64 [sp + 0x40]\n 65104: a1 = a1 + a5\n 65107: a4 = a4 + a1\n 65110: a3 = a4 <u a1\n 65113: a1 = a1 <u a5\n 65116: a5 = u64 [sp + 0x60]\n 65119: s1 = u64 [sp + 0x38]\n 65122: a5 = a5 + s1\n 65125: a1 = a1 + a5\n 65128: a1 = a1 + a3\n 65131: a3 = u64 [sp + 0x8]\n 65134: u64 [a3] = a0\n 65136: u64 [a3 + 0x8] = a2\n 65139: u64 [a3 + 0x10] = a4\n 65142: u64 [a3 + 0x18] = a1\n 65145: sp = s0 + 0xfffffffffffffea0\n 65149: ra = u64 [sp + 0x158]\n 65153: s0 = u64 [sp + 0x150]\n 65157: s1 = u64 [sp + 0x148]\n 65161: sp = sp + 0x160\n 65165: ret\n      : @969 (gas: 1)\n 65167: trap\n      : @970 (gas: 8)\n 65168: u64 [sp + 240] = 0\n 65172: u64 [sp + 232] = 0\n 65176: u64 [sp + 224] = 0\n 65180: a0 = 0x4e487b7100000000\n 65190: a1 = sp + 0xe0\n 65194: u64 [sp + 0xf8] = a0\n 65198: a0 = 0\n 65200: ra = 804, jump @23\n      : @971 [@dyn 402] (gas: 7)\n 65207: u64 [sp + 216] = 0\n 65211: u64 [sp + 208] = 0\n 65215: u64 [sp + 192] = 0x22\n 65220: a0 = 0x4\n 65223: a1 = sp + 0xc0\n 65227: u64 [sp + 200] = 0\n 65231: ra = 806, jump @23\n      : @972 [@dyn 403] (gas: 3)\n 65238: a1 = 0x24\n 65241: a0 = 0\n 65243: ra = 808, jump @0\n      : @973 [@dyn 404] (gas: 6)\n 65250: i32 a1 = a0 + 0\n 65252: a0 = 0x1\n 65255: a2 = 0x24\n 65258: ra = 0x32a\n 65262: ecalli 7 // 'seal_return'\n 65264: fallthrough\n      : @974 [@dyn 405] (gas: 12)\n 65265: a1 = u64 [a0 + 0x10]\n 65268: a2 = u64 [a0 + 0x18]\n 65271: a3 = u64 [a0 + 0x8]\n 65274: a0 = u64 [a0]\n 65276: a2 = a2 | a3\n 65279: a3 = a0 | a1\n 65282: a3 = a3 | a2\n 65285: a3 = a3 >> 0x20\n 65288: a1 = a1 | a2\n 65291: a1 = a1 << 0x20\n 65294: a1 = a1 | a3\n 65297: jump @977 if a1 != 0\n      : @975 (gas: 7)\n 65301: sp = sp + 0xfffffffffffffff0\n 65304: u64 [sp + 0x8] = ra\n 65307: u64 [sp] = s0\n 65309: i32 a0 = a0 + 0\n 65311: a1 = 0x20\n 65314: s0 = 0x20\n 65317: ra = 812, jump @0\n      : @976 [@dyn 406] (gas: 37)\n 65324: u8 [a0 + 31] = 0\n 65327: u8 [a0 + 30] = 0\n 65330: u8 [a0 + 29] = 0\n 65333: u8 [a0 + 28] = 0\n 65336: u8 [a0 + 27] = 0\n 65339: u8 [a0 + 26] = 0\n 65342: u8 [a0 + 25] = 0\n 65345: u8 [a0 + 24] = 0\n 65348: u8 [a0 + 23] = 0\n 65351: u8 [a0 + 22] = 0\n 65354: u8 [a0 + 21] = 0\n 65357: u8 [a0 + 20] = 0\n 65360: u8 [a0 + 19] = 0\n 65363: u8 [a0 + 18] = 0\n 65366: u8 [a0 + 17] = 0\n 65369: u8 [a0 + 16] = 0\n 65372: u8 [a0 + 15] = 0\n 65375: u8 [a0 + 14] = 0\n 65378: u8 [a0 + 13] = 0\n 65381: u8 [a0 + 12] = 0\n 65384: u8 [a0 + 11] = 0\n 65387: u8 [a0 + 10] = 0\n 65390: u8 [a0 + 9] = 0\n 65393: u8 [a0 + 8] = 0\n 65396: u8 [a0 + 7] = 0\n 65399: u8 [a0 + 6] = 0\n 65402: u8 [a0 + 5] = 0\n 65405: u8 [a0 + 4] = 0\n 65408: u8 [a0 + 0x3] = s0\n 65411: u8 [a0 + 2] = 0x73\n 65415: a1 = 0x69\n 65418: u8 [a0 + 0x1] = a1\n 65421: u8 [a0] = s0\n 65423: ra = u64 [sp + 0x8]\n 65426: s0 = u64 [sp]\n 65428: sp = sp + 0x10\n 65431: ret\n      : @977 (gas: 1)\n 65433: trap\n      : @978 [@dyn 407] (gas: 8)\n 65434: a0 = u64 [s1 + 0x470]\n 65438: a1 = u64 [s1 + 0x478]\n 65442: a2 = u64 [s1 + 0x468]\n 65446: a3 = u64 [s1 + 0x460]\n 65450: a1 = a1 | a2\n 65453: a0 = a0 | a3\n 65456: a0 = a0 | a1\n 65459: jump @980 if a0 != 0\n      : @979 (gas: 1)\n 65462: jump @1029\n      : @980 (gas: 16)\n 65465: u64 [s1 + 1240] = 0\n 65469: u64 [s1 + 1232] = 0\n 65473: u64 [s1 + 1224] = 0\n 65477: u64 [s1 + 1216] = 0x2\n 65482: u64 [s1 + 1272] = 0\n 65486: u64 [s1 + 1264] = 0\n 65490: u64 [s1 + 1256] = 0\n 65494: u64 [s1 + 1248] = 0\n 65498: u32 [s1 + 1280] = 0x20\n 65503: i32 a1 = s1 + 0x4c0\n 65507: i32 a3 = s1 + 0x4e0\n 65511: i32 a4 = s1 + 0x500\n 65515: a2 = 0xffffffffffffffff\n 65518: a0 = 0\n 65520: ecalli 4 // 'get_storage'\n 65522: fallthrough\n      : @981 (gas: 20)\n 65523: a0 = u64 [s1 + 0x4e0]\n 65527: a1 = u64 [s1 + 0x4f8]\n 65531: a2 = u64 [s1 + 0x4e8]\n 65535: a3 = u64 [s1 + 0x4f0]\n 65539: a4 = a0 + 0x1\n 65542: a0 = a4 <u 0x1\n 65545: a2 = a2 + a0\n 65548: a0 = a4 | a2\n 65551: a0 = a0 <u 0x1\n 65554: a5 = a3 + a0\n 65557: a0 = a5 <u a3\n 65560: a0 = a0 + a1\n 65563: u64 [s1 + 0x170] = a2\n 65567: u64 [s1 + 0x160] = a0\n 65571: a0 = a0 | a2\n 65574: u64 [s1 + 0x178] = a4\n 65578: u64 [s1 + 0x168] = a5\n 65582: a1 = a4 | a5\n 65585: a0 = a0 | a1\n 65588: jump @983 if a0 != 0\n      : @982 (gas: 1)\n 65591: jump @1037\n      : @983 (gas: 77)\n 65594: u64 [s1 + 1240] = 0\n 65598: u64 [s1 + 1232] = 0\n 65602: u64 [s1 + 1224] = 0\n 65606: u64 [s1 + 1216] = 0x2\n 65611: u64 [s1 + 1272] = 0\n 65615: u64 [s1 + 1264] = 0\n 65619: u64 [s1 + 1256] = 0\n 65623: u64 [s1 + 1248] = 0\n 65627: u32 [s1 + 1280] = 0x20\n 65632: i32 a1 = s1 + 0x4c0\n 65636: i32 a3 = s1 + 0x4e0\n 65640: i32 a4 = s1 + 0x500\n 65644: a2 = 0xffffffffffffffff\n 65647: a0 = 0\n 65649: ecalli 4 // 'get_storage'\n 65651: u64 [s1 + 1240] = 0\n 65655: u64 [s1 + 1232] = 0\n 65659: u64 [s1 + 1224] = 0\n 65663: u64 [s1 + 1216] = 0x2\n 65668: a0 = u64 [s1 + 0x160]\n 65672: u64 [s1 + 0x4f8] = a0\n 65676: a0 = u64 [s1 + 0x168]\n 65680: u64 [s1 + 0x4f0] = a0\n 65684: a0 = u64 [s1 + 0x170]\n 65688: u64 [s1 + 0x4e8] = a0\n 65692: a0 = u64 [s1 + 0x178]\n 65696: u64 [s1 + 0x4e0] = a0\n 65700: i32 a1 = s1 + 0x4c0\n 65704: i32 a3 = s1 + 0x4e0\n 65708: a2 = 0xffffffffffffffff\n 65711: a4 = 0x20\n 65714: a0 = 0\n 65716: ecalli 9 // 'set_storage'\n 65718: i32 a0 = s1 + 0x480\n 65722: ecalli 6 // 'now'\n 65724: a0 = u64 [s1 + 0x498]\n 65728: u64 [s1 + 0x128] = a0\n 65732: a0 = u64 [s1 + 0x490]\n 65736: u64 [s1 + 0x130] = a0\n 65740: a0 = u64 [s1 + 0x488]\n 65744: u64 [s1 + 0x138] = a0\n 65748: a0 = u64 [s1 + 0x480]\n 65752: u64 [s1 + 0x160] = a0\n 65756: u64 [s1 + 1240] = 0\n 65760: u64 [s1 + 1232] = 0\n 65764: u64 [s1 + 1224] = 0\n 65768: u64 [s1 + 1216] = 0x2\n 65773: u64 [s1 + 1272] = 0\n 65777: u64 [s1 + 1264] = 0\n 65781: u64 [s1 + 1256] = 0\n 65785: u64 [s1 + 1248] = 0\n 65789: u32 [s1 + 1280] = 0x20\n 65794: i32 a1 = s1 + 0x4c0\n 65798: i32 a3 = s1 + 0x4e0\n 65802: i32 a4 = s1 + 0x500\n 65806: a2 = 0xffffffffffffffff\n 65809: a0 = 0\n 65811: ecalli 4 // 'get_storage'\n 65813: a0 = u64 [s1 + 0x4f8]\n 65817: u64 [s1 + 0xf8] = a0\n 65821: a0 = u64 [s1 + 0x4f0]\n 65825: u64 [s1 + 0x100] = a0\n 65829: a0 = u64 [s1 + 0x4e8]\n 65833: u64 [s1 + 0x108] = a0\n 65837: a0 = u64 [s1 + 0x4e0]\n 65841: u64 [s1 + 0x110] = a0\n 65845: i32 a0 = s1 + 0x4a0\n 65849: ecalli 3 // 'caller'\n 65851: a0 = u32 [s1 + 0x4b0]\n 65855: u64 [s1 + 0xf0] = a0\n 65859: a0 = u64 [s1 + 0x4a8]\n 65863: u64 [s1 + 0xe0] = a0\n 65867: a0 = u64 [s1 + 0x4a0]\n 65871: u64 [s1 + 0xe8] = a0\n 65875: a0 = 0x40\n 65878: a1 = 0x20\n 65881: ra = 816, jump @0\n      : @984 [@dyn 408] (gas: 116)\n 65888: a1 = u8 [a0 + 0x19]\n 65891: a2 = u8 [a0 + 0x18]\n 65894: a3 = u8 [a0 + 0x1a]\n 65897: a4 = u8 [a0 + 0x1b]\n 65900: a1 = a1 << 0x8\n 65903: a1 = a1 | a2\n 65906: a3 = a3 << 0x10\n 65909: a4 = a4 << 0x18\n 65912: a3 = a3 | a4\n 65915: a1 = a1 | a3\n 65918: a2 = u8 [a0 + 0x1d]\n 65921: a3 = u8 [a0 + 0x1c]\n 65924: a4 = u8 [a0 + 0x1e]\n 65927: a5 = u8 [a0 + 0x1f]\n 65930: a2 = a2 << 0x8\n 65933: a2 = a2 | a3\n 65936: a4 = a4 << 0x10\n 65939: a5 = a5 << 0x18\n 65942: a4 = a4 | a5\n 65945: a2 = a2 | a4\n 65948: a2 = a2 << 0x20\n 65951: t0 = a2 | a1\n 65954: a2 = u8 [a0 + 0x11]\n 65957: a3 = u8 [a0 + 0x10]\n 65960: a4 = u8 [a0 + 0x12]\n 65963: a5 = u8 [a0 + 0x13]\n 65966: a2 = a2 << 0x8\n 65969: a2 = a2 | a3\n 65972: a4 = a4 << 0x10\n 65975: a5 = a5 << 0x18\n 65978: a4 = a4 | a5\n 65981: a2 = a2 | a4\n 65984: a3 = u8 [a0 + 0x15]\n 65987: a4 = u8 [a0 + 0x14]\n 65990: a5 = u8 [a0 + 0x16]\n 65993: a1 = u8 [a0 + 0x17]\n 65996: a3 = a3 << 0x8\n 65999: a3 = a3 | a4\n 66002: a5 = a5 << 0x10\n 66005: a1 = a1 << 0x18\n 66008: a1 = a1 | a5\n 66011: a1 = a1 | a3\n 66014: a1 = a1 << 0x20\n 66017: t1 = a1 | a2\n 66020: a1 = u8 [a0 + 0x9]\n 66023: a3 = u8 [a0 + 0x8]\n 66026: a4 = u8 [a0 + 0xa]\n 66029: a5 = u8 [a0 + 0xb]\n 66032: a1 = a1 << 0x8\n 66035: a1 = a1 | a3\n 66038: a4 = a4 << 0x10\n 66041: a5 = a5 << 0x18\n 66044: a4 = a4 | a5\n 66047: a1 = a1 | a4\n 66050: a3 = u8 [a0 + 0xd]\n 66053: a4 = u8 [a0 + 0xc]\n 66056: a5 = u8 [a0 + 0xe]\n 66059: a2 = u8 [a0 + 0xf]\n 66062: a3 = a3 << 0x8\n 66065: a3 = a3 | a4\n 66068: a5 = a5 << 0x10\n 66071: a2 = a2 << 0x18\n 66074: a2 = a2 | a5\n 66077: a2 = a2 | a3\n 66080: a2 = a2 << 0x20\n 66083: a3 = a2 | a1\n 66086: a1 = u8 [a0 + 0x1]\n 66089: a2 = u8 [a0]\n 66091: a4 = u8 [a0 + 0x2]\n 66094: a5 = u8 [a0 + 0x3]\n 66097: a1 = a1 << 0x8\n 66100: a1 = a1 | a2\n 66103: a4 = a4 << 0x10\n 66106: a5 = a5 << 0x18\n 66109: a4 = a4 | a5\n 66112: a1 = a1 | a4\n 66115: a2 = u8 [a0 + 0x5]\n 66118: a4 = u8 [a0 + 0x4]\n 66121: a5 = u8 [a0 + 0x6]\n 66124: a0 = u8 [a0 + 0x7]\n 66127: a2 = a2 << 0x8\n 66130: a2 = a2 | a4\n 66133: a5 = a5 << 0x10\n 66136: a0 = a0 << 0x18\n 66139: a0 = a0 | a5\n 66142: a0 = a0 | a2\n 66145: a0 = a0 << 0x20\n 66148: a0 = a0 | a1\n 66151: a2 = reverse a0\n 66153: a3 = reverse a3\n 66155: a1 = reverse t1\n 66157: a0 = reverse t0\n 66159: a4 = a0 + 0x20\n 66162: u64 [s1 + 0x140] = a0\n 66166: a0 = a4 <u a0\n 66169: a5 = a1 + a0\n 66172: u64 [s1 + 0x148] = a1\n 66176: a1 = a5 <u a1\n 66179: a1 = a0 if a0 == 0\n 66182: a1 = a1 + a3\n 66185: u64 [s1 + 0x150] = a3\n 66189: a0 = a1 <u a3\n 66192: u64 [s1 + 0x158] = a2\n 66196: a2 = a2 + a0\n 66199: u64 [s1 + 0x178] = a4\n 66203: a0 = a4 | a1\n 66206: u64 [s1 + 0x168] = a5\n 66210: u64 [s1 + 0x118] = a2\n 66214: a2 = a2 | a5\n 66217: a0 = a0 | a2\n 66220: a0 = a0 >> 0x20\n 66223: u64 [s1 + 0x120] = a1\n 66227: a1 = a1 | a2\n 66230: a1 = a1 << 0x20\n 66233: a0 = a0 | a1\n 66236: jump @986 if a0 == 0\n      : @985 (gas: 1)\n 66239: jump @1034\n      : @986 (gas: 4)\n 66242: a0 = i32 [s1 + 0x178]\n 66246: a1 = 0x20\n 66249: u64 [s1 + 0x170] = a0\n 66253: ra = 818, jump @0\n      : @987 [@dyn 409] (gas: 81)\n 66260: a1 = u64 [s1 + 0x128]\n 66264: a1 = reverse a1\n 66266: a2 = u64 [s1 + 0x130]\n 66270: a2 = reverse a2\n 66272: a3 = u64 [s1 + 0x138]\n 66276: a3 = reverse a3\n 66278: a4 = u64 [s1 + 0x160]\n 66282: a4 = reverse a4\n 66284: a5 = a4 >> 0x38\n 66287: u8 [a0 + 0x1f] = a5\n 66290: a5 = a4 >> 0x30\n 66293: u8 [a0 + 0x1e] = a5\n 66296: a5 = a4 >> 0x28\n 66299: u8 [a0 + 0x1d] = a5\n 66302: a5 = a4 >> 0x20\n 66305: u8 [a0 + 0x1c] = a5\n 66308: a5 = a4 >> 0x18\n 66311: u8 [a0 + 0x1b] = a5\n 66314: a5 = a4 >> 0x10\n 66317: u8 [a0 + 0x1a] = a5\n 66320: a5 = a4 >> 0x8\n 66323: u8 [a0 + 0x19] = a5\n 66326: u8 [a0 + 0x18] = a4\n 66329: u8 [a0 + 0x10] = a3\n 66332: a4 = a3 >> 0x38\n 66335: u8 [a0 + 0x17] = a4\n 66338: a4 = a3 >> 0x30\n 66341: u8 [a0 + 0x16] = a4\n 66344: a4 = a3 >> 0x28\n 66347: u8 [a0 + 0x15] = a4\n 66350: a4 = a3 >> 0x20\n 66353: u8 [a0 + 0x14] = a4\n 66356: a4 = a3 >> 0x18\n 66359: u8 [a0 + 0x13] = a4\n 66362: a4 = a3 >> 0x10\n 66365: u8 [a0 + 0x12] = a4\n 66368: a3 = a3 >> 0x8\n 66371: u8 [a0 + 0x11] = a3\n 66374: u8 [a0 + 0x8] = a2\n 66377: a3 = a2 >> 0x38\n 66380: u8 [a0 + 0xf] = a3\n 66383: a3 = a2 >> 0x30\n 66386: u8 [a0 + 0xe] = a3\n 66389: a3 = a2 >> 0x28\n 66392: u8 [a0 + 0xd] = a3\n 66395: a3 = a2 >> 0x20\n 66398: u8 [a0 + 0xc] = a3\n 66401: a3 = a2 >> 0x18\n 66404: u8 [a0 + 0xb] = a3\n 66407: a3 = a2 >> 0x10\n 66410: u8 [a0 + 0xa] = a3\n 66413: a2 = a2 >> 0x8\n 66416: u8 [a0 + 0x9] = a2\n 66419: u8 [a0] = a1\n 66421: a2 = a1 >> 0x38\n 66424: u8 [a0 + 0x7] = a2\n 66427: a2 = a1 >> 0x30\n 66430: u8 [a0 + 0x6] = a2\n 66433: a2 = a1 >> 0x28\n 66436: u8 [a0 + 0x5] = a2\n 66439: a2 = a1 >> 0x20\n 66442: u8 [a0 + 0x4] = a2\n 66445: a2 = a1 >> 0x18\n 66448: u8 [a0 + 0x3] = a2\n 66451: a2 = a1 >> 0x10\n 66454: u8 [a0 + 0x2] = a2\n 66457: a1 = a1 >> 0x8\n 66460: a2 = u64 [s1 + 0x120]\n 66464: a4 = u64 [s1 + 0x118]\n 66468: a4 = a4 | a2\n 66471: a2 = 0x100000000\n 66481: u64 [s1 + 0x138] = a2\n 66485: a2 = 0xffffffe0\n 66495: a3 = u64 [s1 + 0x178]\n 66499: a2 = a3 <u a2\n 66502: a3 = u64 [s1 + 0x168]\n 66506: a2 = 0 if a3 != 0\n 66508: u64 [s1 + 0x160] = a4\n 66512: a2 = 0 if a4 != 0\n 66514: u8 [a0 + 0x1] = a1\n 66517: jump @989 if a2 != 0\n      : @988 (gas: 1)\n 66520: jump @1034\n      : @989 (gas: 4)\n 66523: a0 = u64 [s1 + 0x170]\n 66527: i32 a0 = a0 + 0x20\n 66530: a1 = 0x20\n 66533: ra = 820, jump @0\n      : @990 [@dyn 410] (gas: 41)\n 66540: u8 [a0 + 31] = 0\n 66543: u8 [a0 + 30] = 0x40\n 66547: u8 [a0 + 29] = 0xf0\n 66552: u8 [a0 + 28] = 0x9b\n 66557: u8 [a0 + 27] = 0xbc\n 66562: u8 [a0 + 26] = 0xe1\n 66567: u8 [a0 + 25] = 0x8\n 66571: u8 [a0 + 24] = 0\n 66574: u8 [a0 + 23] = 0\n 66577: u8 [a0 + 22] = 0\n 66580: u8 [a0 + 21] = 0\n 66583: u8 [a0 + 20] = 0\n 66586: u8 [a0 + 19] = 0\n 66589: u8 [a0 + 18] = 0\n 66592: u8 [a0 + 17] = 0\n 66595: u8 [a0 + 16] = 0\n 66598: u8 [a0 + 15] = 0\n 66601: u8 [a0 + 14] = 0\n 66604: u8 [a0 + 13] = 0\n 66607: u8 [a0 + 12] = 0\n 66610: u8 [a0 + 11] = 0\n 66613: u8 [a0 + 10] = 0\n 66616: u8 [a0 + 9] = 0\n 66619: u8 [a0 + 8] = 0\n 66622: u8 [a0 + 7] = 0\n 66625: u8 [a0 + 6] = 0\n 66628: u8 [a0 + 5] = 0\n 66631: u8 [a0 + 4] = 0\n 66634: u8 [a0 + 3] = 0\n 66637: u8 [a0 + 2] = 0\n 66640: u8 [a0 + 1] = 0\n 66643: a1 = u64 [s1 + 0x138]\n 66647: a1 = a1 + 0xffffffffffffffc0\n 66650: a2 = u64 [s1 + 0x178]\n 66654: a1 = a2 <u a1\n 66657: a2 = u64 [s1 + 0x168]\n 66661: a1 = 0 if a2 != 0\n 66663: a2 = u64 [s1 + 0x160]\n 66667: a1 = 0 if a2 != 0\n 66669: u8 [a0 + 0] = 0\n 66671: jump @992 if a1 != 0\n      : @991 (gas: 1)\n 66674: jump @1034\n      : @992 (gas: 4)\n 66677: a0 = u64 [s1 + 0x170]\n 66681: i32 a0 = a0 + 0x40\n 66684: a1 = 0x20\n 66687: ra = 822, jump @0\n      : @993 [@dyn 411] (gas: 76)\n 66694: a1 = u64 [s1 + 0xf8]\n 66698: a1 = reverse a1\n 66700: a2 = u64 [s1 + 0x100]\n 66704: a2 = reverse a2\n 66706: a3 = u64 [s1 + 0x108]\n 66710: a3 = reverse a3\n 66712: a4 = u64 [s1 + 0x110]\n 66716: a4 = reverse a4\n 66718: a5 = a4 >> 0x38\n 66721: u8 [a0 + 0x1f] = a5\n 66724: a5 = a4 >> 0x30\n 66727: u8 [a0 + 0x1e] = a5\n 66730: a5 = a4 >> 0x28\n 66733: u8 [a0 + 0x1d] = a5\n 66736: a5 = a4 >> 0x20\n 66739: u8 [a0 + 0x1c] = a5\n 66742: a5 = a4 >> 0x18\n 66745: u8 [a0 + 0x1b] = a5\n 66748: a5 = a4 >> 0x10\n 66751: u8 [a0 + 0x1a] = a5\n 66754: a5 = a4 >> 0x8\n 66757: u8 [a0 + 0x19] = a5\n 66760: u8 [a0 + 0x18] = a4\n 66763: u8 [a0 + 0x10] = a3\n 66766: a4 = a3 >> 0x38\n 66769: u8 [a0 + 0x17] = a4\n 66772: a4 = a3 >> 0x30\n 66775: u8 [a0 + 0x16] = a4\n 66778: a4 = a3 >> 0x28\n 66781: u8 [a0 + 0x15] = a4\n 66784: a4 = a3 >> 0x20\n 66787: u8 [a0 + 0x14] = a4\n 66790: a4 = a3 >> 0x18\n 66793: u8 [a0 + 0x13] = a4\n 66796: a4 = a3 >> 0x10\n 66799: u8 [a0 + 0x12] = a4\n 66802: a3 = a3 >> 0x8\n 66805: u8 [a0 + 0x11] = a3\n 66808: u8 [a0 + 0x8] = a2\n 66811: a3 = a2 >> 0x38\n 66814: u8 [a0 + 0xf] = a3\n 66817: a3 = a2 >> 0x30\n 66820: u8 [a0 + 0xe] = a3\n 66823: a3 = a2 >> 0x28\n 66826: u8 [a0 + 0xd] = a3\n 66829: a3 = a2 >> 0x20\n 66832: u8 [a0 + 0xc] = a3\n 66835: a3 = a2 >> 0x18\n 66838: u8 [a0 + 0xb] = a3\n 66841: a3 = a2 >> 0x10\n 66844: u8 [a0 + 0xa] = a3\n 66847: a2 = a2 >> 0x8\n 66850: u8 [a0 + 0x9] = a2\n 66853: u8 [a0] = a1\n 66855: a2 = a1 >> 0x38\n 66858: u8 [a0 + 0x7] = a2\n 66861: a2 = a1 >> 0x30\n 66864: u8 [a0 + 0x6] = a2\n 66867: a2 = a1 >> 0x28\n 66870: u8 [a0 + 0x5] = a2\n 66873: a2 = a1 >> 0x20\n 66876: u8 [a0 + 0x4] = a2\n 66879: a2 = a1 >> 0x18\n 66882: u8 [a0 + 0x3] = a2\n 66885: a2 = a1 >> 0x10\n 66888: u8 [a0 + 0x2] = a2\n 66891: a1 = a1 >> 0x8\n 66894: a2 = 0xffffffa0\n 66904: a3 = u64 [s1 + 0x178]\n 66908: a2 = a3 <u a2\n 66911: a3 = u64 [s1 + 0x168]\n 66915: a2 = 0 if a3 != 0\n 66917: a3 = u64 [s1 + 0x160]\n 66921: a2 = 0 if a3 != 0\n 66923: u8 [a0 + 0x1] = a1\n 66926: jump @995 if a2 != 0\n      : @994 (gas: 1)\n 66929: jump @1034\n      : @995 (gas: 4)\n 66932: a0 = u64 [s1 + 0x170]\n 66936: i32 a0 = a0 + 0x60\n 66939: a1 = 0x20\n 66942: ra = 824, jump @0\n      : @996 [@dyn 412] (gas: 64)\n 66949: u8 [a0 + 31] = 0\n 66952: u8 [a0 + 30] = 0\n 66955: u8 [a0 + 29] = 0\n 66958: u8 [a0 + 28] = 0\n 66961: u8 [a0 + 27] = 0\n 66964: u8 [a0 + 26] = 0\n 66967: u8 [a0 + 25] = 0\n 66970: u8 [a0 + 24] = 0\n 66973: u8 [a0 + 23] = 0\n 66976: u8 [a0 + 22] = 0\n 66979: u8 [a0 + 21] = 0\n 66982: u8 [a0 + 20] = 0\n 66985: a2 = u64 [s1 + 0xf0]\n 66989: u8 [a0 + 0x10] = a2\n 66992: a3 = u64 [s1 + 0xe0]\n 66996: a1 = a3 >> 0x38\n 66999: u8 [a0 + 0xf] = a1\n 67002: a1 = a3 >> 0x30\n 67005: u8 [a0 + 0xe] = a1\n 67008: a1 = a3 >> 0x28\n 67011: u8 [a0 + 0xd] = a1\n 67014: a1 = a3 >> 0x20\n 67017: u8 [a0 + 0xc] = a1\n 67020: a1 = a3 >> 0x18\n 67023: u8 [a0 + 0xb] = a1\n 67026: a1 = a3 >> 0x10\n 67029: u8 [a0 + 0xa] = a1\n 67032: a1 = a3 >> 0x8\n 67035: u8 [a0 + 0x9] = a1\n 67038: u8 [a0 + 0x8] = a3\n 67041: a3 = u64 [s1 + 0xe8]\n 67045: a1 = a3 >> 0x38\n 67048: u8 [a0 + 0x7] = a1\n 67051: a1 = a3 >> 0x30\n 67054: u8 [a0 + 0x6] = a1\n 67057: a1 = a3 >> 0x28\n 67060: u8 [a0 + 0x5] = a1\n 67063: a1 = a3 >> 0x20\n 67066: u8 [a0 + 0x4] = a1\n 67069: a1 = a3 >> 0x18\n 67072: u8 [a0 + 0x3] = a1\n 67075: a1 = a3 >> 0x10\n 67078: u8 [a0 + 0x2] = a1\n 67081: a1 = a3 >> 0x8\n 67084: u8 [a0 + 0x1] = a1\n 67087: u8 [a0] = a3\n 67089: a1 = a2 >> 0x18\n 67092: u8 [a0 + 0x13] = a1\n 67095: a1 = a2 >> 0x10\n 67098: u8 [a0 + 0x12] = a1\n 67101: t0 = a2 >> 0x8\n 67104: a5 = u64 [s1 + 0x150]\n 67108: a4 = u64 [s1 + 0x140]\n 67112: a2 = a4 | a5\n 67115: a3 = u64 [s1 + 0x158]\n 67119: a1 = u64 [s1 + 0x148]\n 67123: a3 = a3 | a1\n 67126: a2 = a2 | a3\n 67129: a2 = a2 >> 0x20\n 67132: a3 = a3 | a5\n 67135: a3 = a3 << 0x20\n 67138: a2 = a2 | a3\n 67141: u8 [a0 + 0x11] = t0\n 67144: jump @998 if a2 == 0\n      : @997 (gas: 1)\n 67147: jump @1034\n      : @998 (gas: 4)\n 67150: i32 a0 = a4 + 0\n 67152: u64 [s1 + 0x178] = a0\n 67156: a1 = 0x20\n 67159: ra = 826, jump @0\n      : @999 [@dyn 413] (gas: 51)\n 67166: u8 [a0 + 31] = 0x74\n 67170: u8 [a0 + 30] = 0\n 67173: u8 [a0 + 29] = 0\n 67176: u8 [a0 + 28] = 0\n 67179: u8 [a0 + 27] = 0\n 67182: u8 [a0 + 26] = 0\n 67185: u8 [a0 + 25] = 0\n 67188: u8 [a0 + 24] = 0\n 67191: u8 [a0 + 23] = 0\n 67194: u8 [a0 + 22] = 0\n 67197: u8 [a0 + 21] = 0\n 67200: u8 [a0 + 20] = 0\n 67203: u8 [a0 + 19] = 0\n 67206: u8 [a0 + 18] = 0\n 67209: u8 [a0 + 17] = 0\n 67212: u8 [a0 + 16] = 0\n 67215: u8 [a0 + 15] = 0\n 67218: u8 [a0 + 14] = 0\n 67221: u8 [a0 + 13] = 0\n 67224: u8 [a0 + 12] = 0\n 67227: u8 [a0 + 11] = 0\n 67230: u8 [a0 + 10] = 0\n 67233: u8 [a0 + 9] = 0\n 67236: u8 [a0 + 8] = 0\n 67239: u8 [a0 + 7] = 0\n 67242: u8 [a0 + 6] = 0\n 67245: u8 [a0 + 5] = 0\n 67248: u8 [a0 + 4] = 0\n 67251: u8 [a0 + 3] = 0\n 67254: u8 [a0 + 2] = 0\n 67257: u8 [a0 + 1] = 0\n 67260: u8 [a0 + 0] = 0\n 67262: a0 = u64 [s1 + 0x140]\n 67266: a1 = a0 + 0xa0\n 67270: u64 [s1 + 0x168] = a1\n 67274: a0 = a1 <u a0\n 67277: a1 = u64 [s1 + 0x148]\n 67281: a2 = a1 + a0\n 67284: u64 [s1 + 0x160] = a2\n 67288: a1 = a2 <u a1\n 67291: a1 = a0 if a0 == 0\n 67294: a0 = u64 [s1 + 0x150]\n 67298: a1 = a1 + a0\n 67301: u64 [s1 + 0x148] = a1\n 67305: a0 = a1 <u a0\n 67308: a1 = u64 [s1 + 0x158]\n 67312: a0 = a0 + a1\n 67315: u64 [s1 + 0x158] = a0\n 67319: a0 = 0x40\n 67322: a1 = 0x20\n 67325: ra = 828, jump @0\n      : @1000 [@dyn 414] (gas: 71)\n 67332: a1 = u64 [s1 + 0x158]\n 67336: a1 = reverse a1\n 67338: a2 = u64 [s1 + 0x148]\n 67342: a2 = reverse a2\n 67344: a3 = u64 [s1 + 0x160]\n 67348: a3 = reverse a3\n 67350: a4 = u64 [s1 + 0x168]\n 67354: a4 = reverse a4\n 67356: a5 = a4 >> 0x38\n 67359: u8 [a0 + 0x1f] = a5\n 67362: a5 = a4 >> 0x30\n 67365: u8 [a0 + 0x1e] = a5\n 67368: a5 = a4 >> 0x28\n 67371: u8 [a0 + 0x1d] = a5\n 67374: a5 = a4 >> 0x20\n 67377: u8 [a0 + 0x1c] = a5\n 67380: a5 = a4 >> 0x18\n 67383: u8 [a0 + 0x1b] = a5\n 67386: a5 = a4 >> 0x10\n 67389: u8 [a0 + 0x1a] = a5\n 67392: a5 = a4 >> 0x8\n 67395: u8 [a0 + 0x19] = a5\n 67398: u8 [a0 + 0x18] = a4\n 67401: a4 = a3 >> 0x38\n 67404: u8 [a0 + 0x17] = a4\n 67407: a4 = a3 >> 0x30\n 67410: u8 [a0 + 0x16] = a4\n 67413: a4 = a3 >> 0x28\n 67416: u8 [a0 + 0x15] = a4\n 67419: a4 = a3 >> 0x20\n 67422: u8 [a0 + 0x14] = a4\n 67425: a4 = a3 >> 0x18\n 67428: u8 [a0 + 0x13] = a4\n 67431: a4 = a3 >> 0x10\n 67434: u8 [a0 + 0x12] = a4\n 67437: a4 = a3 >> 0x8\n 67440: u8 [a0 + 0x11] = a4\n 67443: u8 [a0 + 0x10] = a3\n 67446: u8 [a0 + 0x8] = a2\n 67449: a3 = a2 >> 0x38\n 67452: u8 [a0 + 0xf] = a3\n 67455: a3 = a2 >> 0x30\n 67458: u8 [a0 + 0xe] = a3\n 67461: a3 = a2 >> 0x28\n 67464: u8 [a0 + 0xd] = a3\n 67467: a3 = a2 >> 0x20\n 67470: u8 [a0 + 0xc] = a3\n 67473: a3 = a2 >> 0x18\n 67476: u8 [a0 + 0xb] = a3\n 67479: a3 = a2 >> 0x10\n 67482: u8 [a0 + 0xa] = a3\n 67485: a2 = a2 >> 0x8\n 67488: u8 [a0 + 0x9] = a2\n 67491: u8 [a0] = a1\n 67493: a2 = a1 >> 0x38\n 67496: u8 [a0 + 0x7] = a2\n 67499: a2 = a1 >> 0x30\n 67502: u8 [a0 + 0x6] = a2\n 67505: a2 = a1 >> 0x28\n 67508: u8 [a0 + 0x5] = a2\n 67511: a2 = a1 >> 0x20\n 67514: u8 [a0 + 0x4] = a2\n 67517: a2 = a1 >> 0x18\n 67520: u8 [a0 + 0x3] = a2\n 67523: a2 = a1 >> 0x10\n 67526: u8 [a0 + 0x2] = a2\n 67529: a1 = a1 >> 0x8\n 67532: u8 [a0 + 0x1] = a1\n 67535: a1 = 0x20\n 67538: a0 = u64 [s1 + 0x178]\n 67542: ra = 830, jump @0\n      : @1001 [@dyn 415] (gas: 100)\n 67549: a1 = u8 [a0 + 0x11]\n 67552: a2 = u8 [a0 + 0x10]\n 67555: a3 = u8 [a0 + 0x12]\n 67558: a4 = u8 [a0 + 0x13]\n 67561: a1 = a1 << 0x8\n 67564: a1 = a1 | a2\n 67567: a3 = a3 << 0x10\n 67570: a4 = a4 << 0x18\n 67573: a3 = a3 | a4\n 67576: a1 = a1 | a3\n 67579: a2 = u8 [a0 + 0x15]\n 67582: a3 = u8 [a0 + 0x14]\n 67585: a4 = u8 [a0 + 0x16]\n 67588: a5 = u8 [a0 + 0x17]\n 67591: a2 = a2 << 0x8\n 67594: a2 = a2 | a3\n 67597: a4 = a4 << 0x10\n 67600: a5 = a5 << 0x18\n 67603: a4 = a4 | a5\n 67606: a2 = a2 | a4\n 67609: a2 = a2 << 0x20\n 67612: t0 = a2 | a1\n 67615: a2 = u8 [a0 + 0x1]\n 67618: a3 = u8 [a0]\n 67620: a4 = u8 [a0 + 0x2]\n 67623: a5 = u8 [a0 + 0x3]\n 67626: a2 = a2 << 0x8\n 67629: a2 = a2 | a3\n 67632: a4 = a4 << 0x10\n 67635: a5 = a5 << 0x18\n 67638: a4 = a4 | a5\n 67641: a2 = a2 | a4\n 67644: a3 = u8 [a0 + 0x5]\n 67647: a4 = u8 [a0 + 0x4]\n 67650: a5 = u8 [a0 + 0x6]\n 67653: a1 = u8 [a0 + 0x7]\n 67656: a3 = a3 << 0x8\n 67659: a3 = a3 | a4\n 67662: a5 = a5 << 0x10\n 67665: a1 = a1 << 0x18\n 67668: a1 = a1 | a5\n 67671: a1 = a1 | a3\n 67674: a1 = a1 << 0x20\n 67677: t1 = a1 | a2\n 67680: a1 = u8 [a0 + 0x19]\n 67683: a3 = u8 [a0 + 0x18]\n 67686: a4 = u8 [a0 + 0x1a]\n 67689: a5 = u8 [a0 + 0x1b]\n 67692: a1 = a1 << 0x8\n 67695: a1 = a1 | a3\n 67698: a4 = a4 << 0x10\n 67701: a5 = a5 << 0x18\n 67704: a4 = a4 | a5\n 67707: a1 = a1 | a4\n 67710: a3 = u8 [a0 + 0x1d]\n 67713: a4 = u8 [a0 + 0x1c]\n 67716: a5 = u8 [a0 + 0x1e]\n 67719: a2 = u8 [a0 + 0x1f]\n 67722: a3 = a3 << 0x8\n 67725: a3 = a3 | a4\n 67728: a5 = a5 << 0x10\n 67731: a2 = a2 << 0x18\n 67734: a2 = a2 | a5\n 67737: a2 = a2 | a3\n 67740: a2 = a2 << 0x20\n 67743: a3 = a2 | a1\n 67746: a1 = u8 [a0 + 0x9]\n 67749: a2 = u8 [a0 + 0x8]\n 67752: a4 = u8 [a0 + 0xa]\n 67755: a5 = u8 [a0 + 0xb]\n 67758: a1 = a1 << 0x8\n 67761: a1 = a1 | a2\n 67764: a4 = a4 << 0x10\n 67767: a5 = a5 << 0x18\n 67770: a4 = a4 | a5\n 67773: a1 = a1 | a4\n 67776: a2 = u8 [a0 + 0xd]\n 67779: a4 = u8 [a0 + 0xc]\n 67782: a5 = u8 [a0 + 0xe]\n 67785: a0 = u8 [a0 + 0xf]\n 67788: a2 = a2 << 0x8\n 67791: a2 = a2 | a4\n 67794: a5 = a5 << 0x10\n 67797: a0 = a0 << 0x18\n 67800: a0 = a0 | a5\n 67803: a0 = a0 | a2\n 67806: a0 = a0 << 0x20\n 67809: a0 = a0 | a1\n 67812: a1 = reverse a0\n 67814: a0 = reverse a3\n 67816: a2 = reverse t1\n 67818: a3 = reverse t0\n 67820: a2 = a2 | a3\n 67823: a3 = a0 | a1\n 67826: a3 = a3 | a2\n 67829: a3 = a3 >> 0x20\n 67832: a1 = a1 | a2\n 67835: a1 = a1 << 0x20\n 67838: a1 = a1 | a3\n 67841: jump @1003 if a1 == 0\n      : @1002 (gas: 1)\n 67844: jump @1034\n      : @1003 (gas: 4)\n 67847: i32 a1 = a0 + 0\n 67849: u64 [s1 + 0x178] = a1\n 67853: a0 = u64 [s1 + 0x170]\n 67857: ra = 832, jump @0\n      : @1004 [@dyn 416] (gas: 33)\n 67864: a1 = sp + 0xffffffffffffffe0\n 67867: a1 = a1 & 0xffffffffffffffe0\n 67870: u64 [s1 + 0x160] = a1\n 67874: sp = a1\n 67876: i32 a0 = a0 + 0\n 67878: i32 a2 = a1 + 0\n 67880: a1 = u64 [s1 + 0x178]\n 67884: ecalli 5 // 'hash_keccak_256'\n 67886: a1 = u64 [s1 + 0x160]\n 67890: a0 = u64 [a1 + 0x18]\n 67893: u64 [s1 + 0x168] = a0\n 67897: a0 = u64 [a1 + 0x10]\n 67900: u64 [s1 + 0x170] = a0\n 67904: a0 = u64 [a1 + 0x8]\n 67907: u64 [s1 + 0x158] = a0\n 67911: a0 = u64 [a1]\n 67913: u64 [s1 + 0x160] = a0\n 67917: u64 [s1 + 1240] = 0\n 67921: u64 [s1 + 1232] = 0\n 67925: u64 [s1 + 1224] = 0\n 67929: u64 [s1 + 1216] = 0x1\n 67934: u64 [s1 + 1272] = 0\n 67938: u64 [s1 + 1264] = 0\n 67942: u64 [s1 + 1256] = 0\n 67946: u64 [s1 + 1248] = 0\n 67950: u32 [s1 + 1280] = 0x20\n 67955: i32 a1 = s1 + 0x4c0\n 67959: i32 a3 = s1 + 0x4e0\n 67963: i32 a4 = s1 + 0x500\n 67967: a2 = 0xffffffffffffffff\n 67970: a0 = 0\n 67972: ecalli 4 // 'get_storage'\n 67974: fallthrough\n      : @1005 (gas: 9)\n 67975: a4 = u64 [s1 + 0x4f8]\n 67979: a5 = u64 [s1 + 0x4f0]\n 67983: a3 = u64 [s1 + 0x4e8]\n 67987: a2 = u64 [s1 + 0x4e0]\n 67991: a0 = a3 | a4\n 67994: a1 = a2 | a5\n 67997: a0 = a0 | a1\n 68000: u64 [s1 + 0x178] = a0\n 68004: jump @1007 if a0 != 0\n      : @1006 (gas: 1)\n 68007: jump @1039\n      : @1007 (gas: 80)\n 68010: a0 = u64 [s1 + 0x158]\n 68014: t1 = reverse a0\n 68016: a0 = u64 [s1 + 0x168]\n 68020: t0 = reverse a0\n 68022: u64 [s1 + 0xd0] = t0\n 68026: a0 = u64 [s1 + 0x160]\n 68030: ra = reverse a0\n 68032: a0 = u64 [s1 + 0x170]\n 68036: t2 = reverse a0\n 68038: u64 [s1 + 0x118] = a2\n 68042: a0 = clz a2\n 68044: a0 = a0 + 0x40\n 68047: a2 = clz a3\n 68049: u64 [s1 + 0x100] = a3\n 68053: a2 = a0 if a3 == 0\n 68056: a3 = a2 + 0x80\n 68060: a0 = a3 <u a2\n 68063: a1 = a5 | a4\n 68066: a0 = 0 if a1 != 0\n 68068: u64 [s1 + 0x110] = a5\n 68072: a2 = clz a5\n 68074: a5 = a2 + 0x40\n 68077: a2 = clz a4\n 68079: u64 [s1 + 0x108] = a4\n 68083: a2 = a5 if a4 == 0\n 68086: a2 = a3 if a1 == 0\n 68089: u64 [s1 + 0xc8] = t2\n 68093: a3 = clz t2\n 68095: a4 = clz t0\n 68097: a4 = a4 + 0x40\n 68100: a4 = a3 if t2 != 0\n 68103: a3 = clz ra\n 68105: a5 = clz t1\n 68107: a5 = a5 + 0x40\n 68110: a5 = a3 if ra != 0\n 68113: a3 = a4 + 0x80\n 68117: a4 = a3 <u a4\n 68120: a1 = t1 | ra\n 68123: a5 = a3 if a1 == 0\n 68126: a4 = 0 if a1 != 0\n 68128: a1 = a2 <u a5\n 68131: t0 = a0 ^ a4\n 68134: a3 = a0 <u a4\n 68137: a3 = a1 if t0 == 0\n 68140: a0 = a0 - a4\n 68143: t2 = a0 - a1\n 68146: a0 = a3 <u 0x1\n 68149: t0 = a0 + 0xffffffffffffffff\n 68152: a0 = a2 - a5\n 68155: a1 = -a3\n 68157: u64 [s1 + 0x170] = a1\n 68161: a1 = a1 >u 0\n 68163: a2 = t0 >u 0\n 68165: a2 = a1 if t0 == 0\n 68168: a1 = a0 <u 0x100\n 68172: a1 = a1 ^ 0x1\n 68175: a5 = t2 >u 0\n 68177: a1 = a5 if t2 != 0\n 68180: a1 = a2 if a3 != 0\n 68183: a4 = u64 [s1 + 0xc8]\n 68187: a2 = a4 | ra\n 68190: a5 = u64 [s1 + 0xd0]\n 68194: a3 = a5 | t1\n 68197: a2 = a2 | a3\n 68200: a3 = u64 [s1 + 0x178]\n 68204: a3 = a3 <u 0x1\n 68207: a2 = a2 <u 0x1\n 68210: a2 = a2 | a3\n 68213: a1 = a1 | a2\n 68216: u64 [s1 + 0xb8] = ra\n 68220: a2 = ra\n 68222: a2 = 0 if a1 != 0\n 68224: u64 [s1 + 0xc0] = t1\n 68228: ra = t1\n 68230: ra = 0 if a1 != 0\n 68232: a3 = a4\n 68234: a3 = 0 if a1 != 0\n 68236: t1 = a5\n 68238: t1 = 0 if a1 != 0\n 68240: jump @1015 if a1 != 0\n      : @1008 (gas: 7)\n 68244: a5 = a0\n 68246: a1 = a0 ^ 0xff\n 68250: a4 = u64 [s1 + 0x170]\n 68254: a1 = a1 | a4\n 68257: a0 = t2 | t0\n 68260: a0 = a0 | a1\n 68263: jump @1015 if a0 == 0\n      : @1009 (gas: 257)\n 68267: a1 = a5 + 0x1\n 68270: u64 [s1 + 0x178] = a1\n 68274: a0 = a1 <u 0x1\n 68277: a0 = a0 + t2\n 68280: u64 [s1 + 0x150] = a0\n 68284: a0 = a0 | a1\n 68287: a0 = a0 <u 0x1\n 68290: a0 = a0 + a4\n 68293: u64 [s1 + 0x140] = a0\n 68297: a0 = a0 <u a4\n 68300: a0 = a0 + t0\n 68303: u64 [s1 + 0x148] = a0\n 68307: a2 = u64 [s1 + 0xd0]\n 68311: u8 [s1 + 0x420] = a2\n 68315: u8 [s1 + 1055] = 0\n 68319: u8 [s1 + 1054] = 0\n 68323: u8 [s1 + 1053] = 0\n 68327: u8 [s1 + 1052] = 0\n 68331: u8 [s1 + 1051] = 0\n 68335: u8 [s1 + 1050] = 0\n 68339: u8 [s1 + 1049] = 0\n 68343: u8 [s1 + 1048] = 0\n 68347: u8 [s1 + 1047] = 0\n 68351: u8 [s1 + 1046] = 0\n 68355: u8 [s1 + 1045] = 0\n 68359: u8 [s1 + 1044] = 0\n 68363: u8 [s1 + 1043] = 0\n 68367: u8 [s1 + 1042] = 0\n 68371: u8 [s1 + 1041] = 0\n 68375: u8 [s1 + 1040] = 0\n 68379: u8 [s1 + 1039] = 0\n 68383: u8 [s1 + 1038] = 0\n 68387: u8 [s1 + 1037] = 0\n 68391: u8 [s1 + 1036] = 0\n 68395: u8 [s1 + 1035] = 0\n 68399: u8 [s1 + 1034] = 0\n 68403: u8 [s1 + 1033] = 0\n 68407: u8 [s1 + 1032] = 0\n 68411: u8 [s1 + 1031] = 0\n 68415: u8 [s1 + 1030] = 0\n 68419: u8 [s1 + 1029] = 0\n 68423: u8 [s1 + 1028] = 0\n 68427: u8 [s1 + 1027] = 0\n 68431: u8 [s1 + 1026] = 0\n 68435: u8 [s1 + 1025] = 0\n 68439: u8 [s1 + 1024] = 0\n 68443: a3 = u64 [s1 + 0xc8]\n 68447: u8 [s1 + 0x428] = a3\n 68451: a0 = a2 >> 0x38\n 68454: u64 [s1 + 0x128] = a0\n 68458: u8 [s1 + 0x427] = a0\n 68462: a0 = a2 >> 0x30\n 68465: u64 [s1 + 0x120] = a0\n 68469: u8 [s1 + 0x426] = a0\n 68473: a0 = a2 >> 0x28\n 68476: u64 [s1 + 0xf8] = a0\n 68480: u8 [s1 + 0x425] = a0\n 68484: i32 t0 = 0xff - a5\n 68488: a0 = t0 << 0x38\n 68491: a0 = a0 >> 0x3b\n 68494: a1 = s1 + 0x420\n 68498: a0 = a1 - a0\n 68501: a1 = a2 >> 0x20\n 68504: u64 [s1 + 0x88] = a1\n 68508: u8 [s1 + 0x424] = a1\n 68512: a1 = a2 >> 0x18\n 68515: u64 [s1 + 0x80] = a1\n 68519: u8 [s1 + 0x423] = a1\n 68523: a1 = a2 >> 0x10\n 68526: u64 [s1 + 0x78] = a1\n 68529: u8 [s1 + 0x422] = a1\n 68533: a2 = a2 >> 0x8\n 68536: u64 [s1 + 0x70] = a2\n 68539: u8 [s1 + 0x421] = a2\n 68543: a1 = u64 [s1 + 0xc0]\n 68547: u8 [s1 + 0x430] = a1\n 68551: a2 = a3 >> 0x38\n 68554: u64 [s1 + 0x68] = a2\n 68557: u8 [s1 + 0x42f] = a2\n 68561: a2 = a3 >> 0x30\n 68564: u64 [s1 + 0x60] = a2\n 68567: u8 [s1 + 0x42e] = a2\n 68571: a2 = a3 >> 0x28\n 68574: u64 [s1 + 0x58] = a2\n 68577: u8 [s1 + 0x42d] = a2\n 68581: a2 = a3 >> 0x20\n 68584: u64 [s1 + 0x50] = a2\n 68587: u8 [s1 + 0x42c] = a2\n 68591: a2 = a3 >> 0x18\n 68594: u64 [s1 + 0x48] = a2\n 68597: u8 [s1 + 0x42b] = a2\n 68601: a2 = a3 >> 0x10\n 68604: u64 [s1 + 0x40] = a2\n 68607: u8 [s1 + 0x42a] = a2\n 68611: a3 = a3 >> 0x8\n 68614: u64 [s1 + 0x38] = a3\n 68617: u8 [s1 + 0x429] = a3\n 68621: ra = u64 [s1 + 0xb8]\n 68625: u8 [s1 + 0x438] = ra\n 68629: a2 = a1 >> 0x38\n 68632: u64 [s1 + 0x30] = a2\n 68635: u8 [s1 + 0x437] = a2\n 68639: a2 = a1 >> 0x30\n 68642: u64 [s1 + 0x28] = a2\n 68645: u8 [s1 + 0x436] = a2\n 68649: a2 = a1 >> 0x28\n 68652: u64 [s1 + 0x20] = a2\n 68655: u8 [s1 + 0x435] = a2\n 68659: a2 = a1 >> 0x20\n 68662: u64 [s1 + 0x18] = a2\n 68665: u8 [s1 + 0x434] = a2\n 68669: a2 = a1 >> 0x18\n 68672: u64 [s1 + 0x10] = a2\n 68675: u8 [s1 + 0x433] = a2\n 68679: a2 = a1 >> 0x10\n 68682: u64 [s1 + 0x8] = a2\n 68685: u8 [s1 + 0x432] = a2\n 68689: a1 = a1 >> 0x8\n 68692: u64 [s1 + 0xf0] = a1\n 68696: u8 [s1 + 0x431] = a1\n 68700: a1 = ra >> 0x38\n 68703: u64 [s1 + 0xe8] = a1\n 68707: u8 [s1 + 0x43f] = a1\n 68711: a1 = ra >> 0x30\n 68714: u64 [s1 + 0xe0] = a1\n 68718: u8 [s1 + 0x43e] = a1\n 68722: a1 = ra >> 0x28\n 68725: u64 [s1 + 0xd8] = a1\n 68729: u8 [s1 + 0x43d] = a1\n 68733: a1 = ra >> 0x20\n 68736: u64 [s1 + 0xa8] = a1\n 68740: u8 [s1 + 0x43c] = a1\n 68744: a1 = ra >> 0x18\n 68747: u64 [s1 + 0xa0] = a1\n 68751: u8 [s1 + 0x43b] = a1\n 68755: a1 = ra >> 0x10\n 68758: u64 [s1 + 0x98] = a1\n 68762: u8 [s1 + 0x43a] = a1\n 68766: a1 = ra >> 0x8\n 68769: u64 [s1 + 0x90] = a1\n 68773: u8 [s1 + 0x439] = a1\n 68777: a1 = u8 [a0 + 0x19]\n 68780: a3 = u8 [a0 + 0x18]\n 68783: a4 = u8 [a0 + 0x1a]\n 68786: a5 = u8 [a0 + 0x1b]\n 68789: a1 = a1 << 0x8\n 68792: a1 = a1 | a3\n 68795: a4 = a4 << 0x10\n 68798: a5 = a5 << 0x18\n 68801: a4 = a4 | a5\n 68804: a1 = a1 | a4\n 68807: a3 = u8 [a0 + 0x1d]\n 68810: a4 = u8 [a0 + 0x1c]\n 68813: a5 = u8 [a0 + 0x1e]\n 68816: a2 = u8 [a0 + 0x1f]\n 68819: a3 = a3 << 0x8\n 68822: a3 = a3 | a4\n 68825: a5 = a5 << 0x10\n 68828: a2 = a2 << 0x18\n 68831: a2 = a2 | a5\n 68834: a2 = a2 | a3\n 68837: a2 = a2 << 0x20\n 68840: t1 = a2 | a1\n 68843: a1 = u8 [a0 + 0x11]\n 68846: a2 = u8 [a0 + 0x10]\n 68849: a4 = u8 [a0 + 0x12]\n 68852: a5 = u8 [a0 + 0x13]\n 68855: a1 = a1 << 0x8\n 68858: a1 = a1 | a2\n 68861: a4 = a4 << 0x10\n 68864: a5 = a5 << 0x18\n 68867: a4 = a4 | a5\n 68870: a1 = a1 | a4\n 68873: a2 = u8 [a0 + 0x15]\n 68876: a4 = u8 [a0 + 0x14]\n 68879: a5 = u8 [a0 + 0x16]\n 68882: a3 = u8 [a0 + 0x17]\n 68885: a2 = a2 << 0x8\n 68888: a2 = a2 | a4\n 68891: a5 = a5 << 0x10\n 68894: a3 = a3 << 0x18\n 68897: a3 = a3 | a5\n 68900: a2 = a2 | a3\n 68903: a2 = a2 << 0x20\n 68906: t2 = a2 | a1\n 68909: a2 = t0 & 0x7\n 68912: a4 = t1 << a2\n 68915: a5 = t2 >> 0x1\n 68918: t0 = a2 ^ 0x3f\n 68921: a5 = a5 >> t0\n 68924: a4 = a4 | a5\n 68927: u64 [s1 + 0x170] = a4\n 68931: a4 = u8 [a0 + 0x9]\n 68934: a5 = u8 [a0 + 0x8]\n 68937: a3 = u8 [a0 + 0xa]\n 68940: a1 = u8 [a0 + 0xb]\n 68943: a4 = a4 << 0x8\n 68946: a4 = a4 | a5\n 68949: a3 = a3 << 0x10\n 68952: a1 = a1 << 0x18\n 68955: a1 = a1 | a3\n 68958: t1 = a1 | a4\n 68961: a3 = u8 [a0 + 0xd]\n 68964: a4 = u8 [a0 + 0xc]\n 68967: a5 = u8 [a0 + 0xe]\n 68970: a1 = u8 [a0 + 0xf]\n 68973: a3 = a3 << 0x8\n 68976: a3 = a3 | a4\n 68979: a5 = a5 << 0x10\n 68982: a1 = a1 << 0x18\n 68985: a1 = a1 | a5\n 68988: a1 = a1 | a3\n 68991: a1 = a1 << 0x20\n 68994: t1 = a1 | t1\n 68997: a1 = t1 >> 0x1\n 69000: a3 = a2 ^ 0xffffffffffffffff\n 69003: a1 = a1 >> a3\n 69006: a3 = t2 << a2\n 69009: a1 = a1 | a3\n 69012: u64 [s1 + 0x168] = a1\n 69016: a1 = u8 [a0 + 0x1]\n 69019: a3 = u8 [a0]\n 69021: a5 = u8 [a0 + 0x2]\n 69024: a4 = u8 [a0 + 0x3]\n 69027: a1 = a1 << 0x8\n 69030: a1 = a1 | a3\n 69033: a5 = a5 << 0x10\n 69036: a4 = a4 << 0x18\n 69039: a4 = a4 | a5\n 69042: a1 = a1 | a4\n 69045: a3 = u8 [a0 + 0x5]\n 69048: a4 = u8 [a0 + 0x4]\n 69051: a5 = u8 [a0 + 0x6]\n 69054: a0 = u8 [a0 + 0x7]\n 69057: a3 = a3 << 0x8\n 69060: a3 = a3 | a4\n 69063: a4 = u64 [s1 + 0x150]\n 69067: a5 = a5 << 0x10\n 69070: a0 = a0 << 0x18\n 69073: a0 = a0 | a5\n 69076: a5 = u64 [s1 + 0x140]\n 69080: a0 = a0 | a3\n 69083: a0 = a0 << 0x20\n 69086: a0 = a0 | a1\n 69089: a1 = a0 >> 0x1\n 69092: a1 = a1 >> t0\n 69095: t0 = u64 [s1 + 0x148]\n 69099: a3 = t1 << a2\n 69102: a1 = a1 | a3\n 69105: u64 [s1 + 0x158] = a1\n 69109: a1 = a4 | t0\n 69112: a3 = u64 [s1 + 0x178]\n 69116: a3 = a3 | a5\n 69119: a1 = a1 | a3\n 69122: a0 = a0 << a2\n 69125: u64 [s1 + 0x160] = a0\n 69129: jump @1013 if a1 == 0\n      : @1010 (gas: 226)\n 69133: u64 [s1 + 312] = 0\n 69137: u64 [s1 + 304] = 0\n 69141: a0 = u64 [s1 + 0x128]\n 69145: u8 [s1 + 0x3c7] = a0\n 69149: a0 = u64 [s1 + 0x120]\n 69153: u8 [s1 + 0x3c6] = a0\n 69157: a0 = u64 [s1 + 0xf8]\n 69161: u8 [s1 + 0x3c5] = a0\n 69165: a0 = u64 [s1 + 0x88]\n 69169: u8 [s1 + 0x3c4] = a0\n 69173: a0 = u64 [s1 + 0x80]\n 69177: u8 [s1 + 0x3c3] = a0\n 69181: a0 = u64 [s1 + 0x78]\n 69184: u8 [s1 + 0x3c2] = a0\n 69188: a0 = u64 [s1 + 0x70]\n 69191: u8 [s1 + 0x3c1] = a0\n 69195: a0 = u64 [s1 + 0x68]\n 69198: u8 [s1 + 0x3cf] = a0\n 69202: a0 = u64 [s1 + 0x60]\n 69205: u8 [s1 + 0x3ce] = a0\n 69209: a0 = u64 [s1 + 0x58]\n 69212: u8 [s1 + 0x3cd] = a0\n 69216: a0 = u64 [s1 + 0x50]\n 69219: u8 [s1 + 0x3cc] = a0\n 69223: a0 = u64 [s1 + 0x48]\n 69226: u8 [s1 + 0x3cb] = a0\n 69230: a0 = u64 [s1 + 0x40]\n 69233: u8 [s1 + 0x3ca] = a0\n 69237: a0 = u64 [s1 + 0x38]\n 69240: u8 [s1 + 0x3c9] = a0\n 69244: a0 = u64 [s1 + 0x30]\n 69247: u8 [s1 + 0x3d7] = a0\n 69251: a0 = u64 [s1 + 0x28]\n 69254: u8 [s1 + 0x3d6] = a0\n 69258: a0 = u64 [s1 + 0x20]\n 69261: u8 [s1 + 0x3d5] = a0\n 69265: a0 = u64 [s1 + 0x18]\n 69268: u8 [s1 + 0x3d4] = a0\n 69272: a0 = u64 [s1 + 0x10]\n 69275: u8 [s1 + 0x3d3] = a0\n 69279: a0 = u64 [s1 + 0x8]\n 69282: u8 [s1 + 0x3d2] = a0\n 69286: u8 [s1 + 1023] = 0\n 69290: u8 [s1 + 1022] = 0\n 69294: u8 [s1 + 1021] = 0\n 69298: u8 [s1 + 1020] = 0\n 69302: u8 [s1 + 1019] = 0\n 69306: u8 [s1 + 1018] = 0\n 69310: u8 [s1 + 1017] = 0\n 69314: u8 [s1 + 1016] = 0\n 69318: u8 [s1 + 1015] = 0\n 69322: u8 [s1 + 1014] = 0\n 69326: u8 [s1 + 1013] = 0\n 69330: u8 [s1 + 1012] = 0\n 69334: u8 [s1 + 1011] = 0\n 69338: u8 [s1 + 1010] = 0\n 69342: u8 [s1 + 1009] = 0\n 69346: u8 [s1 + 1008] = 0\n 69350: u8 [s1 + 1007] = 0\n 69354: u8 [s1 + 1006] = 0\n 69358: u8 [s1 + 1005] = 0\n 69362: u8 [s1 + 1004] = 0\n 69366: u8 [s1 + 1003] = 0\n 69370: u8 [s1 + 1002] = 0\n 69374: u8 [s1 + 1001] = 0\n 69378: u8 [s1 + 1000] = 0\n 69382: u8 [s1 + 999] = 0\n 69386: u8 [s1 + 998] = 0\n 69390: u8 [s1 + 997] = 0\n 69394: u8 [s1 + 996] = 0\n 69398: u8 [s1 + 995] = 0\n 69402: u8 [s1 + 994] = 0\n 69406: u8 [s1 + 993] = 0\n 69410: u8 [s1 + 992] = 0\n 69414: a0 = u64 [s1 + 0xd0]\n 69418: u8 [s1 + 0x3c0] = a0\n 69422: a0 = u64 [s1 + 0xc8]\n 69426: u8 [s1 + 0x3c8] = a0\n 69430: a0 = u64 [s1 + 0xc0]\n 69434: u8 [s1 + 0x3d0] = a0\n 69438: u8 [s1 + 0x3d8] = ra\n 69442: a0 = u64 [s1 + 0xf0]\n 69446: u8 [s1 + 0x3d1] = a0\n 69450: a0 = u64 [s1 + 0xe8]\n 69454: u8 [s1 + 0x3df] = a0\n 69458: a0 = u64 [s1 + 0xe0]\n 69462: u8 [s1 + 0x3de] = a0\n 69466: a0 = u64 [s1 + 0xd8]\n 69470: u8 [s1 + 0x3dd] = a0\n 69474: a0 = u64 [s1 + 0xa8]\n 69478: u8 [s1 + 0x3dc] = a0\n 69482: a0 = u64 [s1 + 0xa0]\n 69486: u8 [s1 + 0x3db] = a0\n 69490: a0 = u64 [s1 + 0x98]\n 69494: u8 [s1 + 0x3da] = a0\n 69498: a0 = u64 [s1 + 0x90]\n 69502: u8 [s1 + 0x3d9] = a0\n 69506: t1 = u64 [s1 + 0x178]\n 69510: a0 = t1 << 0x38\n 69513: a0 = a0 >> 0x3b\n 69516: a1 = s1 + 0x3c0\n 69520: a0 = a0 + a1\n 69523: a1 = u8 [a0 + 0x11]\n 69526: a2 = u8 [a0 + 0x10]\n 69529: a3 = u8 [a0 + 0x12]\n 69532: a4 = u8 [a0 + 0x13]\n 69535: a1 = a1 << 0x8\n 69538: a1 = a1 | a2\n 69541: a3 = a3 << 0x10\n 69544: a4 = a4 << 0x18\n 69547: a3 = a3 | a4\n 69550: a1 = a1 | a3\n 69553: a2 = u8 [a0 + 0x15]\n 69556: a3 = u8 [a0 + 0x14]\n 69559: a4 = u8 [a0 + 0x16]\n 69562: a5 = u8 [a0 + 0x17]\n 69565: a2 = a2 << 0x8\n 69568: a2 = a2 | a3\n 69571: a4 = a4 << 0x10\n 69574: a5 = a5 << 0x18\n 69577: a4 = a4 | a5\n 69580: a2 = a2 | a4\n 69583: a2 = a2 << 0x20\n 69586: t0 = a2 | a1\n 69589: t2 = t1 & 0x7\n 69592: a1 = u8 [a0 + 0x19]\n 69595: a2 = u8 [a0 + 0x18]\n 69598: a3 = u8 [a0 + 0x1a]\n 69601: a4 = u8 [a0 + 0x1b]\n 69604: a1 = a1 << 0x8\n 69607: a1 = a1 | a2\n 69610: a3 = a3 << 0x10\n 69613: a4 = a4 << 0x18\n 69616: a2 = u8 [a0 + 0x1d]\n 69619: a3 = a3 | a4\n 69622: a1 = a1 | a3\n 69625: a3 = u8 [a0 + 0x1c]\n 69628: a2 = a2 << 0x8\n 69631: a4 = u8 [a0 + 0x1e]\n 69634: a5 = u8 [a0 + 0x1f]\n 69637: a2 = a2 | a3\n 69640: a3 = t0 >> t2\n 69643: a4 = a4 << 0x10\n 69646: a5 = a5 << 0x18\n 69649: a4 = a4 | a5\n 69652: a2 = a2 | a4\n 69655: a2 = a2 << 0x20\n 69658: t1 = a2 | a1\n 69661: a2 = t1 << 0x1\n 69664: ra = t2 ^ 0x3f\n 69667: a2 = a2 << ra\n 69670: a2 = a2 | a3\n 69673: u64 [s1 + 0x128] = a2\n 69677: a2 = u8 [a0 + 0x9]\n 69680: a3 = u8 [a0 + 0x8]\n 69683: a5 = u8 [a0 + 0xa]\n 69686: a1 = u8 [a0 + 0xb]\n 69689: a2 = a2 << 0x8\n 69692: a2 = a2 | a3\n 69695: a5 = a5 << 0x10\n 69698: a1 = a1 << 0x18\n 69701: a1 = a1 | a5\n 69704: a1 = a1 | a2\n 69707: a2 = u8 [a0 + 0xd]\n 69710: a3 = u8 [a0 + 0xc]\n 69713: a5 = u8 [a0 + 0xe]\n 69716: a4 = u8 [a0 + 0xf]\n 69719: a2 = a2 << 0x8\n 69722: a2 = a2 | a3\n 69725: a5 = a5 << 0x10\n 69728: a4 = a4 << 0x18\n 69731: a4 = a4 | a5\n 69734: a2 = a2 | a4\n 69737: a2 = a2 << 0x20\n 69740: a5 = a2 | a1\n 69743: t0 = t0 << 0x1\n 69746: a1 = t2 ^ 0xffffffffffffffff\n 69749: a1 = t0 << a1\n 69752: a2 = a5 >> t2\n 69755: t0 = a2 | a1\n 69758: a1 = u8 [a0 + 0x1]\n 69761: a2 = u8 [a0]\n 69763: a3 = u8 [a0 + 0x2]\n 69766: a4 = u8 [a0 + 0x3]\n 69769: a1 = a1 << 0x8\n 69772: a1 = a1 | a2\n 69775: a3 = a3 << 0x10\n 69778: a4 = a4 << 0x18\n 69781: a3 = a3 | a4\n 69784: a1 = a1 | a3\n 69787: a2 = u8 [a0 + 0x5]\n 69790: a3 = u8 [a0 + 0x4]\n 69793: a4 = u8 [a0 + 0x6]\n 69796: a0 = u8 [a0 + 0x7]\n 69799: a2 = a2 << 0x8\n 69802: a2 = a2 | a3\n 69805: a4 = a4 << 0x10\n 69808: a0 = a0 << 0x18\n 69811: a0 = a0 | a4\n 69814: a0 = a0 | a2\n 69817: a0 = a0 << 0x20\n 69820: a0 = a0 | a1\n 69823: a0 = a0 >> t2\n 69826: a5 = a5 << 0x1\n 69829: a4 = a5 << ra\n 69832: ra = a0 | a4\n 69835: a0 = t1 >> t2\n 69838: u64 [s1 + 0x120] = a0\n 69842: a2 = t0\n 69844: a0 = u64 [s1 + 0x118]\n 69848: a1 = a0 <u 0x1\n 69851: a3 = u64 [s1 + 0x100]\n 69855: a1 = a3 - a1\n 69858: u64 [s1 + 0xf0] = a1\n 69862: a1 = a0 | a3\n 69865: a1 = a1 <u 0x1\n 69868: a3 = u64 [s1 + 0x110]\n 69872: a4 = a3 - a1\n 69875: u64 [s1 + 0xe8] = a4\n 69879: a1 = a3 <u a1\n 69882: a3 = u64 [s1 + 0x108]\n 69886: a3 = a3 - a1\n 69889: u64 [s1 + 0xe0] = a3\n 69893: a0 = a0 + 0xffffffffffffffff\n 69896: u64 [s1 + 0xd8] = a0\n 69900: fallthrough\n      : @1011 (gas: 107)\n 69901: u64 [s1 + 248] = 0\n 69905: a1 = ra >> 0x3f\n 69908: a5 = a2 << 0x1\n 69911: a3 = a2\n 69913: t2 = a5 | a1\n 69916: a4 = ra << 0x1\n 69919: a1 = u64 [s1 + 0x170]\n 69923: a5 = a1 >> 0x3f\n 69926: t1 = a4 | a5\n 69929: a0 = u64 [s1 + 0xf0]\n 69933: a5 = a0 ^ t2\n 69936: a2 = a0 <u t2\n 69939: a0 = u64 [s1 + 0xd8]\n 69943: ra = a0 <u t1\n 69946: ra = a2 if a5 != 0\n 69949: a0 = u64 [s1 + 0x120]\n 69953: a0 = a0 << 0x1\n 69956: a5 = u64 [s1 + 0x128]\n 69960: a2 = a5 >> 0x3f\n 69963: t0 = a0 | a2\n 69966: u64 [s1 + 0x120] = t0\n 69970: a2 = a3 >> 0x3f\n 69973: a5 = a5 << 0x1\n 69976: a5 = a5 | a2\n 69979: a2 = a1 << 0x1\n 69982: a0 = u64 [s1 + 0x168]\n 69986: a3 = a0 >> 0x3f\n 69989: a2 = a2 | a3\n 69992: a3 = a0 << 0x1\n 69995: a1 = u64 [s1 + 0x158]\n 69999: a0 = a1 >> 0x3f\n 70002: a0 = a0 | a3\n 70005: a3 = a1 << 0x1\n 70008: a1 = u64 [s1 + 0x160]\n 70012: a4 = a1 >> 0x3f\n 70015: a3 = a3 | a4\n 70018: a4 = a1 << 0x1\n 70021: a1 = u64 [s1 + 0x138]\n 70025: a1 = a1 | a4\n 70028: u64 [s1 + 0x160] = a1\n 70032: a1 = u64 [s1 + 0x130]\n 70036: a3 = a3 | a1\n 70039: u64 [s1 + 0x158] = a3\n 70043: a0 = a0 | a1\n 70046: u64 [s1 + 0x168] = a0\n 70050: a1 = a1 | a2\n 70053: u64 [s1 + 0x170] = a1\n 70057: a1 = u64 [s1 + 0xe8]\n 70061: a0 = a1 - a5\n 70064: a0 = a0 <u ra\n 70067: a2 = a1 <u a5\n 70070: a1 = u64 [s1 + 0xe0]\n 70074: a3 = a1 - t0\n 70077: a3 = a3 - a2\n 70080: a2 = a3 - a0\n 70083: t0 = a2 >>a 0x3f\n 70086: a0 = u64 [s1 + 0x118]\n 70090: a2 = t0 & a0\n 70093: u64 [s1 + 0x138] = a2\n 70097: a0 = u64 [s1 + 0x100]\n 70101: a4 = t0 & a0\n 70104: a1 = t2 ^ a4\n 70107: a0 = t2 <u a4\n 70110: ra = t1\n 70112: t1 = t1 <u a2\n 70115: a0 = t1 if a1 == 0\n 70118: a1 = u64 [s1 + 0x110]\n 70122: a3 = t0 & a1\n 70125: a2 = a5 - a3\n 70128: a1 = a2 - a0\n 70131: u64 [s1 + 0x128] = a1\n 70135: a0 = a2 <u a0\n 70138: a1 = a5 <u a3\n 70141: a2 = u64 [s1 + 0x108]\n 70145: a5 = t0 & a2\n 70148: a2 = u64 [s1 + 0x120]\n 70152: a5 = a2 - a5\n 70155: a5 = a5 - a1\n 70158: a5 = a5 - a0\n 70161: u64 [s1 + 0x120] = a5\n 70165: a1 = t2 - a4\n 70168: a2 = a1 - t1\n 70171: a0 = u64 [s1 + 0x138]\n 70175: ra = ra - a0\n 70178: a3 = u64 [s1 + 0x178]\n 70182: a4 = u64 [s1 + 0x150]\n 70186: a1 = a3 | a4\n 70189: a1 = a1 <u 0x1\n 70192: a5 = u64 [s1 + 0x140]\n 70196: a0 = a5 <u a1\n 70199: a5 = a5 - a1\n 70202: a1 = a3 <u 0x1\n 70205: a4 = a4 - a1\n 70208: a1 = u64 [s1 + 0x148]\n 70212: a1 = a1 - a0\n 70215: a3 = a3 + 0xffffffffffffffff\n 70218: u64 [s1 + 0x150] = a4\n 70222: u64 [s1 + 0x148] = a1\n 70226: a1 = a1 | a4\n 70229: u64 [s1 + 0x178] = a3\n 70233: a3 = a3 | a5\n 70236: a1 = a1 | a3\n 70239: a0 = t0 & 0x1\n 70242: u64 [s1 + 0x138] = a0\n 70246: u64 [s1 + 0x140] = a5\n 70250: u64 [s1 + 304] = 0\n 70254: jump @1011 if a1 != 0\n      : @1012 (gas: 1)\n 70258: jump @1014\n      : @1013 (gas: 3)\n 70260: u64 [s1 + 312] = 0\n 70264: u64 [s1 + 248] = 0\n 70268: fallthrough\n      : @1014 (gas: 21)\n 70269: a3 = u64 [s1 + 0x168]\n 70273: a0 = a3 >> 0x3f\n 70276: a1 = u64 [s1 + 0x170]\n 70280: a1 = a1 << 0x1\n 70283: a0 = a0 | a1\n 70286: a4 = u64 [s1 + 0x158]\n 70290: a1 = a4 >> 0x3f\n 70293: a3 = a3 << 0x1\n 70296: a1 = a1 | a3\n 70299: a5 = u64 [s1 + 0x160]\n 70303: a3 = a5 >> 0x3f\n 70306: a4 = a4 << 0x1\n 70309: a5 = a5 << 0x1\n 70312: a2 = u64 [s1 + 0x138]\n 70316: t1 = a2 | a5\n 70319: a2 = u64 [s1 + 0xf8]\n 70323: a3 = a3 | a2\n 70326: a3 = a3 | a4\n 70329: ra = a2 | a1\n 70332: a2 = a2 | a0\n 70335: fallthrough\n      : @1015 (gas: 115)\n 70336: a5 = u64 [s1 + 0x118]\n 70340: a0 = a5 mulhu t1\n 70343: t2 = a2\n 70345: a2 = u64 [s1 + 0x100]\n 70349: a1 = a2 * t1\n 70352: a0 = a0 + a1\n 70355: a1 = a0 <u a1\n 70358: a4 = a2 mulhu t1\n 70361: a1 = a1 + a4\n 70364: a4 = a5 * a3\n 70367: t0 = a4 + a0\n 70370: a4 = t0 <u a4\n 70373: a0 = a5 mulhu a3\n 70376: a0 = a0 + a4\n 70379: a0 = a0 + a1\n 70382: a1 = a0 <u a1\n 70385: a4 = a2 mulhu a3\n 70388: a1 = a1 + a4\n 70391: a4 = a2 * a3\n 70394: a0 = a0 + a4\n 70397: a4 = a0 <u a4\n 70400: a1 = a1 + a4\n 70403: u64 [s1 + 0x178] = a1\n 70407: a4 = ra * a2\n 70410: a1 = ra mulhu a5\n 70413: a1 = a1 + a4\n 70416: a4 = t2 * a5\n 70419: t2 = a1 + a4\n 70422: a1 = u64 [s1 + 0x108]\n 70426: a4 = t1 * a1\n 70429: a2 = u64 [s1 + 0x110]\n 70433: a1 = t1 mulhu a2\n 70436: a1 = a1 + a4\n 70439: a3 = a3 * a2\n 70442: a1 = a1 + a3\n 70445: a1 = a1 + t2\n 70448: a3 = t1 * a2\n 70451: a2 = ra * a5\n 70454: a3 = a3 + a2\n 70457: a2 = a3 <u a2\n 70460: a1 = a1 + a2\n 70463: a2 = u64 [s1 + 0x178]\n 70467: a1 = a1 + a2\n 70470: a3 = a3 + a0\n 70473: a0 = a3 <u a0\n 70476: ra = a5 * t1\n 70479: a2 = u64 [s1 + 0xb8]\n 70483: a0 = a2 - a0\n 70486: t1 = a0 - a1\n 70489: a2 = u64 [s1 + 0xc8]\n 70493: a0 = a2 ^ t0\n 70496: a4 = a2 <u t0\n 70499: a1 = u64 [s1 + 0xd0]\n 70503: a5 = a1 <u ra\n 70506: a4 = a5 if a0 == 0\n 70509: a0 = u64 [s1 + 0xc0]\n 70513: t2 = a0 <u a3\n 70516: a3 = a0 - a3\n 70519: a0 = a3 <u a4\n 70522: a0 = a0 + t2\n 70525: t1 = t1 - a0\n 70528: a3 = a3 - a4\n 70531: a0 = a2 - a5\n 70534: a0 = a0 - t0\n 70537: a1 = a1 - ra\n 70540: u64 [s1 + 888] = 0\n 70544: u64 [s1 + 880] = 0\n 70548: u64 [s1 + 872] = 0\n 70552: u64 [s1 + 864] = 0x1\n 70557: u64 [s1 + 0x340] = a1\n 70561: u64 [s1 + 0x348] = a0\n 70565: u64 [s1 + 0x350] = a3\n 70569: a0 = s1 + 0x380\n 70573: a1 = s1 + 0x360\n 70577: a2 = s1 + 0x340\n 70581: u64 [s1 + 0x358] = t1\n 70585: ra = 0x342\n 70589: sp = sp + 0xfffffffffffffee0\n 70593: u64 [sp + 0x118] = ra\n 70597: u64 [sp + 0x110] = s0\n 70601: u64 [sp + 0x108] = s1\n 70605: s0 = sp + 0x120\n 70609: sp = sp & 0xffffffffffffffe0\n 70612: u64 [sp + 0x40] = a0\n 70615: a0 = u64 [a2]\n 70617: u64 [sp + 0x48] = a0\n 70620: a0 = u64 [a2 + 0x8]\n 70623: u64 [sp + 0x50] = a0\n 70626: a0 = u64 [a2 + 0x10]\n 70629: u64 [sp + 0x58] = a0\n 70632: s1 = u64 [a2 + 0x18]\n 70635: a4 = u64 [a1 + 0x18]\n 70638: a3 = u64 [a1 + 0x10]\n 70641: a2 = u64 [a1 + 0x8]\n 70644: a0 = u64 [a1]\n 70646: u64 [sp + 0x18] = a4\n 70649: u64 [sp + 0xb8] = a4\n 70653: u64 [sp + 0x20] = a3\n 70656: u64 [sp + 0xb0] = a3\n 70660: u64 [sp + 0x28] = a2\n 70663: u64 [sp + 0xa8] = a2\n 70667: u64 [sp + 0x30] = a0\n 70670: u64 [sp + 0xa0] = a0\n 70674: u64 [sp + 248] = 0\n 70678: u64 [sp + 240] = 0\n 70682: u64 [sp + 232] = 0\n 70686: u64 [sp + 224] = 0\n 70690: u32 [sp + 192] = 0x20\n 70695: i32 a1 = sp + 0xa0\n 70699: i32 a3 = sp + 0xe0\n 70703: i32 a4 = sp + 0xc0\n 70707: a2 = 0xffffffffffffffff\n 70710: a0 = 0\n 70712: ecalli 4 // 'get_storage'\n 70714: jump @944\n      : @1016 [@dyn 417] (gas: 11)\n 70717: a0 = u64 [s1 + 0x398]\n 70721: u64 [s1 + 0x140] = a0\n 70725: a0 = u64 [s1 + 0x390]\n 70729: u64 [s1 + 0x148] = a0\n 70733: a0 = u64 [s1 + 0x388]\n 70737: u64 [s1 + 0x150] = a0\n 70741: a0 = u64 [s1 + 0x380]\n 70745: u64 [s1 + 0x158] = a0\n 70749: a0 = 0x40\n 70752: a1 = 0x20\n 70755: ra = 836, jump @0\n      : @1017 [@dyn 418] (gas: 120)\n 70762: a1 = u8 [a0 + 0x19]\n 70765: a2 = u8 [a0 + 0x18]\n 70768: a3 = u8 [a0 + 0x1a]\n 70771: a4 = u8 [a0 + 0x1b]\n 70774: a1 = a1 << 0x8\n 70777: a1 = a1 | a2\n 70780: a3 = a3 << 0x10\n 70783: a4 = a4 << 0x18\n 70786: a3 = a3 | a4\n 70789: a1 = a1 | a3\n 70792: a2 = u8 [a0 + 0x1d]\n 70795: a3 = u8 [a0 + 0x1c]\n 70798: a4 = u8 [a0 + 0x1e]\n 70801: a5 = u8 [a0 + 0x1f]\n 70804: a2 = a2 << 0x8\n 70807: a2 = a2 | a3\n 70810: a4 = a4 << 0x10\n 70813: a5 = a5 << 0x18\n 70816: a4 = a4 | a5\n 70819: a2 = a2 | a4\n 70822: a2 = a2 << 0x20\n 70825: t0 = a2 | a1\n 70828: a2 = u8 [a0 + 0x11]\n 70831: a3 = u8 [a0 + 0x10]\n 70834: a4 = u8 [a0 + 0x12]\n 70837: a5 = u8 [a0 + 0x13]\n 70840: a2 = a2 << 0x8\n 70843: a2 = a2 | a3\n 70846: a4 = a4 << 0x10\n 70849: a5 = a5 << 0x18\n 70852: a4 = a4 | a5\n 70855: a2 = a2 | a4\n 70858: a3 = u8 [a0 + 0x15]\n 70861: a4 = u8 [a0 + 0x14]\n 70864: a5 = u8 [a0 + 0x16]\n 70867: a1 = u8 [a0 + 0x17]\n 70870: a3 = a3 << 0x8\n 70873: a3 = a3 | a4\n 70876: a5 = a5 << 0x10\n 70879: a1 = a1 << 0x18\n 70882: a1 = a1 | a5\n 70885: a1 = a1 | a3\n 70888: a1 = a1 << 0x20\n 70891: t1 = a1 | a2\n 70894: a1 = u8 [a0 + 0x9]\n 70897: a3 = u8 [a0 + 0x8]\n 70900: a4 = u8 [a0 + 0xa]\n 70903: a5 = u8 [a0 + 0xb]\n 70906: a1 = a1 << 0x8\n 70909: a1 = a1 | a3\n 70912: a4 = a4 << 0x10\n 70915: a5 = a5 << 0x18\n 70918: a4 = a4 | a5\n 70921: a1 = a1 | a4\n 70924: a3 = u8 [a0 + 0xd]\n 70927: a4 = u8 [a0 + 0xc]\n 70930: a5 = u8 [a0 + 0xe]\n 70933: a2 = u8 [a0 + 0xf]\n 70936: a3 = a3 << 0x8\n 70939: a3 = a3 | a4\n 70942: a5 = a5 << 0x10\n 70945: a2 = a2 << 0x18\n 70948: a2 = a2 | a5\n 70951: a2 = a2 | a3\n 70954: a2 = a2 << 0x20\n 70957: a3 = a2 | a1\n 70960: a1 = u8 [a0 + 0x1]\n 70963: a2 = u8 [a0]\n 70965: a4 = u8 [a0 + 0x2]\n 70968: a5 = u8 [a0 + 0x3]\n 70971: a1 = a1 << 0x8\n 70974: a1 = a1 | a2\n 70977: a4 = a4 << 0x10\n 70980: a5 = a5 << 0x18\n 70983: a4 = a4 | a5\n 70986: a1 = a1 | a4\n 70989: a2 = u8 [a0 + 0x5]\n 70992: a4 = u8 [a0 + 0x4]\n 70995: a5 = u8 [a0 + 0x6]\n 70998: a0 = u8 [a0 + 0x7]\n 71001: a2 = a2 << 0x8\n 71004: a2 = a2 | a4\n 71007: a5 = a5 << 0x10\n 71010: a0 = a0 << 0x18\n 71013: a0 = a0 | a5\n 71016: a0 = a0 | a2\n 71019: a0 = a0 << 0x20\n 71022: a0 = a0 | a1\n 71025: a4 = reverse a0\n 71027: a2 = reverse a3\n 71029: a1 = reverse t1\n 71031: a0 = reverse t0\n 71033: a3 = a0 + 0x20\n 71036: u64 [s1 + 0x168] = a0\n 71040: a0 = a3 <u a0\n 71043: a5 = a1 + a0\n 71046: u64 [s1 + 0x170] = a1\n 71050: a1 = a5 <u a1\n 71053: a1 = a0 if a0 == 0\n 71056: a1 = a1 + a2\n 71059: u64 [s1 + 0x160] = a2\n 71063: a0 = a1 <u a2\n 71066: u64 [s1 + 0x178] = a4\n 71070: a4 = a4 + a0\n 71073: u64 [s1 + 792] = 0\n 71077: u64 [s1 + 784] = 0\n 71081: u64 [s1 + 776] = 0\n 71085: u64 [s1 + 768] = 0\n 71089: u64 [s1 + 0x108] = a3\n 71093: u64 [s1 + 0x2e0] = a3\n 71097: u64 [s1 + 0x100] = a5\n 71101: u64 [s1 + 0x2e8] = a5\n 71105: u64 [s1 + 0x110] = a1\n 71109: u64 [s1 + 0x2f0] = a1\n 71113: a0 = s1 + 0x320\n 71117: a1 = s1 + 0x300\n 71121: a2 = s1 + 0x2e0\n 71125: u64 [s1 + 0x118] = a4\n 71129: u64 [s1 + 0x2f8] = a4\n 71133: ra = 838, jump @953\n      : @1018 [@dyn 419] (gas: 15)\n 71139: a0 = u64 [s1 + 0x338]\n 71143: a2 = u64 [s1 + 0x330]\n 71147: a1 = u64 [s1 + 0x328]\n 71151: a3 = u64 [s1 + 0x320]\n 71155: u64 [s1 + 0x138] = a0\n 71159: u64 [s1 + 0x128] = a1\n 71163: a0 = a0 | a1\n 71166: a1 = a3 | a2\n 71169: a1 = a1 | a0\n 71172: a1 = a1 >> 0x20\n 71175: u64 [s1 + 0x130] = a2\n 71179: a0 = a0 | a2\n 71182: a0 = a0 << 0x20\n 71185: a0 = a0 | a1\n 71188: jump @1034 if a0 != 0\n      : @1019 (gas: 4)\n 71192: i32 a0 = a3 + 0\n 71194: a1 = 0x20\n 71197: u64 [s1 + 0x120] = a3\n 71201: ra = 840, jump @0\n      : @1020 [@dyn 420] (gas: 60)\n 71208: u8 [a0 + 31] = 0\n 71211: u8 [a0 + 30] = 0\n 71214: u8 [a0 + 29] = 0\n 71217: u8 [a0 + 28] = 0\n 71220: u8 [a0 + 27] = 0\n 71223: u8 [a0 + 26] = 0\n 71226: u8 [a0 + 25] = 0\n 71229: u8 [a0 + 24] = 0\n 71232: u8 [a0 + 23] = 0\n 71235: u8 [a0 + 22] = 0\n 71238: u8 [a0 + 21] = 0\n 71241: u8 [a0 + 20] = 0\n 71244: u8 [a0 + 19] = 0\n 71247: u8 [a0 + 18] = 0\n 71250: u8 [a0 + 17] = 0\n 71253: u8 [a0 + 16] = 0\n 71256: u8 [a0 + 15] = 0\n 71259: u8 [a0 + 14] = 0\n 71262: u8 [a0 + 13] = 0\n 71265: u8 [a0 + 12] = 0\n 71268: u8 [a0 + 11] = 0\n 71271: u8 [a0 + 10] = 0\n 71274: u8 [a0 + 9] = 0\n 71277: u8 [a0 + 8] = 0\n 71280: u8 [a0 + 7] = 0\n 71283: u8 [a0 + 6] = 0\n 71286: u8 [a0 + 5] = 0\n 71289: u8 [a0 + 4] = 0\n 71292: u8 [a0 + 3] = 0x20\n 71296: u8 [a0 + 2] = 0x73\n 71300: u8 [a0 + 1] = 0x69\n 71304: u8 [a0 + 0] = 0x20\n 71307: a1 = u64 [s1 + 0x120]\n 71311: a0 = a1 + 0x4\n 71314: a1 = a0 <u a1\n 71317: a3 = u64 [s1 + 0x128]\n 71321: a2 = a3 + a1\n 71324: a3 = a2 <u a3\n 71327: a3 = a1 if a1 == 0\n 71330: a1 = u64 [s1 + 0x130]\n 71334: a3 = a3 + a1\n 71337: a1 = a3 <u a1\n 71340: a4 = u64 [s1 + 0x138]\n 71344: a4 = a4 + a1\n 71347: u64 [s1 + 0x288] = a2\n 71351: u64 [s1 + 0x280] = a0\n 71355: a0 = u64 [s1 + 0x140]\n 71359: u64 [s1 + 0x2b8] = a0\n 71363: a0 = u64 [s1 + 0x148]\n 71367: u64 [s1 + 0x2b0] = a0\n 71371: a0 = u64 [s1 + 0x150]\n 71375: u64 [s1 + 0x2a8] = a0\n 71379: a0 = u64 [s1 + 0x158]\n 71383: u64 [s1 + 0x2a0] = a0\n 71387: u64 [s1 + 0x290] = a3\n 71391: a0 = s1 + 0x2c0\n 71395: a1 = s1 + 0x2a0\n 71399: a2 = s1 + 0x280\n 71403: u64 [s1 + 0x298] = a4\n 71407: ra = 842, jump @953\n      : @1021 [@dyn 421] (gas: 15)\n 71413: a0 = u64 [s1 + 0x2d8]\n 71417: a2 = u64 [s1 + 0x2d0]\n 71421: a1 = u64 [s1 + 0x2c8]\n 71425: a3 = u64 [s1 + 0x2c0]\n 71429: u64 [s1 + 0x150] = a0\n 71433: u64 [s1 + 0x148] = a1\n 71437: a0 = a0 | a1\n 71440: a1 = a3 | a2\n 71443: a1 = a1 | a0\n 71446: a1 = a1 >> 0x20\n 71449: u64 [s1 + 0x158] = a2\n 71453: a0 = a0 | a2\n 71456: a0 = a0 << 0x20\n 71459: a0 = a0 | a1\n 71462: jump @1034 if a0 != 0\n      : @1022 (gas: 4)\n 71466: u64 [s1 + 0x140] = a3\n 71470: i32 a0 = a3 + 0\n 71472: a1 = 0x20\n 71475: ra = 844, jump @0\n      : @1023 [@dyn 422] (gas: 44)\n 71482: u8 [a0 + 0] = 0x21\n 71485: a3 = u64 [s1 + 0x160]\n 71489: t0 = u64 [s1 + 0x168]\n 71493: a1 = t0 | a3\n 71496: a2 = u64 [s1 + 0x170]\n 71500: a5 = u64 [s1 + 0x178]\n 71504: a2 = a2 | a5\n 71507: a1 = a1 | a2\n 71510: a1 = a1 >> 0x20\n 71513: a2 = a2 | a3\n 71516: a2 = a2 << 0x20\n 71519: a1 = a1 | a2\n 71522: u8 [a0 + 31] = 0\n 71525: u8 [a0 + 30] = 0\n 71528: u8 [a0 + 29] = 0\n 71531: u8 [a0 + 28] = 0\n 71534: u8 [a0 + 27] = 0\n 71537: u8 [a0 + 26] = 0\n 71540: u8 [a0 + 25] = 0\n 71543: u8 [a0 + 24] = 0\n 71546: u8 [a0 + 23] = 0\n 71549: u8 [a0 + 22] = 0\n 71552: u8 [a0 + 21] = 0\n 71555: u8 [a0 + 20] = 0\n 71558: u8 [a0 + 19] = 0\n 71561: u8 [a0 + 18] = 0\n 71564: u8 [a0 + 17] = 0\n 71567: u8 [a0 + 16] = 0\n 71570: u8 [a0 + 15] = 0\n 71573: u8 [a0 + 14] = 0\n 71576: u8 [a0 + 13] = 0\n 71579: u8 [a0 + 12] = 0\n 71582: u8 [a0 + 11] = 0\n 71585: u8 [a0 + 10] = 0\n 71588: u8 [a0 + 9] = 0\n 71591: u8 [a0 + 8] = 0\n 71594: u8 [a0 + 7] = 0\n 71597: u8 [a0 + 6] = 0\n 71600: u8 [a0 + 5] = 0\n 71603: u8 [a0 + 4] = 0\n 71606: u8 [a0 + 3] = 0\n 71609: u8 [a0 + 2] = 0\n 71612: u8 [a0 + 1] = 0\n 71615: jump @1034 if a1 != 0\n      : @1024 (gas: 37)\n 71619: ra = u64 [s1 + 0x108]\n 71623: a5 = u64 [s1 + 0x140]\n 71627: a0 = a5 <u ra\n 71630: a3 = u64 [s1 + 0x100]\n 71634: a4 = u64 [s1 + 0x148]\n 71638: a1 = a4 ^ a3\n 71641: a2 = a4 <u a3\n 71644: a2 = a0 if a1 == 0\n 71647: a1 = u64 [s1 + 0x158]\n 71651: t1 = u64 [s1 + 0x110]\n 71655: t2 = a1 - t1\n 71658: a3 = a4 - a3\n 71661: a3 = a3 - a0\n 71664: a0 = a5 - ra\n 71667: a4 = a0 + 0x1\n 71670: a0 = a4 <u 0x1\n 71673: u64 [s1 + 0x120] = a4\n 71677: a3 = a3 + a0\n 71680: u64 [s1 + 0x128] = a3\n 71684: a0 = t2 - a2\n 71687: a5 = t2 <u a2\n 71690: a2 = a1 <u t1\n 71693: a1 = a2 + a5\n 71696: a2 = u64 [s1 + 0x118]\n 71700: a5 = u64 [s1 + 0x150]\n 71704: a2 = a5 - a2\n 71707: a2 = a2 - a1\n 71710: a1 = a4 | a3\n 71713: a1 = a1 <u 0x1\n 71716: a1 = a1 + a0\n 71719: u64 [s1 + 0x130] = a1\n 71723: a0 = a1 <u a0\n 71726: a0 = a0 + a2\n 71729: u64 [s1 + 0x138] = a0\n 71733: i32 a0 = t0 + 0\n 71735: a1 = 0x20\n 71738: ra = 846, jump @0\n      : @1025 [@dyn 423] (gas: 128)\n 71745: ra = u64 [s1 + 0x168]\n 71749: a5 = u64 [s1 + 0x140]\n 71753: a2 = a5 <u ra\n 71756: a3 = u64 [s1 + 0x170]\n 71760: a4 = u64 [s1 + 0x148]\n 71764: t0 = a4 ^ a3\n 71767: a1 = a4 <u a3\n 71770: t1 = a3\n 71772: a1 = a2 if t0 == 0\n 71775: a3 = a4 - a3\n 71778: a4 = a3 - a2\n 71781: a2 = a5 - ra\n 71784: a3 = a2 & 0xffffffffffffffe0\n 71787: ra = ra + a3\n 71790: a5 = ra <u a3\n 71793: a3 = a4 + t1\n 71796: a3 = a3 + a5\n 71799: t0 = a3 ^ a4\n 71802: a4 = a3 <u a4\n 71805: a4 = a5 if t0 == 0\n 71808: a2 = u64 [s1 + 0x178]\n 71812: a5 = u64 [s1 + 0x150]\n 71816: t0 = a5 - a2\n 71819: t2 = u64 [s1 + 0x160]\n 71823: t1 = u64 [s1 + 0x158]\n 71827: a5 = t1 <u t2\n 71830: t0 = t0 - a5\n 71833: a5 = t1 - t2\n 71836: t1 = a5 <u a1\n 71839: a1 = a5 - a1\n 71842: t0 = t0 + a2\n 71845: t0 = t0 - t1\n 71848: t1 = u64 [s1 + 0x168]\n 71852: a5 = a1 + t2\n 71855: a1 = a5 <u a1\n 71858: a1 = a1 + t0\n 71861: a4 = a4 + a5\n 71864: a5 = a4 <u a5\n 71867: t0 = a1 + a5\n 71870: a1 = ra + 0x20\n 71873: u64 [s1 + 0x140] = a1\n 71877: a2 = a1 <u ra\n 71880: a1 = a3 + a2\n 71883: a3 = a1 <u a3\n 71886: a3 = a2 if a2 == 0\n 71889: a5 = a4 + a3\n 71892: a2 = a5 <u a4\n 71895: a3 = t0 + a2\n 71898: a4 = a3 >u 0\n 71900: a2 = a5 >u 0\n 71902: a2 = a4 if a3 != 0\n 71905: u64 [s1 + 0x158] = a3\n 71909: u64 [s1 + 0x150] = a5\n 71913: a3 = a3 | a5\n 71916: u64 [s1 + 0x148] = a1\n 71920: a1 = a1 >u 0\n 71922: a1 = a2 if a3 != 0\n 71925: a2 = u64 [s1 + 0x120]\n 71929: a2 = reverse a2\n 71931: a3 = a2 >> 0x38\n 71934: u8 [a0 + 0x1f] = a3\n 71937: a3 = a2 >> 0x30\n 71940: u8 [a0 + 0x1e] = a3\n 71943: a3 = a2 >> 0x28\n 71946: u8 [a0 + 0x1d] = a3\n 71949: a3 = a2 >> 0x20\n 71952: u8 [a0 + 0x1c] = a3\n 71955: a3 = a2 >> 0x18\n 71958: u8 [a0 + 0x1b] = a3\n 71961: a3 = a2 >> 0x10\n 71964: u8 [a0 + 0x1a] = a3\n 71967: a3 = u64 [s1 + 0x128]\n 71971: a3 = reverse a3\n 71973: u8 [a0 + 0x18] = a2\n 71976: a2 = a2 >> 0x8\n 71979: u8 [a0 + 0x19] = a2\n 71982: a2 = a3 >> 0x38\n 71985: u8 [a0 + 0x17] = a2\n 71988: a2 = a3 >> 0x30\n 71991: u8 [a0 + 0x16] = a2\n 71994: a2 = a3 >> 0x28\n 71997: u8 [a0 + 0x15] = a2\n 72000: a2 = a3 >> 0x20\n 72003: u8 [a0 + 0x14] = a2\n 72006: a2 = a3 >> 0x18\n 72009: u8 [a0 + 0x13] = a2\n 72012: a2 = a3 >> 0x10\n 72015: u8 [a0 + 0x12] = a2\n 72018: a2 = u64 [s1 + 0x130]\n 72022: a2 = reverse a2\n 72024: u8 [a0 + 0x10] = a3\n 72027: a3 = a3 >> 0x8\n 72030: u8 [a0 + 0x11] = a3\n 72033: a3 = a2 >> 0x38\n 72036: u8 [a0 + 0xf] = a3\n 72039: a3 = a2 >> 0x30\n 72042: u8 [a0 + 0xe] = a3\n 72045: a3 = a2 >> 0x28\n 72048: u8 [a0 + 0xd] = a3\n 72051: a3 = a2 >> 0x20\n 72054: u8 [a0 + 0xc] = a3\n 72057: a3 = a2 >> 0x18\n 72060: u8 [a0 + 0xb] = a3\n 72063: a3 = a2 >> 0x10\n 72066: u8 [a0 + 0xa] = a3\n 72069: a3 = u64 [s1 + 0x138]\n 72073: a3 = reverse a3\n 72075: u8 [a0 + 0x8] = a2\n 72078: a2 = a2 >> 0x8\n 72081: u8 [a0 + 0x9] = a2\n 72084: a2 = a3 >> 0x38\n 72087: u8 [a0 + 0x7] = a2\n 72090: a2 = a3 >> 0x30\n 72093: u8 [a0 + 0x6] = a2\n 72096: a2 = a3 >> 0x28\n 72099: u8 [a0 + 0x5] = a2\n 72102: a2 = a3 >> 0x20\n 72105: u8 [a0 + 0x4] = a2\n 72108: a2 = a3 >> 0x18\n 72111: u8 [a0 + 0x3] = a2\n 72114: a2 = a3 >> 0x10\n 72117: u8 [a0 + 0x2] = a2\n 72120: u8 [a0] = a3\n 72122: a3 = a3 >> 0x8\n 72125: u8 [a0 + 0x1] = a3\n 72128: a5 = u64 [s1 + 0x178]\n 72132: t0 = u64 [s1 + 0x170]\n 72136: jump @1035 if a1 != 0\n      : @1026 (gas: 17)\n 72140: a4 = t2\n 72142: a0 = u64 [s1 + 0x140]\n 72146: a0 = a0 <u t1\n 72149: a2 = u64 [s1 + 0x148]\n 72153: a1 = a2 ^ t0\n 72156: a2 = a2 <u t0\n 72159: a2 = a0 if a1 == 0\n 72162: a0 = u64 [s1 + 0x150]\n 72166: t2 = a0 <u t2\n 72169: a3 = u64 [s1 + 0x158]\n 72173: a1 = a3 ^ a5\n 72176: a3 = a3 <u a5\n 72179: a3 = t2 if a1 == 0\n 72182: a0 = a0 ^ a4\n 72185: a0 = a0 | a1\n 72188: a3 = a2 if a0 == 0\n 72191: jump @1035 if a3 != 0\n      : @1027 (gas: 3)\n 72195: a0 = 0x40\n 72198: a1 = 0x20\n 72201: ra = 848, jump @0\n      : @1028 [@dyn 424] (gas: 83)\n 72208: a1 = u64 [s1 + 0x140]\n 72212: a1 = reverse a1\n 72214: a2 = a1 >> 0x38\n 72217: u8 [a0 + 0x1f] = a2\n 72220: a2 = a1 >> 0x30\n 72223: u8 [a0 + 0x1e] = a2\n 72226: a2 = a1 >> 0x28\n 72229: u8 [a0 + 0x1d] = a2\n 72232: a2 = a1 >> 0x20\n 72235: u8 [a0 + 0x1c] = a2\n 72238: a2 = a1 >> 0x18\n 72241: u8 [a0 + 0x1b] = a2\n 72244: a2 = a1 >> 0x10\n 72247: u8 [a0 + 0x1a] = a2\n 72250: a2 = u64 [s1 + 0x148]\n 72254: a2 = reverse a2\n 72256: u8 [a0 + 0x18] = a1\n 72259: a1 = a1 >> 0x8\n 72262: u8 [a0 + 0x19] = a1\n 72265: a1 = a2 >> 0x38\n 72268: u8 [a0 + 0x17] = a1\n 72271: a1 = a2 >> 0x30\n 72274: u8 [a0 + 0x16] = a1\n 72277: a1 = a2 >> 0x28\n 72280: u8 [a0 + 0x15] = a1\n 72283: a1 = a2 >> 0x20\n 72286: u8 [a0 + 0x14] = a1\n 72289: a1 = a2 >> 0x18\n 72292: u8 [a0 + 0x13] = a1\n 72295: a1 = a2 >> 0x10\n 72298: u8 [a0 + 0x12] = a1\n 72301: a1 = u64 [s1 + 0x150]\n 72305: a1 = reverse a1\n 72307: u8 [a0 + 0x10] = a2\n 72310: a2 = a2 >> 0x8\n 72313: u8 [a0 + 0x11] = a2\n 72316: a2 = a1 >> 0x38\n 72319: u8 [a0 + 0xf] = a2\n 72322: a2 = a1 >> 0x30\n 72325: u8 [a0 + 0xe] = a2\n 72328: a2 = a1 >> 0x28\n 72331: u8 [a0 + 0xd] = a2\n 72334: a2 = a1 >> 0x20\n 72337: u8 [a0 + 0xc] = a2\n 72340: a2 = a1 >> 0x18\n 72343: u8 [a0 + 0xb] = a2\n 72346: a2 = a1 >> 0x10\n 72349: u8 [a0 + 0xa] = a2\n 72352: a2 = u64 [s1 + 0x158]\n 72356: a2 = reverse a2\n 72358: u8 [a0 + 0x8] = a1\n 72361: a1 = a1 >> 0x8\n 72364: u8 [a0 + 0x9] = a1\n 72367: a1 = a2 >> 0x38\n 72370: u8 [a0 + 0x7] = a1\n 72373: a1 = a2 >> 0x30\n 72376: u8 [a0 + 0x6] = a1\n 72379: a1 = a2 >> 0x28\n 72382: u8 [a0 + 0x5] = a1\n 72385: a1 = a2 >> 0x20\n 72388: u8 [a0 + 0x4] = a1\n 72391: a1 = a2 >> 0x18\n 72394: u8 [a0 + 0x3] = a1\n 72397: a1 = a2 >> 0x10\n 72400: u8 [a0 + 0x2] = a1\n 72403: u8 [a0] = a2\n 72405: a2 = a2 >> 0x8\n 72408: u8 [a0 + 0x1] = a2\n 72411: a0 = u64 [s1 + 0xb0]\n 72415: a1 = u64 [s1 + 0x168]\n 72419: u64 [a0] = a1\n 72421: a1 = u64 [s1 + 0x178]\n 72425: u64 [a0 + 0x18] = a1\n 72428: a1 = u64 [s1 + 0x170]\n 72432: u64 [a0 + 0x8] = a1\n 72435: a1 = u64 [s1 + 0x160]\n 72439: u64 [a0 + 0x10] = a1\n 72442: sp = s0 + 0xfffffffffffffae0\n 72446: ra = u64 [sp + 0x518]\n 72450: s0 = u64 [sp + 0x510]\n 72454: s1 = u64 [sp + 0x508]\n 72458: sp = sp + 0x520\n 72462: ret\n      : @1029 (gas: 3)\n 72464: a0 = 0x40\n 72467: a1 = 0x20\n 72470: ra = 850, jump @0\n      : @1030 [@dyn 425] (gas: 104)\n 72477: a1 = u8 [a0 + 0x11]\n 72480: a2 = u8 [a0 + 0x10]\n 72483: a3 = u8 [a0 + 0x12]\n 72486: a4 = u8 [a0 + 0x13]\n 72489: a1 = a1 << 0x8\n 72492: a1 = a1 | a2\n 72495: a3 = a3 << 0x10\n 72498: a4 = a4 << 0x18\n 72501: a3 = a3 | a4\n 72504: a1 = a1 | a3\n 72507: a2 = u8 [a0 + 0x15]\n 72510: a3 = u8 [a0 + 0x14]\n 72513: a4 = u8 [a0 + 0x16]\n 72516: a5 = u8 [a0 + 0x17]\n 72519: a2 = a2 << 0x8\n 72522: a2 = a2 | a3\n 72525: a4 = a4 << 0x10\n 72528: a5 = a5 << 0x18\n 72531: a4 = a4 | a5\n 72534: a2 = a2 | a4\n 72537: a2 = a2 << 0x20\n 72540: t0 = a2 | a1\n 72543: a2 = u8 [a0 + 0x1]\n 72546: a3 = u8 [a0]\n 72548: a4 = u8 [a0 + 0x2]\n 72551: a5 = u8 [a0 + 0x3]\n 72554: a2 = a2 << 0x8\n 72557: a2 = a2 | a3\n 72560: a4 = a4 << 0x10\n 72563: a5 = a5 << 0x18\n 72566: a4 = a4 | a5\n 72569: a2 = a2 | a4\n 72572: a3 = u8 [a0 + 0x5]\n 72575: a4 = u8 [a0 + 0x4]\n 72578: a5 = u8 [a0 + 0x6]\n 72581: a1 = u8 [a0 + 0x7]\n 72584: a3 = a3 << 0x8\n 72587: a3 = a3 | a4\n 72590: a5 = a5 << 0x10\n 72593: a1 = a1 << 0x18\n 72596: a1 = a1 | a5\n 72599: a1 = a1 | a3\n 72602: a1 = a1 << 0x20\n 72605: t1 = a1 | a2\n 72608: a1 = u8 [a0 + 0x19]\n 72611: a3 = u8 [a0 + 0x18]\n 72614: a4 = u8 [a0 + 0x1a]\n 72617: a5 = u8 [a0 + 0x1b]\n 72620: a1 = a1 << 0x8\n 72623: a1 = a1 | a3\n 72626: a4 = a4 << 0x10\n 72629: a5 = a5 << 0x18\n 72632: a4 = a4 | a5\n 72635: a1 = a1 | a4\n 72638: a3 = u8 [a0 + 0x1d]\n 72641: a4 = u8 [a0 + 0x1c]\n 72644: a5 = u8 [a0 + 0x1e]\n 72647: a2 = u8 [a0 + 0x1f]\n 72650: a3 = a3 << 0x8\n 72653: a3 = a3 | a4\n 72656: a5 = a5 << 0x10\n 72659: a2 = a2 << 0x18\n 72662: a2 = a2 | a5\n 72665: a2 = a2 | a3\n 72668: a2 = a2 << 0x20\n 72671: a3 = a2 | a1\n 72674: a1 = u8 [a0 + 0x9]\n 72677: a2 = u8 [a0 + 0x8]\n 72680: a4 = u8 [a0 + 0xa]\n 72683: a5 = u8 [a0 + 0xb]\n 72686: a1 = a1 << 0x8\n 72689: a1 = a1 | a2\n 72692: a4 = a4 << 0x10\n 72695: a5 = a5 << 0x18\n 72698: a4 = a4 | a5\n 72701: a1 = a1 | a4\n 72704: a2 = u8 [a0 + 0xd]\n 72707: a4 = u8 [a0 + 0xc]\n 72710: a5 = u8 [a0 + 0xe]\n 72713: a0 = u8 [a0 + 0xf]\n 72716: a2 = a2 << 0x8\n 72719: a2 = a2 | a4\n 72722: a5 = a5 << 0x10\n 72725: a0 = a0 << 0x18\n 72728: a0 = a0 | a5\n 72731: a0 = a0 | a2\n 72734: a0 = a0 << 0x20\n 72737: a0 = a0 | a1\n 72740: a4 = reverse a0\n 72742: a1 = reverse a3\n 72744: a2 = reverse t1\n 72746: a0 = reverse t0\n 72748: u64 [s1 + 0x178] = a0\n 72752: u64 [s1 + 0x168] = a2\n 72756: a0 = a0 | a2\n 72759: a2 = a1\n 72761: a1 = a1 | a4\n 72764: a1 = a1 | a0\n 72767: a1 = a1 >> 0x20\n 72770: u64 [s1 + 0x170] = a4\n 72774: a0 = a0 | a4\n 72777: a0 = a0 << 0x20\n 72780: a0 = a0 | a1\n 72783: jump @1034 if a0 != 0\n      : @1031 (gas: 5)\n 72787: u64 [s1 + 0x160] = a2\n 72791: i32 a0 = a2 + 0\n 72793: a1 = 0x20\n 72796: u64 [s1 + 0x158] = a0\n 72800: ra = 852, jump @0\n      : @1032 [@dyn 426] (gas: 51)\n 72807: u8 [a0 + 31] = 0\n 72810: u8 [a0 + 30] = 0\n 72813: u8 [a0 + 29] = 0\n 72816: u8 [a0 + 28] = 0\n 72819: u8 [a0 + 27] = 0\n 72822: u8 [a0 + 26] = 0\n 72825: u8 [a0 + 25] = 0\n 72828: u8 [a0 + 24] = 0\n 72831: u8 [a0 + 23] = 0\n 72834: u8 [a0 + 22] = 0\n 72837: u8 [a0 + 21] = 0\n 72840: u8 [a0 + 20] = 0\n 72843: u8 [a0 + 19] = 0\n 72846: u8 [a0 + 18] = 0\n 72849: u8 [a0 + 17] = 0\n 72852: u8 [a0 + 16] = 0\n 72855: u8 [a0 + 15] = 0\n 72858: u8 [a0 + 14] = 0\n 72861: u8 [a0 + 13] = 0\n 72864: u8 [a0 + 12] = 0\n 72867: u8 [a0 + 11] = 0\n 72870: u8 [a0 + 10] = 0\n 72873: u8 [a0 + 9] = 0\n 72876: u8 [a0 + 8] = 0\n 72879: u8 [a0 + 7] = 0\n 72882: u8 [a0 + 6] = 0\n 72885: u8 [a0 + 5] = 0\n 72888: u8 [a0 + 4] = 0\n 72891: u8 [a0 + 3] = 0xa0\n 72896: u8 [a0 + 2] = 0x79\n 72900: u8 [a0 + 1] = 0xc3\n 72905: u8 [a0 + 0] = 0x8\n 72908: a1 = u64 [s1 + 0x160]\n 72912: a0 = a1 + 0x4\n 72915: a1 = a0 <u a1\n 72918: a3 = u64 [s1 + 0x178]\n 72922: a2 = a3 + a1\n 72925: a3 = a2 <u a3\n 72928: a3 = a1 if a1 == 0\n 72931: a1 = u64 [s1 + 0x170]\n 72935: a3 = a3 + a1\n 72938: a1 = a3 <u a1\n 72941: a4 = u64 [s1 + 0x168]\n 72945: a4 = a4 + a1\n 72948: u64 [s1 + 0x188] = a2\n 72952: u64 [s1 + 0x180] = a0\n 72956: u64 [s1 + 0x190] = a3\n 72960: a0 = s1 + 0x1a0\n 72964: a1 = s1 + 0x180\n 72968: u64 [s1 + 0x198] = a4\n 72972: ra = 854, jump @934\n      : @1033 [@dyn 427] (gas: 31)\n 72978: a0 = u64 [s1 + 0x1a8]\n 72982: t0 = u64 [s1 + 0x1b8]\n 72986: t1 = u64 [s1 + 0x1a0]\n 72990: a3 = u64 [s1 + 0x1b0]\n 72994: a1 = u64 [s1 + 0x178]\n 72998: a4 = a0 ^ a1\n 73001: a5 = a0 <u a1\n 73004: ra = a1\n 73006: t2 = u64 [s1 + 0x160]\n 73010: a1 = t1 <u t2\n 73013: a5 = a1 if a4 == 0\n 73016: a2 = u64 [s1 + 0x170]\n 73020: a4 = a3 - a2\n 73023: a3 = a3 <u a2\n 73026: a2 = u64 [s1 + 0x168]\n 73030: a2 = t0 - a2\n 73033: a2 = a2 - a3\n 73036: a3 = a4 <u a5\n 73039: a2 = a2 - a3\n 73042: a4 = a4 - a5\n 73045: a0 = a0 - ra\n 73048: a1 = a0 - a1\n 73051: a0 = t1 - t2\n 73054: a1 = a1 | a2\n 73057: a2 = a0 | a4\n 73060: a2 = a2 | a1\n 73063: a1 = a1 | a4\n 73066: a2 = a2 >> 0x20\n 73069: a1 = a1 << 0x20\n 73072: a1 = a1 | a2\n 73075: jump @1043 if a1 == 0\n      : @1034 (gas: 1)\n 73079: trap\n      : @1035 (gas: 8)\n 73080: u64 [s1 + 624] = 0\n 73084: u64 [s1 + 616] = 0\n 73088: u64 [s1 + 608] = 0\n 73092: a0 = 0x4e487b7100000000\n 73102: a1 = s1 + 0x260\n 73106: u64 [s1 + 0x278] = a0\n 73110: a0 = 0\n 73112: ra = 856, jump @23\n      : @1036 [@dyn 428] (gas: 8)\n 73119: u64 [s1 + 600] = 0\n 73123: u64 [s1 + 592] = 0\n 73127: u64 [s1 + 576] = 0x41\n 73132: a0 = 0x4\n 73135: a1 = s1 + 0x240\n 73139: u64 [s1 + 584] = 0\n 73143: ra = 0x35e\n 73147: jump @23\n      : @1037 (gas: 8)\n 73151: u64 [s1 + 496] = 0\n 73155: u64 [s1 + 488] = 0\n 73159: u64 [s1 + 480] = 0\n 73163: a0 = 0x4e487b7100000000\n 73173: a1 = s1 + 0x1e0\n 73177: u64 [s1 + 0x1f8] = a0\n 73181: a0 = 0\n 73183: ra = 858, jump @23\n      : @1038 [@dyn 429] (gas: 8)\n 73190: u64 [s1 + 472] = 0\n 73194: u64 [s1 + 464] = 0\n 73198: u64 [s1 + 448] = 0x11\n 73203: a0 = 0x4\n 73206: a1 = s1 + 0x1c0\n 73210: u64 [s1 + 456] = 0\n 73214: ra = 0x35e\n 73218: jump @23\n      : @1039 (gas: 8)\n 73222: u64 [s1 + 560] = 0\n 73226: u64 [s1 + 552] = 0\n 73230: u64 [s1 + 544] = 0\n 73234: a0 = 0x4e487b7100000000\n 73244: a1 = s1 + 0x220\n 73248: u64 [s1 + 0x238] = a0\n 73252: a0 = 0\n 73254: ra = 860, jump @23\n      : @1040 [@dyn 430] (gas: 7)\n 73261: u64 [s1 + 536] = 0\n 73265: u64 [s1 + 528] = 0\n 73269: u64 [s1 + 512] = 0x12\n 73274: a0 = 0x4\n 73277: a1 = s1 + 0x200\n 73281: u64 [s1 + 520] = 0\n 73285: ra = 862, jump @23\n      : @1041 [@dyn 431] (gas: 3)\n 73292: a1 = 0x24\n 73295: a0 = 0\n 73297: ra = 864, jump @0\n      : @1042 [@dyn 432] (gas: 5)\n 73304: i32 a1 = a0 + 0\n 73306: a0 = 0x1\n 73309: a2 = 0x24\n 73312: ecalli 7 // 'seal_return'\n 73314: fallthrough\n      : @1043 (gas: 4)\n 73315: i32 a1 = a0 + 0\n 73317: u64 [s1 + 0x178] = a1\n 73321: a0 = u64 [s1 + 0x158]\n 73325: ra = 866, jump @0\n      : @1044 [@dyn 433] (gas: 6)\n 73332: i32 a1 = a0 + 0\n 73334: a0 = 0x1\n 73337: a2 = u64 [s1 + 0x178]\n 73341: ra = 0x364\n 73345: ecalli 7 // 'seal_return'\n 73347: fallthrough\n      : @1045 [@dyn 434] (gas: 5)\n 73348: u64 [a0 + 24] = 0\n 73351: u64 [a0 + 16] = 0\n 73354: u64 [a0 + 8] = 0\n 73357: u64 [a0 + 0] = 0\n 73359: ret\n      : @1046 [export #0: 'call'] (gas: 2)\n 73361: a0 = 0\n 73363: ra = 870, jump @25\n      : @1047 [@dyn 435] [export #1: 'deploy'] (gas: 2)\n 73370: a0 = 0x1\n 73373: ra = 872, jump @25\n      : @1048 [@dyn 436] (gas: 27)\n 73380: sp = sp + 0xffffffffffffff80\n 73383: u64 [sp + 0x78] = ra\n 73386: u64 [sp + 0x70] = s0\n 73389: u64 [sp + 0x68] = s1\n 73392: s0 = sp + 0x80\n 73396: sp = sp & 0xfffffffffffffff0\n 73399: t0 = u64 [a1]\n 73401: t1 = u64 [a1 + 0x8]\n 73404: t2 = u64 [a1 + 0x10]\n 73407: a1 = u64 [a1 + 0x18]\n 73410: a3 = u64 [a2]\n 73412: a4 = u64 [a2 + 0x8]\n 73415: a5 = u64 [a2 + 0x10]\n 73418: a2 = u64 [a2 + 0x18]\n 73421: s1 = a0\n 73423: u64 [sp + 0x18] = a2\n 73426: u64 [sp + 0x10] = a5\n 73429: u64 [sp + 0x8] = a4\n 73432: u64 [sp] = a3\n 73434: u64 [sp + 0x38] = a1\n 73437: u64 [sp + 0x30] = t2\n 73440: u64 [sp + 0x28] = t1\n 73443: a0 = sp + 0x40\n 73446: a1 = sp + 0x20\n 73449: a2 = sp\n 73451: u64 [sp + 0x20] = t0\n 73454: ra = 874, jump @885\n      : @1049 [@dyn 437] (gas: 14)\n 73460: a0 = u64 [sp + 0x50]\n 73463: a1 = u64 [sp + 0x58]\n 73466: a2 = u64 [sp + 0x40]\n 73469: a3 = u64 [sp + 0x48]\n 73472: u64 [s1 + 0x10] = a0\n 73475: u64 [s1 + 0x18] = a1\n 73478: u64 [s1] = a2\n 73480: u64 [s1 + 0x8] = a3\n 73483: sp = s0 + 0xffffffffffffff80\n 73486: ra = u64 [sp + 0x78]\n 73489: s0 = u64 [sp + 0x70]\n 73492: s1 = u64 [sp + 0x68]\n 73495: sp = sp + 0x80\n 73499: ret\n",
						"bytecode": {
							"object": ""
						},
						"deployedBytecode": {
							"object": ""
						},
						"methodIdentifiers": {
							"getCurrentMagicWord()": "68a0c969",
							"inputMagicWord(string)": "bf462267",
							"makeMagicBaby()": "84ac83cc"
						}
					},
					"irOptimized": "/// @use-src 0:\"contracts/MagicWordInteractive.sol\"\nobject \"MagicWord_147\" {\n    code {\n        {\n            /// @src 0:210:1847  \"contract MagicWord {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue()\n            {\n                revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n            }\n            constructor_MagicWord()\n            let _1 := allocate_unbounded()\n            codecopy(_1, dataoffset(\"MagicWord_147_deployed\"), datasize(\"MagicWord_147_deployed\"))\n            return(_1, datasize(\"MagicWord_147_deployed\"))\n        }\n        function allocate_unbounded() -> memPtr\n        { memPtr := mload(64) }\n        function revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n        { revert(0, 0) }\n        function round_up_to_mul_of(value) -> result\n        {\n            result := and(add(value, 31), not(31))\n        }\n        function panic_error_0x41()\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        function finalize_allocation(memPtr, size)\n        {\n            let newFreePtr := add(memPtr, round_up_to_mul_of(size))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n            mstore(64, newFreePtr)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := allocate_unbounded()\n            finalize_allocation(memPtr, size)\n        }\n        function array_allocation_size_array_string(length) -> size\n        {\n            if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            size := mul(length, 0x20)\n        }\n        function allocate_memory_array_array_string(length) -> memPtr\n        {\n            let allocSize := array_allocation_size_array_string(length)\n            memPtr := allocate_memory(allocSize)\n        }\n        function array_allocation_size_string(length) -> size\n        {\n            if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            size := round_up_to_mul_of(length)\n            size := add(size, 0x20)\n        }\n        function allocate_memory_array_string(length) -> memPtr\n        {\n            let allocSize := array_allocation_size_string(length)\n            memPtr := allocate_memory(allocSize)\n            mstore(memPtr, length)\n        }\n        function store_literal_in_memory_f8539fc696bd04f73891493700ec2d170b088f79c2a2e9e7f76261960fe40929(memPtr)\n        {\n            mstore(add(memPtr, 0), \"amazing\")\n        }\n        function copy_literal_to_memory_f8539fc696bd04f73891493700ec2d170b088f79c2a2e9e7f76261960fe40929() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(7)\n            store_literal_in_memory_f8539fc696bd04f73891493700ec2d170b088f79c2a2e9e7f76261960fe40929(add(memPtr, 32))\n        }\n        function convert_stringliteral_f853_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_f8539fc696bd04f73891493700ec2d170b088f79c2a2e9e7f76261960fe40929()\n        }\n        function write_to_memory_string(memPtr, value)\n        { mstore(memPtr, value) }\n        function store_literal_in_memory_d17d1d80d5d7a434b56ee59bc2ed8f0fd2a890dfba40fc63344b9c3654c935ee(memPtr)\n        {\n            mstore(add(memPtr, 0), \"awesome\")\n        }\n        function copy_literal_to_memory_d17d1d80d5d7a434b56ee59bc2ed8f0fd2a890dfba40fc63344b9c3654c935ee() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(7)\n            store_literal_in_memory_d17d1d80d5d7a434b56ee59bc2ed8f0fd2a890dfba40fc63344b9c3654c935ee(add(memPtr, 32))\n        }\n        function convert_stringliteral_d17d_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_d17d1d80d5d7a434b56ee59bc2ed8f0fd2a890dfba40fc63344b9c3654c935ee()\n        }\n        function store_literal_in_memory_a3fd1d08b6a60a7b87db8fab8c204c18f4f5c424b2adce1ac22549fbd176b2ef(memPtr)\n        {\n            mstore(add(memPtr, 0), \"brilliant\")\n        }\n        function copy_literal_to_memory_a3fd1d08b6a60a7b87db8fab8c204c18f4f5c424b2adce1ac22549fbd176b2ef() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(9)\n            store_literal_in_memory_a3fd1d08b6a60a7b87db8fab8c204c18f4f5c424b2adce1ac22549fbd176b2ef(add(memPtr, 32))\n        }\n        function convert_stringliteral_a3fd_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_a3fd1d08b6a60a7b87db8fab8c204c18f4f5c424b2adce1ac22549fbd176b2ef()\n        }\n        function store_literal_in_memory_8ba2c0afb7b1f61861859c622e5f304cadb3d405571f1ad8f0cc54d6814a4c89(memPtr)\n        {\n            mstore(add(memPtr, 0), \"beautiful\")\n        }\n        function copy_literal_to_memory_8ba2c0afb7b1f61861859c622e5f304cadb3d405571f1ad8f0cc54d6814a4c89() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(9)\n            store_literal_in_memory_8ba2c0afb7b1f61861859c622e5f304cadb3d405571f1ad8f0cc54d6814a4c89(add(memPtr, 32))\n        }\n        function convert_stringliteral_8ba2_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_8ba2c0afb7b1f61861859c622e5f304cadb3d405571f1ad8f0cc54d6814a4c89()\n        }\n        function store_literal_in_memory_e3e90daa6a58ae029a7000d6cc00698775d4b20492e71d5126fada73256f0f26(memPtr)\n        {\n            mstore(add(memPtr, 0), \"brave\")\n        }\n        function copy_literal_to_memory_e3e90daa6a58ae029a7000d6cc00698775d4b20492e71d5126fada73256f0f26() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(5)\n            store_literal_in_memory_e3e90daa6a58ae029a7000d6cc00698775d4b20492e71d5126fada73256f0f26(add(memPtr, 32))\n        }\n        function convert_stringliteral_e3e9_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_e3e90daa6a58ae029a7000d6cc00698775d4b20492e71d5126fada73256f0f26()\n        }\n        function store_literal_in_memory_1dda021d0a424dcb3ec1956b8a8242f8517d0e52c486bd98f6f2494e0b453723(memPtr)\n        {\n            mstore(add(memPtr, 0), \"bold\")\n        }\n        function copy_literal_to_memory_1dda021d0a424dcb3ec1956b8a8242f8517d0e52c486bd98f6f2494e0b453723() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(4)\n            store_literal_in_memory_1dda021d0a424dcb3ec1956b8a8242f8517d0e52c486bd98f6f2494e0b453723(add(memPtr, 32))\n        }\n        function convert_stringliteral_1dda_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_1dda021d0a424dcb3ec1956b8a8242f8517d0e52c486bd98f6f2494e0b453723()\n        }\n        function store_literal_in_memory_b8cafa17a973c2782862a1d8d21def2351c001583aebec26db163cccdbb5b7a9(memPtr)\n        {\n            mstore(add(memPtr, 0), \"bright\")\n        }\n        function copy_literal_to_memory_b8cafa17a973c2782862a1d8d21def2351c001583aebec26db163cccdbb5b7a9() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(6)\n            store_literal_in_memory_b8cafa17a973c2782862a1d8d21def2351c001583aebec26db163cccdbb5b7a9(add(memPtr, 32))\n        }\n        function convert_stringliteral_b8ca_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_b8cafa17a973c2782862a1d8d21def2351c001583aebec26db163cccdbb5b7a9()\n        }\n        function store_literal_in_memory_d97fa8a7daee87d313c29ec9b478b3b4bc3118051c7625d0f2fc2ee7acc76406(memPtr)\n        {\n            mstore(add(memPtr, 0), \"calm\")\n        }\n        function copy_literal_to_memory_d97fa8a7daee87d313c29ec9b478b3b4bc3118051c7625d0f2fc2ee7acc76406() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(4)\n            store_literal_in_memory_d97fa8a7daee87d313c29ec9b478b3b4bc3118051c7625d0f2fc2ee7acc76406(add(memPtr, 32))\n        }\n        function convert_stringliteral_d97f_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_d97fa8a7daee87d313c29ec9b478b3b4bc3118051c7625d0f2fc2ee7acc76406()\n        }\n        function store_literal_in_memory_4fbdd45f5c4c780ffb76ed071e1ce5d54c26bf7566871213f1d327e78a08fb7a(memPtr)\n        {\n            mstore(add(memPtr, 0), \"charming\")\n        }\n        function copy_literal_to_memory_4fbdd45f5c4c780ffb76ed071e1ce5d54c26bf7566871213f1d327e78a08fb7a() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(8)\n            store_literal_in_memory_4fbdd45f5c4c780ffb76ed071e1ce5d54c26bf7566871213f1d327e78a08fb7a(add(memPtr, 32))\n        }\n        function convert_stringliteral_4fbd_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_4fbdd45f5c4c780ffb76ed071e1ce5d54c26bf7566871213f1d327e78a08fb7a()\n        }\n        function store_literal_in_memory_90ef6ec615b551598056285df783f91a63cea34aadf77653161fcef13dd34e69(memPtr)\n        {\n            mstore(add(memPtr, 0), \"cheerful\")\n        }\n        function copy_literal_to_memory_90ef6ec615b551598056285df783f91a63cea34aadf77653161fcef13dd34e69() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(8)\n            store_literal_in_memory_90ef6ec615b551598056285df783f91a63cea34aadf77653161fcef13dd34e69(add(memPtr, 32))\n        }\n        function convert_stringliteral_90ef_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_90ef6ec615b551598056285df783f91a63cea34aadf77653161fcef13dd34e69()\n        }\n        function store_literal_in_memory_2ea4ed0ce53f131af414c418adc10a49b97c1e5ac17b578e486542a24939d749(memPtr)\n        {\n            mstore(add(memPtr, 0), \"clever\")\n        }\n        function copy_literal_to_memory_2ea4ed0ce53f131af414c418adc10a49b97c1e5ac17b578e486542a24939d749() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(6)\n            store_literal_in_memory_2ea4ed0ce53f131af414c418adc10a49b97c1e5ac17b578e486542a24939d749(add(memPtr, 32))\n        }\n        function convert_stringliteral_2ea4_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_2ea4ed0ce53f131af414c418adc10a49b97c1e5ac17b578e486542a24939d749()\n        }\n        function store_literal_in_memory_ca187a0a5c09dd0c4093639a372e92eaff2f1a12252fff1411f153c440c5084e(memPtr)\n        {\n            mstore(add(memPtr, 0), \"colorful\")\n        }\n        function copy_literal_to_memory_ca187a0a5c09dd0c4093639a372e92eaff2f1a12252fff1411f153c440c5084e() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(8)\n            store_literal_in_memory_ca187a0a5c09dd0c4093639a372e92eaff2f1a12252fff1411f153c440c5084e(add(memPtr, 32))\n        }\n        function convert_stringliteral_ca18_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_ca187a0a5c09dd0c4093639a372e92eaff2f1a12252fff1411f153c440c5084e()\n        }\n        function store_literal_in_memory_49cda4a3dbd12d6fb5336bb26bdcc463622acf8098818055aba4d7cc2e5f65b0(memPtr)\n        {\n            mstore(add(memPtr, 0), \"comfortable\")\n        }\n        function copy_literal_to_memory_49cda4a3dbd12d6fb5336bb26bdcc463622acf8098818055aba4d7cc2e5f65b0() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(11)\n            store_literal_in_memory_49cda4a3dbd12d6fb5336bb26bdcc463622acf8098818055aba4d7cc2e5f65b0(add(memPtr, 32))\n        }\n        function convert_stringliteral_49cd_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_49cda4a3dbd12d6fb5336bb26bdcc463622acf8098818055aba4d7cc2e5f65b0()\n        }\n        function store_literal_in_memory_89edccfc23d8808df57bf67342ee932f75d02d5c1c2b0cda1bb5676c2331ca8c(memPtr)\n        {\n            mstore(add(memPtr, 0), \"confident\")\n        }\n        function copy_literal_to_memory_89edccfc23d8808df57bf67342ee932f75d02d5c1c2b0cda1bb5676c2331ca8c() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(9)\n            store_literal_in_memory_89edccfc23d8808df57bf67342ee932f75d02d5c1c2b0cda1bb5676c2331ca8c(add(memPtr, 32))\n        }\n        function convert_stringliteral_89ed_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_89edccfc23d8808df57bf67342ee932f75d02d5c1c2b0cda1bb5676c2331ca8c()\n        }\n        function store_literal_in_memory_8d266ff1e2ad150484992fb7b8ab7a55aad186c72d4f02d5f16b0d02f505904e(memPtr)\n        {\n            mstore(add(memPtr, 0), \"considerate\")\n        }\n        function copy_literal_to_memory_8d266ff1e2ad150484992fb7b8ab7a55aad186c72d4f02d5f16b0d02f505904e() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(11)\n            store_literal_in_memory_8d266ff1e2ad150484992fb7b8ab7a55aad186c72d4f02d5f16b0d02f505904e(add(memPtr, 32))\n        }\n        function convert_stringliteral_8d26_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_8d266ff1e2ad150484992fb7b8ab7a55aad186c72d4f02d5f16b0d02f505904e()\n        }\n        function store_literal_in_memory_678c189fde5058554d934d6af17e41750fa2a94b61371c5ea958a7595e146324(memPtr)\n        {\n            mstore(add(memPtr, 0), \"cool\")\n        }\n        function copy_literal_to_memory_678c189fde5058554d934d6af17e41750fa2a94b61371c5ea958a7595e146324() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(4)\n            store_literal_in_memory_678c189fde5058554d934d6af17e41750fa2a94b61371c5ea958a7595e146324(add(memPtr, 32))\n        }\n        function convert_stringliteral_678c_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_678c189fde5058554d934d6af17e41750fa2a94b61371c5ea958a7595e146324()\n        }\n        function store_literal_in_memory_67f94db9ff3a85d6e55122058e8ddc74619775d114f31e78e411c9ea5b264886(memPtr)\n        {\n            mstore(add(memPtr, 0), \"courageous\")\n        }\n        function copy_literal_to_memory_67f94db9ff3a85d6e55122058e8ddc74619775d114f31e78e411c9ea5b264886() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(10)\n            store_literal_in_memory_67f94db9ff3a85d6e55122058e8ddc74619775d114f31e78e411c9ea5b264886(add(memPtr, 32))\n        }\n        function convert_stringliteral_67f9_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_67f94db9ff3a85d6e55122058e8ddc74619775d114f31e78e411c9ea5b264886()\n        }\n        function store_literal_in_memory_d08ac36f519ee359a2a193611e1643e0d2c9d4ad9631f683fccd3b4a13a5b717(memPtr)\n        {\n            mstore(add(memPtr, 0), \"creative\")\n        }\n        function copy_literal_to_memory_d08ac36f519ee359a2a193611e1643e0d2c9d4ad9631f683fccd3b4a13a5b717() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(8)\n            store_literal_in_memory_d08ac36f519ee359a2a193611e1643e0d2c9d4ad9631f683fccd3b4a13a5b717(add(memPtr, 32))\n        }\n        function convert_stringliteral_d08a_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_d08ac36f519ee359a2a193611e1643e0d2c9d4ad9631f683fccd3b4a13a5b717()\n        }\n        function store_literal_in_memory_e9c4fceab5083dfebe07d8696a1281dcece88f36770ecc5e10300ebe6b4c46a1(memPtr)\n        {\n            mstore(add(memPtr, 0), \"curious\")\n        }\n        function copy_literal_to_memory_e9c4fceab5083dfebe07d8696a1281dcece88f36770ecc5e10300ebe6b4c46a1() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(7)\n            store_literal_in_memory_e9c4fceab5083dfebe07d8696a1281dcece88f36770ecc5e10300ebe6b4c46a1(add(memPtr, 32))\n        }\n        function convert_stringliteral_e9c4_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_e9c4fceab5083dfebe07d8696a1281dcece88f36770ecc5e10300ebe6b4c46a1()\n        }\n        function store_literal_in_memory_4825842dc9b28fa3667c9ae8fc1ab0085990e0ec28564abf43236904483b92a4(memPtr)\n        {\n            mstore(add(memPtr, 0), \"daring\")\n        }\n        function copy_literal_to_memory_4825842dc9b28fa3667c9ae8fc1ab0085990e0ec28564abf43236904483b92a4() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(6)\n            store_literal_in_memory_4825842dc9b28fa3667c9ae8fc1ab0085990e0ec28564abf43236904483b92a4(add(memPtr, 32))\n        }\n        function convert_stringliteral_4825_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_4825842dc9b28fa3667c9ae8fc1ab0085990e0ec28564abf43236904483b92a4()\n        }\n        function store_literal_in_memory_45f58f1b8249771cda53daeee63ca67300dd8092dfe0a7fc709cdfcfb4cc1172(memPtr)\n        {\n            mstore(add(memPtr, 0), \"dazzling\")\n        }\n        function copy_literal_to_memory_45f58f1b8249771cda53daeee63ca67300dd8092dfe0a7fc709cdfcfb4cc1172() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(8)\n            store_literal_in_memory_45f58f1b8249771cda53daeee63ca67300dd8092dfe0a7fc709cdfcfb4cc1172(add(memPtr, 32))\n        }\n        function convert_stringliteral_45f5_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_45f58f1b8249771cda53daeee63ca67300dd8092dfe0a7fc709cdfcfb4cc1172()\n        }\n        function store_literal_in_memory_e5bd8e18fa682c814a6117f0308defadda65df120d272f2f40913a6137f15bfa(memPtr)\n        {\n            mstore(add(memPtr, 0), \"delightful\")\n        }\n        function copy_literal_to_memory_e5bd8e18fa682c814a6117f0308defadda65df120d272f2f40913a6137f15bfa() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(10)\n            store_literal_in_memory_e5bd8e18fa682c814a6117f0308defadda65df120d272f2f40913a6137f15bfa(add(memPtr, 32))\n        }\n        function convert_stringliteral_e5bd_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_e5bd8e18fa682c814a6117f0308defadda65df120d272f2f40913a6137f15bfa()\n        }\n        function store_literal_in_memory_1758b5795aee2fffe4ad961402d0eb005f1bd7e678a879f6533a09c5ea1422fe(memPtr)\n        {\n            mstore(add(memPtr, 0), \"determined\")\n        }\n        function copy_literal_to_memory_1758b5795aee2fffe4ad961402d0eb005f1bd7e678a879f6533a09c5ea1422fe() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(10)\n            store_literal_in_memory_1758b5795aee2fffe4ad961402d0eb005f1bd7e678a879f6533a09c5ea1422fe(add(memPtr, 32))\n        }\n        function convert_stringliteral_1758_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_1758b5795aee2fffe4ad961402d0eb005f1bd7e678a879f6533a09c5ea1422fe()\n        }\n        function store_literal_in_memory_604e9638708be1d29143adc17fde6da35d723f550eec6d2340b7efb6343ba7e4(memPtr)\n        {\n            mstore(add(memPtr, 0), \"diligent\")\n        }\n        function copy_literal_to_memory_604e9638708be1d29143adc17fde6da35d723f550eec6d2340b7efb6343ba7e4() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(8)\n            store_literal_in_memory_604e9638708be1d29143adc17fde6da35d723f550eec6d2340b7efb6343ba7e4(add(memPtr, 32))\n        }\n        function convert_stringliteral_604e_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_604e9638708be1d29143adc17fde6da35d723f550eec6d2340b7efb6343ba7e4()\n        }\n        function store_literal_in_memory_47a6130681d8220ba3d4c0a50de139d22039c5629024c598d023ccca8470c25c(memPtr)\n        {\n            mstore(add(memPtr, 0), \"dynamic\")\n        }\n        function copy_literal_to_memory_47a6130681d8220ba3d4c0a50de139d22039c5629024c598d023ccca8470c25c() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(7)\n            store_literal_in_memory_47a6130681d8220ba3d4c0a50de139d22039c5629024c598d023ccca8470c25c(add(memPtr, 32))\n        }\n        function convert_stringliteral_47a6_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_47a6130681d8220ba3d4c0a50de139d22039c5629024c598d023ccca8470c25c()\n        }\n        function store_literal_in_memory_5d742ddfa6e33cb44b9bb8e00b4b780a62f4d58ac6c8ba7fe64e7b6abd095653(memPtr)\n        {\n            mstore(add(memPtr, 0), \"eager\")\n        }\n        function copy_literal_to_memory_5d742ddfa6e33cb44b9bb8e00b4b780a62f4d58ac6c8ba7fe64e7b6abd095653() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(5)\n            store_literal_in_memory_5d742ddfa6e33cb44b9bb8e00b4b780a62f4d58ac6c8ba7fe64e7b6abd095653(add(memPtr, 32))\n        }\n        function convert_stringliteral_5d74_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_5d742ddfa6e33cb44b9bb8e00b4b780a62f4d58ac6c8ba7fe64e7b6abd095653()\n        }\n        function store_literal_in_memory_8250c8534ce6b389ce6914b940b123a7cd0a561078463ff8213be6637a9f2a16(memPtr)\n        {\n            mstore(add(memPtr, 0), \"elegant\")\n        }\n        function copy_literal_to_memory_8250c8534ce6b389ce6914b940b123a7cd0a561078463ff8213be6637a9f2a16() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(7)\n            store_literal_in_memory_8250c8534ce6b389ce6914b940b123a7cd0a561078463ff8213be6637a9f2a16(add(memPtr, 32))\n        }\n        function convert_stringliteral_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_8250c8534ce6b389ce6914b940b123a7cd0a561078463ff8213be6637a9f2a16()\n        }\n        function store_literal_in_memory_b26ef7ac450e4259ffec847b7042895abd043d1fa2f0e5d9a3c9aa15a0a317fb(memPtr)\n        {\n            mstore(add(memPtr, 0), \"enchanting\")\n        }\n        function copy_literal_to_memory_b26ef7ac450e4259ffec847b7042895abd043d1fa2f0e5d9a3c9aa15a0a317fb() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(10)\n            store_literal_in_memory_b26ef7ac450e4259ffec847b7042895abd043d1fa2f0e5d9a3c9aa15a0a317fb(add(memPtr, 32))\n        }\n        function convert_stringliteral_b26e_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_b26ef7ac450e4259ffec847b7042895abd043d1fa2f0e5d9a3c9aa15a0a317fb()\n        }\n        function store_literal_in_memory_340775973e4af5fbebf2b05186e56c29c379dc08a9c5ac7038026a379ea1d163(memPtr)\n        {\n            mstore(add(memPtr, 0), \"energetic\")\n        }\n        function copy_literal_to_memory_340775973e4af5fbebf2b05186e56c29c379dc08a9c5ac7038026a379ea1d163() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(9)\n            store_literal_in_memory_340775973e4af5fbebf2b05186e56c29c379dc08a9c5ac7038026a379ea1d163(add(memPtr, 32))\n        }\n        function convert_stringliteral_3407_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_340775973e4af5fbebf2b05186e56c29c379dc08a9c5ac7038026a379ea1d163()\n        }\n        function store_literal_in_memory_443834da146663a6bf65d561cca72e7ab9b290fc95aacea468f7b53b61beab94(memPtr)\n        {\n            mstore(add(memPtr, 0), \"enthusiastic\")\n        }\n        function copy_literal_to_memory_443834da146663a6bf65d561cca72e7ab9b290fc95aacea468f7b53b61beab94() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(12)\n            store_literal_in_memory_443834da146663a6bf65d561cca72e7ab9b290fc95aacea468f7b53b61beab94(add(memPtr, 32))\n        }\n        function convert_stringliteral_4438_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_443834da146663a6bf65d561cca72e7ab9b290fc95aacea468f7b53b61beab94()\n        }\n        function store_literal_in_memory_3a5055d32a4e4f382c7c816b495364f339a6ce52c2a1e6e65de50a184ca87d86(memPtr)\n        {\n            mstore(add(memPtr, 0), \"excellent\")\n        }\n        function copy_literal_to_memory_3a5055d32a4e4f382c7c816b495364f339a6ce52c2a1e6e65de50a184ca87d86() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(9)\n            store_literal_in_memory_3a5055d32a4e4f382c7c816b495364f339a6ce52c2a1e6e65de50a184ca87d86(add(memPtr, 32))\n        }\n        function convert_stringliteral_3a50_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_3a5055d32a4e4f382c7c816b495364f339a6ce52c2a1e6e65de50a184ca87d86()\n        }\n        function store_literal_in_memory_fb02a533aee926472ee042877cd8b1ac8e3dd371d9c35171c3cdbe98d8cfb87b(memPtr)\n        {\n            mstore(add(memPtr, 0), \"exceptional\")\n        }\n        function copy_literal_to_memory_fb02a533aee926472ee042877cd8b1ac8e3dd371d9c35171c3cdbe98d8cfb87b() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(11)\n            store_literal_in_memory_fb02a533aee926472ee042877cd8b1ac8e3dd371d9c35171c3cdbe98d8cfb87b(add(memPtr, 32))\n        }\n        function convert_stringliteral_fb02_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_fb02a533aee926472ee042877cd8b1ac8e3dd371d9c35171c3cdbe98d8cfb87b()\n        }\n        function store_literal_in_memory_60e423ce90b2ef223caa101fba3f62b44e53e70d63c5cc78bfaa977d1fe57d89(memPtr)\n        {\n            mstore(add(memPtr, 0), \"exciting\")\n        }\n        function copy_literal_to_memory_60e423ce90b2ef223caa101fba3f62b44e53e70d63c5cc78bfaa977d1fe57d89() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(8)\n            store_literal_in_memory_60e423ce90b2ef223caa101fba3f62b44e53e70d63c5cc78bfaa977d1fe57d89(add(memPtr, 32))\n        }\n        function convert_stringliteral_60e4_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_60e423ce90b2ef223caa101fba3f62b44e53e70d63c5cc78bfaa977d1fe57d89()\n        }\n        function store_literal_in_memory_741b6b90a80de8a19916f28da33b3c27f83876709a762e05a0e8fcd4d83fb471(memPtr)\n        {\n            mstore(add(memPtr, 0), \"extraordinary\")\n        }\n        function copy_literal_to_memory_741b6b90a80de8a19916f28da33b3c27f83876709a762e05a0e8fcd4d83fb471() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(13)\n            store_literal_in_memory_741b6b90a80de8a19916f28da33b3c27f83876709a762e05a0e8fcd4d83fb471(add(memPtr, 32))\n        }\n        function convert_stringliteral_741b_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_741b6b90a80de8a19916f28da33b3c27f83876709a762e05a0e8fcd4d83fb471()\n        }\n        function store_literal_in_memory_cfb86409eb5056307c135768e4d03aed35b019fac66747080b855446b0cc23ba(memPtr)\n        {\n            mstore(add(memPtr, 0), \"fabulous\")\n        }\n        function copy_literal_to_memory_cfb86409eb5056307c135768e4d03aed35b019fac66747080b855446b0cc23ba() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(8)\n            store_literal_in_memory_cfb86409eb5056307c135768e4d03aed35b019fac66747080b855446b0cc23ba(add(memPtr, 32))\n        }\n        function convert_stringliteral_cfb8_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_cfb86409eb5056307c135768e4d03aed35b019fac66747080b855446b0cc23ba()\n        }\n        function store_literal_in_memory_6ca5eba18837ac3249c4d6af5b60a3d95993b2c169b323cee40b88525cb3a4f3(memPtr)\n        {\n            mstore(add(memPtr, 0), \"fantastic\")\n        }\n        function copy_literal_to_memory_6ca5eba18837ac3249c4d6af5b60a3d95993b2c169b323cee40b88525cb3a4f3() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(9)\n            store_literal_in_memory_6ca5eba18837ac3249c4d6af5b60a3d95993b2c169b323cee40b88525cb3a4f3(add(memPtr, 32))\n        }\n        function convert_stringliteral_6ca5_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_6ca5eba18837ac3249c4d6af5b60a3d95993b2c169b323cee40b88525cb3a4f3()\n        }\n        function store_literal_in_memory_359756020d82d6521114c28e3ef96ae1bc00d6f6183f1e8445dab691814d6f1e(memPtr)\n        {\n            mstore(add(memPtr, 0), \"fearless\")\n        }\n        function copy_literal_to_memory_359756020d82d6521114c28e3ef96ae1bc00d6f6183f1e8445dab691814d6f1e() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(8)\n            store_literal_in_memory_359756020d82d6521114c28e3ef96ae1bc00d6f6183f1e8445dab691814d6f1e(add(memPtr, 32))\n        }\n        function convert_stringliteral_3597_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_359756020d82d6521114c28e3ef96ae1bc00d6f6183f1e8445dab691814d6f1e()\n        }\n        function store_literal_in_memory_0f56f8148484f4b851a82f19103d8d86e0af627c6fe1ddc8ed1d5f73c6bf97d9(memPtr)\n        {\n            mstore(add(memPtr, 0), \"friendly\")\n        }\n        function copy_literal_to_memory_0f56f8148484f4b851a82f19103d8d86e0af627c6fe1ddc8ed1d5f73c6bf97d9() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(8)\n            store_literal_in_memory_0f56f8148484f4b851a82f19103d8d86e0af627c6fe1ddc8ed1d5f73c6bf97d9(add(memPtr, 32))\n        }\n        function convert_stringliteral_0f56_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_0f56f8148484f4b851a82f19103d8d86e0af627c6fe1ddc8ed1d5f73c6bf97d9()\n        }\n        function store_literal_in_memory_4fbce0d2ce0771a07dea6fae20df3b3e04115f10ae5c4f6c8735d3941568a146(memPtr)\n        { mstore(add(memPtr, 0), \"fun\") }\n        function copy_literal_to_memory_4fbce0d2ce0771a07dea6fae20df3b3e04115f10ae5c4f6c8735d3941568a146() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(3)\n            store_literal_in_memory_4fbce0d2ce0771a07dea6fae20df3b3e04115f10ae5c4f6c8735d3941568a146(add(memPtr, 32))\n        }\n        function convert_stringliteral_4fbc_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_4fbce0d2ce0771a07dea6fae20df3b3e04115f10ae5c4f6c8735d3941568a146()\n        }\n        function store_literal_in_memory_54ef6a7164821545c481efa280eb15da756f348426bba625692a485daae58a48(memPtr)\n        {\n            mstore(add(memPtr, 0), \"funny\")\n        }\n        function copy_literal_to_memory_54ef6a7164821545c481efa280eb15da756f348426bba625692a485daae58a48() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(5)\n            store_literal_in_memory_54ef6a7164821545c481efa280eb15da756f348426bba625692a485daae58a48(add(memPtr, 32))\n        }\n        function convert_stringliteral_54ef_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_54ef6a7164821545c481efa280eb15da756f348426bba625692a485daae58a48()\n        }\n        function store_literal_in_memory_229411fc5dd07eb6f9dcbd12ff2f9c026c544f8179401f6e1b22ba7522b17d87(memPtr)\n        {\n            mstore(add(memPtr, 0), \"generous\")\n        }\n        function copy_literal_to_memory_229411fc5dd07eb6f9dcbd12ff2f9c026c544f8179401f6e1b22ba7522b17d87() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(8)\n            store_literal_in_memory_229411fc5dd07eb6f9dcbd12ff2f9c026c544f8179401f6e1b22ba7522b17d87(add(memPtr, 32))\n        }\n        function convert_stringliteral_2294_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_229411fc5dd07eb6f9dcbd12ff2f9c026c544f8179401f6e1b22ba7522b17d87()\n        }\n        function store_literal_in_memory_fb3b406c243f6006ec8c5237fc9da52e17e9cd109f1bc906c90d3391b78d6793(memPtr)\n        {\n            mstore(add(memPtr, 0), \"gentle\")\n        }\n        function copy_literal_to_memory_fb3b406c243f6006ec8c5237fc9da52e17e9cd109f1bc906c90d3391b78d6793() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(6)\n            store_literal_in_memory_fb3b406c243f6006ec8c5237fc9da52e17e9cd109f1bc906c90d3391b78d6793(add(memPtr, 32))\n        }\n        function convert_stringliteral_fb3b_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_fb3b406c243f6006ec8c5237fc9da52e17e9cd109f1bc906c90d3391b78d6793()\n        }\n        function store_literal_in_memory_dfe600352e0793e9e57aa032c4df6f3b4835fd9c16b11a63d687bec5e95d8c9e(memPtr)\n        {\n            mstore(add(memPtr, 0), \"glorious\")\n        }\n        function copy_literal_to_memory_dfe600352e0793e9e57aa032c4df6f3b4835fd9c16b11a63d687bec5e95d8c9e() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(8)\n            store_literal_in_memory_dfe600352e0793e9e57aa032c4df6f3b4835fd9c16b11a63d687bec5e95d8c9e(add(memPtr, 32))\n        }\n        function convert_stringliteral_dfe6_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_dfe600352e0793e9e57aa032c4df6f3b4835fd9c16b11a63d687bec5e95d8c9e()\n        }\n        function store_literal_in_memory_36a6e212ba33011567af160e4533b46661b3b9cf6ae6d98a38004bb91bf4525d(memPtr)\n        {\n            mstore(add(memPtr, 0), \"good\")\n        }\n        function copy_literal_to_memory_36a6e212ba33011567af160e4533b46661b3b9cf6ae6d98a38004bb91bf4525d() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(4)\n            store_literal_in_memory_36a6e212ba33011567af160e4533b46661b3b9cf6ae6d98a38004bb91bf4525d(add(memPtr, 32))\n        }\n        function convert_stringliteral_36a6_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_36a6e212ba33011567af160e4533b46661b3b9cf6ae6d98a38004bb91bf4525d()\n        }\n        function store_literal_in_memory_05039ae8bce6104ea07745d54158d1f4de08f0bef2923ff48869648245a4c895(memPtr)\n        {\n            mstore(add(memPtr, 0), \"gorgeous\")\n        }\n        function copy_literal_to_memory_05039ae8bce6104ea07745d54158d1f4de08f0bef2923ff48869648245a4c895() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(8)\n            store_literal_in_memory_05039ae8bce6104ea07745d54158d1f4de08f0bef2923ff48869648245a4c895(add(memPtr, 32))\n        }\n        function convert_stringliteral_0503_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_05039ae8bce6104ea07745d54158d1f4de08f0bef2923ff48869648245a4c895()\n        }\n        function store_literal_in_memory_ec6282f05924f0cd8b1907fa280d4c2f1bd95f161aff0750879038cc02e3c351(memPtr)\n        {\n            mstore(add(memPtr, 0), \"graceful\")\n        }\n        function copy_literal_to_memory_ec6282f05924f0cd8b1907fa280d4c2f1bd95f161aff0750879038cc02e3c351() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(8)\n            store_literal_in_memory_ec6282f05924f0cd8b1907fa280d4c2f1bd95f161aff0750879038cc02e3c351(add(memPtr, 32))\n        }\n        function convert_stringliteral_ec62_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_ec6282f05924f0cd8b1907fa280d4c2f1bd95f161aff0750879038cc02e3c351()\n        }\n        function store_literal_in_memory_9e0d771b061a47b78282674a30d48ff21ebee607f498cb1bf644c69f8c43cc09(memPtr)\n        {\n            mstore(add(memPtr, 0), \"great\")\n        }\n        function copy_literal_to_memory_9e0d771b061a47b78282674a30d48ff21ebee607f498cb1bf644c69f8c43cc09() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(5)\n            store_literal_in_memory_9e0d771b061a47b78282674a30d48ff21ebee607f498cb1bf644c69f8c43cc09(add(memPtr, 32))\n        }\n        function convert_stringliteral_9e0d_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_9e0d771b061a47b78282674a30d48ff21ebee607f498cb1bf644c69f8c43cc09()\n        }\n        function store_literal_in_memory_73972c90697232c4dedc5c98e01645d84378e838a42e730ab95623a361262eff(memPtr)\n        {\n            mstore(add(memPtr, 0), \"happy\")\n        }\n        function copy_literal_to_memory_73972c90697232c4dedc5c98e01645d84378e838a42e730ab95623a361262eff() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(5)\n            store_literal_in_memory_73972c90697232c4dedc5c98e01645d84378e838a42e730ab95623a361262eff(add(memPtr, 32))\n        }\n        function convert_stringliteral_7397_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_73972c90697232c4dedc5c98e01645d84378e838a42e730ab95623a361262eff()\n        }\n        function store_literal_in_memory_ebe0c4c551cbcb5e20ae7dd0780f3a8e389f469b714f3cae36da94907eada7e6(memPtr)\n        {\n            mstore(add(memPtr, 0), \"harmonious\")\n        }\n        function copy_literal_to_memory_ebe0c4c551cbcb5e20ae7dd0780f3a8e389f469b714f3cae36da94907eada7e6() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(10)\n            store_literal_in_memory_ebe0c4c551cbcb5e20ae7dd0780f3a8e389f469b714f3cae36da94907eada7e6(add(memPtr, 32))\n        }\n        function convert_stringliteral_ebe0_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_ebe0c4c551cbcb5e20ae7dd0780f3a8e389f469b714f3cae36da94907eada7e6()\n        }\n        function store_literal_in_memory_0c64da3764320ce6d9d2191635f418a025b0d4357e8329a8d9baf5bf3ff05d5b(memPtr)\n        {\n            mstore(add(memPtr, 0), \"helpful\")\n        }\n        function copy_literal_to_memory_0c64da3764320ce6d9d2191635f418a025b0d4357e8329a8d9baf5bf3ff05d5b() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(7)\n            store_literal_in_memory_0c64da3764320ce6d9d2191635f418a025b0d4357e8329a8d9baf5bf3ff05d5b(add(memPtr, 32))\n        }\n        function convert_stringliteral_0c64_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_0c64da3764320ce6d9d2191635f418a025b0d4357e8329a8d9baf5bf3ff05d5b()\n        }\n        function store_literal_in_memory_a3d2e66837c314a50a6517b97373e84cc0b80e4823fd25e48fc87dbc2448d43c(memPtr)\n        {\n            mstore(add(memPtr, 0), \"honest\")\n        }\n        function copy_literal_to_memory_a3d2e66837c314a50a6517b97373e84cc0b80e4823fd25e48fc87dbc2448d43c() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(6)\n            store_literal_in_memory_a3d2e66837c314a50a6517b97373e84cc0b80e4823fd25e48fc87dbc2448d43c(add(memPtr, 32))\n        }\n        function convert_stringliteral_a3d2_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_a3d2e66837c314a50a6517b97373e84cc0b80e4823fd25e48fc87dbc2448d43c()\n        }\n        function store_literal_in_memory_aa1458e417d5dc08695c4ddb2a89d5603a1143796d156147e11f5652f9ccc695(memPtr)\n        {\n            mstore(add(memPtr, 0), \"honorable\")\n        }\n        function copy_literal_to_memory_aa1458e417d5dc08695c4ddb2a89d5603a1143796d156147e11f5652f9ccc695() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(9)\n            store_literal_in_memory_aa1458e417d5dc08695c4ddb2a89d5603a1143796d156147e11f5652f9ccc695(add(memPtr, 32))\n        }\n        function convert_stringliteral_aa14_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_aa1458e417d5dc08695c4ddb2a89d5603a1143796d156147e11f5652f9ccc695()\n        }\n        function store_literal_in_memory_bfa1d529f50b58be841623a054c16436ab3e699549f0127cf5300b117c1ec861(memPtr)\n        {\n            mstore(add(memPtr, 0), \"humorous\")\n        }\n        function copy_literal_to_memory_bfa1d529f50b58be841623a054c16436ab3e699549f0127cf5300b117c1ec861() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(8)\n            store_literal_in_memory_bfa1d529f50b58be841623a054c16436ab3e699549f0127cf5300b117c1ec861(add(memPtr, 32))\n        }\n        function convert_stringliteral_bfa1_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_bfa1d529f50b58be841623a054c16436ab3e699549f0127cf5300b117c1ec861()\n        }\n        function store_literal_in_memory_507741418687545d6ad6f09b81bdf932ec031df53ffa602e5138c45ce413e3a0(memPtr)\n        {\n            mstore(add(memPtr, 0), \"imaginative\")\n        }\n        function copy_literal_to_memory_507741418687545d6ad6f09b81bdf932ec031df53ffa602e5138c45ce413e3a0() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(11)\n            store_literal_in_memory_507741418687545d6ad6f09b81bdf932ec031df53ffa602e5138c45ce413e3a0(add(memPtr, 32))\n        }\n        function convert_stringliteral_5077_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_507741418687545d6ad6f09b81bdf932ec031df53ffa602e5138c45ce413e3a0()\n        }\n        function store_literal_in_memory_eda3667290cd825d071e1db7ac257822b014803f79530e6121a30fd916ac6daf(memPtr)\n        {\n            mstore(add(memPtr, 0), \"impressive\")\n        }\n        function copy_literal_to_memory_eda3667290cd825d071e1db7ac257822b014803f79530e6121a30fd916ac6daf() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(10)\n            store_literal_in_memory_eda3667290cd825d071e1db7ac257822b014803f79530e6121a30fd916ac6daf(add(memPtr, 32))\n        }\n        function convert_stringliteral_eda3_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_eda3667290cd825d071e1db7ac257822b014803f79530e6121a30fd916ac6daf()\n        }\n        function store_literal_in_memory_1db8469d38c3b563715d782169131487fb0b3feeefd9e2496cb34a83c62b6875(memPtr)\n        {\n            mstore(add(memPtr, 0), \"independent\")\n        }\n        function copy_literal_to_memory_1db8469d38c3b563715d782169131487fb0b3feeefd9e2496cb34a83c62b6875() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(11)\n            store_literal_in_memory_1db8469d38c3b563715d782169131487fb0b3feeefd9e2496cb34a83c62b6875(add(memPtr, 32))\n        }\n        function convert_stringliteral_1db8_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_1db8469d38c3b563715d782169131487fb0b3feeefd9e2496cb34a83c62b6875()\n        }\n        function store_literal_in_memory_d95ad6ec74b993d119302fb06dfe942c201bf5e3794b8cc36e5b8006ff52617b(memPtr)\n        {\n            mstore(add(memPtr, 0), \"innovative\")\n        }\n        function copy_literal_to_memory_d95ad6ec74b993d119302fb06dfe942c201bf5e3794b8cc36e5b8006ff52617b() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(10)\n            store_literal_in_memory_d95ad6ec74b993d119302fb06dfe942c201bf5e3794b8cc36e5b8006ff52617b(add(memPtr, 32))\n        }\n        function convert_stringliteral_d95a_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_d95ad6ec74b993d119302fb06dfe942c201bf5e3794b8cc36e5b8006ff52617b()\n        }\n        function panic_error_0x00()\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x00)\n            revert(0, 0x24)\n        }\n        function array_dataslot_array_string(ptr) -> data\n        { data := ptr }\n        function array_length_array_string_storage_dyn(value) -> length\n        { length := sload(value) }\n        function cleanup_uint256(value) -> cleaned\n        { cleaned := value }\n        function array_convert_length_to_size_array_string_storage_dyn(length) -> size\n        {\n            size := length\n            size := div(add(length, sub(1, 1)), 1)\n        }\n        function array_dataslot_array_string_storage_dyn(ptr) -> data\n        {\n            data := ptr\n            mstore(0, ptr)\n            data := keccak256(0, 0x20)\n        }\n        function panic_error_0x22()\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n        function extract_byte_array_length(data) -> length\n        {\n            length := div(data, 2)\n            let outOfPlaceEncoding := and(data, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32)) { panic_error_0x22() }\n        }\n        function array_dataslot_string_storage(ptr) -> data\n        {\n            data := ptr\n            mstore(0, ptr)\n            data := keccak256(0, 0x20)\n        }\n        function shift_right_unsigned_dynamic(bits, value) -> newValue\n        { newValue := shr(bits, value) }\n        function partial_clear_storage_slot(slot, offset)\n        {\n            let mask := shift_right_unsigned_dynamic(mul(8, sub(32, offset)), not(0))\n            sstore(slot, and(mask, sload(slot)))\n        }\n        function shift_left_dynamic(bits, value) -> newValue\n        { newValue := shl(bits, value) }\n        function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result\n        {\n            let shiftBits := mul(shiftBytes, 8)\n            let mask := shift_left_dynamic(shiftBits, not(0))\n            toInsert := shift_left_dynamic(shiftBits, toInsert)\n            value := and(value, not(mask))\n            result := or(value, and(toInsert, mask))\n        }\n        function identity(value) -> ret\n        { ret := value }\n        function convert_uint256_to_uint256(value) -> converted\n        {\n            converted := cleanup_uint256(identity(cleanup_uint256(value)))\n        }\n        function prepare_store_uint256(value) -> ret\n        { ret := value }\n        function update_storage_value_uint256_to_uint256(slot, offset, value)\n        {\n            let convertedValue := convert_uint256_to_uint256(value)\n            sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_uint256(convertedValue)))\n        }\n        function zero_value_for_split_uint256() -> ret\n        { ret := 0 }\n        function storage_set_to_zero_uint256(slot, offset)\n        {\n            let zero := zero_value_for_split_uint256()\n            update_storage_value_uint256_to_uint256(slot, offset, zero)\n        }\n        function clear_storage_range_bytes1(start, end)\n        {\n            for { } lt(start, end) { start := add(start, 1) }\n            {\n                storage_set_to_zero_uint256(start, 0)\n            }\n        }\n        function mask_bytes_dynamic(data, bytes) -> result\n        {\n            let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n            result := and(data, mask)\n        }\n        function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n        {\n            data := mask_bytes_dynamic(data, len)\n            used := or(data, mul(2, len))\n        }\n        function transit_byte_array_long_to_short_string_storage(array, len)\n        {\n            let dataPos := array_dataslot_string_storage(array)\n            let data := extract_used_part_and_set_length_of_short_byte_array(sload(dataPos), len)\n            sstore(array, data)\n            sstore(dataPos, 0)\n        }\n        function divide_by_ceil(value) -> result\n        {\n            result := div(add(value, 31), 32)\n        }\n        function byte_array_decrease_size_string_storage(array, data, oldLen, newLen)\n        {\n            switch lt(newLen, 32)\n            case 0 {\n                let arrayDataStart := array_dataslot_string_storage(array)\n                let deleteStart := add(arrayDataStart, divide_by_ceil(newLen))\n                let offset := and(newLen, 0x1f)\n                if offset\n                {\n                    partial_clear_storage_slot(sub(deleteStart, 1), offset)\n                }\n                clear_storage_range_bytes1(deleteStart, add(arrayDataStart, divide_by_ceil(oldLen)))\n                sstore(array, or(mul(2, newLen), 1))\n            }\n            default {\n                switch gt(oldLen, 31)\n                case 1 {\n                    let arrayDataStart_1 := array_dataslot_string_storage(array)\n                    clear_storage_range_bytes1(add(arrayDataStart_1, 1), add(arrayDataStart_1, divide_by_ceil(oldLen)))\n                    transit_byte_array_long_to_short_string_storage(array, newLen)\n                }\n                default {\n                    sstore(array, extract_used_part_and_set_length_of_short_byte_array(data, newLen))\n                }\n            }\n        }\n        function byte_array_increase_size_string_storage(array, data, oldLen, newLen)\n        {\n            if gt(newLen, 18446744073709551616) { panic_error_0x41() }\n            switch lt(oldLen, 32)\n            case 0 {\n                sstore(array, add(mul(2, newLen), 1))\n            }\n            default {\n                switch lt(newLen, 32)\n                case 0 {\n                    data := and(not(0xff), data)\n                    sstore(array_dataslot_string_storage(array), data)\n                    sstore(array, add(mul(2, newLen), 1))\n                }\n                default {\n                    sstore(array, extract_used_part_and_set_length_of_short_byte_array(data, newLen))\n                }\n            }\n        }\n        function resize_array_string_storage(array, newLen)\n        {\n            let data := sload(array)\n            let oldLen := extract_byte_array_length(data)\n            if gt(newLen, oldLen)\n            {\n                byte_array_increase_size_string_storage(array, data, oldLen, newLen)\n            }\n            if lt(newLen, oldLen)\n            {\n                byte_array_decrease_size_string_storage(array, data, oldLen, newLen)\n            }\n        }\n        function clear_storage_array_string(slot)\n        {\n            resize_array_string_storage(slot, 0)\n        }\n        function storage_set_to_zero_string(slot, offset)\n        {\n            if iszero(eq(offset, 0)) { panic_error_0x00() }\n            clear_storage_array_string(slot)\n        }\n        function clear_storage_range_string(start, end)\n        {\n            for { } lt(start, end) { start := add(start, 1) }\n            {\n                storage_set_to_zero_string(start, 0)\n            }\n        }\n        function cleanup_storage_array_end_array_string__dyn(array, len, startIndex)\n        {\n            if lt(startIndex, len)\n            {\n                let oldSlotCount := array_convert_length_to_size_array_string_storage_dyn(len)\n                let newSlotCount := array_convert_length_to_size_array_string_storage_dyn(startIndex)\n                let arrayDataStart := array_dataslot_array_string_storage_dyn(array)\n                let deleteStart := add(arrayDataStart, newSlotCount)\n                let deleteEnd := add(arrayDataStart, oldSlotCount)\n                clear_storage_range_string(deleteStart, deleteEnd)\n            }\n        }\n        function resize_array_array_string_storage_dyn(array, newLen)\n        {\n            if gt(newLen, 18446744073709551616) { panic_error_0x41() }\n            let oldLen := array_length_array_string_storage_dyn(array)\n            sstore(array, newLen)\n            cleanup_storage_array_end_array_string__dyn(array, oldLen, newLen)\n        }\n        function array_length_array_string(value) -> length\n        { length := 0x39 }\n        function read_from_memoryt_string(memPtr) -> value\n        { value := mload(memPtr) }\n        function array_length_string(value) -> length\n        { length := mload(value) }\n        function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                let dataArea := array_dataslot_string_storage(array)\n                let deleteStart := add(dataArea, divide_by_ceil(startIndex))\n                if lt(startIndex, 32) { deleteStart := dataArea }\n                clear_storage_range_bytes1(deleteStart, add(dataArea, divide_by_ceil(len)))\n            }\n        }\n        function copy_byte_array_to_storage_from_string_to_string(slot, src)\n        {\n            let newLen := array_length_string(src)\n            if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            let oldLen := extract_byte_array_length(sload(slot))\n            clean_up_bytearray_end_slots_string_storage(slot, oldLen, newLen)\n            let srcOffset := 0\n            srcOffset := 0x20\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(0x1f))\n                let dstPtr := array_dataslot_string_storage(slot)\n                let i := 0\n                for { } lt(i, loopEnd) { i := add(i, 0x20) }\n                {\n                    sstore(dstPtr, mload(add(src, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, 32)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(src, srcOffset))\n                    sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n                }\n                sstore(slot, add(mul(newLen, 2), 1))\n            }\n            default {\n                let value := 0\n                if newLen\n                {\n                    value := mload(add(src, srcOffset))\n                }\n                sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n        }\n        function update_storage_value_offset_string_to_string(slot, value)\n        {\n            copy_byte_array_to_storage_from_string_to_string(slot, value)\n        }\n        function copy_array_to_storage_from_array_string_to_array_string__dyn(slot, value)\n        {\n            let length := array_length_array_string(value)\n            resize_array_array_string_storage_dyn(slot, length)\n            let srcPtr := array_dataslot_array_string(value)\n            let elementSlot := array_dataslot_array_string_storage_dyn(slot)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 1) }\n            {\n                let stackItem := read_from_memoryt_string(srcPtr)\n                update_storage_value_offset_string_to_string(elementSlot, stackItem)\n                srcPtr := add(srcPtr, 32)\n                elementSlot := add(elementSlot, 1)\n            }\n        }\n        function update_storage_value_offset_array_string_to_array_string__dyn(slot, value)\n        {\n            copy_array_to_storage_from_array_string_to_array_string__dyn(slot, value)\n        }\n        /// @ast-id 74 @src 0:331:1217  \"constructor() {...\"\n        function constructor_MagicWord()\n        {\n            /// @src 0:368:1210  \"[...\"\n            let expr_mpos := allocate_memory_array_array_string(57)\n            let _2_mpos := convert_stringliteral_f853_to_string()\n            write_to_memory_string(add(expr_mpos, 0), _2_mpos)\n            let _3_mpos := convert_stringliteral_d17d_to_string()\n            write_to_memory_string(add(expr_mpos, 32), _3_mpos)\n            let _4_mpos := convert_stringliteral_a3fd_to_string()\n            write_to_memory_string(add(expr_mpos, 64), _4_mpos)\n            let _5_mpos := convert_stringliteral_8ba2_to_string()\n            write_to_memory_string(add(expr_mpos, 96), _5_mpos)\n            let _6_mpos := convert_stringliteral_e3e9_to_string()\n            write_to_memory_string(add(expr_mpos, 128), _6_mpos)\n            let _mpos := convert_stringliteral_1dda_to_string()\n            write_to_memory_string(add(expr_mpos, 160), _mpos)\n            let _8_mpos := convert_stringliteral_b8ca_to_string()\n            write_to_memory_string(add(expr_mpos, 192), _8_mpos)\n            let _9_mpos := convert_stringliteral_d97f_to_string()\n            write_to_memory_string(add(expr_mpos, 224), _9_mpos)\n            let _10_mpos := convert_stringliteral_4fbd_to_string()\n            write_to_memory_string(add(expr_mpos, 256), _10_mpos)\n            let _11_mpos := convert_stringliteral_90ef_to_string()\n            write_to_memory_string(add(expr_mpos, 288), _11_mpos)\n            let _12_mpos := convert_stringliteral_2ea4_to_string()\n            write_to_memory_string(add(expr_mpos, 320), _12_mpos)\n            let _13_mpos := convert_stringliteral_ca18_to_string()\n            write_to_memory_string(add(expr_mpos, 352), _13_mpos)\n            let _14_mpos := convert_stringliteral_49cd_to_string()\n            write_to_memory_string(add(expr_mpos, 384), _14_mpos)\n            let _15_mpos := convert_stringliteral_89ed_to_string()\n            write_to_memory_string(add(expr_mpos, 416), _15_mpos)\n            let _16_mpos := convert_stringliteral_8d26_to_string()\n            write_to_memory_string(add(expr_mpos, 448), _16_mpos)\n            let _17_mpos := convert_stringliteral_678c_to_string()\n            write_to_memory_string(add(expr_mpos, 480), _17_mpos)\n            let _18_mpos := convert_stringliteral_67f9_to_string()\n            write_to_memory_string(add(expr_mpos, 512), _18_mpos)\n            let _19_mpos := convert_stringliteral_d08a_to_string()\n            write_to_memory_string(add(expr_mpos, 544), _19_mpos)\n            let _20_mpos := convert_stringliteral_e9c4_to_string()\n            write_to_memory_string(add(expr_mpos, 576), _20_mpos)\n            let _21_mpos := convert_stringliteral_4825_to_string()\n            write_to_memory_string(add(expr_mpos, 608), _21_mpos)\n            let _22_mpos := convert_stringliteral_45f5_to_string()\n            write_to_memory_string(add(expr_mpos, 640), _22_mpos)\n            let _23_mpos := convert_stringliteral_e5bd_to_string()\n            write_to_memory_string(add(expr_mpos, 672), _23_mpos)\n            let _24_mpos := convert_stringliteral_1758_to_string()\n            write_to_memory_string(add(expr_mpos, 704), _24_mpos)\n            let _25_mpos := convert_stringliteral_604e_to_string()\n            write_to_memory_string(add(expr_mpos, 736), _25_mpos)\n            let _26_mpos := convert_stringliteral_47a6_to_string()\n            write_to_memory_string(add(expr_mpos, 768), _26_mpos)\n            let _27_mpos := convert_stringliteral_5d74_to_string()\n            write_to_memory_string(add(expr_mpos, 800), _27_mpos)\n            let _28_mpos := convert_stringliteral_to_string()\n            write_to_memory_string(add(expr_mpos, 832), _28_mpos)\n            let _29_mpos := convert_stringliteral_b26e_to_string()\n            write_to_memory_string(add(expr_mpos, 864), _29_mpos)\n            let _30_mpos := convert_stringliteral_3407_to_string()\n            write_to_memory_string(add(expr_mpos, 896), _30_mpos)\n            let _31_mpos := convert_stringliteral_4438_to_string()\n            write_to_memory_string(add(expr_mpos, 928), _31_mpos)\n            let _32_mpos := convert_stringliteral_3a50_to_string()\n            write_to_memory_string(add(expr_mpos, 960), _32_mpos)\n            let _33_mpos := convert_stringliteral_fb02_to_string()\n            write_to_memory_string(add(expr_mpos, 992), _33_mpos)\n            let _34_mpos := convert_stringliteral_60e4_to_string()\n            write_to_memory_string(add(expr_mpos, 1024), _34_mpos)\n            let _35_mpos := convert_stringliteral_741b_to_string()\n            write_to_memory_string(add(expr_mpos, 1056), _35_mpos)\n            let _36_mpos := convert_stringliteral_cfb8_to_string()\n            write_to_memory_string(add(expr_mpos, 1088), _36_mpos)\n            let _37_mpos := convert_stringliteral_6ca5_to_string()\n            write_to_memory_string(add(expr_mpos, 1120), _37_mpos)\n            let _38_mpos := convert_stringliteral_3597_to_string()\n            write_to_memory_string(add(expr_mpos, 1152), _38_mpos)\n            let _39_mpos := convert_stringliteral_0f56_to_string()\n            write_to_memory_string(add(expr_mpos, 1184), _39_mpos)\n            let _40_mpos := convert_stringliteral_4fbc_to_string()\n            write_to_memory_string(add(expr_mpos, 1216), _40_mpos)\n            let _41_mpos := convert_stringliteral_54ef_to_string()\n            write_to_memory_string(add(expr_mpos, 1248), _41_mpos)\n            let _42_mpos := convert_stringliteral_2294_to_string()\n            write_to_memory_string(add(expr_mpos, 1280), _42_mpos)\n            let _43_mpos := convert_stringliteral_fb3b_to_string()\n            write_to_memory_string(add(expr_mpos, 1312), _43_mpos)\n            let _44_mpos := convert_stringliteral_dfe6_to_string()\n            write_to_memory_string(add(expr_mpos, 1344), _44_mpos)\n            let _45_mpos := convert_stringliteral_36a6_to_string()\n            write_to_memory_string(add(expr_mpos, 1376), _45_mpos)\n            let _46_mpos := convert_stringliteral_0503_to_string()\n            write_to_memory_string(add(expr_mpos, 1408), _46_mpos)\n            let _47_mpos := convert_stringliteral_ec62_to_string()\n            write_to_memory_string(add(expr_mpos, 1440), _47_mpos)\n            let _48_mpos := convert_stringliteral_9e0d_to_string()\n            write_to_memory_string(add(expr_mpos, 1472), _48_mpos)\n            let _49_mpos := convert_stringliteral_7397_to_string()\n            write_to_memory_string(add(expr_mpos, 1504), _49_mpos)\n            let _50_mpos := convert_stringliteral_ebe0_to_string()\n            write_to_memory_string(add(expr_mpos, 1536), _50_mpos)\n            let _51_mpos := convert_stringliteral_0c64_to_string()\n            write_to_memory_string(add(expr_mpos, 1568), _51_mpos)\n            let _52_mpos := convert_stringliteral_a3d2_to_string()\n            write_to_memory_string(add(expr_mpos, 1600), _52_mpos)\n            let _53_mpos := convert_stringliteral_aa14_to_string()\n            write_to_memory_string(add(expr_mpos, 1632), _53_mpos)\n            let _54_mpos := convert_stringliteral_bfa1_to_string()\n            write_to_memory_string(add(expr_mpos, 1664), _54_mpos)\n            let _55_mpos := convert_stringliteral_5077_to_string()\n            write_to_memory_string(add(expr_mpos, 1696), _55_mpos)\n            let _56_mpos := convert_stringliteral_eda3_to_string()\n            write_to_memory_string(add(expr_mpos, 1728), _56_mpos)\n            let _57_mpos := convert_stringliteral_1db8_to_string()\n            write_to_memory_string(add(expr_mpos, 1760), _57_mpos)\n            let _58_mpos := convert_stringliteral_d95a_to_string()\n            write_to_memory_string(add(expr_mpos, 1792), _58_mpos)\n            /// @src 0:355:1210  \"adjectives = [...\"\n            update_storage_value_offset_array_string_to_array_string__dyn(0x01, expr_mpos)\n        }\n    }\n    /// @use-src 0:\"contracts/MagicWordInteractive.sol\"\n    object \"MagicWord_147_deployed\" {\n        code {\n            {\n                /// @src 0:210:1847  \"contract MagicWord {...\"\n                mstore(64, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let selector := shift_right_unsigned(calldataload(0))\n                    switch selector\n                    case 0x68a0c969 {\n                        external_fun_getCurrentMagicWord()\n                    }\n                    case 0x84ac83cc { external_fun_makeMagicBaby() }\n                    case 0xbf462267 { external_fun_inputMagicWord() }\n                    default { }\n                }\n                revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74()\n            }\n            function shift_right_unsigned(value) -> newValue\n            { newValue := shr(224, value) }\n            function allocate_unbounded() -> memPtr\n            { memPtr := mload(64) }\n            function revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n            { revert(0, 0) }\n            function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n            { revert(0, 0) }\n            function abi_decode(headStart, dataEnd)\n            {\n                if slt(sub(dataEnd, headStart), 0)\n                {\n                    revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n                }\n            }\n            function array_length_string(value) -> length\n            { length := mload(value) }\n            function array_storeLengthForEncoding_string_fromStack(pos, length) -> updated_pos\n            {\n                mstore(pos, length)\n                updated_pos := add(pos, 0x20)\n            }\n            function copy_memory_to_memory_with_cleanup(src, dst, length)\n            {\n                mcopy(dst, src, length)\n                mstore(add(dst, length), 0)\n            }\n            function round_up_to_mul_of(value) -> result\n            {\n                result := and(add(value, 31), not(31))\n            }\n            function abi_encode_string_memory_ptr(value, pos) -> end\n            {\n                let length := array_length_string(value)\n                pos := array_storeLengthForEncoding_string_fromStack(pos, length)\n                copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n                end := add(pos, round_up_to_mul_of(length))\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(add(headStart, 0), sub(tail, headStart))\n                tail := abi_encode_string_memory_ptr(value0, tail)\n            }\n            function external_fun_getCurrentMagicWord()\n            {\n                if callvalue()\n                {\n                    revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n                }\n                abi_decode(4, calldatasize())\n                let ret := fun_getCurrentMagicWord()\n                let memPos := allocate_unbounded()\n                let memEnd := abi_encode_string(memPos, ret)\n                return(memPos, sub(memEnd, memPos))\n            }\n            function external_fun_makeMagicBaby()\n            {\n                if callvalue()\n                {\n                    revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n                }\n                abi_decode(4, calldatasize())\n                let ret := fun_makeMagicBaby()\n                let memPos := allocate_unbounded()\n                let memEnd := abi_encode_string(memPos, ret)\n                return(memPos, sub(memEnd, memPos))\n            }\n            function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db()\n            { revert(0, 0) }\n            function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d()\n            { revert(0, 0) }\n            function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae()\n            { revert(0, 0) }\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, round_up_to_mul_of(size))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function allocate_memory(size) -> memPtr\n            {\n                memPtr := allocate_unbounded()\n                finalize_allocation(memPtr, size)\n            }\n            function array_allocation_size_string(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                size := round_up_to_mul_of(length)\n                size := add(size, 0x20)\n            }\n            function copy_calldata_to_memory_with_cleanup(src, dst, length)\n            {\n                calldatacopy(dst, src, length)\n                mstore(add(dst, length), 0)\n            }\n            function abi_decode_available_length_string(src, length, end) -> array\n            {\n                array := allocate_memory(array_allocation_size_string(length))\n                mstore(array, length)\n                let dst := add(array, 0x20)\n                if gt(add(src, length), end)\n                {\n                    revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae()\n                }\n                copy_calldata_to_memory_with_cleanup(src, dst, length)\n            }\n            function abi_decode_string_memory_ptr(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end))\n                {\n                    revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d()\n                }\n                let length := calldataload(offset)\n                array := abi_decode_available_length_string(add(offset, 0x20), length, end)\n            }\n            function abi_decode_string(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32)\n                {\n                    revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n                }\n                let offset := calldataload(add(headStart, 0))\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db()\n                }\n                value0 := abi_decode_string_memory_ptr(add(headStart, offset), dataEnd)\n            }\n            function abi_encode_tuple(headStart) -> tail\n            { tail := add(headStart, 0) }\n            function external_fun_inputMagicWord()\n            {\n                if callvalue()\n                {\n                    revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n                }\n                let param := abi_decode_string(4, calldatasize())\n                fun_inputMagicWord(param)\n                let memPos := allocate_unbounded()\n                let memEnd := abi_encode_tuple(memPos)\n                return(memPos, sub(memEnd, memPos))\n            }\n            function revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74()\n            { revert(0, 0) }\n            function zero_value_for_split_string() -> ret\n            { ret := 96 }\n            function panic_error_0x22()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(0, 0x24)\n            }\n            function extract_byte_array_length(data) -> length\n            {\n                length := div(data, 2)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32)) { panic_error_0x22() }\n            }\n            function array_storeLengthForEncoding_string(pos, length) -> updated_pos\n            {\n                mstore(pos, length)\n                updated_pos := add(pos, 0x20)\n            }\n            function array_dataslot_string_storage(ptr) -> data\n            {\n                data := ptr\n                mstore(0, ptr)\n                data := keccak256(0, 0x20)\n            }\n            function abi_encode_string_storage(value, pos) -> ret\n            {\n                let slotValue := sload(value)\n                let length := extract_byte_array_length(slotValue)\n                pos := array_storeLengthForEncoding_string(pos, length)\n                switch and(slotValue, 1)\n                case 0 {\n                    mstore(pos, and(slotValue, not(0xff)))\n                    ret := add(pos, mul(0x20, iszero(iszero(length))))\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage(value)\n                    let i := 0\n                    for { } lt(i, length) { i := add(i, 0x20) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, 1)\n                    }\n                    ret := add(pos, i)\n                }\n            }\n            function abi_encodeUpdatedPos_string_storage(value0, pos) -> updatedPos\n            {\n                updatedPos := abi_encode_string_storage(value0, pos)\n            }\n            function copy_array_from_storage_to_memory_string(slot) -> memPtr\n            {\n                memPtr := allocate_unbounded()\n                let end := abi_encodeUpdatedPos_string_storage(slot, memPtr)\n                finalize_allocation(memPtr, sub(end, memPtr))\n            }\n            function convert_array_string_storage_to_string(value) -> converted\n            {\n                converted := copy_array_from_storage_to_memory_string(value)\n            }\n            /// @ast-id 146 @src 0:1745:1845  \"function getCurrentMagicWord() public view returns (string memory) {...\"\n            function fun_getCurrentMagicWord() -> var__mpos\n            {\n                /// @src 0:1797:1810  \"string memory\"\n                let zero_string_mpos := zero_value_for_split_string()\n                var__mpos := zero_string_mpos\n                /// @src 0:1829:1838  \"magicWord\"\n                let _2_slot := 0x00\n                let expr_143_slot := _2_slot\n                /// @src 0:1822:1838  \"return magicWord\"\n                var__mpos := convert_array_string_storage_to_string(expr_143_slot)\n                leave\n            }\n            /// @src 0:210:1847  \"contract MagicWord {...\"\n            function convert_array_string_storage_to_bytes_ptr(value) -> converted\n            { converted := value }\n            function array_length_bytes_storage_ptr(value) -> length\n            {\n                length := sload(value)\n                length := extract_byte_array_length(length)\n            }\n            function cleanup_uint256(value) -> cleaned\n            { cleaned := value }\n            function cleanup_rational_by(value) -> cleaned\n            { cleaned := value }\n            function identity(value) -> ret\n            { ret := value }\n            function convert_rational_by_to_uint256(value) -> converted\n            {\n                converted := cleanup_uint256(identity(cleanup_rational_by(value)))\n            }\n            function store_literal_in_memory_89230867f4b3b162518336e1784c21848da09a0d13eff480a998ac92f7e2abde(memPtr)\n            {\n                mstore(add(memPtr, 0), \"No magic word has been stored ye\")\n                mstore(add(memPtr, 32), \"t\")\n            }\n            function abi_encode_stringliteral_8923(pos) -> end\n            {\n                pos := array_storeLengthForEncoding_string_fromStack(pos, 33)\n                store_literal_in_memory_89230867f4b3b162518336e1784c21848da09a0d13eff480a998ac92f7e2abde(pos)\n                end := add(pos, 64)\n            }\n            function abi_encode_stringliteral(headStart) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(add(headStart, 0), sub(tail, headStart))\n                tail := abi_encode_stringliteral_8923(tail)\n            }\n            function require_helper_stringliteral(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := allocate_unbounded()\n                    mstore(memPtr, shl(229, 4594637))\n                    let end := abi_encode_stringliteral(add(memPtr, 4))\n                    revert(memPtr, sub(end, memPtr))\n                }\n            }\n            function shift_right_0_unsigned(value) -> newValue\n            { newValue := shr(0, value) }\n            function cleanup_from_storage_uint256(value) -> cleaned\n            { cleaned := value }\n            function extract_from_storage_value_offset_uint256(slot_value) -> value\n            {\n                value := cleanup_from_storage_uint256(shift_right_0_unsigned(slot_value))\n            }\n            function read_from_storage_split_offset_uint256(slot) -> value\n            {\n                value := extract_from_storage_value_offset_uint256(sload(slot))\n            }\n            function panic_error_0x11()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x11)\n                revert(0, 0x24)\n            }\n            function increment_uint256(value) -> ret\n            {\n                value := cleanup_uint256(value)\n                if eq(value, not(0)) { panic_error_0x11() }\n                ret := add(value, 1)\n            }\n            function shift_left(value) -> newValue\n            { newValue := shl(0, value) }\n            function update_byte_slice_shift(value, toInsert) -> result\n            {\n                let mask := not(0)\n                toInsert := shift_left(toInsert)\n                value := and(value, not(mask))\n                result := or(value, and(toInsert, mask))\n            }\n            function convert_uint256_to_uint256(value) -> converted\n            {\n                converted := cleanup_uint256(identity(cleanup_uint256(value)))\n            }\n            function prepare_store_uint256(value) -> ret\n            { ret := value }\n            function update_storage_value_offset_uint256_to_uint256(slot, value)\n            {\n                let convertedValue := convert_uint256_to_uint256(value)\n                sstore(slot, update_byte_slice_shift(sload(slot), prepare_store_uint256(convertedValue)))\n            }\n            function leftAlign_uint256(value) -> aligned\n            { aligned := value }\n            function abi_encode_uint256(value, pos)\n            {\n                mstore(pos, leftAlign_uint256(cleanup_uint256(value)))\n            }\n            function cleanup_uint160(value) -> cleaned\n            {\n                cleaned := and(value, sub(shl(160, 1), 1))\n            }\n            function cleanup_address(value) -> cleaned\n            {\n                cleaned := cleanup_uint160(value)\n            }\n            function shift_left_96(value) -> newValue\n            { newValue := shl(96, value) }\n            function leftAlign_uint160(value) -> aligned\n            {\n                aligned := shift_left_96(value)\n            }\n            function leftAlign_address(value) -> aligned\n            {\n                aligned := leftAlign_uint160(value)\n            }\n            function abi_encode_address(value, pos)\n            {\n                mstore(pos, leftAlign_address(cleanup_address(value)))\n            }\n            function abi_encode_packed_uint256_uint256_uint256_address(pos, value0, value1, value2, value3) -> end\n            {\n                abi_encode_uint256(value0, pos)\n                pos := add(pos, 32)\n                abi_encode_uint256(value1, pos)\n                pos := add(pos, 32)\n                abi_encode_uint256(value2, pos)\n                pos := add(pos, 32)\n                abi_encode_address(value3, pos)\n                pos := add(pos, 20)\n                end := pos\n            }\n            function array_dataslot_bytes(ptr) -> data\n            {\n                data := ptr\n                data := add(ptr, 0x20)\n            }\n            function array_length_bytes(value) -> length\n            { length := mload(value) }\n            function convert_bytes32_to_uint256(value) -> converted\n            {\n                converted := convert_uint256_to_uint256(shift_right_0_unsigned(value))\n            }\n            function array_length_array_string_storage_dyn(value) -> length\n            { length := sload(value) }\n            function panic_error_0x12()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x12)\n                revert(0, 0x24)\n            }\n            function mod_uint256(x, y) -> r\n            {\n                x := cleanup_uint256(x)\n                y := cleanup_uint256(y)\n                if iszero(y) { panic_error_0x12() }\n                r := mod(x, y)\n            }\n            function panic_error_0x32()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x32)\n                revert(0, 0x24)\n            }\n            function array_dataslot_array_string_storage_dyn(ptr) -> data\n            {\n                data := ptr\n                mstore(0, ptr)\n                data := keccak256(0, 0x20)\n            }\n            function storage_array_index_access_string__dyn(array, index) -> slot, offset\n            {\n                let arrayLength := array_length_array_string_storage_dyn(array)\n                if iszero(lt(index, arrayLength)) { panic_error_0x32() }\n                let dataArea := array_dataslot_array_string_storage_dyn(array)\n                slot := add(dataArea, mul(index, 1))\n                offset := 0\n            }\n            function array_storeLengthForEncoding_string_nonPadded_inplace(pos, length) -> updated_pos\n            { updated_pos := pos }\n            function abi_encode_string_storage_to_string_nonPadded_inplace(value, pos) -> ret\n            {\n                let slotValue := sload(value)\n                let length := extract_byte_array_length(slotValue)\n                pos := array_storeLengthForEncoding_string_nonPadded_inplace(pos, length)\n                switch and(slotValue, 1)\n                case 0 {\n                    mstore(pos, and(slotValue, not(0xff)))\n                    ret := add(pos, mul(length, iszero(iszero(length))))\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage(value)\n                    let i := 0\n                    for { } lt(i, length) { i := add(i, 0x20) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, 1)\n                    }\n                    ret := add(pos, length)\n                }\n            }\n            function store_literal_in_memory_d639b3d9a5b324c23c8db5eab991fa931cd6d5bfb6cd156a388f5ec87ff08094(memPtr)\n            {\n                mstore(add(memPtr, 0), \" is \")\n            }\n            function abi_encode_stringliteral_d639(pos) -> end\n            {\n                pos := array_storeLengthForEncoding_string_nonPadded_inplace(pos, 4)\n                store_literal_in_memory_d639b3d9a5b324c23c8db5eab991fa931cd6d5bfb6cd156a388f5ec87ff08094(pos)\n                end := add(pos, 4)\n            }\n            function store_literal_in_memory_3275a893b2c93461554cf2a4dd7f413d56decdd6f3fdf0589dbb8bc4fd742386(memPtr)\n            { mstore(add(memPtr, 0), \"!\") }\n            function abi_encode_stringliteral_3275(pos) -> end\n            {\n                pos := array_storeLengthForEncoding_string_nonPadded_inplace(pos, 1)\n                store_literal_in_memory_3275a893b2c93461554cf2a4dd7f413d56decdd6f3fdf0589dbb8bc4fd742386(pos)\n                end := add(pos, 1)\n            }\n            function abi_encode_packed_string_storage_stringliteral_d639_string_stringliteral(pos, value0, value1) -> end\n            {\n                pos := abi_encode_string_storage_to_string_nonPadded_inplace(value0, pos)\n                pos := abi_encode_stringliteral_d639(pos)\n                pos := abi_encode_string_storage_to_string_nonPadded_inplace(value1, pos)\n                pos := abi_encode_stringliteral_3275(pos)\n                end := pos\n            }\n            function convert_array_bytes_to_string(value) -> converted\n            { converted := value }\n            /// @ast-id 138 @src 0:1313:1735  \"function makeMagicBaby() public returns (string memory) {...\"\n            function fun_makeMagicBaby() -> var_mpos\n            {\n                /// @src 0:1354:1367  \"string memory\"\n                let zero_string_memory_ptr_mpos := zero_value_for_split_string()\n                var_mpos := zero_string_memory_ptr_mpos\n                /// @src 0:1393:1402  \"magicWord\"\n                let _4_slot := 0x00\n                let expr_92_slot := _4_slot\n                /// @src 0:1387:1403  \"bytes(magicWord)\"\n                let expr_93_slot := convert_array_string_storage_to_bytes_ptr(expr_92_slot)\n                /// @src 0:1387:1410  \"bytes(magicWord).length\"\n                let expr := array_length_bytes_storage_ptr(expr_93_slot)\n                /// @src 0:1413:1414  \"0\"\n                let expr_1 := 0x00\n                /// @src 0:1387:1414  \"bytes(magicWord).length > 0\"\n                let expr_2 := gt(cleanup_uint256(expr), convert_rational_by_to_uint256(expr_1))\n                /// @src 0:1379:1452  \"require(bytes(magicWord).length > 0, \\\"No magic word has been stored yet\\\")\"\n                require_helper_stringliteral(expr_2)\n                /// @src 0:1471:1478  \"nonce++\"\n                let _1 := read_from_storage_split_offset_uint256(0x02)\n                let _2 := increment_uint256(_1)\n                update_storage_value_offset_uint256_to_uint256(0x02, _2)\n                /// @src 0:1554:1569  \"block.timestamp\"\n                let expr_3 := timestamp()\n                /// @src 0:1571:1587  \"block.prevrandao\"\n                let expr_4 := prevrandao()\n                /// @src 0:1589:1594  \"nonce\"\n                let _3 := read_from_storage_split_offset_uint256(0x02)\n                let expr_5 := _3\n                /// @src 0:1596:1606  \"msg.sender\"\n                let expr_6 := caller()\n                /// @src 0:1537:1607  \"abi.encodePacked(block.timestamp, block.prevrandao, nonce, msg.sender)\"\n                let expr_117_mpos := allocate_unbounded()\n                let _4 := add(expr_117_mpos, 0x20)\n                let _5 := abi_encode_packed_uint256_uint256_uint256_address(_4, expr_3, expr_4, expr_5, expr_6)\n                mstore(expr_117_mpos, sub(_5, add(expr_117_mpos, 0x20)))\n                finalize_allocation(expr_117_mpos, sub(_5, expr_117_mpos))\n                /// @src 0:1527:1608  \"keccak256(abi.encodePacked(block.timestamp, block.prevrandao, nonce, msg.sender))\"\n                let expr_7 := keccak256(array_dataslot_bytes(expr_117_mpos), array_length_bytes(expr_117_mpos))\n                /// @src 0:1519:1609  \"uint256(keccak256(abi.encodePacked(block.timestamp, block.prevrandao, nonce, msg.sender)))\"\n                let expr_8 := convert_bytes32_to_uint256(expr_7)\n                /// @src 0:1612:1622  \"adjectives\"\n                let _10_slot := 0x01\n                let expr_120_slot := _10_slot\n                /// @src 0:1612:1629  \"adjectives.length\"\n                let expr_9 := array_length_array_string_storage_dyn(expr_120_slot)\n                /// @src 0:1519:1629  \"uint256(keccak256(abi.encodePacked(block.timestamp, block.prevrandao, nonce, msg.sender))) % adjectives.length\"\n                let expr_10 := mod_uint256(expr_8, expr_9)\n                /// @src 0:1497:1629  \"uint256 randomIndex = uint256(keccak256(abi.encodePacked(block.timestamp, block.prevrandao, nonce, msg.sender))) % adjectives.length\"\n                let var_randomIndex := expr_10\n                /// @src 0:1679:1688  \"magicWord\"\n                let _11_slot := 0x00\n                let expr_128_slot := _11_slot\n                /// @src 0:1698:1708  \"adjectives\"\n                let _slot := 0x01\n                let expr_130_slot := _slot\n                /// @src 0:1709:1720  \"randomIndex\"\n                let _6 := var_randomIndex\n                let expr_11 := _6\n                /// @src 0:1698:1721  \"adjectives[randomIndex]\"\n                let _7, _8 := storage_array_index_access_string__dyn(expr_130_slot, expr_11)\n                let _16_slot := _7\n                let expr_slot := _16_slot\n                /// @src 0:1662:1727  \"abi.encodePacked(magicWord, \\\" is \\\", adjectives[randomIndex], \\\"!\\\")\"\n                let expr_mpos := allocate_unbounded()\n                let _9 := add(expr_mpos, 0x20)\n                let _10 := abi_encode_packed_string_storage_stringliteral_d639_string_stringliteral(_9, expr_128_slot, expr_slot)\n                mstore(expr_mpos, sub(_10, add(expr_mpos, 0x20)))\n                finalize_allocation(expr_mpos, sub(_10, expr_mpos))\n                /// @src 0:1655:1728  \"string(abi.encodePacked(magicWord, \\\" is \\\", adjectives[randomIndex], \\\"!\\\"))\"\n                let expr_135_mpos := convert_array_bytes_to_string(expr_mpos)\n                /// @src 0:1648:1728  \"return string(abi.encodePacked(magicWord, \\\" is \\\", adjectives[randomIndex], \\\"!\\\"))\"\n                var_mpos := expr_135_mpos\n                leave\n            }\n            /// @src 0:210:1847  \"contract MagicWord {...\"\n            function divide_by_ceil(value) -> result\n            {\n                result := div(add(value, 31), 32)\n            }\n            function shift_left_dynamic(bits, value) -> newValue\n            { newValue := shl(bits, value) }\n            function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result\n            {\n                let shiftBits := mul(shiftBytes, 8)\n                let mask := shift_left_dynamic(shiftBits, not(0))\n                toInsert := shift_left_dynamic(shiftBits, toInsert)\n                value := and(value, not(mask))\n                result := or(value, and(toInsert, mask))\n            }\n            function update_storage_value_uint256_to_uint256(slot, offset, value)\n            {\n                let convertedValue := convert_uint256_to_uint256(value)\n                sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_uint256(convertedValue)))\n            }\n            function zero_value_for_split_uint256() -> ret\n            { ret := 0 }\n            function storage_set_to_zero_uint256(slot, offset)\n            {\n                let zero := zero_value_for_split_uint256()\n                update_storage_value_uint256_to_uint256(slot, offset, zero)\n            }\n            function clear_storage_range_bytes1(start, end)\n            {\n                for { } lt(start, end) { start := add(start, 1) }\n                {\n                    storage_set_to_zero_uint256(start, 0)\n                }\n            }\n            function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n            {\n                if gt(len, 31)\n                {\n                    let dataArea := array_dataslot_string_storage(array)\n                    let deleteStart := add(dataArea, divide_by_ceil(startIndex))\n                    if lt(startIndex, 32) { deleteStart := dataArea }\n                    clear_storage_range_bytes1(deleteStart, add(dataArea, divide_by_ceil(len)))\n                }\n            }\n            function shift_right_unsigned_dynamic(bits, value) -> newValue\n            { newValue := shr(bits, value) }\n            function mask_bytes_dynamic(data, bytes) -> result\n            {\n                let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n                result := and(data, mask)\n            }\n            function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n            {\n                data := mask_bytes_dynamic(data, len)\n                used := or(data, mul(2, len))\n            }\n            function copy_byte_array_to_storage_from_string_to_string(slot, src)\n            {\n                let newLen := array_length_string(src)\n                if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n                let oldLen := extract_byte_array_length(sload(slot))\n                clean_up_bytearray_end_slots_string_storage(slot, oldLen, newLen)\n                let srcOffset := 0\n                srcOffset := 0x20\n                switch gt(newLen, 31)\n                case 1 {\n                    let loopEnd := and(newLen, not(0x1f))\n                    let dstPtr := array_dataslot_string_storage(slot)\n                    let i := 0\n                    for { } lt(i, loopEnd) { i := add(i, 0x20) }\n                    {\n                        sstore(dstPtr, mload(add(src, srcOffset)))\n                        dstPtr := add(dstPtr, 1)\n                        srcOffset := add(srcOffset, 32)\n                    }\n                    if lt(loopEnd, newLen)\n                    {\n                        let lastValue := mload(add(src, srcOffset))\n                        sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n                    }\n                    sstore(slot, add(mul(newLen, 2), 1))\n                }\n                default {\n                    let value := 0\n                    if newLen\n                    {\n                        value := mload(add(src, srcOffset))\n                    }\n                    sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n                }\n            }\n            function update_storage_value_offset_string_to_string(slot, value)\n            {\n                copy_byte_array_to_storage_from_string_to_string(slot, value)\n            }\n            /// @ast-id 84 @src 0:1223:1307  \"function inputMagicWord(string memory word) public {...\"\n            function fun_inputMagicWord(var_word_mpos)\n            {\n                /// @src 0:1296:1300  \"word\"\n                let _mpos := var_word_mpos\n                let expr_80_mpos := _mpos\n                /// @src 0:1284:1300  \"magicWord = word\"\n                update_storage_value_offset_string_to_string(0x00, expr_80_mpos)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220e17582f7f75a7acd9dac7f54e2e21f24288ab55b4bf483c43c92488f76d4c7b864736f6c634300081c0033\"\n    }\n}\n",
					"hash": "a2008bff8741eafb98dda761640adff3d9592334f0358b492d6301ee25c4589f",
					"factoryDependencies": {}
				}
			}
		},
		"sources": {
			"contracts/MagicWordInteractive.sol": {
				"id": 0,
				"ast": {
					"absolutePath": "contracts/MagicWordInteractive.sol",
					"exportedSymbols": {
						"MagicWord": [
							147
						]
					},
					"id": 148,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".2",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MagicWord",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "70:139:0",
								"text": " @title MagicWord\n @dev Store za magic word and get za magic sentence\n @custom:dev-run-script ./scripts/deploy_with_ethers.ts"
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147
							],
							"name": "MagicWord",
							"nameLocation": "219:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "magicWord",
									"nameLocation": "251:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "236:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 3,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "236:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "adjectives",
									"nameLocation": "283:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "266:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
										"typeString": "string[]"
									},
									"typeName": {
										"baseType": {
											"id": 5,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "266:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"id": 6,
										"nodeType": "ArrayTypeName",
										"src": "266:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
											"typeString": "string[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 9,
									"mutability": "mutable",
									"name": "nonce",
									"nameLocation": "315:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "299:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "299:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "345:872:0",
										"statements": [
											{
												"expression": {
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 12,
														"name": "adjectives",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "355:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
															"typeString": "string storage ref[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"hexValue": "616d617a696e67",
																"id": 13,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "382:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_f8539fc696bd04f73891493700ec2d170b088f79c2a2e9e7f76261960fe40929",
																	"typeString": "literal_string \"amazing\""
																},
																"value": "amazing"
															},
															{
																"hexValue": "617765736f6d65",
																"id": 14,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "393:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d17d1d80d5d7a434b56ee59bc2ed8f0fd2a890dfba40fc63344b9c3654c935ee",
																	"typeString": "literal_string \"awesome\""
																},
																"value": "awesome"
															},
															{
																"hexValue": "6272696c6c69616e74",
																"id": 15,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "404:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a3fd1d08b6a60a7b87db8fab8c204c18f4f5c424b2adce1ac22549fbd176b2ef",
																	"typeString": "literal_string \"brilliant\""
																},
																"value": "brilliant"
															},
															{
																"hexValue": "62656175746966756c",
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "417:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_8ba2c0afb7b1f61861859c622e5f304cadb3d405571f1ad8f0cc54d6814a4c89",
																	"typeString": "literal_string \"beautiful\""
																},
																"value": "beautiful"
															},
															{
																"hexValue": "6272617665",
																"id": 17,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "430:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_e3e90daa6a58ae029a7000d6cc00698775d4b20492e71d5126fada73256f0f26",
																	"typeString": "literal_string \"brave\""
																},
																"value": "brave"
															},
															{
																"hexValue": "626f6c64",
																"id": 18,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "452:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_1dda021d0a424dcb3ec1956b8a8242f8517d0e52c486bd98f6f2494e0b453723",
																	"typeString": "literal_string \"bold\""
																},
																"value": "bold"
															},
															{
																"hexValue": "627269676874",
																"id": 19,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "460:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_b8cafa17a973c2782862a1d8d21def2351c001583aebec26db163cccdbb5b7a9",
																	"typeString": "literal_string \"bright\""
																},
																"value": "bright"
															},
															{
																"hexValue": "63616c6d",
																"id": 20,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "470:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d97fa8a7daee87d313c29ec9b478b3b4bc3118051c7625d0f2fc2ee7acc76406",
																	"typeString": "literal_string \"calm\""
																},
																"value": "calm"
															},
															{
																"hexValue": "636861726d696e67",
																"id": 21,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "478:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4fbdd45f5c4c780ffb76ed071e1ce5d54c26bf7566871213f1d327e78a08fb7a",
																	"typeString": "literal_string \"charming\""
																},
																"value": "charming"
															},
															{
																"hexValue": "636865657266756c",
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "490:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_90ef6ec615b551598056285df783f91a63cea34aadf77653161fcef13dd34e69",
																	"typeString": "literal_string \"cheerful\""
																},
																"value": "cheerful"
															},
															{
																"hexValue": "636c65766572",
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "515:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_2ea4ed0ce53f131af414c418adc10a49b97c1e5ac17b578e486542a24939d749",
																	"typeString": "literal_string \"clever\""
																},
																"value": "clever"
															},
															{
																"hexValue": "636f6c6f7266756c",
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "525:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_ca187a0a5c09dd0c4093639a372e92eaff2f1a12252fff1411f153c440c5084e",
																	"typeString": "literal_string \"colorful\""
																},
																"value": "colorful"
															},
															{
																"hexValue": "636f6d666f727461626c65",
																"id": 25,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "537:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_49cda4a3dbd12d6fb5336bb26bdcc463622acf8098818055aba4d7cc2e5f65b0",
																	"typeString": "literal_string \"comfortable\""
																},
																"value": "comfortable"
															},
															{
																"hexValue": "636f6e666964656e74",
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "552:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_89edccfc23d8808df57bf67342ee932f75d02d5c1c2b0cda1bb5676c2331ca8c",
																	"typeString": "literal_string \"confident\""
																},
																"value": "confident"
															},
															{
																"hexValue": "636f6e7369646572617465",
																"id": 27,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "565:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_8d266ff1e2ad150484992fb7b8ab7a55aad186c72d4f02d5f16b0d02f505904e",
																	"typeString": "literal_string \"considerate\""
																},
																"value": "considerate"
															},
															{
																"hexValue": "636f6f6c",
																"id": 28,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "593:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_678c189fde5058554d934d6af17e41750fa2a94b61371c5ea958a7595e146324",
																	"typeString": "literal_string \"cool\""
																},
																"value": "cool"
															},
															{
																"hexValue": "636f75726167656f7573",
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "601:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_67f94db9ff3a85d6e55122058e8ddc74619775d114f31e78e411c9ea5b264886",
																	"typeString": "literal_string \"courageous\""
																},
																"value": "courageous"
															},
															{
																"hexValue": "6372656174697665",
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "615:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d08ac36f519ee359a2a193611e1643e0d2c9d4ad9631f683fccd3b4a13a5b717",
																	"typeString": "literal_string \"creative\""
																},
																"value": "creative"
															},
															{
																"hexValue": "637572696f7573",
																"id": 31,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "627:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_e9c4fceab5083dfebe07d8696a1281dcece88f36770ecc5e10300ebe6b4c46a1",
																	"typeString": "literal_string \"curious\""
																},
																"value": "curious"
															},
															{
																"hexValue": "646172696e67",
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "638:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4825842dc9b28fa3667c9ae8fc1ab0085990e0ec28564abf43236904483b92a4",
																	"typeString": "literal_string \"daring\""
																},
																"value": "daring"
															},
															{
																"hexValue": "64617a7a6c696e67",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "661:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_45f58f1b8249771cda53daeee63ca67300dd8092dfe0a7fc709cdfcfb4cc1172",
																	"typeString": "literal_string \"dazzling\""
																},
																"value": "dazzling"
															},
															{
																"hexValue": "64656c6967687466756c",
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "673:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_e5bd8e18fa682c814a6117f0308defadda65df120d272f2f40913a6137f15bfa",
																	"typeString": "literal_string \"delightful\""
																},
																"value": "delightful"
															},
															{
																"hexValue": "64657465726d696e6564",
																"id": 35,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "687:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_1758b5795aee2fffe4ad961402d0eb005f1bd7e678a879f6533a09c5ea1422fe",
																	"typeString": "literal_string \"determined\""
																},
																"value": "determined"
															},
															{
																"hexValue": "64696c6967656e74",
																"id": 36,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "701:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_604e9638708be1d29143adc17fde6da35d723f550eec6d2340b7efb6343ba7e4",
																	"typeString": "literal_string \"diligent\""
																},
																"value": "diligent"
															},
															{
																"hexValue": "64796e616d6963",
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "713:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_47a6130681d8220ba3d4c0a50de139d22039c5629024c598d023ccca8470c25c",
																	"typeString": "literal_string \"dynamic\""
																},
																"value": "dynamic"
															},
															{
																"hexValue": "6561676572",
																"id": 38,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "737:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_5d742ddfa6e33cb44b9bb8e00b4b780a62f4d58ac6c8ba7fe64e7b6abd095653",
																	"typeString": "literal_string \"eager\""
																},
																"value": "eager"
															},
															{
																"hexValue": "656c6567616e74",
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "746:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_8250c8534ce6b389ce6914b940b123a7cd0a561078463ff8213be6637a9f2a16",
																	"typeString": "literal_string \"elegant\""
																},
																"value": "elegant"
															},
															{
																"hexValue": "656e6368616e74696e67",
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "757:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_b26ef7ac450e4259ffec847b7042895abd043d1fa2f0e5d9a3c9aa15a0a317fb",
																	"typeString": "literal_string \"enchanting\""
																},
																"value": "enchanting"
															},
															{
																"hexValue": "656e65726765746963",
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "771:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_340775973e4af5fbebf2b05186e56c29c379dc08a9c5ac7038026a379ea1d163",
																	"typeString": "literal_string \"energetic\""
																},
																"value": "energetic"
															},
															{
																"hexValue": "656e74687573696173746963",
																"id": 42,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "784:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_443834da146663a6bf65d561cca72e7ab9b290fc95aacea468f7b53b61beab94",
																	"typeString": "literal_string \"enthusiastic\""
																},
																"value": "enthusiastic"
															},
															{
																"hexValue": "657863656c6c656e74",
																"id": 43,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "813:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_3a5055d32a4e4f382c7c816b495364f339a6ce52c2a1e6e65de50a184ca87d86",
																	"typeString": "literal_string \"excellent\""
																},
																"value": "excellent"
															},
															{
																"hexValue": "657863657074696f6e616c",
																"id": 44,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "826:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_fb02a533aee926472ee042877cd8b1ac8e3dd371d9c35171c3cdbe98d8cfb87b",
																	"typeString": "literal_string \"exceptional\""
																},
																"value": "exceptional"
															},
															{
																"hexValue": "6578636974696e67",
																"id": 45,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "841:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_60e423ce90b2ef223caa101fba3f62b44e53e70d63c5cc78bfaa977d1fe57d89",
																	"typeString": "literal_string \"exciting\""
																},
																"value": "exciting"
															},
															{
																"hexValue": "65787472616f7264696e617279",
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "853:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_741b6b90a80de8a19916f28da33b3c27f83876709a762e05a0e8fcd4d83fb471",
																	"typeString": "literal_string \"extraordinary\""
																},
																"value": "extraordinary"
															},
															{
																"hexValue": "666162756c6f7573",
																"id": 47,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "870:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_cfb86409eb5056307c135768e4d03aed35b019fac66747080b855446b0cc23ba",
																	"typeString": "literal_string \"fabulous\""
																},
																"value": "fabulous"
															},
															{
																"hexValue": "66616e746173746963",
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "895:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_6ca5eba18837ac3249c4d6af5b60a3d95993b2c169b323cee40b88525cb3a4f3",
																	"typeString": "literal_string \"fantastic\""
																},
																"value": "fantastic"
															},
															{
																"hexValue": "666561726c657373",
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "908:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_359756020d82d6521114c28e3ef96ae1bc00d6f6183f1e8445dab691814d6f1e",
																	"typeString": "literal_string \"fearless\""
																},
																"value": "fearless"
															},
															{
																"hexValue": "667269656e646c79",
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "920:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_0f56f8148484f4b851a82f19103d8d86e0af627c6fe1ddc8ed1d5f73c6bf97d9",
																	"typeString": "literal_string \"friendly\""
																},
																"value": "friendly"
															},
															{
																"hexValue": "66756e",
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "932:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4fbce0d2ce0771a07dea6fae20df3b3e04115f10ae5c4f6c8735d3941568a146",
																	"typeString": "literal_string \"fun\""
																},
																"value": "fun"
															},
															{
																"hexValue": "66756e6e79",
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "939:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_54ef6a7164821545c481efa280eb15da756f348426bba625692a485daae58a48",
																	"typeString": "literal_string \"funny\""
																},
																"value": "funny"
															},
															{
																"hexValue": "67656e65726f7573",
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "961:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_229411fc5dd07eb6f9dcbd12ff2f9c026c544f8179401f6e1b22ba7522b17d87",
																	"typeString": "literal_string \"generous\""
																},
																"value": "generous"
															},
															{
																"hexValue": "67656e746c65",
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "973:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_fb3b406c243f6006ec8c5237fc9da52e17e9cd109f1bc906c90d3391b78d6793",
																	"typeString": "literal_string \"gentle\""
																},
																"value": "gentle"
															},
															{
																"hexValue": "676c6f72696f7573",
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "983:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_dfe600352e0793e9e57aa032c4df6f3b4835fd9c16b11a63d687bec5e95d8c9e",
																	"typeString": "literal_string \"glorious\""
																},
																"value": "glorious"
															},
															{
																"hexValue": "676f6f64",
																"id": 56,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "995:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_36a6e212ba33011567af160e4533b46661b3b9cf6ae6d98a38004bb91bf4525d",
																	"typeString": "literal_string \"good\""
																},
																"value": "good"
															},
															{
																"hexValue": "676f7267656f7573",
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1003:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_05039ae8bce6104ea07745d54158d1f4de08f0bef2923ff48869648245a4c895",
																	"typeString": "literal_string \"gorgeous\""
																},
																"value": "gorgeous"
															},
															{
																"hexValue": "677261636566756c",
																"id": 58,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1028:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_ec6282f05924f0cd8b1907fa280d4c2f1bd95f161aff0750879038cc02e3c351",
																	"typeString": "literal_string \"graceful\""
																},
																"value": "graceful"
															},
															{
																"hexValue": "6772656174",
																"id": 59,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1040:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_9e0d771b061a47b78282674a30d48ff21ebee607f498cb1bf644c69f8c43cc09",
																	"typeString": "literal_string \"great\""
																},
																"value": "great"
															},
															{
																"hexValue": "6861707079",
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1049:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_73972c90697232c4dedc5c98e01645d84378e838a42e730ab95623a361262eff",
																	"typeString": "literal_string \"happy\""
																},
																"value": "happy"
															},
															{
																"hexValue": "6861726d6f6e696f7573",
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1058:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_ebe0c4c551cbcb5e20ae7dd0780f3a8e389f469b714f3cae36da94907eada7e6",
																	"typeString": "literal_string \"harmonious\""
																},
																"value": "harmonious"
															},
															{
																"hexValue": "68656c7066756c",
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1072:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_0c64da3764320ce6d9d2191635f418a025b0d4357e8329a8d9baf5bf3ff05d5b",
																	"typeString": "literal_string \"helpful\""
																},
																"value": "helpful"
															},
															{
																"hexValue": "686f6e657374",
																"id": 63,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1096:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a3d2e66837c314a50a6517b97373e84cc0b80e4823fd25e48fc87dbc2448d43c",
																	"typeString": "literal_string \"honest\""
																},
																"value": "honest"
															},
															{
																"hexValue": "686f6e6f7261626c65",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1106:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_aa1458e417d5dc08695c4ddb2a89d5603a1143796d156147e11f5652f9ccc695",
																	"typeString": "literal_string \"honorable\""
																},
																"value": "honorable"
															},
															{
																"hexValue": "68756d6f726f7573",
																"id": 65,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1119:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_bfa1d529f50b58be841623a054c16436ab3e699549f0127cf5300b117c1ec861",
																	"typeString": "literal_string \"humorous\""
																},
																"value": "humorous"
															},
															{
																"hexValue": "696d6167696e6174697665",
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1131:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_507741418687545d6ad6f09b81bdf932ec031df53ffa602e5138c45ce413e3a0",
																	"typeString": "literal_string \"imaginative\""
																},
																"value": "imaginative"
															},
															{
																"hexValue": "696d7072657373697665",
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1146:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_eda3667290cd825d071e1db7ac257822b014803f79530e6121a30fd916ac6daf",
																	"typeString": "literal_string \"impressive\""
																},
																"value": "impressive"
															},
															{
																"hexValue": "696e646570656e64656e74",
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1173:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_1db8469d38c3b563715d782169131487fb0b3feeefd9e2496cb34a83c62b6875",
																	"typeString": "literal_string \"independent\""
																},
																"value": "independent"
															},
															{
																"hexValue": "696e6e6f766174697665",
																"id": 69,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1188:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d95ad6ec74b993d119302fb06dfe942c201bf5e3794b8cc36e5b8006ff52617b",
																	"typeString": "literal_string \"innovative\""
																},
																"value": "innovative"
															}
														],
														"id": 70,
														"isConstant": false,
														"isInlineArray": true,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "368:842:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_string_memory_ptr_$57_memory_ptr",
															"typeString": "string memory[57] memory"
														}
													},
													"src": "355:855:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
														"typeString": "string storage ref[] storage ref"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "355:855:0"
											}
										]
									},
									"id": 74,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "342:2:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "345:0:0"
									},
									"scope": 147,
									"src": "331:886:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1274:33:0",
										"statements": [
											{
												"expression": {
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 79,
														"name": "magicWord",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "1284:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 80,
														"name": "word",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "1296:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1284:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "1284:16:0"
											}
										]
									},
									"functionSelector": "bf462267",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "inputMagicWord",
									"nameLocation": "1232:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "word",
												"nameLocation": "1261:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1247:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 75,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1247:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:20:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1274:0:0"
									},
									"scope": 147,
									"src": "1223:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "1369:366:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 92,
																			"name": "magicWord",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4,
																			"src": "1393:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage",
																				"typeString": "string storage ref"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_storage",
																				"typeString": "string storage ref"
																			}
																		],
																		"id": 91,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1387:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 90,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "1387:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1387:16:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes storage pointer"
																	}
																},
																"id": 94,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1404:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1387:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 95,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1413:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1387:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f206d6167696320776f726420686173206265656e2073746f72656420796574",
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1416:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_89230867f4b3b162518336e1784c21848da09a0d13eff480a998ac92f7e2abde",
																"typeString": "literal_string \"No magic word has been stored yet\""
															},
															"value": "No magic word has been stored yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_89230867f4b3b162518336e1784c21848da09a0d13eff480a998ac92f7e2abde",
																"typeString": "literal_string \"No magic word has been stored yet\""
															}
														],
														"id": 89,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1379:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1379:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "1379:73:0"
											},
											{
												"expression": {
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1471:7:0",
													"subExpression": {
														"id": 100,
														"name": "nonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "1471:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 102,
												"nodeType": "ExpressionStatement",
												"src": "1471:7:0"
											},
											{
												"assignments": [
													104
												],
												"declarations": [
													{
														"constant": false,
														"id": 104,
														"mutability": "mutable",
														"name": "randomIndex",
														"nameLocation": "1505:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 137,
														"src": "1497:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 103,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1497:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 123,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 110,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "1554:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 111,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1560:9:0",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "1554:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"expression": {
																					"id": 112,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "1571:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 113,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1577:10:0",
																				"memberName": "prevrandao",
																				"nodeType": "MemberAccess",
																				"src": "1571:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 114,
																				"name": "nonce",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 9,
																				"src": "1589:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"expression": {
																					"id": 115,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "1596:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 116,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1600:6:0",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "1596:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 108,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "1537:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "1541:12:0",
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "1537:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1537:70:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 107,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "1527:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1527:81:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1519:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 105,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1519:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1519:90:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"expression": {
															"id": 120,
															"name": "adjectives",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "1612:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
																"typeString": "string storage ref[] storage ref"
															}
														},
														"id": 121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1623:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1612:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1519:110:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1497:132:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 128,
																	"name": "magicWord",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4,
																	"src": "1679:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																{
																	"hexValue": "20697320",
																	"id": 129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1690:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d639b3d9a5b324c23c8db5eab991fa931cd6d5bfb6cd156a388f5ec87ff08094",
																		"typeString": "literal_string \" is \""
																	},
																	"value": " is "
																},
																{
																	"baseExpression": {
																		"id": 130,
																		"name": "adjectives",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 7,
																		"src": "1698:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
																			"typeString": "string storage ref[] storage ref"
																		}
																	},
																	"id": 132,
																	"indexExpression": {
																		"id": 131,
																		"name": "randomIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 104,
																		"src": "1709:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1698:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																{
																	"hexValue": "21",
																	"id": 133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1723:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_3275a893b2c93461554cf2a4dd7f413d56decdd6f3fdf0589dbb8bc4fd742386",
																		"typeString": "literal_string \"!\""
																	},
																	"value": "!"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d639b3d9a5b324c23c8db5eab991fa931cd6d5bfb6cd156a388f5ec87ff08094",
																		"typeString": "literal_string \" is \""
																	},
																	{
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_3275a893b2c93461554cf2a4dd7f413d56decdd6f3fdf0589dbb8bc4fd742386",
																		"typeString": "literal_string \"!\""
																	}
																],
																"expression": {
																	"id": 126,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1662:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1666:12:0",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1662:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1662:65:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 125,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1655:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 124,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1655:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1655:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 88,
												"id": 136,
												"nodeType": "Return",
												"src": "1648:80:0"
											}
										]
									},
									"functionSelector": "84ac83cc",
									"id": 138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "makeMagicBaby",
									"nameLocation": "1322:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1335:2:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "1354:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 86,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1354:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1353:15:0"
									},
									"scope": 147,
									"src": "1313:422:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "1812:33:0",
										"statements": [
											{
												"expression": {
													"id": 143,
													"name": "magicWord",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4,
													"src": "1829:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 142,
												"id": 144,
												"nodeType": "Return",
												"src": "1822:16:0"
											}
										]
									},
									"functionSelector": "68a0c969",
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentMagicWord",
									"nameLocation": "1754:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:0"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "1797:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 140,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1797:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1796:15:0"
									},
									"scope": 147,
									"src": "1745:100:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 148,
							"src": "210:1637:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:1810:0"
				}
			}
		},
		"errors": [],
		"version": "0.8.28",
		"long_version": "0.8.28+commit.7893614a.Emscripten.clang",
		"revive_version": "0.1.0-dev.12+commit.66f9a4d.llvm-18.1.8"
	}
}