{
	"id": "ca85786b884b2b9be74d99c33177b186",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MagicWord.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.8.2 <0.9.0;\n\n/**\n * @title MagicWord\n * @dev store zah magic word get back zah magic sentence!\n * @custom:dev-run-script ./scripts/deploy_with_ethers.ts\n */\ncontract MagicWord {\n\n    string private magicWord;\n    string[] private adjectives;\n    \n    constructor() {\n        // array of za magic adjectives baby!!\n        adjectives = [\n            \"amazing\", \"awesome\", \"brilliant\", \"beautiful\", \"brave\", \n            \"bold\", \"bright\", \"calm\", \"charming\", \"cheerful\", \n            \"clever\", \"colorful\", \"comfortable\", \"confident\", \"considerate\", \n            \"cool\", \"courageous\", \"creative\", \"curious\", \"daring\", \n            \"dazzling\", \"delightful\", \"determined\", \"diligent\", \"dynamic\", \n            \"eager\", \"elegant\", \"enchanting\", \"energetic\", \"enthusiastic\", \n            \"excellent\", \"exceptional\", \"exciting\", \"extraordinary\", \"fabulous\", \n            \"fantastic\", \"fearless\", \"friendly\", \"fun\", \"funny\", \n            \"generous\", \"gentle\", \"glorious\", \"good\", \"gorgeous\", \n            \"graceful\", \"great\", \"happy\", \"harmonious\", \"helpful\", \n            \"honest\", \"honorable\", \"humorous\", \"imaginative\", \"impressive\", \n            \"independent\", \"innovative\", \"intelligent\", \"interesting\", \"joyful\", \n            \"kind\", \"knowledgeable\", \"lively\", \"lovely\", \"loyal\", \n            \"lucky\", \"magnificent\", \"marvelous\", \"mighty\", \"mysterious\", \n            \"nice\", \"outstanding\", \"passionate\", \"peaceful\", \"perfect\"\n        ];\n    }\n\n    function inputMagicWord(string memory word) public {\n        magicWord = word;\n    }\n\n    function makeMagicBaby() public view returns (string memory) {\n        require(bytes(magicWord).length > 0, \"No magic word has been stored yet\");\n        uint256 randomIndex = uint256(keccak256(abi.encodePacked(block.timestamp, block.prevrandao))) % adjectives.length;\n        return string(abi.encodePacked(magicWord, \" is \", adjectives[randomIndex], \"!\"));\n    }\n    \n    function getCurrentMagicWord() public view returns (string memory) {\n        return magicWord;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.deployedBytecode",
						"evm.methodIdentifiers"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/MagicWord.sol": {
				"MagicWord": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "getCurrentMagicWord",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "word",
									"type": "string"
								}
							],
							"name": "inputMagicWord",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "makeMagicBaby",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"metadata": {
						"optimizer_settings": {
							"is_debug_logging_enabled": false,
							"is_fallback_to_size_enabled": false,
							"is_verify_each_enabled": false,
							"level_back_end": "Aggressive",
							"level_middle_end": "Aggressive",
							"level_middle_end_size": "Zero"
						},
						"revive_pallet_version": null,
						"revive_version": "0.1.0-dev.12+commit.66f9a4d.llvm-18.1.8",
						"solc_metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getCurrentMagicWord\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"word\",\"type\":\"string\"}],\"name\":\"inputMagicWord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"makeMagicBaby\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:dev-run-script\":\"./scripts/deploy_with_ethers.ts\",\"details\":\"store zah magic word get back zah magic sentence!\",\"kind\":\"dev\",\"methods\":{},\"title\":\"MagicWord\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MagicWord.sol\":\"MagicWord\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MagicWord.sol\":{\"keccak256\":\"0xdcc2076bd09f57715f5d8e7d36a8c00e4856d099ffd8afc4f95d5133daa3a53b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8079fedaa3baaaf8b365535db83796948c8db79ddb154233ff254ccb5ea5bc43\",\"dweb:/ipfs/Qmf21bS5EBYfVxBGMVMbMcuR4ya3QDvgb5yusFZtdiTqHF\"]}},\"version\":1}",
						"solc_version": "0.8.28+commit.7893614a.Emscripten.clang"
					},
					"devdoc": {
						"custom:dev-run-script": "./scripts/deploy_with_ethers.ts",
						"details": "store zah magic word get back zah magic sentence!",
						"kind": "dev",
						"methods": {},
						"title": "MagicWord",
						"version": 1
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					},
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "contracts/MagicWord.sol:MagicWord",
								"label": "magicWord",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 7,
								"contract": "contracts/MagicWord.sol:MagicWord",
								"label": "adjectives",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_string_storage)dyn_storage"
							}
						],
						"types": {
							"t_array(t_string_storage)dyn_storage": {
								"base": "t_string_storage",
								"encoding": "dynamic_array",
								"label": "string[]",
								"numberOfBytes": "32"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							}
						}
					},
					"evm": {
						"assembly": "// RO data = 0/0 bytes\n// RW data = 0/65552 bytes\n// Stack size = 16384 bytes\n\n// Instructions = 26090\n// Code size = 83624 bytes\n\n      : @0 (gas: 2)\n     0: i32 a2 = a0 >> 0x10\n     3: jump @6 if a2 != 0\n      : @1 (gas: 2)\n     6: a2 = 0x10001\n    11: jump @6 if a1 >=u a2\n      : @2 (gas: 4)\n    14: a1 = a1 + a0\n    17: i32 a1 = a1 + 0x1f\n    20: a1 = a1 & 0xffffffffffffffe0\n    23: jump @7 if a1 >=u 65537\n      : @3 (gas: 2)\n    29: a3 = i32 [0x20000]\n    34: jump @5 if a3 >=u a1\n      : @4 (gas: 4)\n    37: u32 [0x20000] = a1\n    42: a1 = 0x20010\n    47: a0 = a0 + a1\n    50: ret\n      : @5 (gas: 3)\n    52: a1 = 0x20010\n    57: a0 = a0 + a1\n    60: ret\n      : @6 (gas: 1)\n    62: trap\n      : @7 (gas: 1)\n    63: trap\n      : @8 (gas: 1)\n    64: jump @22 if a0 == a1\n      : @9 (gas: 9)\n    67: a3 = a1 << 0x20\n    70: a3 = a3 >> 0x20\n    73: a4 = a0 << 0x20\n    76: a4 = a4 >> 0x20\n    79: a4 = a4 + a2\n    82: a3 = a3 - a4\n    85: a4 = a2 << 0x1\n    88: a4 = -a4\n    90: jump @15 if a4 >=u a3\n      : @10 (gas: 1)\n    93: jump @19 if a0 >=u a1\n      : @11 (gas: 1)\n    96: jump @22 if a2 == 0\n      : @12 (gas: 3)\n    99: a2 = a2 + a0\n   102: a3 = a0\n   104: fallthrough\n      : @13 (gas: 6)\n   105: a4 = u8 [a1]\n   107: a1 = a1 + 0x1\n   110: a5 = a3 + 0x1\n   113: u8 [a3] = a4\n   115: a3 = a5\n   117: jump @13 if a5 != a2\n      : @14 (gas: 1)\n   120: jump @22\n      : @15 (gas: 1)\n   122: jump @22 if a2 == 0\n      : @16 (gas: 3)\n   125: a2 = a2 + a0\n   128: a3 = a0\n   130: fallthrough\n      : @17 (gas: 6)\n   131: a4 = u8 [a1]\n   133: a1 = a1 + 0x1\n   136: a5 = a3 + 0x1\n   139: u8 [a3] = a4\n   141: a3 = a5\n   143: jump @17 if a5 != a2\n      : @18 (gas: 1)\n   146: jump @22\n      : @19 (gas: 1)\n   148: jump @22 if a2 == 0\n      : @20 (gas: 2)\n   151: i32 a3 = a2 + 0xffffffffffffffff\n   154: fallthrough\n      : @21 (gas: 7)\n   155: a4 = a1 + a3\n   158: a4 = u8 [a4]\n   160: a2 = a2 + 0xffffffffffffffff\n   163: a5 = a0 + a3\n   166: u8 [a5] = a4\n   168: i32 a3 = a3 + 0xffffffffffffffff\n   171: jump @21 if a2 != 0\n      : @22 (gas: 1)\n   174: ret\n      : @23 (gas: 13)\n   176: sp = sp + 0xffffffffffffffd8\n   179: u64 [sp + 0x20] = ra\n   182: u64 [sp + 0x18] = s0\n   185: u64 [sp + 0x10] = s1\n   188: a2 = u64 [a1]\n   190: u64 [sp + 0x8] = a2\n   193: a2 = u64 [a1 + 0x8]\n   196: u64 [sp] = a2\n   198: s0 = u64 [a1 + 0x10]\n   201: s1 = u64 [a1 + 0x18]\n   204: i32 a0 = a0 + 0\n   206: a1 = 0x20\n   209: ra = 2, jump @0\n      : @24 [@dyn 1] (gas: 71)\n   214: a1 = reverse s1\n   216: a2 = reverse s0\n   218: a3 = u64 [sp]\n   220: a3 = reverse a3\n   222: a4 = u64 [sp + 0x8]\n   225: a4 = reverse a4\n   227: u8 [a0 + 0x18] = a4\n   230: u8 [a0 + 0x10] = a3\n   233: u8 [a0 + 0x8] = a2\n   236: u8 [a0] = a1\n   238: a5 = a4 >> 0x38\n   241: u8 [a0 + 0x1f] = a5\n   244: a5 = a4 >> 0x30\n   247: u8 [a0 + 0x1e] = a5\n   250: a5 = a4 >> 0x28\n   253: u8 [a0 + 0x1d] = a5\n   256: a5 = a4 >> 0x20\n   259: u8 [a0 + 0x1c] = a5\n   262: a5 = a4 >> 0x18\n   265: u8 [a0 + 0x1b] = a5\n   268: a5 = a4 >> 0x10\n   271: u8 [a0 + 0x1a] = a5\n   274: a4 = a4 >> 0x8\n   277: u8 [a0 + 0x19] = a4\n   280: a4 = a3 >> 0x38\n   283: u8 [a0 + 0x17] = a4\n   286: a4 = a3 >> 0x30\n   289: u8 [a0 + 0x16] = a4\n   292: a4 = a3 >> 0x28\n   295: u8 [a0 + 0x15] = a4\n   298: a4 = a3 >> 0x20\n   301: u8 [a0 + 0x14] = a4\n   304: a4 = a3 >> 0x18\n   307: u8 [a0 + 0x13] = a4\n   310: a4 = a3 >> 0x10\n   313: u8 [a0 + 0x12] = a4\n   316: a3 = a3 >> 0x8\n   319: u8 [a0 + 0x11] = a3\n   322: a3 = a2 >> 0x38\n   325: u8 [a0 + 0xf] = a3\n   328: a3 = a2 >> 0x30\n   331: u8 [a0 + 0xe] = a3\n   334: a3 = a2 >> 0x28\n   337: u8 [a0 + 0xd] = a3\n   340: a3 = a2 >> 0x20\n   343: u8 [a0 + 0xc] = a3\n   346: a3 = a2 >> 0x18\n   349: u8 [a0 + 0xb] = a3\n   352: a3 = a2 >> 0x10\n   355: u8 [a0 + 0xa] = a3\n   358: a2 = a2 >> 0x8\n   361: u8 [a0 + 0x9] = a2\n   364: a2 = a1 >> 0x38\n   367: u8 [a0 + 0x7] = a2\n   370: a2 = a1 >> 0x30\n   373: u8 [a0 + 0x6] = a2\n   376: a2 = a1 >> 0x28\n   379: u8 [a0 + 0x5] = a2\n   382: a2 = a1 >> 0x20\n   385: u8 [a0 + 0x4] = a2\n   388: a2 = a1 >> 0x18\n   391: u8 [a0 + 0x3] = a2\n   394: a2 = a1 >> 0x10\n   397: u8 [a0 + 0x2] = a2\n   400: a1 = a1 >> 0x8\n   403: u8 [a0 + 0x1] = a1\n   406: ra = u64 [sp + 0x20]\n   409: s0 = u64 [sp + 0x18]\n   412: s1 = u64 [sp + 0x10]\n   415: sp = sp + 0x28\n   418: ret\n      : @25 (gas: 6)\n   420: sp = sp + 0xfffffffffffffff0\n   423: u64 [sp + 0x8] = ra\n   426: u64 [sp] = s0\n   428: s0 = a0 & 0x1\n   431: ecalli 2 // 'call_data_size'\n   433: fallthrough\n      : @26 (gas: 2)\n   434: u32 [0x20004] = a0\n   439: jump @28 if s0 == 0\n      : @27 (gas: 1)\n   442: ra = 4, jump @29\n      : @28 [@dyn 2] (gas: 1)\n   446: ra = 6, jump @44\n      : @29 [@dyn 3] (gas: 9)\n   451: sp = sp + 0xffffffffffffffc0\n   454: u64 [sp + 0x38] = ra\n   457: u64 [sp + 0x30] = s0\n   460: u64 [sp + 0x28] = s1\n   463: s0 = sp + 0x40\n   466: sp = sp & 0xffffffffffffffe0\n   469: a0 = 0x40\n   472: a1 = 0x20\n   475: ra = 8, jump @0\n      : @30 [@dyn 4] (gas: 39)\n   480: u8 [a0 + 31] = 0x80\n   485: u8 [a0 + 30] = 0\n   488: u8 [a0 + 29] = 0\n   491: u8 [a0 + 28] = 0\n   494: u8 [a0 + 27] = 0\n   497: u8 [a0 + 26] = 0\n   500: u8 [a0 + 25] = 0\n   503: u8 [a0 + 24] = 0\n   506: u8 [a0 + 23] = 0\n   509: u8 [a0 + 22] = 0\n   512: u8 [a0 + 21] = 0\n   515: u8 [a0 + 20] = 0\n   518: u8 [a0 + 19] = 0\n   521: u8 [a0 + 18] = 0\n   524: u8 [a0 + 17] = 0\n   527: u8 [a0 + 16] = 0\n   530: u8 [a0 + 15] = 0\n   533: u8 [a0 + 14] = 0\n   536: u8 [a0 + 13] = 0\n   539: u8 [a0 + 12] = 0\n   542: u8 [a0 + 11] = 0\n   545: u8 [a0 + 10] = 0\n   548: u8 [a0 + 9] = 0\n   551: u8 [a0 + 8] = 0\n   554: u8 [a0 + 7] = 0\n   557: u8 [a0 + 6] = 0\n   560: u8 [a0 + 5] = 0\n   563: u8 [a0 + 4] = 0\n   566: u8 [a0 + 3] = 0\n   569: u8 [a0 + 2] = 0\n   572: u8 [a0 + 1] = 0\n   575: u8 [a0 + 0] = 0\n   577: u64 [sp + 24] = 0\n   580: u64 [sp + 0] = 0\n   582: u64 [sp + 8] = 0\n   585: u64 [sp + 16] = 0\n   588: i32 a0 = sp + 0\n   590: ecalli 9 // 'value_transferred'\n   592: fallthrough\n      : @31 (gas: 8)\n   593: a0 = u64 [sp + 0x10]\n   596: a1 = u64 [sp + 0x18]\n   599: a2 = u64 [sp + 0x8]\n   602: a3 = u64 [sp]\n   604: a1 = a1 | a2\n   607: a0 = a0 | a3\n   610: a0 = a0 | a1\n   613: jump @36 if a0 != 0\n      : @32 (gas: 19)\n   617: ra = 0xa\n   620: sp = sp + 0xfffffffffffff808\n   624: u64 [sp + 0x7f0] = ra\n   628: u64 [sp + 0x7e8] = s0\n   632: u64 [sp + 0x7e0] = s1\n   636: s0 = sp + 0x7f8\n   640: sp = sp + 0xfffffffffffff800\n   644: sp = sp + 0xfffffffffffffc28\n   648: sp = sp & 0xfffffffffffffff0\n   651: s1 = sp + 0x7ff\n   655: s1 = s1 + 0x7e9\n   659: u64 [s1 + 928] = 0\n   663: u64 [s1 + 920] = 0\n   667: u64 [s1 + 904] = 0x960\n   673: a0 = sp + 0x1390\n   677: a1 = sp + 0x1370\n   681: u64 [s1 + 912] = 0\n   685: ra = 0xb4\n   689: jump @56\n      : @33 [@dyn 5] (gas: 3)\n   692: a0 = 0x40\n   695: a1 = 0x20\n   698: ra = 12, jump @0\n      : @34 [@dyn 6] (gas: 100)\n   703: a1 = u8 [a0 + 0x11]\n   706: a2 = u8 [a0 + 0x10]\n   709: a3 = u8 [a0 + 0x12]\n   712: a4 = u8 [a0 + 0x13]\n   715: a1 = a1 << 0x8\n   718: a1 = a1 | a2\n   721: a3 = a3 << 0x10\n   724: a4 = a4 << 0x18\n   727: a3 = a3 | a4\n   730: a1 = a1 | a3\n   733: a2 = u8 [a0 + 0x15]\n   736: a3 = u8 [a0 + 0x14]\n   739: a4 = u8 [a0 + 0x16]\n   742: a5 = u8 [a0 + 0x17]\n   745: a2 = a2 << 0x8\n   748: a2 = a2 | a3\n   751: a4 = a4 << 0x10\n   754: a5 = a5 << 0x18\n   757: a4 = a4 | a5\n   760: a2 = a2 | a4\n   763: a2 = a2 << 0x20\n   766: t0 = a2 | a1\n   769: a2 = u8 [a0 + 0x1]\n   772: a3 = u8 [a0]\n   774: a4 = u8 [a0 + 0x2]\n   777: a5 = u8 [a0 + 0x3]\n   780: a2 = a2 << 0x8\n   783: a2 = a2 | a3\n   786: a4 = a4 << 0x10\n   789: a5 = a5 << 0x18\n   792: a4 = a4 | a5\n   795: a2 = a2 | a4\n   798: a3 = u8 [a0 + 0x5]\n   801: a4 = u8 [a0 + 0x4]\n   804: a5 = u8 [a0 + 0x6]\n   807: s1 = u8 [a0 + 0x7]\n   810: a3 = a3 << 0x8\n   813: a3 = a3 | a4\n   816: a5 = a5 << 0x10\n   819: s1 = s1 << 0x18\n   822: a5 = a5 | s1\n   825: a3 = a3 | a5\n   828: a3 = a3 << 0x20\n   831: a2 = a2 | a3\n   834: a3 = u8 [a0 + 0x19]\n   837: a4 = u8 [a0 + 0x18]\n   840: a5 = u8 [a0 + 0x1a]\n   843: s1 = u8 [a0 + 0x1b]\n   846: a3 = a3 << 0x8\n   849: a3 = a3 | a4\n   852: a5 = a5 << 0x10\n   855: s1 = s1 << 0x18\n   858: a5 = a5 | s1\n   861: a3 = a3 | a5\n   864: a4 = u8 [a0 + 0x1d]\n   867: a5 = u8 [a0 + 0x1c]\n   870: s1 = u8 [a0 + 0x1e]\n   873: a1 = u8 [a0 + 0x1f]\n   876: a4 = a4 << 0x8\n   879: a4 = a4 | a5\n   882: s1 = s1 << 0x10\n   885: a1 = a1 << 0x18\n   888: a1 = a1 | s1\n   891: a1 = a1 | a4\n   894: a1 = a1 << 0x20\n   897: a3 = a3 | a1\n   900: a1 = u8 [a0 + 0x9]\n   903: a4 = u8 [a0 + 0x8]\n   906: a5 = u8 [a0 + 0xa]\n   909: s1 = u8 [a0 + 0xb]\n   912: a1 = a1 << 0x8\n   915: a1 = a1 | a4\n   918: a5 = a5 << 0x10\n   921: s1 = s1 << 0x18\n   924: a5 = a5 | s1\n   927: a1 = a1 | a5\n   930: a4 = u8 [a0 + 0xd]\n   933: a5 = u8 [a0 + 0xc]\n   936: s1 = u8 [a0 + 0xe]\n   939: a0 = u8 [a0 + 0xf]\n   942: a4 = a4 << 0x8\n   945: a4 = a4 | a5\n   948: s1 = s1 << 0x10\n   951: a0 = a0 << 0x18\n   954: a0 = a0 | s1\n   957: a0 = a0 | a4\n   960: a0 = a0 << 0x20\n   963: a0 = a0 | a1\n   966: a0 = reverse a0\n   968: s1 = reverse a3\n   970: a1 = reverse a2\n   972: a2 = reverse t0\n   974: a1 = a1 | a2\n   977: a2 = s1 | a0\n   980: a2 = a2 | a1\n   983: a2 = a2 >> 0x20\n   986: a0 = a0 | a1\n   989: a0 = a0 << 0x20\n   992: a0 = a0 | a2\n   995: jump @38 if a0 == 0\n      : @35 (gas: 1)\n   998: trap\n      : @36 (gas: 3)\n   999: a0 = 0\n  1001: a1 = 0\n  1003: ra = 14, jump @0\n      : @37 [@dyn 7] (gas: 5)\n  1008: i32 a1 = a0 + 0\n  1010: a0 = 0x1\n  1013: a2 = 0\n  1015: ecalli 6 // 'seal_return'\n  1017: fallthrough\n      : @38 (gas: 4)\n  1018: i32 s1 = s1 + 0\n  1020: a0 = s1\n  1022: a1 = 0\n  1024: ra = 16, jump @0\n      : @39 [@dyn 8] (gas: 5)\n  1029: i32 a0 = a0 + 0\n  1031: a1 = 0\n  1033: a2 = 0\n  1035: ecalli 0 // 'call_data_copy'\n  1036: fallthrough\n      : @40 (gas: 2)\n  1037: a1 = i32 [0x20008]\n  1042: jump @42 if a1 == 0\n      : @41 (gas: 4)\n  1045: a0 = 0x30010\n  1050: i32 a0 = a0 + 0\n  1052: ecalli 7 // 'set_immutable_data'\n  1054: fallthrough\n      : @42 (gas: 3)\n  1055: a0 = s1\n  1057: a1 = 0\n  1059: ra = 18, jump @0\n      : @43 [@dyn 9] (gas: 6)\n  1064: i32 a1 = a0 + 0\n  1066: a0 = 0\n  1068: a2 = 0\n  1070: ra = 0x14\n  1073: ecalli 6 // 'seal_return'\n  1075: fallthrough\n      : @44 [@dyn 10] (gas: 8)\n  1076: sp = sp + 0xffffffffffffffc0\n  1079: u64 [sp + 0x38] = ra\n  1082: u64 [sp + 0x30] = s0\n  1085: s0 = sp + 0x40\n  1088: sp = sp & 0xffffffffffffffe0\n  1091: a0 = 0x40\n  1094: a1 = 0x20\n  1097: ra = 22, jump @0\n      : @45 [@dyn 11] (gas: 34)\n  1102: u8 [a0 + 31] = 0x80\n  1107: u8 [a0 + 30] = 0\n  1110: u8 [a0 + 29] = 0\n  1113: u8 [a0 + 28] = 0\n  1116: u8 [a0 + 27] = 0\n  1119: u8 [a0 + 26] = 0\n  1122: u8 [a0 + 25] = 0\n  1125: u8 [a0 + 24] = 0\n  1128: u8 [a0 + 23] = 0\n  1131: u8 [a0 + 22] = 0\n  1134: u8 [a0 + 21] = 0\n  1137: u8 [a0 + 20] = 0\n  1140: u8 [a0 + 19] = 0\n  1143: u8 [a0 + 18] = 0\n  1146: u8 [a0 + 17] = 0\n  1149: u8 [a0 + 16] = 0\n  1152: u8 [a0 + 15] = 0\n  1155: u8 [a0 + 14] = 0\n  1158: u8 [a0 + 13] = 0\n  1161: u8 [a0 + 12] = 0\n  1164: u8 [a0 + 11] = 0\n  1167: u8 [a0 + 10] = 0\n  1170: u8 [a0 + 9] = 0\n  1173: u8 [a0 + 8] = 0\n  1176: u8 [a0 + 7] = 0\n  1179: u8 [a0 + 3] = 0\n  1182: u8 [a0 + 2] = 0\n  1185: u8 [a0 + 1] = 0\n  1188: u8 [a0 + 0] = 0\n  1190: a1 = i32 [0x20004]\n  1195: u8 [a0 + 6] = 0\n  1198: u8 [a0 + 5] = 0\n  1201: u8 [a0 + 4] = 0\n  1204: jump @51 if a1 <u 4\n      : @46 (gas: 4)\n  1208: i32 a0 = sp + 0\n  1210: a1 = 0\n  1212: ecalli 1 // 'call_data_load'\n  1214: fallthrough\n      : @47 (gas: 2)\n  1215: a0 = i32 [sp + 0x1c]\n  1218: jump @53 if a0 == 2225898444\n      : @48 (gas: 1)\n  1225: jump @52 if a0 == 3209044583\n      : @49 (gas: 1)\n  1232: jump @51 if a0 != 1755367785\n      : @50 (gas: 14)\n  1239: ra = 0x18\n  1242: sp = sp + 0xfffffffffffffec0\n  1246: u64 [sp + 0x138] = ra\n  1250: u64 [sp + 0x130] = s0\n  1254: u64 [sp + 0x128] = s1\n  1258: s0 = sp + 0x140\n  1262: sp = sp & 0xffffffffffffffe0\n  1265: u64 [sp + 280] = 0\n  1269: u64 [sp + 272] = 0\n  1273: u64 [sp + 264] = 0\n  1277: u64 [sp + 256] = 0\n  1281: i32 a0 = sp + 0x100\n  1285: ecalli 9 // 'value_transferred'\n  1287: jump @976\n      : @51 [@dyn 12] (gas: 1)\n  1291: ra = 26, jump @1003\n      : @52 [@dyn 13] (gas: 13)\n  1297: ra = 0x1c\n  1300: sp = sp + 0xffffffffffffff20\n  1304: u64 [sp + 0xd8] = ra\n  1308: u64 [sp + 0xd0] = s0\n  1312: s0 = sp + 0xe0\n  1316: sp = sp & 0xffffffffffffffe0\n  1319: u64 [sp + 184] = 0\n  1323: u64 [sp + 176] = 0\n  1327: u64 [sp + 168] = 0\n  1331: u64 [sp + 160] = 0\n  1335: i32 a0 = sp + 0xa0\n  1339: ecalli 9 // 'value_transferred'\n  1341: jump @1054\n      : @53 [@dyn 14] (gas: 1)\n  1345: ra = 30, jump @989\n      : @54 [@dyn 15] (gas: 7)\n  1351: sp = sp + 0xfffffffffffffff0\n  1354: u64 [sp + 0x8] = ra\n  1357: u64 [sp] = s0\n  1359: s0 = a0\n  1361: a0 = 0x40\n  1364: a1 = 0x20\n  1367: ra = 32, jump @0\n      : @55 [@dyn 16] (gas: 100)\n  1372: a1 = u8 [a0 + 0x1]\n  1375: a2 = u8 [a0]\n  1377: a3 = u8 [a0 + 0x2]\n  1380: a4 = u8 [a0 + 0x3]\n  1383: a1 = a1 << 0x8\n  1386: a1 = a1 | a2\n  1389: a3 = a3 << 0x10\n  1392: a4 = a4 << 0x18\n  1395: a3 = a3 | a4\n  1398: a1 = a1 | a3\n  1401: a2 = u8 [a0 + 0x5]\n  1404: a3 = u8 [a0 + 0x4]\n  1407: a4 = u8 [a0 + 0x6]\n  1410: a5 = u8 [a0 + 0x7]\n  1413: a2 = a2 << 0x8\n  1416: a2 = a2 | a3\n  1419: a4 = a4 << 0x10\n  1422: a5 = a5 << 0x18\n  1425: a4 = a4 | a5\n  1428: a2 = a2 | a4\n  1431: a2 = a2 << 0x20\n  1434: t0 = a2 | a1\n  1437: a2 = u8 [a0 + 0x9]\n  1440: a3 = u8 [a0 + 0x8]\n  1443: a4 = u8 [a0 + 0xa]\n  1446: a5 = u8 [a0 + 0xb]\n  1449: a2 = a2 << 0x8\n  1452: a2 = a2 | a3\n  1455: a4 = a4 << 0x10\n  1458: a5 = a5 << 0x18\n  1461: a4 = a4 | a5\n  1464: a2 = a2 | a4\n  1467: a3 = u8 [a0 + 0xd]\n  1470: a4 = u8 [a0 + 0xc]\n  1473: a5 = u8 [a0 + 0xe]\n  1476: a1 = u8 [a0 + 0xf]\n  1479: a3 = a3 << 0x8\n  1482: a3 = a3 | a4\n  1485: a5 = a5 << 0x10\n  1488: a1 = a1 << 0x18\n  1491: a1 = a1 | a5\n  1494: a1 = a1 | a3\n  1497: a1 = a1 << 0x20\n  1500: t1 = a1 | a2\n  1503: a1 = u8 [a0 + 0x11]\n  1506: a3 = u8 [a0 + 0x10]\n  1509: a4 = u8 [a0 + 0x12]\n  1512: a5 = u8 [a0 + 0x13]\n  1515: a1 = a1 << 0x8\n  1518: a1 = a1 | a3\n  1521: a4 = a4 << 0x10\n  1524: a5 = a5 << 0x18\n  1527: a4 = a4 | a5\n  1530: a1 = a1 | a4\n  1533: a3 = u8 [a0 + 0x15]\n  1536: a4 = u8 [a0 + 0x14]\n  1539: a5 = u8 [a0 + 0x16]\n  1542: a2 = u8 [a0 + 0x17]\n  1545: a3 = a3 << 0x8\n  1548: a3 = a3 | a4\n  1551: a5 = a5 << 0x10\n  1554: a2 = a2 << 0x18\n  1557: a2 = a2 | a5\n  1560: a2 = a2 | a3\n  1563: a2 = a2 << 0x20\n  1566: a3 = a2 | a1\n  1569: a1 = u8 [a0 + 0x19]\n  1572: a2 = u8 [a0 + 0x18]\n  1575: a4 = u8 [a0 + 0x1a]\n  1578: a5 = u8 [a0 + 0x1b]\n  1581: a1 = a1 << 0x8\n  1584: a1 = a1 | a2\n  1587: a4 = a4 << 0x10\n  1590: a5 = a5 << 0x18\n  1593: a4 = a4 | a5\n  1596: a1 = a1 | a4\n  1599: a2 = u8 [a0 + 0x1d]\n  1602: a4 = u8 [a0 + 0x1c]\n  1605: a5 = u8 [a0 + 0x1e]\n  1608: a0 = u8 [a0 + 0x1f]\n  1611: a2 = a2 << 0x8\n  1614: a2 = a2 | a4\n  1617: a5 = a5 << 0x10\n  1620: a0 = a0 << 0x18\n  1623: a0 = a0 | a5\n  1626: a0 = a0 | a2\n  1629: a0 = a0 << 0x20\n  1632: a0 = a0 | a1\n  1635: a0 = reverse a0\n  1637: a1 = reverse a3\n  1639: a2 = reverse t1\n  1641: a3 = reverse t0\n  1643: u64 [s0 + 0x18] = a3\n  1646: u64 [s0 + 0x10] = a2\n  1649: u64 [s0 + 0x8] = a1\n  1652: u64 [s0] = a0\n  1654: ra = u64 [sp + 0x8]\n  1657: s0 = u64 [sp]\n  1659: sp = sp + 0x10\n  1662: ret\n      : @56 (gas: 18)\n  1664: sp = sp + 0xffffffffffffff60\n  1668: u64 [sp + 0x98] = ra\n  1672: u64 [sp + 0x90] = s0\n  1676: u64 [sp + 0x88] = s1\n  1680: s0 = sp + 0xa0\n  1684: sp = sp & 0xfffffffffffffff0\n  1687: a2 = u64 [a1 + 0x18]\n  1690: u64 [sp + 0x30] = a2\n  1693: a2 = u64 [a1 + 0x10]\n  1696: u64 [sp + 0x28] = a2\n  1699: a2 = u64 [a1 + 0x8]\n  1702: u64 [sp + 0x20] = a2\n  1705: a1 = u64 [a1]\n  1707: u64 [sp + 0x18] = a1\n  1710: u64 [sp + 0x38] = a0\n  1713: a0 = 0x40\n  1716: a1 = 0x20\n  1719: ra = 34, jump @0\n      : @57 [@dyn 17] (gas: 130)\n  1724: a1 = u8 [a0 + 0x19]\n  1727: a2 = u8 [a0 + 0x18]\n  1730: a3 = u8 [a0 + 0x1a]\n  1733: a4 = u8 [a0 + 0x1b]\n  1736: a1 = a1 << 0x8\n  1739: a1 = a1 | a2\n  1742: a3 = a3 << 0x10\n  1745: a4 = a4 << 0x18\n  1748: a3 = a3 | a4\n  1751: a1 = a1 | a3\n  1754: a2 = u8 [a0 + 0x1d]\n  1757: a3 = u8 [a0 + 0x1c]\n  1760: a4 = u8 [a0 + 0x1e]\n  1763: a5 = u8 [a0 + 0x1f]\n  1766: a2 = a2 << 0x8\n  1769: a2 = a2 | a3\n  1772: a4 = a4 << 0x10\n  1775: a5 = a5 << 0x18\n  1778: a4 = a4 | a5\n  1781: a2 = a2 | a4\n  1784: a2 = a2 << 0x20\n  1787: t0 = a2 | a1\n  1790: a2 = u8 [a0 + 0x11]\n  1793: a3 = u8 [a0 + 0x10]\n  1796: a4 = u8 [a0 + 0x12]\n  1799: a5 = u8 [a0 + 0x13]\n  1802: a2 = a2 << 0x8\n  1805: a2 = a2 | a3\n  1808: a4 = a4 << 0x10\n  1811: a5 = a5 << 0x18\n  1814: a4 = a4 | a5\n  1817: a2 = a2 | a4\n  1820: a3 = u8 [a0 + 0x15]\n  1823: a4 = u8 [a0 + 0x14]\n  1826: a5 = u8 [a0 + 0x16]\n  1829: s1 = u8 [a0 + 0x17]\n  1832: a3 = a3 << 0x8\n  1835: a3 = a3 | a4\n  1838: a5 = a5 << 0x10\n  1841: s1 = s1 << 0x18\n  1844: a5 = a5 | s1\n  1847: a3 = a3 | a5\n  1850: a3 = a3 << 0x20\n  1853: a2 = a2 | a3\n  1856: a3 = u8 [a0 + 0x9]\n  1859: a4 = u8 [a0 + 0x8]\n  1862: a5 = u8 [a0 + 0xa]\n  1865: s1 = u8 [a0 + 0xb]\n  1868: a3 = a3 << 0x8\n  1871: a3 = a3 | a4\n  1874: a5 = a5 << 0x10\n  1877: s1 = s1 << 0x18\n  1880: a5 = a5 | s1\n  1883: a3 = a3 | a5\n  1886: a4 = u8 [a0 + 0xd]\n  1889: a5 = u8 [a0 + 0xc]\n  1892: s1 = u8 [a0 + 0xe]\n  1895: a1 = u8 [a0 + 0xf]\n  1898: a4 = a4 << 0x8\n  1901: a4 = a4 | a5\n  1904: s1 = s1 << 0x10\n  1907: a1 = a1 << 0x18\n  1910: a1 = a1 | s1\n  1913: a1 = a1 | a4\n  1916: a1 = a1 << 0x20\n  1919: a3 = a3 | a1\n  1922: a1 = u8 [a0 + 0x1]\n  1925: a4 = u8 [a0]\n  1927: a5 = u8 [a0 + 0x2]\n  1930: s1 = u8 [a0 + 0x3]\n  1933: a1 = a1 << 0x8\n  1936: a1 = a1 | a4\n  1939: a5 = a5 << 0x10\n  1942: s1 = s1 << 0x18\n  1945: a5 = a5 | s1\n  1948: a1 = a1 | a5\n  1951: a4 = u8 [a0 + 0x5]\n  1954: a5 = u8 [a0 + 0x4]\n  1957: s1 = u8 [a0 + 0x6]\n  1960: a0 = u8 [a0 + 0x7]\n  1963: a4 = a4 << 0x8\n  1966: a4 = a4 | a5\n  1969: s1 = s1 << 0x10\n  1972: a0 = a0 << 0x18\n  1975: a0 = a0 | s1\n  1978: a0 = a0 | a4\n  1981: a0 = a0 << 0x20\n  1984: a0 = a0 | a1\n  1987: t1 = reverse a0\n  1989: t2 = reverse a3\n  1991: s1 = reverse a2\n  1993: a5 = reverse t0\n  1995: a1 = u64 [sp + 0x18]\n  1998: a0 = a1 + 0x1f\n  2001: a1 = a0 <u a1\n  2004: a3 = u64 [sp + 0x20]\n  2007: a2 = a3 + a1\n  2010: a3 = a2 <u a3\n  2013: a3 = a1 if a1 == 0\n  2016: a1 = u64 [sp + 0x28]\n  2019: a3 = a3 + a1\n  2022: a1 = a3 <u a1\n  2025: a4 = u64 [sp + 0x30]\n  2028: a1 = a1 + a4\n  2031: a0 = a0 & 0xffffffffffffffe0\n  2034: a0 = a0 + a5\n  2037: u64 [sp + 0x28] = a5\n  2040: u64 [sp + 0x10] = a0\n  2043: a4 = a0 <u a5\n  2046: a2 = a2 + s1\n  2049: a5 = a2 + a4\n  2052: a2 = a5 ^ s1\n  2055: u64 [sp + 0x30] = s1\n  2058: a0 = a5 <u s1\n  2061: a0 = a4 if a2 == 0\n  2064: a3 = a3 + t2\n  2067: a4 = a3 + a0\n  2070: s1 = a4 <u a3\n  2073: a2 = a3 <u t2\n  2076: a1 = a1 + t1\n  2079: a1 = a1 + a2\n  2082: s1 = s1 + a1\n  2085: a1 = a4 >u 0\n  2087: a2 = s1 >u 0\n  2089: a2 = a1 if s1 == 0\n  2092: a1 = a4 | s1\n  2095: u64 [sp + 0x8] = a5\n  2098: a3 = a5 >u 0\n  2100: a3 = a2 if a1 != 0\n  2103: jump @61 if a3 != 0\n      : @58 (gas: 8)\n  2107: a1 = a4 <u t2\n  2110: a2 = s1 ^ t1\n  2113: a3 = s1 <u t1\n  2116: a3 = a1 if a2 == 0\n  2119: a1 = a4 ^ t2\n  2122: a1 = a1 | a2\n  2125: a0 = a3 if a1 != 0\n  2128: jump @61 if a0 != 0\n      : @59 (gas: 6)\n  2132: a0 = 0x40\n  2135: a1 = 0x20\n  2138: u64 [sp + 0x20] = t2\n  2141: u64 [sp + 0x18] = t1\n  2144: u64 [sp] = a4\n  2146: ra = 36, jump @0\n      : @60 [@dyn 18] (gas: 82)\n  2151: a1 = reverse s1\n  2153: a2 = u64 [sp]\n  2155: a2 = reverse a2\n  2157: a3 = u64 [sp + 0x8]\n  2160: a3 = reverse a3\n  2162: a4 = u64 [sp + 0x10]\n  2165: a4 = reverse a4\n  2167: u8 [a0 + 0x18] = a4\n  2170: a5 = a4 >> 0x38\n  2173: u8 [a0 + 0x1f] = a5\n  2176: a5 = a4 >> 0x30\n  2179: u8 [a0 + 0x1e] = a5\n  2182: a5 = a4 >> 0x28\n  2185: u8 [a0 + 0x1d] = a5\n  2188: a5 = a4 >> 0x20\n  2191: u8 [a0 + 0x1c] = a5\n  2194: a5 = a4 >> 0x18\n  2197: u8 [a0 + 0x1b] = a5\n  2200: a5 = a4 >> 0x10\n  2203: u8 [a0 + 0x1a] = a5\n  2206: a4 = a4 >> 0x8\n  2209: u8 [a0 + 0x19] = a4\n  2212: u8 [a0 + 0x10] = a3\n  2215: a4 = a3 >> 0x38\n  2218: u8 [a0 + 0x17] = a4\n  2221: a4 = a3 >> 0x30\n  2224: u8 [a0 + 0x16] = a4\n  2227: a4 = a3 >> 0x28\n  2230: u8 [a0 + 0x15] = a4\n  2233: a4 = a3 >> 0x20\n  2236: u8 [a0 + 0x14] = a4\n  2239: a4 = a3 >> 0x18\n  2242: u8 [a0 + 0x13] = a4\n  2245: a4 = a3 >> 0x10\n  2248: u8 [a0 + 0x12] = a4\n  2251: a3 = a3 >> 0x8\n  2254: u8 [a0 + 0x11] = a3\n  2257: u8 [a0 + 0x8] = a2\n  2260: a3 = a2 >> 0x38\n  2263: u8 [a0 + 0xf] = a3\n  2266: a3 = a2 >> 0x30\n  2269: u8 [a0 + 0xe] = a3\n  2272: a3 = a2 >> 0x28\n  2275: u8 [a0 + 0xd] = a3\n  2278: a3 = a2 >> 0x20\n  2281: u8 [a0 + 0xc] = a3\n  2284: a3 = a2 >> 0x18\n  2287: u8 [a0 + 0xb] = a3\n  2290: a3 = a2 >> 0x10\n  2293: u8 [a0 + 0xa] = a3\n  2296: a2 = a2 >> 0x8\n  2299: u8 [a0 + 0x9] = a2\n  2302: u8 [a0] = a1\n  2304: a2 = a1 >> 0x38\n  2307: u8 [a0 + 0x7] = a2\n  2310: a2 = a1 >> 0x30\n  2313: u8 [a0 + 0x6] = a2\n  2316: a2 = a1 >> 0x28\n  2319: u8 [a0 + 0x5] = a2\n  2322: a2 = a1 >> 0x20\n  2325: u8 [a0 + 0x4] = a2\n  2328: a2 = a1 >> 0x18\n  2331: u8 [a0 + 0x3] = a2\n  2334: a2 = a1 >> 0x10\n  2337: u8 [a0 + 0x2] = a2\n  2340: a1 = a1 >> 0x8\n  2343: u8 [a0 + 0x1] = a1\n  2346: a0 = u64 [sp + 0x38]\n  2349: a1 = u64 [sp + 0x28]\n  2352: u64 [a0] = a1\n  2354: a1 = u64 [sp + 0x18]\n  2357: u64 [a0 + 0x18] = a1\n  2360: a1 = u64 [sp + 0x30]\n  2363: u64 [a0 + 0x8] = a1\n  2366: a1 = u64 [sp + 0x20]\n  2369: u64 [a0 + 0x10] = a1\n  2372: sp = s0 + 0xffffffffffffff60\n  2376: ra = u64 [sp + 0x98]\n  2380: s0 = u64 [sp + 0x90]\n  2384: s1 = u64 [sp + 0x88]\n  2388: sp = sp + 0xa0\n  2392: ret\n      : @61 (gas: 8)\n  2394: u64 [sp + 112] = 0\n  2397: u64 [sp + 104] = 0\n  2400: u64 [sp + 96] = 0\n  2403: a0 = 0x4e487b7100000000\n  2413: a1 = sp + 0x60\n  2416: u64 [sp + 0x78] = a0\n  2419: a0 = 0\n  2421: ra = 38, jump @23\n      : @62 [@dyn 19] (gas: 7)\n  2426: u64 [sp + 88] = 0\n  2429: u64 [sp + 80] = 0\n  2432: u64 [sp + 64] = 0x41\n  2436: a0 = 0x4\n  2439: a1 = sp + 0x40\n  2442: u64 [sp + 72] = 0\n  2445: ra = 40, jump @23\n      : @63 [@dyn 20] (gas: 3)\n  2450: a1 = 0x24\n  2453: a0 = 0\n  2455: ra = 42, jump @0\n      : @64 [@dyn 21] (gas: 6)\n  2460: i32 a1 = a0 + 0\n  2462: a0 = 0x1\n  2465: a2 = 0x24\n  2468: ra = 0x2c\n  2471: ecalli 6 // 'seal_return'\n  2473: fallthrough\n      : @65 [@dyn 22] (gas: 7)\n  2474: a4 = u64 [a1 + 0x18]\n  2477: a3 = u64 [a1 + 0x10]\n  2480: a2 = u64 [a1 + 0x8]\n  2483: t0 = a3 | a4\n  2486: a5 = a2 <u 0x1\n  2489: a5 = 0 if t0 != 0\n  2491: jump @67 if a5 == 0\n      : @66 (gas: 16)\n  2494: a1 = u64 [a1]\n  2496: a5 = a3 >> 0x3b\n  2499: a4 = a4 << 0x5\n  2502: a4 = a4 | a5\n  2505: a5 = a2 >> 0x3b\n  2508: a3 = a3 << 0x5\n  2511: a3 = a3 | a5\n  2514: a5 = a1 >> 0x3b\n  2517: a2 = a2 << 0x5\n  2520: a2 = a2 | a5\n  2523: a1 = a1 << 0x5\n  2526: u64 [a0] = a1\n  2528: u64 [a0 + 0x8] = a2\n  2531: u64 [a0 + 0x10] = a3\n  2534: u64 [a0 + 0x18] = a4\n  2537: ret\n      : @67 (gas: 13)\n  2539: sp = sp + 0xffffffffffffffb0\n  2542: u64 [sp + 0x48] = ra\n  2545: u64 [sp + 0x40] = s0\n  2548: s0 = sp + 0x50\n  2551: sp = sp & 0xfffffffffffffff0\n  2554: u64 [sp + 48] = 0\n  2557: u64 [sp + 40] = 0\n  2560: u64 [sp + 32] = 0\n  2563: a0 = 0x4e487b7100000000\n  2573: a1 = sp + 0x20\n  2576: u64 [sp + 0x38] = a0\n  2579: a0 = 0\n  2581: ra = 46, jump @23\n      : @68 [@dyn 23] (gas: 7)\n  2586: u64 [sp + 24] = 0\n  2589: u64 [sp + 16] = 0\n  2592: u64 [sp + 0] = 0x41\n  2595: a0 = 0x4\n  2598: a1 = sp\n  2600: u64 [sp + 8] = 0\n  2603: ra = 48, jump @23\n      : @69 [@dyn 24] (gas: 3)\n  2608: a1 = 0x24\n  2611: a0 = 0\n  2613: ra = 50, jump @0\n      : @70 [@dyn 25] (gas: 6)\n  2618: i32 a1 = a0 + 0\n  2620: a0 = 0x1\n  2623: a2 = 0x24\n  2626: ra = 0x34\n  2629: ecalli 6 // 'seal_return'\n  2631: fallthrough\n      : @71 [@dyn 26] (gas: 13)\n  2632: sp = sp + 0xffffffffffffff60\n  2636: u64 [sp + 0x98] = ra\n  2640: u64 [sp + 0x90] = s0\n  2644: u64 [sp + 0x88] = s1\n  2648: s0 = sp + 0xa0\n  2652: sp = sp & 0xfffffffffffffff0\n  2655: a4 = u64 [a1 + 0x18]\n  2658: a3 = u64 [a1 + 0x10]\n  2661: a2 = u64 [a1 + 0x8]\n  2664: s1 = a3 | a4\n  2667: a5 = a2 <u 0x1\n  2670: a5 = 0 if s1 != 0\n  2672: jump @74 if a5 == 0\n      : @72 (gas: 19)\n  2675: s1 = a0\n  2677: a0 = u64 [a1]\n  2679: a1 = a3 >> 0x3b\n  2682: a4 = a4 << 0x5\n  2685: a4 = a4 | a1\n  2688: a1 = a2 >> 0x3b\n  2691: a3 = a3 << 0x5\n  2694: a1 = a1 | a3\n  2697: a3 = a0 >> 0x3b\n  2700: a2 = a2 << 0x5\n  2703: a2 = a2 | a3\n  2706: a0 = a0 << 0x5\n  2709: u64 [sp + 0x40] = a0\n  2712: u64 [sp + 0x48] = a2\n  2715: u64 [sp + 0x50] = a1\n  2718: a0 = sp + 0x60\n  2721: a1 = sp + 0x40\n  2724: u64 [sp + 0x58] = a4\n  2727: ra = 54, jump @56\n      : @73 [@dyn 27] (gas: 14)\n  2732: a0 = u64 [sp + 0x70]\n  2735: a1 = u64 [sp + 0x78]\n  2738: a2 = u64 [sp + 0x60]\n  2741: a3 = u64 [sp + 0x68]\n  2744: u64 [s1 + 0x10] = a0\n  2747: u64 [s1 + 0x18] = a1\n  2750: u64 [s1] = a2\n  2752: u64 [s1 + 0x8] = a3\n  2755: sp = s0 + 0xffffffffffffff60\n  2759: ra = u64 [sp + 0x98]\n  2763: s0 = u64 [sp + 0x90]\n  2767: s1 = u64 [sp + 0x88]\n  2771: sp = sp + 0xa0\n  2775: ret\n      : @74 (gas: 8)\n  2777: u64 [sp + 48] = 0\n  2780: u64 [sp + 40] = 0\n  2783: u64 [sp + 32] = 0\n  2786: a0 = 0x4e487b7100000000\n  2796: a1 = sp + 0x20\n  2799: u64 [sp + 0x38] = a0\n  2802: a0 = 0\n  2804: ra = 56, jump @23\n      : @75 [@dyn 28] (gas: 7)\n  2809: u64 [sp + 24] = 0\n  2812: u64 [sp + 16] = 0\n  2815: u64 [sp + 0] = 0x41\n  2818: a0 = 0x4\n  2821: a1 = sp\n  2823: u64 [sp + 8] = 0\n  2826: ra = 58, jump @23\n      : @76 [@dyn 29] (gas: 3)\n  2831: a1 = 0x24\n  2834: a0 = 0\n  2836: ra = 60, jump @0\n      : @77 [@dyn 30] (gas: 6)\n  2841: i32 a1 = a0 + 0\n  2843: a0 = 0x1\n  2846: a2 = 0x24\n  2849: ra = 0x3e\n  2852: ecalli 6 // 'seal_return'\n  2854: fallthrough\n      : @78 [@dyn 31] (gas: 7)\n  2855: a3 = u64 [a1 + 0x18]\n  2858: a4 = u64 [a1 + 0x10]\n  2861: a2 = u64 [a1 + 0x8]\n  2864: a3 = a3 | a4\n  2867: a4 = a2 <u 0x1\n  2870: a4 = 0 if a3 != 0\n  2872: jump @80 if a4 == 0\n      : @79 (gas: 16)\n  2875: a1 = u64 [a1]\n  2877: a3 = a1 + 0x1f\n  2880: a1 = a3 <u a1\n  2883: a1 = a1 + a2\n  2886: a1 = a1 & 0x1\n  2889: a3 = a3 & 0xffffffffffffffe0\n  2892: a2 = a3 + 0x20\n  2895: a3 = a2 <u a3\n  2898: a4 = a1 + a3\n  2901: a1 = a4 <u a1\n  2904: a1 = a3 if a3 == 0\n  2907: u64 [a0 + 24] = 0\n  2910: u64 [a0] = a2\n  2912: u64 [a0 + 0x8] = a4\n  2915: u64 [a0 + 0x10] = a1\n  2918: ret\n      : @80 (gas: 13)\n  2920: sp = sp + 0xffffffffffffffb0\n  2923: u64 [sp + 0x48] = ra\n  2926: u64 [sp + 0x40] = s0\n  2929: s0 = sp + 0x50\n  2932: sp = sp & 0xfffffffffffffff0\n  2935: u64 [sp + 48] = 0\n  2938: u64 [sp + 40] = 0\n  2941: u64 [sp + 32] = 0\n  2944: a0 = 0x4e487b7100000000\n  2954: a1 = sp + 0x20\n  2957: u64 [sp + 0x38] = a0\n  2960: a0 = 0\n  2962: ra = 64, jump @23\n      : @81 [@dyn 32] (gas: 7)\n  2967: u64 [sp + 24] = 0\n  2970: u64 [sp + 16] = 0\n  2973: u64 [sp + 0] = 0x41\n  2976: a0 = 0x4\n  2979: a1 = sp\n  2981: u64 [sp + 8] = 0\n  2984: ra = 66, jump @23\n      : @82 [@dyn 33] (gas: 3)\n  2989: a1 = 0x24\n  2992: a0 = 0\n  2994: ra = 68, jump @0\n      : @83 [@dyn 34] (gas: 6)\n  2999: i32 a1 = a0 + 0\n  3001: a0 = 0x1\n  3004: a2 = 0x24\n  3007: ra = 0x46\n  3010: ecalli 6 // 'seal_return'\n  3012: fallthrough\n      : @84 [@dyn 35] (gas: 16)\n  3013: sp = sp + 0xffffffffffffff20\n  3017: u64 [sp + 0xd8] = ra\n  3021: u64 [sp + 0xd0] = s0\n  3025: u64 [sp + 0xc8] = s1\n  3029: s0 = sp + 0xe0\n  3033: sp = sp & 0xfffffffffffffff0\n  3036: a3 = u64 [a1 + 0x18]\n  3039: a2 = u64 [a1 + 0x10]\n  3042: a4 = u64 [a1 + 0x8]\n  3045: u64 [sp + 0x10] = a2\n  3048: u64 [sp + 0x8] = a3\n  3051: a2 = a2 | a3\n  3054: a3 = a4 <u 0x1\n  3057: a3 = 0 if a2 != 0\n  3059: u64 [sp + 0x38] = a0\n  3062: jump @90 if a3 == 0\n      : @85 (gas: 19)\n  3066: s1 = u64 [a1]\n  3068: a0 = s1 + 0x1f\n  3071: a1 = a0 <u s1\n  3074: u64 [sp + 0x18] = a4\n  3077: a1 = a1 + a4\n  3080: a1 = a1 & 0x1\n  3083: a0 = a0 & 0xffffffffffffffe0\n  3086: a2 = a0 + 0x20\n  3089: a0 = a2 <u a0\n  3092: a3 = a1 + a0\n  3095: a4 = a3 <u a1\n  3098: a4 = a0 if a0 == 0\n  3101: u64 [sp + 152] = 0\n  3105: u64 [sp + 0x80] = a2\n  3109: u64 [sp + 0x88] = a3\n  3113: a0 = sp + 0xa0\n  3117: a1 = sp + 0x80\n  3121: u64 [sp + 0x90] = a4\n  3125: ra = 72, jump @56\n      : @86 [@dyn 36] (gas: 15)\n  3130: a0 = u64 [sp + 0xb8]\n  3134: a2 = u64 [sp + 0xb0]\n  3138: a1 = u64 [sp + 0xa8]\n  3142: a3 = u64 [sp + 0xa0]\n  3146: u64 [sp + 0x28] = a0\n  3149: u64 [sp + 0x20] = a1\n  3152: a0 = a0 | a1\n  3155: a1 = a3 | a2\n  3158: a1 = a1 | a0\n  3161: a1 = a1 >> 0x20\n  3164: u64 [sp + 0x30] = a2\n  3167: a0 = a0 | a2\n  3170: a0 = a0 << 0x20\n  3173: a0 = a0 | a1\n  3176: jump @89 if a0 != 0\n      : @87 (gas: 4)\n  3180: i32 a0 = a3 + 0\n  3182: a1 = 0x20\n  3185: u64 [sp] = a3\n  3187: ra = 74, jump @0\n      : @88 [@dyn 37] (gas: 82)\n  3192: a1 = u64 [sp + 0x8]\n  3195: a1 = reverse a1\n  3197: a2 = u64 [sp + 0x10]\n  3200: a2 = reverse a2\n  3202: a3 = u64 [sp + 0x18]\n  3205: a3 = reverse a3\n  3207: a4 = reverse s1\n  3209: a5 = a4 >> 0x38\n  3212: u8 [a0 + 0x1f] = a5\n  3215: a5 = a4 >> 0x30\n  3218: u8 [a0 + 0x1e] = a5\n  3221: a5 = a4 >> 0x28\n  3224: u8 [a0 + 0x1d] = a5\n  3227: a5 = a4 >> 0x20\n  3230: u8 [a0 + 0x1c] = a5\n  3233: a5 = a4 >> 0x18\n  3236: u8 [a0 + 0x1b] = a5\n  3239: a5 = a4 >> 0x10\n  3242: u8 [a0 + 0x1a] = a5\n  3245: a5 = a4 >> 0x8\n  3248: u8 [a0 + 0x19] = a5\n  3251: u8 [a0 + 0x18] = a4\n  3254: u8 [a0 + 0x10] = a3\n  3257: a4 = a3 >> 0x38\n  3260: u8 [a0 + 0x17] = a4\n  3263: a4 = a3 >> 0x30\n  3266: u8 [a0 + 0x16] = a4\n  3269: a4 = a3 >> 0x28\n  3272: u8 [a0 + 0x15] = a4\n  3275: a4 = a3 >> 0x20\n  3278: u8 [a0 + 0x14] = a4\n  3281: a4 = a3 >> 0x18\n  3284: u8 [a0 + 0x13] = a4\n  3287: a4 = a3 >> 0x10\n  3290: u8 [a0 + 0x12] = a4\n  3293: a3 = a3 >> 0x8\n  3296: u8 [a0 + 0x11] = a3\n  3299: u8 [a0 + 0x8] = a2\n  3302: a3 = a2 >> 0x38\n  3305: u8 [a0 + 0xf] = a3\n  3308: a3 = a2 >> 0x30\n  3311: u8 [a0 + 0xe] = a3\n  3314: a3 = a2 >> 0x28\n  3317: u8 [a0 + 0xd] = a3\n  3320: a3 = a2 >> 0x20\n  3323: u8 [a0 + 0xc] = a3\n  3326: a3 = a2 >> 0x18\n  3329: u8 [a0 + 0xb] = a3\n  3332: a3 = a2 >> 0x10\n  3335: u8 [a0 + 0xa] = a3\n  3338: a2 = a2 >> 0x8\n  3341: u8 [a0 + 0x9] = a2\n  3344: u8 [a0] = a1\n  3346: a2 = a1 >> 0x38\n  3349: u8 [a0 + 0x7] = a2\n  3352: a2 = a1 >> 0x30\n  3355: u8 [a0 + 0x6] = a2\n  3358: a2 = a1 >> 0x28\n  3361: u8 [a0 + 0x5] = a2\n  3364: a2 = a1 >> 0x20\n  3367: u8 [a0 + 0x4] = a2\n  3370: a2 = a1 >> 0x18\n  3373: u8 [a0 + 0x3] = a2\n  3376: a2 = a1 >> 0x10\n  3379: u8 [a0 + 0x2] = a2\n  3382: a1 = a1 >> 0x8\n  3385: u8 [a0 + 0x1] = a1\n  3388: a0 = u64 [sp + 0x38]\n  3391: a1 = u64 [sp]\n  3393: u64 [a0] = a1\n  3395: a1 = u64 [sp + 0x28]\n  3398: u64 [a0 + 0x18] = a1\n  3401: a1 = u64 [sp + 0x20]\n  3404: u64 [a0 + 0x8] = a1\n  3407: a1 = u64 [sp + 0x30]\n  3410: u64 [a0 + 0x10] = a1\n  3413: sp = s0 + 0xffffffffffffff20\n  3417: ra = u64 [sp + 0xd8]\n  3421: s0 = u64 [sp + 0xd0]\n  3425: s1 = u64 [sp + 0xc8]\n  3429: sp = sp + 0xe0\n  3433: ret\n      : @89 (gas: 1)\n  3435: trap\n      : @90 (gas: 8)\n  3436: u64 [sp + 112] = 0\n  3439: u64 [sp + 104] = 0\n  3442: u64 [sp + 96] = 0\n  3445: a0 = 0x4e487b7100000000\n  3455: a1 = sp + 0x60\n  3458: u64 [sp + 0x78] = a0\n  3461: a0 = 0\n  3463: ra = 76, jump @23\n      : @91 [@dyn 38] (gas: 7)\n  3468: u64 [sp + 88] = 0\n  3471: u64 [sp + 80] = 0\n  3474: u64 [sp + 64] = 0x41\n  3478: a0 = 0x4\n  3481: a1 = sp + 0x40\n  3484: u64 [sp + 72] = 0\n  3487: ra = 78, jump @23\n      : @92 [@dyn 39] (gas: 3)\n  3492: a1 = 0x24\n  3495: a0 = 0\n  3497: ra = 80, jump @0\n      : @93 [@dyn 40] (gas: 6)\n  3502: i32 a1 = a0 + 0\n  3504: a0 = 0x1\n  3507: a2 = 0x24\n  3510: ra = 0x52\n  3513: ecalli 6 // 'seal_return'\n  3515: fallthrough\n      : @94 [@dyn 41] (gas: 12)\n  3516: a1 = u64 [a0 + 0x10]\n  3519: a2 = u64 [a0 + 0x18]\n  3522: a3 = u64 [a0 + 0x8]\n  3525: a0 = u64 [a0]\n  3527: a2 = a2 | a3\n  3530: a3 = a0 | a1\n  3533: a3 = a3 | a2\n  3536: a3 = a3 >> 0x20\n  3539: a1 = a1 | a2\n  3542: a1 = a1 << 0x20\n  3545: a1 = a1 | a3\n  3548: jump @97 if a1 != 0\n      : @95 (gas: 5)\n  3552: sp = sp + 0xfffffffffffffff8\n  3555: u64 [sp] = ra\n  3557: i32 a0 = a0 + 0\n  3559: a1 = 0x20\n  3562: ra = 84, jump @0\n      : @96 [@dyn 42] (gas: 37)\n  3567: u8 [a0 + 31] = 0\n  3570: u8 [a0 + 30] = 0\n  3573: u8 [a0 + 29] = 0\n  3576: u8 [a0 + 28] = 0\n  3579: u8 [a0 + 27] = 0\n  3582: u8 [a0 + 26] = 0\n  3585: u8 [a0 + 25] = 0\n  3588: u8 [a0 + 24] = 0\n  3591: u8 [a0 + 23] = 0\n  3594: u8 [a0 + 22] = 0\n  3597: u8 [a0 + 21] = 0\n  3600: u8 [a0 + 20] = 0\n  3603: u8 [a0 + 19] = 0\n  3606: u8 [a0 + 18] = 0\n  3609: u8 [a0 + 17] = 0\n  3612: u8 [a0 + 16] = 0\n  3615: u8 [a0 + 15] = 0\n  3618: u8 [a0 + 14] = 0\n  3621: u8 [a0 + 13] = 0\n  3624: u8 [a0 + 12] = 0\n  3627: u8 [a0 + 11] = 0\n  3630: u8 [a0 + 10] = 0\n  3633: u8 [a0 + 9] = 0\n  3636: u8 [a0 + 8] = 0\n  3639: u8 [a0 + 7] = 0\n  3642: u8 [a0 + 6] = 0x67\n  3646: u8 [a0 + 5] = 0x6e\n  3650: u8 [a0 + 4] = 0x69\n  3654: u8 [a0 + 3] = 0x7a\n  3658: a1 = 0x61\n  3661: u8 [a0 + 0x2] = a1\n  3664: a2 = 0x6d\n  3667: u8 [a0 + 0x1] = a2\n  3670: u8 [a0] = a1\n  3672: ra = u64 [sp]\n  3674: sp = sp + 0x8\n  3677: ret\n      : @97 (gas: 1)\n  3679: trap\n      : @98 [@dyn 43] (gas: 70)\n  3680: a1 = reverse s1\n  3682: a2 = u64 [sp + 0x68]\n  3685: a2 = reverse a2\n  3687: a3 = u64 [sp + 0x70]\n  3690: a3 = reverse a3\n  3692: a4 = u64 [sp + 0x78]\n  3695: a4 = reverse a4\n  3697: u8 [a0 + 0x18] = a4\n  3700: u8 [a0 + 0x10] = a3\n  3703: u8 [a0 + 0x8] = a2\n  3706: u8 [a0] = a1\n  3708: a5 = a4 >> 0x38\n  3711: u8 [a0 + 0x1f] = a5\n  3714: a5 = a4 >> 0x30\n  3717: u8 [a0 + 0x1e] = a5\n  3720: a5 = a4 >> 0x28\n  3723: u8 [a0 + 0x1d] = a5\n  3726: a5 = a4 >> 0x20\n  3729: u8 [a0 + 0x1c] = a5\n  3732: a5 = a4 >> 0x18\n  3735: u8 [a0 + 0x1b] = a5\n  3738: a5 = a4 >> 0x10\n  3741: u8 [a0 + 0x1a] = a5\n  3744: a4 = a4 >> 0x8\n  3747: u8 [a0 + 0x19] = a4\n  3750: a4 = a3 >> 0x38\n  3753: u8 [a0 + 0x17] = a4\n  3756: a4 = a3 >> 0x30\n  3759: u8 [a0 + 0x16] = a4\n  3762: a4 = a3 >> 0x28\n  3765: u8 [a0 + 0x15] = a4\n  3768: a4 = a3 >> 0x20\n  3771: u8 [a0 + 0x14] = a4\n  3774: a4 = a3 >> 0x18\n  3777: u8 [a0 + 0x13] = a4\n  3780: a4 = a3 >> 0x10\n  3783: u8 [a0 + 0x12] = a4\n  3786: a3 = a3 >> 0x8\n  3789: u8 [a0 + 0x11] = a3\n  3792: a3 = a2 >> 0x38\n  3795: u8 [a0 + 0xf] = a3\n  3798: a3 = a2 >> 0x30\n  3801: u8 [a0 + 0xe] = a3\n  3804: a3 = a2 >> 0x28\n  3807: u8 [a0 + 0xd] = a3\n  3810: a3 = a2 >> 0x20\n  3813: u8 [a0 + 0xc] = a3\n  3816: a3 = a2 >> 0x18\n  3819: u8 [a0 + 0xb] = a3\n  3822: a3 = a2 >> 0x10\n  3825: u8 [a0 + 0xa] = a3\n  3828: a2 = a2 >> 0x8\n  3831: u8 [a0 + 0x9] = a2\n  3834: a2 = a1 >> 0x38\n  3837: u8 [a0 + 0x7] = a2\n  3840: a2 = a1 >> 0x30\n  3843: u8 [a0 + 0x6] = a2\n  3846: a2 = a1 >> 0x28\n  3849: u8 [a0 + 0x5] = a2\n  3852: a2 = a1 >> 0x20\n  3855: u8 [a0 + 0x4] = a2\n  3858: a2 = a1 >> 0x18\n  3861: u8 [a0 + 0x3] = a2\n  3864: a2 = a1 >> 0x10\n  3867: u8 [a0 + 0x2] = a2\n  3870: a1 = a1 >> 0x8\n  3873: u8 [a0 + 0x1] = a1\n  3876: a1 = 0x20\n  3879: a0 = 0\n  3881: ra = 88, jump @0\n      : @99 [@dyn 44] (gas: 291)\n  3886: i32 a0 = a0 + 0\n  3888: i32 a2 = sp + 0x100\n  3892: a1 = 0x20\n  3895: ecalli 4 // 'hash_keccak_256'\n  3897: a0 = u64 [sp + 0x118]\n  3901: a1 = u64 [sp + 0x110]\n  3905: a2 = u64 [sp + 0x108]\n  3909: a3 = u64 [sp + 0x100]\n  3913: a0 = reverse a0\n  3915: u64 [sp + 0x48] = a0\n  3918: a1 = reverse a1\n  3920: u64 [sp + 0x40] = a1\n  3923: a2 = reverse a2\n  3925: u64 [sp + 0x38] = a2\n  3928: a3 = reverse a3\n  3930: u64 [sp + 0x30] = a3\n  3933: u64 [sp + 0xf8] = a3\n  3937: u64 [sp + 0xf0] = a2\n  3941: u64 [sp + 0xe8] = a1\n  3945: u64 [sp + 0xe0] = a0\n  3949: u64 [sp + 280] = 0\n  3953: u64 [sp + 272] = 0\n  3957: u64 [sp + 264] = 0\n  3961: u64 [sp + 256] = 0\n  3965: u32 [sp + 192] = 0x20\n  3970: i32 a1 = sp + 0xe0\n  3974: i32 a3 = sp + 0x100\n  3978: i32 a4 = sp + 0xc0\n  3982: a2 = 0xffffffffffffffff\n  3985: a0 = 0\n  3987: ecalli 3 // 'get_storage'\n  3989: ra = u64 [sp]\n  3991: a0 = ra >> 0x3d\n  3994: a3 = u64 [sp + 0x58]\n  3997: a1 = a3 << 0x3\n  4000: a1 = a1 | a0\n  4003: a0 = ra << 0x3\n  4006: a0 = a0 <u 0x100\n  4010: t0 = a0 ^ 0x1\n  4013: a2 = a1 >u 0\n  4015: t0 = a2 if a1 != 0\n  4018: a1 = a3 >> 0x3d\n  4021: s1 = u64 [sp + 0x8]\n  4024: a2 = s1 << 0x3\n  4027: a1 = a1 | a2\n  4030: a2 = s1 >> 0x3d\n  4033: a3 = u64 [sp + 0x60]\n  4036: a3 = a3 << 0x3\n  4039: a2 = a2 | a3\n  4042: a3 = a2 >u 0\n  4044: a4 = a1 >u 0\n  4046: a4 = a3 if a2 != 0\n  4049: a1 = a1 | a2\n  4052: t0 = a4 if a1 != 0\n  4055: a0 = u64 [sp + 0x100]\n  4059: u64 [sp + 0x28] = a0\n  4062: a0 = u64 [sp + 0x108]\n  4066: u64 [sp + 0x20] = a0\n  4069: a0 = u64 [sp + 0x110]\n  4073: u64 [sp + 0x18] = a0\n  4076: a0 = u64 [sp + 0x118]\n  4080: u64 [sp + 0x10] = a0\n  4083: u8 [sp + 159] = 0xff\n  4089: u8 [sp + 158] = 0xff\n  4095: u8 [sp + 157] = 0xff\n  4101: u8 [sp + 156] = 0xff\n  4107: u8 [sp + 155] = 0xff\n  4113: u8 [sp + 154] = 0xff\n  4119: u8 [sp + 153] = 0xff\n  4125: u8 [sp + 152] = 0xff\n  4131: u8 [sp + 151] = 0xff\n  4137: u8 [sp + 150] = 0xff\n  4143: u8 [sp + 149] = 0xff\n  4149: u8 [sp + 148] = 0xff\n  4155: u8 [sp + 147] = 0xff\n  4161: u8 [sp + 146] = 0xff\n  4167: u8 [sp + 145] = 0xff\n  4173: u8 [sp + 144] = 0xff\n  4179: u8 [sp + 143] = 0xff\n  4185: u8 [sp + 142] = 0xff\n  4191: u8 [sp + 141] = 0xff\n  4197: u8 [sp + 140] = 0xff\n  4203: u8 [sp + 139] = 0xff\n  4209: u8 [sp + 138] = 0xff\n  4215: u8 [sp + 137] = 0xff\n  4221: u8 [sp + 136] = 0xff\n  4227: u8 [sp + 135] = 0xff\n  4233: u8 [sp + 134] = 0xff\n  4239: u8 [sp + 133] = 0xff\n  4245: u8 [sp + 132] = 0xff\n  4251: u8 [sp + 131] = 0xff\n  4257: u8 [sp + 130] = 0xff\n  4263: u8 [sp + 129] = 0xff\n  4269: u8 [sp + 128] = 0xff\n  4275: a5 = ra & 0x1f\n  4278: a1 = sp + 0x80\n  4282: a5 = a5 + a1\n  4285: u8 [sp + 191] = 0\n  4289: u8 [sp + 190] = 0\n  4293: u8 [sp + 189] = 0\n  4297: u8 [sp + 188] = 0\n  4301: u8 [sp + 187] = 0\n  4305: u8 [sp + 186] = 0\n  4309: u8 [sp + 185] = 0\n  4313: u8 [sp + 184] = 0\n  4317: u8 [sp + 183] = 0\n  4321: u8 [sp + 182] = 0\n  4325: u8 [sp + 181] = 0\n  4329: u8 [sp + 180] = 0\n  4333: u8 [sp + 179] = 0\n  4337: u8 [sp + 178] = 0\n  4341: u8 [sp + 177] = 0\n  4345: u8 [sp + 176] = 0\n  4349: u8 [sp + 175] = 0\n  4353: u8 [sp + 174] = 0\n  4357: u8 [sp + 173] = 0\n  4361: u8 [sp + 172] = 0\n  4365: u8 [sp + 171] = 0\n  4369: u8 [sp + 170] = 0\n  4373: u8 [sp + 169] = 0\n  4377: u8 [sp + 168] = 0\n  4381: u8 [sp + 167] = 0\n  4385: u8 [sp + 166] = 0\n  4389: u8 [sp + 165] = 0\n  4393: u8 [sp + 164] = 0\n  4397: u8 [sp + 163] = 0\n  4401: u8 [sp + 162] = 0\n  4405: u8 [sp + 161] = 0\n  4409: u8 [sp + 160] = 0\n  4413: a1 = u8 [a5 + 0x1]\n  4416: a2 = u8 [a5]\n  4418: a3 = u8 [a5 + 0x2]\n  4421: a4 = u8 [a5 + 0x3]\n  4424: a1 = a1 << 0x8\n  4427: a1 = a1 | a2\n  4430: a3 = a3 << 0x10\n  4433: a4 = a4 << 0x18\n  4436: a3 = a3 | a4\n  4439: a1 = a1 | a3\n  4442: a2 = u8 [a5 + 0x5]\n  4445: a3 = u8 [a5 + 0x4]\n  4448: a4 = u8 [a5 + 0x6]\n  4451: a0 = u8 [a5 + 0x7]\n  4454: a2 = a2 << 0x8\n  4457: a2 = a2 | a3\n  4460: a4 = a4 << 0x10\n  4463: a0 = a0 << 0x18\n  4466: a0 = a0 | a4\n  4469: a0 = a0 | a2\n  4472: a0 = a0 << 0x20\n  4475: t2 = a0 | a1\n  4478: a0 = u8 [a5 + 0x9]\n  4481: a2 = u8 [a5 + 0x8]\n  4484: a3 = u8 [a5 + 0xa]\n  4487: a4 = u8 [a5 + 0xb]\n  4490: a0 = a0 << 0x8\n  4493: a0 = a0 | a2\n  4496: a3 = a3 << 0x10\n  4499: a4 = a4 << 0x18\n  4502: a3 = a3 | a4\n  4505: a1 = a3 | a0\n  4508: a2 = u8 [a5 + 0xd]\n  4511: a3 = u8 [a5 + 0xc]\n  4514: a4 = u8 [a5 + 0xe]\n  4517: a0 = u8 [a5 + 0xf]\n  4520: a2 = a2 << 0x8\n  4523: a2 = a2 | a3\n  4526: a4 = a4 << 0x10\n  4529: a0 = a0 << 0x18\n  4532: a0 = a0 | a4\n  4535: a0 = a0 | a2\n  4538: a0 = a0 << 0x20\n  4541: t1 = a0 | a1\n  4544: a0 = u8 [a5 + 0x11]\n  4547: a1 = u8 [a5 + 0x10]\n  4550: a3 = u8 [a5 + 0x12]\n  4553: a4 = u8 [a5 + 0x13]\n  4556: a0 = a0 << 0x8\n  4559: a0 = a0 | a1\n  4562: a3 = a3 << 0x10\n  4565: a4 = a4 << 0x18\n  4568: a3 = a3 | a4\n  4571: a2 = a3 | a0\n  4574: a1 = u8 [a5 + 0x15]\n  4577: a3 = u8 [a5 + 0x14]\n  4580: a4 = u8 [a5 + 0x16]\n  4583: a0 = u8 [a5 + 0x17]\n  4586: a1 = a1 << 0x8\n  4589: a1 = a1 | a3\n  4592: a4 = a4 << 0x10\n  4595: a0 = a0 << 0x18\n  4598: a0 = a0 | a4\n  4601: a0 = a0 | a1\n  4604: a0 = a0 << 0x20\n  4607: a3 = a0 | a2\n  4610: a0 = u8 [a5 + 0x19]\n  4613: a1 = u8 [a5 + 0x18]\n  4616: a2 = u8 [a5 + 0x1a]\n  4619: a4 = u8 [a5 + 0x1b]\n  4622: a0 = a0 << 0x8\n  4625: a0 = a0 | a1\n  4628: a2 = a2 << 0x10\n  4631: a4 = a4 << 0x18\n  4634: a2 = a2 | a4\n  4637: a0 = a0 | a2\n  4640: a1 = u8 [a5 + 0x1d]\n  4643: a2 = u8 [a5 + 0x1c]\n  4646: a4 = u8 [a5 + 0x1e]\n  4649: a5 = u8 [a5 + 0x1f]\n  4652: a1 = a1 << 0x8\n  4655: a1 = a1 | a2\n  4658: a4 = a4 << 0x10\n  4661: a5 = a5 << 0x18\n  4664: a4 = a4 | a5\n  4667: a1 = a1 | a4\n  4670: a1 = a1 << 0x20\n  4673: a0 = a0 | a1\n  4676: a0 = a0 ^ 0xffffffffffffffff\n  4679: a1 = a3 ^ 0xffffffffffffffff\n  4682: a2 = t1 ^ 0xffffffffffffffff\n  4685: a3 = t2 ^ 0xffffffffffffffff\n  4688: a3 = 0xffffffffffffffff if t0 != 0\n  4691: a2 = 0xffffffffffffffff if t0 != 0\n  4694: a1 = 0xffffffffffffffff if t0 != 0\n  4697: a0 = 0xffffffffffffffff if t0 != 0\n  4700: a4 = u64 [sp + 0x10]\n  4703: t0 = a4 & a0\n  4706: a0 = u64 [sp + 0x18]\n  4709: a1 = a1 & a0\n  4712: a0 = u64 [sp + 0x20]\n  4715: a2 = a2 & a0\n  4718: a0 = u64 [sp + 0x28]\n  4721: a3 = a3 & a0\n  4724: a4 = u64 [sp + 0x60]\n  4727: a4 = a4 << 0x1\n  4730: a5 = s1 >> 0x3f\n  4733: a4 = a4 | a5\n  4736: a5 = s1 << 0x1\n  4739: a0 = u64 [sp + 0x58]\n  4742: s1 = a0 >> 0x3f\n  4745: a5 = a5 | s1\n  4748: s1 = a0 << 0x1\n  4751: a0 = ra >> 0x3f\n  4754: a0 = a0 | s1\n  4757: s1 = ra << 0x1\n  4760: a3 = a3 | s1\n  4763: a0 = a0 | a2\n  4766: a1 = a1 | a5\n  4769: a2 = t0 | a4\n  4772: a4 = u64 [sp + 0x50]\n  4775: u64 [sp + 0xf8] = a4\n  4779: a4 = u64 [sp + 0x68]\n  4782: u64 [sp + 0xf0] = a4\n  4786: a4 = u64 [sp + 0x70]\n  4789: u64 [sp + 0xe8] = a4\n  4793: a4 = u64 [sp + 0x78]\n  4796: u64 [sp + 0xe0] = a4\n  4800: u64 [sp + 0x118] = a2\n  4804: u64 [sp + 0x110] = a1\n  4808: u64 [sp + 0x108] = a0\n  4812: u64 [sp + 0x100] = a3\n  4816: i32 a1 = sp + 0xe0\n  4820: i32 a3 = sp + 0x100\n  4824: a2 = 0xffffffffffffffff\n  4827: a4 = 0x20\n  4830: a0 = 0\n  4832: ecalli 8 // 'set_storage'\n  4834: a0 = u64 [sp + 0x30]\n  4837: u64 [sp + 0xf8] = a0\n  4841: a0 = u64 [sp + 0x38]\n  4844: u64 [sp + 0xf0] = a0\n  4848: a0 = u64 [sp + 0x40]\n  4851: u64 [sp + 0xe8] = a0\n  4855: a0 = u64 [sp + 0x48]\n  4858: u64 [sp + 0xe0] = a0\n  4862: u64 [sp + 280] = 0\n  4866: u64 [sp + 272] = 0\n  4870: u64 [sp + 264] = 0\n  4874: u64 [sp + 256] = 0\n  4878: i32 a1 = sp + 0xe0\n  4882: i32 a3 = sp + 0x100\n  4886: a2 = 0xffffffffffffffff\n  4889: a4 = 0x20\n  4892: a0 = 0\n  4894: ecalli 8 // 'set_storage'\n  4896: sp = s0 + 0xfffffffffffffec0\n  4900: ra = u64 [sp + 0x138]\n  4904: s0 = u64 [sp + 0x130]\n  4908: s1 = u64 [sp + 0x128]\n  4912: sp = sp + 0x140\n  4916: ret\n      : @100 (gas: 37)\n  4918: sp = sp + 0xfffffffffffffde0\n  4922: u64 [sp + 0x218] = ra\n  4926: u64 [sp + 0x210] = s0\n  4930: u64 [sp + 0x208] = s1\n  4934: s0 = sp + 0x220\n  4938: sp = sp & 0xffffffffffffffe0\n  4941: a4 = u64 [a2 + 0x18]\n  4944: u64 [sp + 0xc0] = a4\n  4948: s1 = u64 [a3 + 0x18]\n  4951: t2 = u64 [a3 + 0x10]\n  4954: a5 = u64 [a3]\n  4956: a3 = u64 [a3 + 0x8]\n  4959: t0 = s1 >u 0\n  4961: a4 = t2 >u 0\n  4963: a4 = t0 if s1 != 0\n  4966: t1 = a3 >u 0\n  4968: u64 [sp + 0x78] = a5\n  4971: a5 = a5 <u 0x20\n  4974: a5 = a5 ^ 0x1\n  4977: a5 = t1 if a3 != 0\n  4980: t1 = u64 [a2 + 0x10]\n  4983: t0 = u64 [a2 + 0x8]\n  4986: ra = u64 [a2]\n  4988: a2 = u64 [a0 + 0x18]\n  4991: u64 [sp + 0x88] = a2\n  4995: a2 = u64 [a0 + 0x10]\n  4998: u64 [sp + 0x80] = a2\n  5002: a2 = u64 [a0 + 0x8]\n  5005: u64 [sp + 0x70] = a2\n  5008: a2 = u64 [a0]\n  5010: a0 = t2 | s1\n  5013: a5 = a4 if a0 != 0\n  5016: u64 [sp + 0x60] = a3\n  5019: u64 [sp + 0x68] = a2\n  5022: u64 [sp + 0x58] = t2\n  5025: u64 [sp + 0x50] = s1\n  5028: jump @111 if a5 == 0\n      : @101 (gas: 6)\n  5032: u64 [sp + 0xa8] = ra\n  5036: u64 [sp + 0xb0] = t0\n  5040: u64 [sp + 0xb8] = t1\n  5044: a1 = 0x20\n  5047: a0 = 0\n  5049: ra = 90, jump @0\n      : @102 [@dyn 45] (gas: 71)\n  5054: a1 = u64 [sp + 0x88]\n  5058: a1 = reverse a1\n  5060: a2 = u64 [sp + 0x80]\n  5064: a2 = reverse a2\n  5066: a3 = u64 [sp + 0x70]\n  5069: a3 = reverse a3\n  5071: a4 = u64 [sp + 0x68]\n  5074: a4 = reverse a4\n  5076: a5 = a4 >> 0x38\n  5079: u8 [a0 + 0x1f] = a5\n  5082: a5 = a4 >> 0x30\n  5085: u8 [a0 + 0x1e] = a5\n  5088: a5 = a4 >> 0x28\n  5091: u8 [a0 + 0x1d] = a5\n  5094: a5 = a4 >> 0x20\n  5097: u8 [a0 + 0x1c] = a5\n  5100: a5 = a4 >> 0x18\n  5103: u8 [a0 + 0x1b] = a5\n  5106: a5 = a4 >> 0x10\n  5109: u8 [a0 + 0x1a] = a5\n  5112: a5 = a4 >> 0x8\n  5115: u8 [a0 + 0x19] = a5\n  5118: u8 [a0 + 0x18] = a4\n  5121: u8 [a0 + 0x10] = a3\n  5124: a4 = a3 >> 0x38\n  5127: u8 [a0 + 0x17] = a4\n  5130: a4 = a3 >> 0x30\n  5133: u8 [a0 + 0x16] = a4\n  5136: a4 = a3 >> 0x28\n  5139: u8 [a0 + 0x15] = a4\n  5142: a4 = a3 >> 0x20\n  5145: u8 [a0 + 0x14] = a4\n  5148: a4 = a3 >> 0x18\n  5151: u8 [a0 + 0x13] = a4\n  5154: a4 = a3 >> 0x10\n  5157: u8 [a0 + 0x12] = a4\n  5160: a3 = a3 >> 0x8\n  5163: u8 [a0 + 0x11] = a3\n  5166: u8 [a0 + 0x8] = a2\n  5169: a3 = a2 >> 0x38\n  5172: u8 [a0 + 0xf] = a3\n  5175: a3 = a2 >> 0x30\n  5178: u8 [a0 + 0xe] = a3\n  5181: a3 = a2 >> 0x28\n  5184: u8 [a0 + 0xd] = a3\n  5187: a3 = a2 >> 0x20\n  5190: u8 [a0 + 0xc] = a3\n  5193: a3 = a2 >> 0x18\n  5196: u8 [a0 + 0xb] = a3\n  5199: a3 = a2 >> 0x10\n  5202: u8 [a0 + 0xa] = a3\n  5205: a2 = a2 >> 0x8\n  5208: u8 [a0 + 0x9] = a2\n  5211: u8 [a0] = a1\n  5213: a2 = a1 >> 0x38\n  5216: u8 [a0 + 0x7] = a2\n  5219: a2 = a1 >> 0x30\n  5222: u8 [a0 + 0x6] = a2\n  5225: a2 = a1 >> 0x28\n  5228: u8 [a0 + 0x5] = a2\n  5231: a2 = a1 >> 0x20\n  5234: u8 [a0 + 0x4] = a2\n  5237: a2 = a1 >> 0x18\n  5240: u8 [a0 + 0x3] = a2\n  5243: a2 = a1 >> 0x10\n  5246: u8 [a0 + 0x2] = a2\n  5249: a1 = a1 >> 0x8\n  5252: u8 [a0 + 0x1] = a1\n  5255: a1 = 0x20\n  5258: a0 = 0\n  5260: ra = 92, jump @0\n      : @103 [@dyn 46] (gas: 5)\n  5265: i32 a0 = a0 + 0\n  5267: i32 a2 = sp + 0x1e0\n  5271: a1 = 0x20\n  5274: ecalli 4 // 'hash_keccak_256'\n  5276: fallthrough\n      : @104 (gas: 52)\n  5277: a0 = u64 [sp + 0x1e0]\n  5281: a1 = u64 [sp + 0x1e8]\n  5285: a2 = u64 [sp + 0x1f8]\n  5289: a3 = u64 [sp + 0x1f0]\n  5293: a0 = reverse a0\n  5295: u64 [sp + 0x90] = a0\n  5299: t1 = reverse a1\n  5301: s1 = reverse a2\n  5303: a5 = reverse a3\n  5305: ra = u64 [sp + 0x78]\n  5308: a1 = ra + 0x1f\n  5311: a0 = a1 <u ra\n  5314: a3 = u64 [sp + 0x60]\n  5317: a2 = a3 + a0\n  5320: a3 = a2 <u a3\n  5323: a3 = a0 if a0 == 0\n  5326: t2 = u64 [sp + 0x58]\n  5329: a0 = t2 + a3\n  5332: a3 = a0 << 0x3b\n  5335: a4 = a2 >> 0x5\n  5338: a3 = a3 | a4\n  5341: a2 = a2 << 0x3b\n  5344: a1 = a1 >> 0x5\n  5347: a1 = a1 | a2\n  5350: t0 = s1 + a1\n  5353: u64 [sp + 0x98] = s1\n  5357: a1 = t0 <u s1\n  5360: s1 = a5 + a1\n  5363: a3 = a3 + s1\n  5366: a2 = a3 ^ a5\n  5369: u64 [sp + 0xd8] = a3\n  5373: u64 [sp + 0x40] = a5\n  5376: a3 = a3 <u a5\n  5379: a3 = a1 if a2 == 0\n  5382: a1 = a0 <u t2\n  5385: a2 = u64 [sp + 0x50]\n  5388: a1 = a1 + a2\n  5391: a0 = a0 >> 0x5\n  5394: a2 = a1 << 0x3b\n  5397: a0 = a0 | a2\n  5400: a1 = a1 >> 0x5\n  5403: a0 = a0 + t1\n  5406: t2 = a0 + a3\n  5409: a2 = t2 <u a0\n  5412: u64 [sp + 0x48] = t1\n  5415: a0 = a0 <u t1\n  5418: a3 = u64 [sp + 0x90]\n  5422: a1 = a1 + a3\n  5425: a1 = a1 + a0\n  5428: a0 = ra & 0x1f\n  5431: t1 = a1 + a2\n  5434: jump @106 if a0 == 0\n      : @105 (gas: 228)\n  5438: u8 [sp + 287] = 0\n  5442: u8 [sp + 286] = 0\n  5446: u8 [sp + 285] = 0\n  5450: u8 [sp + 284] = 0\n  5454: u8 [sp + 283] = 0\n  5458: u8 [sp + 282] = 0\n  5462: u8 [sp + 281] = 0\n  5466: u8 [sp + 280] = 0\n  5470: u8 [sp + 279] = 0\n  5474: u8 [sp + 278] = 0\n  5478: u8 [sp + 277] = 0\n  5482: u8 [sp + 276] = 0\n  5486: u8 [sp + 275] = 0\n  5490: u8 [sp + 274] = 0\n  5494: u8 [sp + 273] = 0\n  5498: u8 [sp + 272] = 0\n  5502: u8 [sp + 271] = 0\n  5506: u8 [sp + 270] = 0\n  5510: u8 [sp + 269] = 0\n  5514: u8 [sp + 268] = 0\n  5518: u8 [sp + 267] = 0\n  5522: u8 [sp + 266] = 0\n  5526: u8 [sp + 265] = 0\n  5530: u8 [sp + 264] = 0\n  5534: u8 [sp + 263] = 0\n  5538: u8 [sp + 262] = 0\n  5542: u8 [sp + 261] = 0\n  5546: u8 [sp + 260] = 0\n  5550: u8 [sp + 259] = 0\n  5554: u8 [sp + 258] = 0\n  5558: u8 [sp + 257] = 0\n  5562: u8 [sp + 256] = 0\n  5566: u8 [sp + 255] = 0xff\n  5572: u8 [sp + 254] = 0xff\n  5578: u8 [sp + 253] = 0xff\n  5584: u8 [sp + 251] = 0xff\n  5590: u8 [sp + 248] = 0xffffffffffffffff\n  5595: u8 [sp + 247] = 0xff\n  5601: u8 [sp + 246] = 0xff\n  5607: u8 [sp + 245] = 0xff\n  5613: u8 [sp + 243] = 0xff\n  5619: u8 [sp + 240] = 0xffffffffffffffff\n  5624: u8 [sp + 239] = 0xff\n  5630: u8 [sp + 238] = 0xff\n  5636: u8 [sp + 237] = 0xff\n  5642: u8 [sp + 235] = 0xff\n  5648: u8 [sp + 232] = 0xffffffffffffffff\n  5653: u8 [sp + 231] = 0xff\n  5659: u8 [sp + 230] = 0xff\n  5665: u8 [sp + 229] = 0xff\n  5671: u8 [sp + 227] = 0xff\n  5677: u8 [sp + 224] = 0xffffffffffffffff\n  5682: a1 = 0xffffffff\n  5692: u8 [sp + 0xfc] = a1\n  5696: a3 = 0xffffffffffff\n  5706: u8 [sp + 0xfa] = a3\n  5710: a2 = 0xffffffffffffff\n  5720: u8 [sp + 0xf9] = a2\n  5724: u8 [sp + 0xf4] = a1\n  5728: u8 [sp + 0xf2] = a3\n  5732: u8 [sp + 0xf1] = a2\n  5736: u8 [sp + 0xec] = a1\n  5740: u8 [sp + 0xea] = a3\n  5744: u8 [sp + 0xe9] = a2\n  5748: u8 [sp + 0xe4] = a1\n  5752: u8 [sp + 0xe2] = a3\n  5756: u8 [sp + 0xe1] = a2\n  5760: a0 = a0 << 0x3\n  5763: i32 a1 = 0x100 - a0\n  5767: a1 = a1 << 0x38\n  5770: a0 = a1 >> 0x3b\n  5773: a1 = sp + 0xe0\n  5777: a0 = a0 + a1\n  5780: a1 = u8 [a0 + 0x19]\n  5783: a2 = u8 [a0 + 0x18]\n  5786: a3 = u8 [a0 + 0x1a]\n  5789: a4 = u8 [a0 + 0x1b]\n  5792: a1 = a1 << 0x8\n  5795: a1 = a1 | a2\n  5798: a3 = a3 << 0x10\n  5801: a4 = a4 << 0x18\n  5804: a3 = a3 | a4\n  5807: a1 = a1 | a3\n  5810: a2 = u8 [a0 + 0x1d]\n  5813: a3 = u8 [a0 + 0x1c]\n  5816: a4 = u8 [a0 + 0x1e]\n  5819: a5 = u8 [a0 + 0x1f]\n  5822: a2 = a2 << 0x8\n  5825: a2 = a2 | a3\n  5828: a4 = a4 << 0x10\n  5831: a5 = a5 << 0x18\n  5834: a4 = a4 | a5\n  5837: a2 = a2 | a4\n  5840: a2 = a2 << 0x20\n  5843: a1 = a1 | a2\n  5846: u64 [sp + 0x38] = a1\n  5849: a1 = u8 [a0 + 0x11]\n  5852: a2 = u8 [a0 + 0x10]\n  5855: a3 = u8 [a0 + 0x12]\n  5858: a4 = u8 [a0 + 0x13]\n  5861: a1 = a1 << 0x8\n  5864: a1 = a1 | a2\n  5867: a3 = a3 << 0x10\n  5870: a4 = a4 << 0x18\n  5873: a3 = a3 | a4\n  5876: a1 = a1 | a3\n  5879: a2 = u8 [a0 + 0x15]\n  5882: a3 = u8 [a0 + 0x14]\n  5885: a4 = u8 [a0 + 0x16]\n  5888: a5 = u8 [a0 + 0x17]\n  5891: a2 = a2 << 0x8\n  5894: a2 = a2 | a3\n  5897: a4 = a4 << 0x10\n  5900: a5 = a5 << 0x18\n  5903: a4 = a4 | a5\n  5906: a2 = a2 | a4\n  5909: a2 = a2 << 0x20\n  5912: a1 = a1 | a2\n  5915: u64 [sp + 0x28] = a1\n  5918: a1 = u8 [a0 + 0x9]\n  5921: a2 = u8 [a0 + 0x8]\n  5924: a3 = u8 [a0 + 0xa]\n  5927: a4 = u8 [a0 + 0xb]\n  5930: a1 = a1 << 0x8\n  5933: a1 = a1 | a2\n  5936: a3 = a3 << 0x10\n  5939: a4 = a4 << 0x18\n  5942: a3 = a3 | a4\n  5945: a1 = a1 | a3\n  5948: a2 = u8 [a0 + 0xd]\n  5951: a3 = u8 [a0 + 0xc]\n  5954: a4 = u8 [a0 + 0xe]\n  5957: a5 = u8 [a0 + 0xf]\n  5960: a2 = a2 << 0x8\n  5963: a2 = a2 | a3\n  5966: a4 = a4 << 0x10\n  5969: a5 = a5 << 0x18\n  5972: a4 = a4 | a5\n  5975: a2 = a2 | a4\n  5978: a2 = a2 << 0x20\n  5981: a1 = a1 | a2\n  5984: u64 [sp + 0x30] = a1\n  5987: a1 = u8 [a0 + 0x1]\n  5990: a2 = u8 [a0]\n  5992: a3 = u8 [a0 + 0x2]\n  5995: a4 = u8 [a0 + 0x3]\n  5998: a1 = a1 << 0x8\n  6001: a1 = a1 | a2\n  6004: a3 = a3 << 0x10\n  6007: a4 = a4 << 0x18\n  6010: a3 = a3 | a4\n  6013: a1 = a1 | a3\n  6016: a2 = u8 [a0 + 0x5]\n  6019: a3 = u8 [a0 + 0x4]\n  6022: a4 = u8 [a0 + 0x6]\n  6025: a0 = u8 [a0 + 0x7]\n  6028: a2 = a2 << 0x8\n  6031: a2 = a2 | a3\n  6034: a4 = a4 << 0x10\n  6037: a0 = a0 << 0x18\n  6040: a0 = a0 | a4\n  6043: a4 = u64 [sp + 0xd8]\n  6047: a3 = t0 | a4\n  6050: a3 = a3 <u 0x1\n  6053: a0 = a0 | a2\n  6056: a2 = t2 <u a3\n  6059: s1 = t1 - a2\n  6062: a2 = t2 - a3\n  6065: u64 [sp + 0x8] = a2\n  6068: a0 = a0 << 0x20\n  6071: a0 = a0 | a1\n  6074: u64 [sp + 0x20] = a0\n  6077: a0 = t0 <u 0x1\n  6080: a4 = a4 - a0\n  6083: u64 [sp + 0x18] = a4\n  6086: u32 [sp + 416] = 0x20\n  6091: a0 = t0 + 0xffffffffffffffff\n  6094: u64 [sp + 0x10] = a0\n  6097: u64 [sp + 0x1c8] = a4\n  6101: u64 [sp + 0x1c0] = a0\n  6105: u64 [sp + 0x1d0] = a2\n  6109: u64 [sp + 0x1d8] = s1\n  6113: u64 [sp + 504] = 0\n  6117: u64 [sp + 496] = 0\n  6121: u64 [sp + 488] = 0\n  6125: u64 [sp + 480] = 0\n  6129: i32 a1 = sp + 0x1c0\n  6133: i32 a3 = sp + 0x1e0\n  6137: i32 a4 = sp + 0x1a0\n  6141: a2 = 0xffffffffffffffff\n  6144: a0 = 0\n  6146: u64 [sp + 0xd0] = t0\n  6150: u64 [sp + 0xc8] = t1\n  6154: u64 [sp + 0xa0] = t2\n  6158: ecalli 3 // 'get_storage'\n  6160: a0 = u64 [sp + 0x1e0]\n  6164: a1 = u64 [sp + 0x1e8]\n  6168: a2 = u64 [sp + 0x1f0]\n  6172: a3 = u64 [sp + 0x1f8]\n  6176: a4 = u64 [sp + 0x20]\n  6179: a0 = a0 & a4\n  6182: a4 = u64 [sp + 0x30]\n  6185: a1 = a1 & a4\n  6188: a4 = u64 [sp + 0x28]\n  6191: a2 = a2 & a4\n  6194: a4 = u64 [sp + 0x38]\n  6197: a3 = a3 & a4\n  6200: u64 [sp + 0x1d8] = s1\n  6204: a4 = u64 [sp + 0x8]\n  6207: u64 [sp + 0x1d0] = a4\n  6211: a4 = u64 [sp + 0x18]\n  6214: u64 [sp + 0x1c8] = a4\n  6218: a4 = u64 [sp + 0x10]\n  6221: u64 [sp + 0x1c0] = a4\n  6225: u64 [sp + 0x1f8] = a3\n  6229: u64 [sp + 0x1f0] = a2\n  6233: u64 [sp + 0x1e8] = a1\n  6237: u64 [sp + 0x1e0] = a0\n  6241: i32 a1 = sp + 0x1c0\n  6245: i32 a3 = sp + 0x1e0\n  6249: a2 = 0xffffffffffffffff\n  6252: a4 = 0x20\n  6255: a0 = 0\n  6257: ecalli 8 // 'set_storage'\n  6259: t2 = u64 [sp + 0xa0]\n  6263: t1 = u64 [sp + 0xc8]\n  6267: t0 = u64 [sp + 0xd0]\n  6271: fallthrough\n      : @106 (gas: 55)\n  6272: a0 = u64 [sp + 0xa8]\n  6276: a1 = a0 + 0x1f\n  6279: a0 = a1 <u a0\n  6282: a3 = u64 [sp + 0xb0]\n  6286: a2 = a3 + a0\n  6289: a3 = a2 <u a3\n  6292: a3 = a0 if a0 == 0\n  6295: s1 = u64 [sp + 0xb8]\n  6299: a0 = s1 + a3\n  6302: a3 = a0 << 0x3b\n  6305: a4 = a2 >> 0x5\n  6308: a3 = a3 | a4\n  6311: a2 = a2 << 0x3b\n  6314: a1 = a1 >> 0x5\n  6317: a1 = a1 | a2\n  6320: a2 = u64 [sp + 0x98]\n  6324: ra = a2 + a1\n  6327: a1 = ra <u a2\n  6330: a4 = u64 [sp + 0x40]\n  6333: a2 = a4 + a1\n  6336: a5 = a2 + a3\n  6339: a2 = a5 ^ a4\n  6342: a3 = a5 <u a4\n  6345: a3 = a1 if a2 == 0\n  6348: a1 = a0 <u s1\n  6351: a2 = u64 [sp + 0xc0]\n  6355: a1 = a1 + a2\n  6358: a0 = a0 >> 0x5\n  6361: a2 = a1 << 0x3b\n  6364: a0 = a0 | a2\n  6367: s1 = a1 >> 0x5\n  6370: a1 = u64 [sp + 0x48]\n  6373: a0 = a0 + a1\n  6376: a4 = a0 + a3\n  6379: a2 = a4 <u a0\n  6382: a0 = a0 <u a1\n  6385: a3 = u64 [sp + 0x90]\n  6389: a1 = a3 + s1\n  6392: a0 = a0 + a1\n  6395: s1 = a0 + a2\n  6398: a0 = t2 <u a4\n  6401: a2 = u64 [sp + 0xd8]\n  6405: a1 = a2 ^ a5\n  6408: a2 = a2 <u a5\n  6411: a3 = t0 <u ra\n  6414: a3 = a2 if a1 != 0\n  6417: a1 = t1 ^ s1\n  6420: u64 [sp + 0xa8] = s1\n  6424: a2 = t1 <u s1\n  6427: a2 = a0 if a1 == 0\n  6430: u64 [sp + 0xb0] = a4\n  6434: a0 = t2 ^ a4\n  6437: a0 = a0 | a1\n  6440: a3 = a2 if a0 != 0\n  6443: jump @110 if a3 == 0\n      : @107 (gas: 9)\n  6447: i32 a0 = sp + 0x1c0\n  6451: u64 [sp + 0xc0] = a0\n  6455: i32 a0 = sp + 0x1e0\n  6459: u64 [sp + 0xb8] = a0\n  6463: i32 a0 = sp + 0x1a0\n  6467: u64 [sp + 0x90] = a0\n  6471: u64 [sp + 0xa0] = ra\n  6475: u64 [sp + 0x98] = a5\n  6479: fallthrough\n      : @108 (gas: 37)\n  6480: u64 [sp + 0xc8] = t1\n  6484: u64 [sp + 0xd0] = t0\n  6488: u64 [sp + 0x1d0] = t2\n  6492: a0 = u64 [sp + 0xd8]\n  6496: u64 [sp + 0x1c8] = a0\n  6500: u64 [sp + 0x1c0] = t0\n  6504: u64 [sp + 0x1d8] = t1\n  6508: u64 [sp + 504] = 0\n  6512: u64 [sp + 496] = 0\n  6516: u64 [sp + 488] = 0\n  6520: u64 [sp + 480] = 0\n  6524: u32 [sp + 416] = 0x20\n  6529: a2 = 0xffffffffffffffff\n  6532: a0 = 0\n  6534: a1 = u64 [sp + 0xc0]\n  6538: a3 = u64 [sp + 0xb8]\n  6542: a4 = u64 [sp + 0x90]\n  6546: s1 = t2\n  6548: ecalli 3 // 'get_storage'\n  6550: a0 = u64 [sp + 0xc8]\n  6554: u64 [sp + 0x1d8] = a0\n  6558: u64 [sp + 0x1d0] = s1\n  6562: a0 = u64 [sp + 0xd8]\n  6566: u64 [sp + 0x1c8] = a0\n  6570: a0 = u64 [sp + 0xd0]\n  6574: u64 [sp + 0x1c0] = a0\n  6578: u64 [sp + 504] = 0\n  6582: u64 [sp + 496] = 0\n  6586: u64 [sp + 488] = 0\n  6590: u64 [sp + 480] = 0\n  6594: a2 = 0xffffffffffffffff\n  6597: a4 = 0x20\n  6600: a0 = 0\n  6602: a1 = u64 [sp + 0xc0]\n  6606: a3 = u64 [sp + 0xb8]\n  6610: ecalli 8 // 'set_storage'\n  6612: fallthrough\n      : @109 (gas: 29)\n  6613: a5 = u64 [sp + 0x98]\n  6617: ra = u64 [sp + 0xa0]\n  6621: t1 = u64 [sp + 0xc8]\n  6625: t0 = u64 [sp + 0xd0]\n  6629: a3 = u64 [sp + 0xd8]\n  6633: t0 = t0 + 0x1\n  6636: a0 = t0 <u 0x1\n  6639: a3 = a3 + a0\n  6642: a0 = t0 | a3\n  6645: a0 = a0 <u 0x1\n  6648: a0 = a0 + s1\n  6651: a1 = a0 <u s1\n  6654: t1 = t1 + a1\n  6657: a1 = t0 <u ra\n  6660: a2 = a3 ^ a5\n  6663: u64 [sp + 0xd8] = a3\n  6667: a3 = a3 <u a5\n  6670: a3 = a1 if a2 == 0\n  6673: a1 = u64 [sp + 0xb0]\n  6677: s1 = a0 <u a1\n  6680: a4 = u64 [sp + 0xa8]\n  6684: a2 = t1 ^ a4\n  6687: a4 = t1 <u a4\n  6690: a4 = s1 if a2 == 0\n  6693: a1 = a1 ^ a0\n  6696: a1 = a1 | a2\n  6699: a4 = a3 if a1 == 0\n  6702: t2 = a0\n  6704: jump @108 if a4 != 0\n      : @110 (gas: 28)\n  6708: a2 = u64 [sp + 0x58]\n  6711: a0 = a2 >> 0x3f\n  6714: a1 = u64 [sp + 0x50]\n  6717: a1 = a1 << 0x1\n  6720: a0 = a0 | a1\n  6723: a3 = u64 [sp + 0x60]\n  6726: a1 = a3 >> 0x3f\n  6729: a2 = a2 << 0x1\n  6732: a1 = a1 | a2\n  6735: a4 = u64 [sp + 0x78]\n  6738: a2 = a4 >> 0x3f\n  6741: a3 = a3 << 0x1\n  6744: a2 = a2 | a3\n  6747: a3 = a4 << 0x1\n  6750: a3 = a3 + 0x1\n  6753: a4 = u64 [sp + 0x70]\n  6756: u64 [sp + 0x1c8] = a4\n  6760: a4 = u64 [sp + 0x68]\n  6763: u64 [sp + 0x1c0] = a4\n  6767: a4 = u64 [sp + 0x80]\n  6771: u64 [sp + 0x1d0] = a4\n  6775: a4 = u64 [sp + 0x88]\n  6779: u64 [sp + 0x1d8] = a4\n  6783: u64 [sp + 0x1e0] = a3\n  6787: u64 [sp + 0x1e8] = a2\n  6791: u64 [sp + 0x1f0] = a1\n  6795: u64 [sp + 0x1f8] = a0\n  6799: jump @122\n      : @111 (gas: 7)\n  6802: a4 = u64 [sp + 0x78]\n  6805: a0 = ra <u 0x20\n  6808: a0 = 0 if t0 != 0\n  6810: a2 = u64 [sp + 0xc0]\n  6814: a2 = t1 | a2\n  6817: a0 = 0 if a2 != 0\n  6819: jump @121 if a0 != 0\n      : @112 (gas: 5)\n  6823: a1 = 0x20\n  6826: u64 [sp + 0xb8] = t1\n  6830: u64 [sp + 0xb0] = t0\n  6834: u64 [sp + 0xa8] = ra\n  6838: ra = 94, jump @0\n      : @113 [@dyn 47] (gas: 71)\n  6843: a1 = u64 [sp + 0x88]\n  6847: a1 = reverse a1\n  6849: a2 = u64 [sp + 0x80]\n  6853: a2 = reverse a2\n  6855: a3 = u64 [sp + 0x70]\n  6858: a3 = reverse a3\n  6860: a4 = u64 [sp + 0x68]\n  6863: a4 = reverse a4\n  6865: a5 = a4 >> 0x38\n  6868: u8 [a0 + 0x1f] = a5\n  6871: a5 = a4 >> 0x30\n  6874: u8 [a0 + 0x1e] = a5\n  6877: a5 = a4 >> 0x28\n  6880: u8 [a0 + 0x1d] = a5\n  6883: a5 = a4 >> 0x20\n  6886: u8 [a0 + 0x1c] = a5\n  6889: a5 = a4 >> 0x18\n  6892: u8 [a0 + 0x1b] = a5\n  6895: a5 = a4 >> 0x10\n  6898: u8 [a0 + 0x1a] = a5\n  6901: a5 = a4 >> 0x8\n  6904: u8 [a0 + 0x19] = a5\n  6907: u8 [a0 + 0x18] = a4\n  6910: u8 [a0 + 0x10] = a3\n  6913: a4 = a3 >> 0x38\n  6916: u8 [a0 + 0x17] = a4\n  6919: a4 = a3 >> 0x30\n  6922: u8 [a0 + 0x16] = a4\n  6925: a4 = a3 >> 0x28\n  6928: u8 [a0 + 0x15] = a4\n  6931: a4 = a3 >> 0x20\n  6934: u8 [a0 + 0x14] = a4\n  6937: a4 = a3 >> 0x18\n  6940: u8 [a0 + 0x13] = a4\n  6943: a4 = a3 >> 0x10\n  6946: u8 [a0 + 0x12] = a4\n  6949: a3 = a3 >> 0x8\n  6952: u8 [a0 + 0x11] = a3\n  6955: u8 [a0 + 0x8] = a2\n  6958: a3 = a2 >> 0x38\n  6961: u8 [a0 + 0xf] = a3\n  6964: a3 = a2 >> 0x30\n  6967: u8 [a0 + 0xe] = a3\n  6970: a3 = a2 >> 0x28\n  6973: u8 [a0 + 0xd] = a3\n  6976: a3 = a2 >> 0x20\n  6979: u8 [a0 + 0xc] = a3\n  6982: a3 = a2 >> 0x18\n  6985: u8 [a0 + 0xb] = a3\n  6988: a3 = a2 >> 0x10\n  6991: u8 [a0 + 0xa] = a3\n  6994: a2 = a2 >> 0x8\n  6997: u8 [a0 + 0x9] = a2\n  7000: u8 [a0] = a1\n  7002: a2 = a1 >> 0x38\n  7005: u8 [a0 + 0x7] = a2\n  7008: a2 = a1 >> 0x30\n  7011: u8 [a0 + 0x6] = a2\n  7014: a2 = a1 >> 0x28\n  7017: u8 [a0 + 0x5] = a2\n  7020: a2 = a1 >> 0x20\n  7023: u8 [a0 + 0x4] = a2\n  7026: a2 = a1 >> 0x18\n  7029: u8 [a0 + 0x3] = a2\n  7032: a2 = a1 >> 0x10\n  7035: u8 [a0 + 0x2] = a2\n  7038: a1 = a1 >> 0x8\n  7041: u8 [a0 + 0x1] = a1\n  7044: a1 = 0x20\n  7047: a0 = 0\n  7049: ra = 96, jump @0\n      : @114 [@dyn 48] (gas: 5)\n  7054: i32 a0 = a0 + 0\n  7056: i32 a2 = sp + 0x1e0\n  7060: a1 = 0x20\n  7063: ecalli 4 // 'hash_keccak_256'\n  7065: fallthrough\n      : @115 (gas: 71)\n  7066: a0 = u64 [sp + 0x1e0]\n  7070: a1 = u64 [sp + 0x1e8]\n  7074: a2 = u64 [sp + 0x1f8]\n  7078: a3 = u64 [sp + 0x1f0]\n  7082: a0 = reverse a0\n  7084: u64 [sp + 0xd8] = a0\n  7088: t0 = reverse a1\n  7090: t1 = reverse a2\n  7092: s1 = reverse a3\n  7094: a0 = u64 [sp + 0xa8]\n  7098: t2 = a0 + 0x1f\n  7101: a4 = t2 <u a0\n  7104: a0 = u64 [sp + 0xb0]\n  7108: a5 = a0 + a4\n  7111: a0 = a5 <u a0\n  7114: a0 = a4 if a4 == 0\n  7117: a1 = u64 [sp + 0xb8]\n  7121: a0 = a0 + a1\n  7124: a4 = a0 <u a1\n  7127: a3 = u64 [sp + 0xc0]\n  7131: a3 = a3 + a4\n  7134: a2 = a0 >> 0x5\n  7137: a4 = a3 << 0x3b\n  7140: a2 = a2 | a4\n  7143: ra = a3 >> 0x5\n  7146: a0 = a0 << 0x3b\n  7149: a4 = a5 >> 0x5\n  7152: a0 = a0 | a4\n  7155: a5 = a5 << 0x3b\n  7158: a4 = t2 >> 0x5\n  7161: a4 = a4 | a5\n  7164: t2 = t1 + a4\n  7167: a4 = t2 <u t1\n  7170: a5 = s1 + a4\n  7173: a1 = a5 + a0\n  7176: a0 = a1 ^ s1\n  7179: a3 = a1 <u s1\n  7182: a3 = a4 if a0 == 0\n  7185: a2 = a2 + t0\n  7188: a5 = a2 + a3\n  7191: a0 = a5 <u a2\n  7194: a2 = a2 <u t0\n  7197: a4 = u64 [sp + 0xd8]\n  7201: a3 = a4 + ra\n  7204: a2 = a2 + a3\n  7207: a3 = a2 + a0\n  7210: t1 = t1 + 0x1\n  7213: a0 = t1 <u 0x1\n  7216: s1 = s1 + a0\n  7219: a0 = t1 | s1\n  7222: a0 = a0 <u 0x1\n  7225: ra = t0 + a0\n  7228: a0 = ra <u t0\n  7231: a4 = a4 + a0\n  7234: a0 = a5\n  7236: a5 = s1 ^ a1\n  7239: u64 [sp + 0xb8] = a1\n  7243: a1 = s1 <u a1\n  7246: u64 [sp + 0xc0] = t2\n  7250: a2 = t1 <u t2\n  7253: a2 = a1 if a5 != 0\n  7256: a5 = ra <u a0\n  7259: a1 = a4 ^ a3\n  7262: t0 = a3\n  7264: a3 = a4 <u a3\n  7267: a3 = a5 if a1 == 0\n  7270: a5 = a0\n  7272: a0 = ra ^ a0\n  7275: a0 = a0 | a1\n  7278: a2 = a3 if a0 != 0\n  7281: jump @119 if a2 == 0\n      : @116 (gas: 4)\n  7285: t2 = a4\n  7287: u64 [sp + 0xb0] = a5\n  7291: u64 [sp + 0xa8] = t0\n  7295: fallthrough\n      : @117 (gas: 37)\n  7296: u64 [sp + 0xd8] = s1\n  7300: u64 [sp + 0xd0] = t1\n  7304: u64 [sp + 0x1d0] = ra\n  7308: u64 [sp + 0x1c8] = s1\n  7312: u64 [sp + 0x1c0] = t1\n  7316: u64 [sp + 0xc8] = t2\n  7320: u64 [sp + 0x1d8] = t2\n  7324: u64 [sp + 504] = 0\n  7328: u64 [sp + 496] = 0\n  7332: u64 [sp + 488] = 0\n  7336: u64 [sp + 480] = 0\n  7340: u32 [sp + 416] = 0x20\n  7345: i32 a1 = sp + 0x1c0\n  7349: i32 a3 = sp + 0x1e0\n  7353: i32 a4 = sp + 0x1a0\n  7357: a2 = 0xffffffffffffffff\n  7360: a0 = 0\n  7362: s1 = ra\n  7364: ecalli 3 // 'get_storage'\n  7366: a0 = u64 [sp + 0xc8]\n  7370: u64 [sp + 0x1d8] = a0\n  7374: u64 [sp + 0x1d0] = s1\n  7378: a0 = u64 [sp + 0xd8]\n  7382: u64 [sp + 0x1c8] = a0\n  7386: a0 = u64 [sp + 0xd0]\n  7390: u64 [sp + 0x1c0] = a0\n  7394: u64 [sp + 504] = 0\n  7398: u64 [sp + 496] = 0\n  7402: u64 [sp + 488] = 0\n  7406: u64 [sp + 480] = 0\n  7410: i32 a1 = sp + 0x1c0\n  7414: i32 a3 = sp + 0x1e0\n  7418: a2 = 0xffffffffffffffff\n  7421: a4 = 0x20\n  7424: a0 = 0\n  7426: ecalli 8 // 'set_storage'\n  7428: fallthrough\n      : @118 (gas: 34)\n  7429: t1 = u64 [sp + 0xd0]\n  7433: a4 = u64 [sp + 0xa8]\n  7437: ra = u64 [sp + 0xb0]\n  7441: a3 = u64 [sp + 0xb8]\n  7445: t1 = t1 + 0x1\n  7448: a0 = t1 <u 0x1\n  7451: a1 = u64 [sp + 0xd8]\n  7455: a1 = a1 + a0\n  7458: u64 [sp + 0xd8] = a1\n  7462: a0 = u64 [sp + 0xd8]\n  7466: a0 = t1 | a0\n  7469: a0 = a0 <u 0x1\n  7472: a0 = a0 + s1\n  7475: a1 = a0 <u s1\n  7478: s1 = u64 [sp + 0xc8]\n  7482: s1 = s1 + a1\n  7485: a1 = u64 [sp + 0xc0]\n  7489: a1 = t1 <u a1\n  7492: a2 = u64 [sp + 0xd8]\n  7496: a2 = a2 ^ a3\n  7499: a5 = u64 [sp + 0xd8]\n  7503: a3 = a5 <u a3\n  7506: a3 = a1 if a2 == 0\n  7509: a1 = a0 <u ra\n  7512: a2 = s1 ^ a4\n  7515: t2 = s1\n  7517: a4 = s1 <u a4\n  7520: s1 = u64 [sp + 0xd8]\n  7524: a4 = a1 if a2 == 0\n  7527: a1 = a0 ^ ra\n  7530: a1 = a1 | a2\n  7533: a4 = a3 if a1 == 0\n  7536: ra = a0\n  7538: jump @117 if a4 != 0\n      : @119 (gas: 45)\n  7542: a0 = u64 [sp + 0x78]\n  7545: u64 [sp + 0x120] = a0\n  7549: a0 = u64 [sp + 0x68]\n  7552: u64 [sp + 0x140] = a0\n  7556: a0 = u64 [sp + 0x60]\n  7559: u64 [sp + 0x128] = a0\n  7563: a0 = u64 [sp + 0x70]\n  7566: u64 [sp + 0x148] = a0\n  7570: a0 = u64 [sp + 0x58]\n  7573: u64 [sp + 0x130] = a0\n  7577: a0 = u64 [sp + 0x80]\n  7581: u64 [sp + 0x150] = a0\n  7585: a0 = u64 [sp + 0x50]\n  7588: u64 [sp + 0x138] = a0\n  7592: a0 = sp + 0x140\n  7596: a1 = sp + 0x120\n  7600: a2 = u64 [sp + 0x88]\n  7604: u64 [sp + 0x158] = a2\n  7608: ra = 0x62\n  7611: sp = sp + 0xfffffffffffffec0\n  7615: u64 [sp + 0x138] = ra\n  7619: u64 [sp + 0x130] = s0\n  7623: u64 [sp + 0x128] = s1\n  7627: s0 = sp + 0x140\n  7631: sp = sp & 0xffffffffffffffe0\n  7634: a2 = u64 [a1 + 0x18]\n  7637: u64 [sp + 0x60] = a2\n  7640: a2 = u64 [a1 + 0x10]\n  7643: u64 [sp + 0x8] = a2\n  7646: a2 = u64 [a1 + 0x8]\n  7649: u64 [sp + 0x58] = a2\n  7652: a1 = u64 [a1]\n  7654: u64 [sp] = a1\n  7656: a1 = u64 [a0]\n  7658: u64 [sp + 0x78] = a1\n  7661: a1 = u64 [a0 + 0x8]\n  7664: u64 [sp + 0x70] = a1\n  7667: a1 = u64 [a0 + 0x10]\n  7670: u64 [sp + 0x68] = a1\n  7673: s1 = u64 [a0 + 0x18]\n  7676: u64 [sp + 0x50] = s1\n  7679: a1 = 0x20\n  7682: a0 = 0\n  7684: ra = 0x56\n  7687: jump @0\n      : @120 [@dyn 49] (gas: 1)\n  7690: jump @123\n      : @121 (gas: 203)\n  7693: ra = u64 [a1 + 0x18]\n  7696: a0 = u64 [a1 + 0x10]\n  7699: u64 [sp + 0xc8] = a0\n  7703: a0 = u64 [a1 + 0x8]\n  7706: u64 [sp + 0xd0] = a0\n  7710: a0 = u64 [a1]\n  7712: u64 [sp + 0xd8] = a0\n  7716: u8 [sp + 383] = 0xff\n  7722: u8 [sp + 382] = 0xff\n  7728: u8 [sp + 381] = 0xff\n  7734: u8 [sp + 379] = 0xff\n  7740: u8 [sp + 375] = 0xff\n  7746: u8 [sp + 374] = 0xff\n  7752: u8 [sp + 373] = 0xff\n  7758: u8 [sp + 371] = 0xff\n  7764: u8 [sp + 367] = 0xff\n  7770: u8 [sp + 366] = 0xff\n  7776: u8 [sp + 365] = 0xff\n  7782: u8 [sp + 363] = 0xff\n  7788: u8 [sp + 359] = 0xff\n  7794: u8 [sp + 358] = 0xff\n  7800: u8 [sp + 357] = 0xff\n  7806: u8 [sp + 355] = 0xff\n  7812: a1 = 0xffffffff\n  7822: u8 [sp + 0x17c] = a1\n  7826: u8 [sp + 0x174] = a1\n  7830: u8 [sp + 0x16c] = a1\n  7834: u8 [sp + 0x164] = a1\n  7838: a1 = 0xffffffffffff\n  7848: u8 [sp + 0x17a] = a1\n  7852: u8 [sp + 0x172] = a1\n  7856: u8 [sp + 0x16a] = a1\n  7860: u8 [sp + 0x162] = a1\n  7864: u8 [sp + 376] = 0xffffffffffffffff\n  7869: u8 [sp + 368] = 0xffffffffffffffff\n  7874: u8 [sp + 360] = 0xffffffffffffffff\n  7879: u8 [sp + 352] = 0xffffffffffffffff\n  7884: a0 = 0xffffffffffffff\n  7894: u8 [sp + 0x179] = a0\n  7898: u8 [sp + 0x171] = a0\n  7902: u8 [sp + 0x169] = a0\n  7906: u8 [sp + 0x161] = a0\n  7910: t0 = a4\n  7912: a1 = a4 & 0x1f\n  7915: a0 = sp + 0x160\n  7919: a1 = a1 | a0\n  7922: u8 [sp + 415] = 0\n  7926: u8 [sp + 414] = 0\n  7930: u8 [sp + 413] = 0\n  7934: u8 [sp + 412] = 0\n  7938: u8 [sp + 411] = 0\n  7942: u8 [sp + 410] = 0\n  7946: u8 [sp + 409] = 0\n  7950: u8 [sp + 408] = 0\n  7954: u8 [sp + 407] = 0\n  7958: u8 [sp + 406] = 0\n  7962: u8 [sp + 405] = 0\n  7966: u8 [sp + 404] = 0\n  7970: u8 [sp + 403] = 0\n  7974: u8 [sp + 402] = 0\n  7978: u8 [sp + 401] = 0\n  7982: u8 [sp + 400] = 0\n  7986: u8 [sp + 399] = 0\n  7990: u8 [sp + 398] = 0\n  7994: u8 [sp + 397] = 0\n  7998: u8 [sp + 396] = 0\n  8002: u8 [sp + 395] = 0\n  8006: u8 [sp + 394] = 0\n  8010: u8 [sp + 393] = 0\n  8014: u8 [sp + 392] = 0\n  8018: u8 [sp + 391] = 0\n  8022: u8 [sp + 390] = 0\n  8026: u8 [sp + 389] = 0\n  8030: u8 [sp + 388] = 0\n  8034: u8 [sp + 387] = 0\n  8038: u8 [sp + 386] = 0\n  8042: u8 [sp + 385] = 0\n  8046: u8 [sp + 384] = 0\n  8050: a0 = u8 [a1 + 0x1]\n  8053: a5 = u8 [a1]\n  8055: s1 = u8 [a1 + 0x2]\n  8058: a2 = u8 [a1 + 0x3]\n  8061: a0 = a0 << 0x8\n  8064: a0 = a0 | a5\n  8067: s1 = s1 << 0x10\n  8070: a2 = a2 << 0x18\n  8073: a2 = a2 | s1\n  8076: a0 = a0 | a2\n  8079: a2 = u8 [a1 + 0x5]\n  8082: a5 = u8 [a1 + 0x4]\n  8085: s1 = u8 [a1 + 0x6]\n  8088: a3 = u8 [a1 + 0x7]\n  8091: a2 = a2 << 0x8\n  8094: a2 = a2 | a5\n  8097: s1 = s1 << 0x10\n  8100: a3 = a3 << 0x18\n  8103: a3 = a3 | s1\n  8106: a2 = a2 | a3\n  8109: a2 = a2 << 0x20\n  8112: t1 = a2 | a0\n  8115: a0 = u8 [a1 + 0x9]\n  8118: a2 = u8 [a1 + 0x8]\n  8121: a3 = u8 [a1 + 0xa]\n  8124: s1 = u8 [a1 + 0xb]\n  8127: a0 = a0 << 0x8\n  8130: a0 = a0 | a2\n  8133: a3 = a3 << 0x10\n  8136: s1 = s1 << 0x18\n  8139: a3 = a3 | s1\n  8142: a0 = a0 | a3\n  8145: a2 = u8 [a1 + 0xd]\n  8148: a3 = u8 [a1 + 0xc]\n  8151: s1 = u8 [a1 + 0xe]\n  8154: a4 = u8 [a1 + 0xf]\n  8157: a2 = a2 << 0x8\n  8160: a2 = a2 | a3\n  8163: s1 = s1 << 0x10\n  8166: a4 = a4 << 0x18\n  8169: a4 = a4 | s1\n  8172: a2 = a2 | a4\n  8175: a2 = a2 << 0x20\n  8178: s1 = a2 | a0\n  8181: a0 = u8 [a1 + 0x11]\n  8184: a2 = u8 [a1 + 0x10]\n  8187: a3 = u8 [a1 + 0x12]\n  8190: a4 = u8 [a1 + 0x13]\n  8193: a0 = a0 << 0x8\n  8196: a0 = a0 | a2\n  8199: a3 = a3 << 0x10\n  8202: a4 = a4 << 0x18\n  8205: a3 = a3 | a4\n  8208: a5 = a3 | a0\n  8211: a2 = u8 [a1 + 0x15]\n  8214: a3 = u8 [a1 + 0x14]\n  8217: a4 = u8 [a1 + 0x16]\n  8220: a0 = u8 [a1 + 0x17]\n  8223: a2 = a2 << 0x8\n  8226: a2 = a2 | a3\n  8229: a4 = a4 << 0x10\n  8232: a0 = a0 << 0x18\n  8235: a0 = a0 | a4\n  8238: a0 = a0 | a2\n  8241: a0 = a0 << 0x20\n  8244: a0 = a0 | a5\n  8247: a2 = u8 [a1 + 0x19]\n  8250: a3 = u8 [a1 + 0x18]\n  8253: a4 = u8 [a1 + 0x1a]\n  8256: a5 = u8 [a1 + 0x1b]\n  8259: a2 = a2 << 0x8\n  8262: a2 = a2 | a3\n  8265: a4 = a4 << 0x10\n  8268: a5 = a5 << 0x18\n  8271: a4 = a4 | a5\n  8274: a2 = a2 | a4\n  8277: a3 = u8 [a1 + 0x1d]\n  8280: a4 = u8 [a1 + 0x1c]\n  8283: a5 = u8 [a1 + 0x1e]\n  8286: a1 = u8 [a1 + 0x1f]\n  8289: a3 = a3 << 0x8\n  8292: a3 = a3 | a4\n  8295: a5 = a5 << 0x10\n  8298: a1 = a1 << 0x18\n  8301: a1 = a1 | a5\n  8304: a1 = a1 | a3\n  8307: a1 = a1 << 0x20\n  8310: a1 = a1 | a2\n  8313: ra = ra & ~a1\n  8316: a1 = u64 [sp + 0xc8]\n  8320: a0 = a1 & ~a0\n  8323: a1 = u64 [sp + 0xd0]\n  8327: a2 = a1 & ~s1\n  8330: a1 = u64 [sp + 0xd8]\n  8334: a3 = a1 & ~t1\n  8337: a4 = u64 [sp + 0x50]\n  8340: a4 = a4 << 0x1\n  8343: a1 = u64 [sp + 0x58]\n  8346: a5 = a1 >> 0x3f\n  8349: a4 = a4 | a5\n  8352: a5 = a1 << 0x1\n  8355: a1 = u64 [sp + 0x60]\n  8358: s1 = a1 >> 0x3f\n  8361: a5 = a5 | s1\n  8364: s1 = a1 << 0x1\n  8367: a1 = t0 >> 0x3f\n  8370: a1 = a1 | s1\n  8373: s1 = t0 << 0x1\n  8376: a3 = a3 | s1\n  8379: a1 = a1 | a2\n  8382: a0 = a0 | a5\n  8385: a2 = ra | a4\n  8388: a4 = u64 [sp + 0x70]\n  8391: u64 [sp + 0x1c8] = a4\n  8395: a4 = u64 [sp + 0x68]\n  8398: u64 [sp + 0x1c0] = a4\n  8402: a4 = u64 [sp + 0x80]\n  8406: u64 [sp + 0x1d0] = a4\n  8410: a4 = u64 [sp + 0x88]\n  8414: u64 [sp + 0x1d8] = a4\n  8418: u64 [sp + 0x1f8] = a2\n  8422: u64 [sp + 0x1f0] = a0\n  8426: u64 [sp + 0x1e8] = a1\n  8430: u64 [sp + 0x1e0] = a3\n  8434: fallthrough\n      : @122 (gas: 7)\n  8435: i32 a1 = sp + 0x1c0\n  8439: i32 a3 = sp + 0x1e0\n  8443: a2 = 0xffffffffffffffff\n  8446: a4 = 0x20\n  8449: a0 = 0\n  8451: ecalli 8 // 'set_storage'\n  8453: fallthrough\n      : @123 (gas: 6)\n  8454: sp = s0 + 0xfffffffffffffde0\n  8458: ra = u64 [sp + 0x218]\n  8462: s0 = u64 [sp + 0x210]\n  8466: s1 = u64 [sp + 0x208]\n  8470: sp = sp + 0x220\n  8474: ret\n      : @124 (gas: 21)\n  8476: sp = sp + 0xfffffffffffffec0\n  8480: u64 [sp + 0x138] = ra\n  8484: u64 [sp + 0x130] = s0\n  8488: u64 [sp + 0x128] = s1\n  8492: s0 = sp + 0x140\n  8496: sp = sp & 0xffffffffffffffe0\n  8499: a4 = u64 [a3 + 0x8]\n  8502: t0 = u64 [a3 + 0x18]\n  8505: a5 = u64 [a3]\n  8507: s1 = u64 [a3 + 0x10]\n  8510: a3 = a4 + 0xffffffffffffffff\n  8513: ra = a4\n  8515: a4 = a4 <u 0x1\n  8518: u64 [sp + 0x58] = a5\n  8521: a5 = a5 <u 0x1\n  8524: a5 = a4 if a3 != 0\n  8527: u64 [sp + 0x48] = s1\n  8530: u64 [sp + 0x40] = t0\n  8533: t1 = s1 | t0\n  8536: a5 = 0 if t1 != 0\n  8538: jump @134 if a5 == 0\n      : @125 (gas: 19)\n  8542: a4 = u64 [a2 + 0x18]\n  8545: a5 = u64 [a2 + 0x10]\n  8548: s1 = u64 [a2 + 0x8]\n  8551: a2 = u64 [a2]\n  8553: a3 = u64 [a0 + 0x18]\n  8556: u64 [sp + 0x50] = a3\n  8559: a3 = u64 [a0 + 0x10]\n  8562: t0 = u64 [a0 + 0x8]\n  8565: t2 = u64 [a0]\n  8567: a0 = s1 >u 0\n  8569: a2 = a2 <u 0x20\n  8572: a2 = a2 ^ 0x1\n  8575: a2 = a0 if s1 != 0\n  8578: a0 = a5 >u 0\n  8580: s1 = a4 >u 0\n  8582: s1 = a0 if a4 == 0\n  8585: a4 = a4 | a5\n  8588: s1 = a2 if a4 == 0\n  8591: jump @127 if s1 == 0\n      : @126 (gas: 25)\n  8594: a2 = u64 [sp + 0x48]\n  8597: a0 = a2 >> 0x3f\n  8600: a1 = u64 [sp + 0x40]\n  8603: a1 = a1 << 0x1\n  8606: a0 = a0 | a1\n  8609: a1 = ra >> 0x3f\n  8612: a2 = a2 << 0x1\n  8615: a1 = a1 | a2\n  8618: a4 = u64 [sp + 0x58]\n  8621: a2 = a4 >> 0x3f\n  8624: a5 = a3\n  8626: a3 = ra << 0x1\n  8629: a2 = a2 | a3\n  8632: a3 = a4 << 0x1\n  8635: a3 = a3 + 0x1\n  8638: u64 [sp + 0xe8] = t0\n  8642: u64 [sp + 0xe0] = t2\n  8646: u64 [sp + 0xf0] = a5\n  8650: a4 = u64 [sp + 0x50]\n  8653: u64 [sp + 0xf8] = a4\n  8657: u64 [sp + 0x100] = a3\n  8661: u64 [sp + 0x108] = a2\n  8665: u64 [sp + 0x110] = a1\n  8669: u64 [sp + 0x118] = a0\n  8673: jump @133\n      : @127 (gas: 15)\n  8676: u64 [sp + 0x28] = t0\n  8679: u64 [sp + 0x30] = t2\n  8682: u64 [sp + 0x38] = a3\n  8685: t2 = u64 [a1 + 0x18]\n  8688: a0 = u64 [a1 + 0x10]\n  8691: u64 [sp + 0x10] = a0\n  8694: a0 = u64 [a1 + 0x8]\n  8697: u64 [sp + 0x18] = a0\n  8700: t0 = u64 [a1]\n  8702: a0 = u64 [sp + 0x58]\n  8705: a1 = a0 <u 0x20\n  8708: u64 [sp + 0x20] = ra\n  8711: a1 = 0 if ra != 0\n  8713: a1 = 0 if t1 != 0\n  8715: jump @131 if a1 != 0\n      : @128 (gas: 6)\n  8719: a0 = t0 & 0xffffffffffffff00\n  8723: u64 [sp + 0x8] = a0\n  8726: a1 = 0x20\n  8729: a0 = 0\n  8731: u64 [sp] = t2\n  8733: ra = 100, jump @0\n      : @129 [@dyn 50] (gas: 71)\n  8738: s1 = u64 [sp + 0x50]\n  8741: a1 = reverse s1\n  8743: a2 = u64 [sp + 0x38]\n  8746: a2 = reverse a2\n  8748: a3 = u64 [sp + 0x28]\n  8751: a3 = reverse a3\n  8753: a4 = u64 [sp + 0x30]\n  8756: a4 = reverse a4\n  8758: a5 = a4 >> 0x38\n  8761: u8 [a0 + 0x1f] = a5\n  8764: a5 = a4 >> 0x30\n  8767: u8 [a0 + 0x1e] = a5\n  8770: a5 = a4 >> 0x28\n  8773: u8 [a0 + 0x1d] = a5\n  8776: a5 = a4 >> 0x20\n  8779: u8 [a0 + 0x1c] = a5\n  8782: a5 = a4 >> 0x18\n  8785: u8 [a0 + 0x1b] = a5\n  8788: a5 = a4 >> 0x10\n  8791: u8 [a0 + 0x1a] = a5\n  8794: a5 = a4 >> 0x8\n  8797: u8 [a0 + 0x19] = a5\n  8800: u8 [a0 + 0x18] = a4\n  8803: u8 [a0 + 0x10] = a3\n  8806: a4 = a3 >> 0x38\n  8809: u8 [a0 + 0x17] = a4\n  8812: a4 = a3 >> 0x30\n  8815: u8 [a0 + 0x16] = a4\n  8818: a4 = a3 >> 0x28\n  8821: u8 [a0 + 0x15] = a4\n  8824: a4 = a3 >> 0x20\n  8827: u8 [a0 + 0x14] = a4\n  8830: a4 = a3 >> 0x18\n  8833: u8 [a0 + 0x13] = a4\n  8836: a4 = a3 >> 0x10\n  8839: u8 [a0 + 0x12] = a4\n  8842: a3 = a3 >> 0x8\n  8845: u8 [a0 + 0x11] = a3\n  8848: u8 [a0 + 0x8] = a2\n  8851: a3 = a2 >> 0x38\n  8854: u8 [a0 + 0xf] = a3\n  8857: a3 = a2 >> 0x30\n  8860: u8 [a0 + 0xe] = a3\n  8863: a3 = a2 >> 0x28\n  8866: u8 [a0 + 0xd] = a3\n  8869: a3 = a2 >> 0x20\n  8872: u8 [a0 + 0xc] = a3\n  8875: a3 = a2 >> 0x18\n  8878: u8 [a0 + 0xb] = a3\n  8881: a3 = a2 >> 0x10\n  8884: u8 [a0 + 0xa] = a3\n  8887: a2 = a2 >> 0x8\n  8890: u8 [a0 + 0x9] = a2\n  8893: u8 [a0] = a1\n  8895: a2 = a1 >> 0x38\n  8898: u8 [a0 + 0x7] = a2\n  8901: a2 = a1 >> 0x30\n  8904: u8 [a0 + 0x6] = a2\n  8907: a2 = a1 >> 0x28\n  8910: u8 [a0 + 0x5] = a2\n  8913: a2 = a1 >> 0x20\n  8916: u8 [a0 + 0x4] = a2\n  8919: a2 = a1 >> 0x18\n  8922: u8 [a0 + 0x3] = a2\n  8925: a2 = a1 >> 0x10\n  8928: u8 [a0 + 0x2] = a2\n  8931: a1 = a1 >> 0x8\n  8934: u8 [a0 + 0x1] = a1\n  8937: a1 = 0x20\n  8940: a0 = 0\n  8942: ra = 102, jump @0\n      : @130 [@dyn 51] (gas: 53)\n  8947: i32 a0 = a0 + 0\n  8949: i32 a2 = sp + 0x100\n  8953: a1 = 0x20\n  8956: ecalli 4 // 'hash_keccak_256'\n  8958: a0 = u64 [sp + 0x118]\n  8962: a1 = u64 [sp + 0x110]\n  8966: a2 = u64 [sp + 0x108]\n  8970: a3 = u64 [sp + 0x100]\n  8974: a0 = reverse a0\n  8976: a1 = reverse a1\n  8978: a2 = reverse a2\n  8980: a3 = reverse a3\n  8982: u64 [sp + 0xf8] = a3\n  8986: u64 [sp + 0xf0] = a2\n  8990: u64 [sp + 0xe8] = a1\n  8994: u64 [sp + 0xe0] = a0\n  8998: a0 = u64 [sp]\n  9000: u64 [sp + 0x118] = a0\n  9004: a0 = u64 [sp + 0x10]\n  9007: u64 [sp + 0x110] = a0\n  9011: a0 = u64 [sp + 0x18]\n  9014: u64 [sp + 0x108] = a0\n  9018: a0 = u64 [sp + 0x8]\n  9021: u64 [sp + 0x100] = a0\n  9025: i32 a1 = sp + 0xe0\n  9029: i32 a3 = sp + 0x100\n  9033: a2 = 0xffffffffffffffff\n  9036: a4 = 0x20\n  9039: a0 = 0\n  9041: ecalli 8 // 'set_storage'\n  9043: a4 = u64 [sp + 0x58]\n  9046: a0 = a4 >> 0x3f\n  9049: a2 = u64 [sp + 0x20]\n  9052: a1 = a2 << 0x1\n  9055: a0 = a0 | a1\n  9058: a1 = a2 >> 0x3f\n  9061: a3 = u64 [sp + 0x48]\n  9064: a2 = a3 << 0x1\n  9067: a1 = a1 | a2\n  9070: a2 = a3 >> 0x3f\n  9073: a3 = u64 [sp + 0x40]\n  9076: a3 = a3 << 0x1\n  9079: a2 = a2 | a3\n  9082: a3 = a4 << 0x1\n  9085: a3 = a3 + 0x1\n  9088: u64 [sp + 0xf8] = s1\n  9092: a4 = u64 [sp + 0x38]\n  9095: u64 [sp + 0xf0] = a4\n  9099: a4 = u64 [sp + 0x28]\n  9102: u64 [sp + 0xe8] = a4\n  9106: a4 = u64 [sp + 0x30]\n  9109: u64 [sp + 0xe0] = a4\n  9113: jump @132\n      : @131 (gas: 188)\n  9116: u8 [sp + 191] = 0xff\n  9122: u8 [sp + 190] = 0xff\n  9128: u8 [sp + 189] = 0xff\n  9134: u8 [sp + 188] = 0xff\n  9140: u8 [sp + 187] = 0xff\n  9146: u8 [sp + 186] = 0xff\n  9152: u8 [sp + 185] = 0xff\n  9158: u8 [sp + 184] = 0xff\n  9164: u8 [sp + 183] = 0xff\n  9170: u8 [sp + 182] = 0xff\n  9176: u8 [sp + 181] = 0xff\n  9182: u8 [sp + 180] = 0xff\n  9188: u8 [sp + 179] = 0xff\n  9194: u8 [sp + 178] = 0xff\n  9200: u8 [sp + 177] = 0xff\n  9206: u8 [sp + 176] = 0xff\n  9212: u8 [sp + 175] = 0xff\n  9218: u8 [sp + 174] = 0xff\n  9224: u8 [sp + 173] = 0xff\n  9230: u8 [sp + 172] = 0xff\n  9236: u8 [sp + 171] = 0xff\n  9242: u8 [sp + 170] = 0xff\n  9248: u8 [sp + 169] = 0xff\n  9254: u8 [sp + 168] = 0xff\n  9260: u8 [sp + 167] = 0xff\n  9266: u8 [sp + 166] = 0xff\n  9272: u8 [sp + 165] = 0xff\n  9278: u8 [sp + 164] = 0xff\n  9284: u8 [sp + 163] = 0xff\n  9290: u8 [sp + 162] = 0xff\n  9296: u8 [sp + 161] = 0xff\n  9302: u8 [sp + 160] = 0xff\n  9308: ra = u64 [sp + 0x58]\n  9311: a1 = ra & 0x1f\n  9314: a2 = sp + 0xa0\n  9318: a1 = a1 | a2\n  9321: u8 [sp + 223] = 0\n  9325: u8 [sp + 222] = 0\n  9329: u8 [sp + 221] = 0\n  9333: u8 [sp + 220] = 0\n  9337: u8 [sp + 219] = 0\n  9341: u8 [sp + 218] = 0\n  9345: u8 [sp + 217] = 0\n  9349: u8 [sp + 216] = 0\n  9353: u8 [sp + 215] = 0\n  9357: u8 [sp + 214] = 0\n  9361: u8 [sp + 213] = 0\n  9365: u8 [sp + 212] = 0\n  9369: u8 [sp + 211] = 0\n  9373: u8 [sp + 210] = 0\n  9377: u8 [sp + 209] = 0\n  9381: u8 [sp + 208] = 0\n  9385: u8 [sp + 207] = 0\n  9389: u8 [sp + 206] = 0\n  9393: u8 [sp + 205] = 0\n  9397: u8 [sp + 204] = 0\n  9401: u8 [sp + 203] = 0\n  9405: u8 [sp + 202] = 0\n  9409: u8 [sp + 201] = 0\n  9413: u8 [sp + 200] = 0\n  9417: u8 [sp + 199] = 0\n  9421: u8 [sp + 198] = 0\n  9425: u8 [sp + 197] = 0\n  9429: u8 [sp + 196] = 0\n  9433: u8 [sp + 195] = 0\n  9437: u8 [sp + 194] = 0\n  9441: u8 [sp + 193] = 0\n  9445: u8 [sp + 192] = 0\n  9449: a2 = u8 [a1 + 0x1]\n  9452: a3 = u8 [a1]\n  9454: a4 = u8 [a1 + 0x2]\n  9457: a5 = u8 [a1 + 0x3]\n  9460: a2 = a2 << 0x8\n  9463: a2 = a2 | a3\n  9466: a4 = a4 << 0x10\n  9469: a5 = a5 << 0x18\n  9472: a4 = a4 | a5\n  9475: a2 = a2 | a4\n  9478: a3 = u8 [a1 + 0x5]\n  9481: a4 = u8 [a1 + 0x4]\n  9484: a5 = u8 [a1 + 0x6]\n  9487: s1 = u8 [a1 + 0x7]\n  9490: a3 = a3 << 0x8\n  9493: a3 = a3 | a4\n  9496: a5 = a5 << 0x10\n  9499: s1 = s1 << 0x18\n  9502: a5 = a5 | s1\n  9505: a3 = a3 | a5\n  9508: a3 = a3 << 0x20\n  9511: t1 = a3 | a2\n  9514: a3 = u8 [a1 + 0x9]\n  9517: a4 = u8 [a1 + 0x8]\n  9520: a5 = u8 [a1 + 0xa]\n  9523: s1 = u8 [a1 + 0xb]\n  9526: a3 = a3 << 0x8\n  9529: a3 = a3 | a4\n  9532: a5 = a5 << 0x10\n  9535: s1 = s1 << 0x18\n  9538: a5 = a5 | s1\n  9541: a3 = a3 | a5\n  9544: a4 = u8 [a1 + 0xd]\n  9547: a5 = u8 [a1 + 0xc]\n  9550: s1 = u8 [a1 + 0xe]\n  9553: a0 = u8 [a1 + 0xf]\n  9556: a4 = a4 << 0x8\n  9559: a4 = a4 | a5\n  9562: s1 = s1 << 0x10\n  9565: a0 = a0 << 0x18\n  9568: a0 = a0 | s1\n  9571: a0 = a0 | a4\n  9574: a0 = a0 << 0x20\n  9577: a3 = a3 | a0\n  9580: a0 = u8 [a1 + 0x11]\n  9583: a4 = u8 [a1 + 0x10]\n  9586: a5 = u8 [a1 + 0x12]\n  9589: s1 = u8 [a1 + 0x13]\n  9592: a0 = a0 << 0x8\n  9595: a0 = a0 | a4\n  9598: a5 = a5 << 0x10\n  9601: s1 = s1 << 0x18\n  9604: a5 = a5 | s1\n  9607: a0 = a0 | a5\n  9610: a4 = u8 [a1 + 0x15]\n  9613: a5 = u8 [a1 + 0x14]\n  9616: s1 = u8 [a1 + 0x16]\n  9619: a2 = u8 [a1 + 0x17]\n  9622: a4 = a4 << 0x8\n  9625: a4 = a4 | a5\n  9628: s1 = s1 << 0x10\n  9631: a2 = a2 << 0x18\n  9634: a2 = a2 | s1\n  9637: a2 = a2 | a4\n  9640: a2 = a2 << 0x20\n  9643: a4 = a2 | a0\n  9646: a0 = u8 [a1 + 0x19]\n  9649: a2 = u8 [a1 + 0x18]\n  9652: a5 = u8 [a1 + 0x1a]\n  9655: s1 = u8 [a1 + 0x1b]\n  9658: a0 = a0 << 0x8\n  9661: a0 = a0 | a2\n  9664: a5 = a5 << 0x10\n  9667: s1 = s1 << 0x18\n  9670: a5 = a5 | s1\n  9673: a0 = a0 | a5\n  9676: a2 = u8 [a1 + 0x1d]\n  9679: a5 = u8 [a1 + 0x1c]\n  9682: s1 = u8 [a1 + 0x1e]\n  9685: a1 = u8 [a1 + 0x1f]\n  9688: a2 = a2 << 0x8\n  9691: a2 = a2 | a5\n  9694: s1 = s1 << 0x10\n  9697: a1 = a1 << 0x18\n  9700: a1 = a1 | s1\n  9703: a1 = a1 | a2\n  9706: a1 = a1 << 0x20\n  9709: a0 = a0 | a1\n  9712: t2 = t2 & ~a0\n  9715: a0 = u64 [sp + 0x10]\n  9718: a1 = a0 & ~a4\n  9721: a0 = u64 [sp + 0x18]\n  9724: a2 = a0 & ~a3\n  9727: a3 = t0 & ~t1\n  9730: a4 = u64 [sp + 0x40]\n  9733: a4 = a4 << 0x1\n  9736: a0 = u64 [sp + 0x48]\n  9739: a5 = a0 >> 0x3f\n  9742: a4 = a4 | a5\n  9745: a5 = a0 << 0x1\n  9748: a0 = u64 [sp + 0x20]\n  9751: s1 = a0 >> 0x3f\n  9754: a5 = a5 | s1\n  9757: s1 = a0 << 0x1\n  9760: a0 = ra >> 0x3f\n  9763: a0 = a0 | s1\n  9766: s1 = ra << 0x1\n  9769: a3 = a3 | s1\n  9772: a0 = a0 | a2\n  9775: a1 = a1 | a5\n  9778: a2 = t2 | a4\n  9781: a4 = u64 [sp + 0x28]\n  9784: u64 [sp + 0xe8] = a4\n  9788: a4 = u64 [sp + 0x30]\n  9791: u64 [sp + 0xe0] = a4\n  9795: a4 = u64 [sp + 0x38]\n  9798: u64 [sp + 0xf0] = a4\n  9802: a4 = u64 [sp + 0x50]\n  9805: u64 [sp + 0xf8] = a4\n  9809: fallthrough\n      : @132 (gas: 5)\n  9810: u64 [sp + 0x118] = a2\n  9814: u64 [sp + 0x110] = a1\n  9818: u64 [sp + 0x108] = a0\n  9822: u64 [sp + 0x100] = a3\n  9826: fallthrough\n      : @133 (gas: 12)\n  9827: i32 a1 = sp + 0xe0\n  9831: i32 a3 = sp + 0x100\n  9835: a2 = 0xffffffffffffffff\n  9838: a4 = 0x20\n  9841: a0 = 0\n  9843: ecalli 8 // 'set_storage'\n  9845: sp = s0 + 0xfffffffffffffec0\n  9849: ra = u64 [sp + 0x138]\n  9853: s0 = u64 [sp + 0x130]\n  9857: s1 = u64 [sp + 0x128]\n  9861: sp = sp + 0x140\n  9865: ret\n      : @134 (gas: 8)\n  9867: u64 [sp + 144] = 0\n  9871: u64 [sp + 136] = 0\n  9875: u64 [sp + 128] = 0\n  9879: a0 = 0x4e487b7100000000\n  9889: a1 = sp + 0x80\n  9893: u64 [sp + 0x98] = a0\n  9897: a0 = 0\n  9899: ra = 104, jump @23\n      : @135 [@dyn 52] (gas: 7)\n  9904: u64 [sp + 120] = 0\n  9907: u64 [sp + 112] = 0\n  9910: u64 [sp + 96] = 0x41\n  9914: a0 = 0x4\n  9917: a1 = sp + 0x60\n  9920: u64 [sp + 104] = 0\n  9923: ra = 106, jump @23\n      : @136 [@dyn 53] (gas: 3)\n  9928: a1 = 0x24\n  9931: a0 = 0\n  9933: ra = 108, jump @0\n      : @137 [@dyn 54] (gas: 6)\n  9938: i32 a1 = a0 + 0\n  9940: a0 = 0x1\n  9943: a2 = 0x24\n  9946: ra = 0x6e\n  9949: ecalli 6 // 'seal_return'\n  9951: fallthrough\n      : @138 [@dyn 55] (gas: 38)\n  9952: sp = sp + 0xfffffffffffffdc0\n  9956: u64 [sp + 0x238] = ra\n  9960: u64 [sp + 0x230] = s0\n  9964: u64 [sp + 0x228] = s1\n  9968: s0 = sp + 0x240\n  9972: sp = sp & 0xffffffffffffffe0\n  9975: a2 = u64 [a1 + 0x18]\n  9978: u64 [sp + 0x88] = a2\n  9982: a2 = u64 [a1 + 0x10]\n  9985: u64 [sp + 0x80] = a2\n  9989: a2 = u64 [a1 + 0x8]\n  9992: u64 [sp + 0x78] = a2\n  9995: a1 = u64 [a1]\n  9997: u64 [sp + 0x70] = a1\n 10000: a1 = u64 [a0 + 0x18]\n 10003: a2 = u64 [a0 + 0x10]\n 10006: a3 = u64 [a0 + 0x8]\n 10009: a0 = u64 [a0]\n 10011: u64 [sp + 0x58] = a1\n 10014: u64 [sp + 0x1f8] = a1\n 10018: u64 [sp + 0x50] = a2\n 10021: u64 [sp + 0x1f0] = a2\n 10025: u64 [sp + 0x48] = a3\n 10028: u64 [sp + 0x1e8] = a3\n 10032: u64 [sp + 0x40] = a0\n 10035: u64 [sp + 0x1e0] = a0\n 10039: u64 [sp + 536] = 0\n 10043: u64 [sp + 528] = 0\n 10047: u64 [sp + 520] = 0\n 10051: u64 [sp + 512] = 0\n 10055: u32 [sp + 544] = 0x20\n 10060: i32 a1 = sp + 0x1e0\n 10064: i32 a3 = sp + 0x200\n 10068: i32 a4 = sp + 0x220\n 10072: a2 = 0xffffffffffffffff\n 10075: a0 = 0\n 10077: ecalli 3 // 'get_storage'\n 10079: fallthrough\n      : @139 (gas: 33)\n 10080: a2 = u64 [sp + 0x210]\n 10084: a3 = u64 [sp + 0x208]\n 10088: a4 = u64 [sp + 0x218]\n 10092: a5 = u64 [sp + 0x200]\n 10096: a0 = a2 << 0x3f\n 10099: a1 = a3 >> 0x1\n 10102: s1 = a1 | a0\n 10105: a1 = a4 << 0x3f\n 10108: u64 [sp + 0x20] = a2\n 10111: a2 = a2 >> 0x1\n 10114: a1 = a1 | a2\n 10117: u64 [sp + 0x30] = a3\n 10120: a2 = a3 << 0x3f\n 10123: a3 = a5 >> 0x1\n 10126: a3 = a3 | a2\n 10129: u64 [sp + 0x38] = a4\n 10132: a0 = a4 >> 0x1\n 10135: u64 [sp + 0x28] = a5\n 10138: a4 = a5 & 0x1\n 10141: a5 = -a4\n 10143: a2 = a3 & 0x7f\n 10146: a1 = a1 & a5\n 10149: s1 = s1 & a5\n 10152: a2 = a3 if a4 != 0\n 10155: a3 = a5 & a0\n 10158: a0 = a2 <u 0x20\n 10161: a0 = 0 if s1 != 0\n 10163: u64 [sp + 0x98] = a1\n 10167: u64 [sp + 0x90] = a3\n 10171: a1 = a1 | a3\n 10174: a0 = 0 if a1 != 0\n 10176: a1 = a4 <u 0x1\n 10179: jump @146 if a1 != a0\n      : @140 (gas: 22)\n 10183: t1 = u64 [sp + 0x70]\n 10186: u64 [sp + 0x60] = a2\n 10189: a0 = a2 <u t1\n 10192: a5 = u64 [sp + 0x78]\n 10195: a2 = s1 ^ a5\n 10198: u64 [sp + 0x68] = s1\n 10201: a1 = s1 <u a5\n 10204: u64 [sp + 0x18] = a2\n 10207: a1 = a0 if a2 == 0\n 10210: a4 = u64 [sp + 0x80]\n 10214: a0 = u64 [sp + 0x98]\n 10218: t0 = a0 <u a4\n 10221: ra = u64 [sp + 0x88]\n 10225: a2 = u64 [sp + 0x90]\n 10229: a3 = a2 ^ ra\n 10232: a2 = a2 <u ra\n 10235: a2 = t0 if a3 == 0\n 10238: a0 = a0 ^ a4\n 10241: u64 [sp + 0x10] = a3\n 10244: a3 = a3 | a0\n 10247: a2 = a1 if a3 == 0\n 10250: jump @143 if a2 == 0\n      : @141 (gas: 34)\n 10254: u64 [sp + 0x160] = t1\n 10258: a0 = u64 [sp + 0x60]\n 10261: u64 [sp + 0x180] = a0\n 10265: a0 = u64 [sp + 0x28]\n 10268: u64 [sp + 0x1a0] = a0\n 10272: a0 = u64 [sp + 0x40]\n 10275: u64 [sp + 0x1c0] = a0\n 10279: u64 [sp + 0x168] = a5\n 10283: a0 = u64 [sp + 0x68]\n 10286: u64 [sp + 0x188] = a0\n 10290: a0 = u64 [sp + 0x30]\n 10293: u64 [sp + 0x1a8] = a0\n 10297: a0 = u64 [sp + 0x48]\n 10300: u64 [sp + 0x1c8] = a0\n 10304: u64 [sp + 0x170] = a4\n 10308: a0 = u64 [sp + 0x98]\n 10312: u64 [sp + 0x190] = a0\n 10316: a0 = u64 [sp + 0x20]\n 10319: u64 [sp + 0x1b0] = a0\n 10323: a0 = u64 [sp + 0x50]\n 10326: u64 [sp + 0x1d0] = a0\n 10330: u64 [sp + 0x178] = ra\n 10334: a0 = u64 [sp + 0x90]\n 10338: u64 [sp + 0x198] = a0\n 10342: a0 = u64 [sp + 0x38]\n 10345: u64 [sp + 0x1b8] = a0\n 10349: a0 = sp + 0x1c0\n 10353: a1 = sp + 0x1a0\n 10357: a2 = sp + 0x180\n 10361: s1 = a3\n 10363: a3 = sp + 0x160\n 10367: a4 = u64 [sp + 0x58]\n 10370: u64 [sp + 0x1d8] = a4\n 10374: ra = 112, jump @124\n      : @142 [@dyn 56] (gas: 6)\n 10379: a3 = s1\n 10381: t1 = u64 [sp + 0x70]\n 10384: a5 = u64 [sp + 0x78]\n 10387: a4 = u64 [sp + 0x80]\n 10391: ra = u64 [sp + 0x88]\n 10395: fallthrough\n      : @143 (gas: 14)\n 10396: s1 = u64 [sp + 0x60]\n 10399: a0 = t1 <u s1\n 10402: t0 = u64 [sp + 0x68]\n 10405: a1 = a5 <u t0\n 10408: a2 = u64 [sp + 0x18]\n 10411: a1 = a0 if a2 == 0\n 10414: a0 = u64 [sp + 0x98]\n 10418: a0 = a4 <u a0\n 10421: a2 = u64 [sp + 0x90]\n 10425: a2 = ra <u a2\n 10428: t2 = u64 [sp + 0x10]\n 10431: a2 = a0 if t2 == 0\n 10434: a2 = a1 if a3 == 0\n 10437: jump @145 if a2 == 0\n      : @144 (gas: 31)\n 10440: u64 [sp + 0xe0] = t1\n 10444: u64 [sp + 0x100] = s1\n 10448: a0 = u64 [sp + 0x28]\n 10451: u64 [sp + 0x120] = a0\n 10455: a0 = u64 [sp + 0x40]\n 10458: u64 [sp + 0x140] = a0\n 10462: u64 [sp + 0xe8] = a5\n 10466: u64 [sp + 0x108] = t0\n 10470: a0 = u64 [sp + 0x30]\n 10473: u64 [sp + 0x128] = a0\n 10477: a0 = u64 [sp + 0x48]\n 10480: u64 [sp + 0x148] = a0\n 10484: u64 [sp + 0xf0] = a4\n 10488: a0 = u64 [sp + 0x98]\n 10492: u64 [sp + 0x110] = a0\n 10496: a0 = u64 [sp + 0x20]\n 10499: u64 [sp + 0x130] = a0\n 10503: a0 = u64 [sp + 0x50]\n 10506: u64 [sp + 0x150] = a0\n 10510: u64 [sp + 0xf8] = ra\n 10514: a0 = u64 [sp + 0x90]\n 10518: u64 [sp + 0x118] = a0\n 10522: a0 = u64 [sp + 0x38]\n 10525: u64 [sp + 0x138] = a0\n 10529: a0 = sp + 0x140\n 10533: a1 = sp + 0x120\n 10537: a2 = sp + 0x100\n 10541: a3 = sp + 0xe0\n 10545: a4 = u64 [sp + 0x58]\n 10548: u64 [sp + 0x158] = a4\n 10552: ra = 114, jump @100\n      : @145 [@dyn 57] (gas: 6)\n 10557: sp = s0 + 0xfffffffffffffdc0\n 10561: ra = u64 [sp + 0x238]\n 10565: s0 = u64 [sp + 0x230]\n 10569: s1 = u64 [sp + 0x228]\n 10573: sp = sp + 0x240\n 10577: ret\n      : @146 (gas: 8)\n 10579: u64 [sp + 208] = 0\n 10583: u64 [sp + 200] = 0\n 10587: u64 [sp + 192] = 0\n 10591: a0 = 0x4e487b7100000000\n 10601: a1 = sp + 0xc0\n 10605: u64 [sp + 0xd8] = a0\n 10609: a0 = 0\n 10611: ra = 116, jump @23\n      : @147 [@dyn 58] (gas: 7)\n 10616: u64 [sp + 184] = 0\n 10620: u64 [sp + 176] = 0\n 10624: u64 [sp + 160] = 0x22\n 10629: a0 = 0x4\n 10632: a1 = sp + 0xa0\n 10636: u64 [sp + 168] = 0\n 10640: ra = 118, jump @23\n      : @148 [@dyn 59] (gas: 3)\n 10645: a1 = 0x24\n 10648: a0 = 0\n 10650: ra = 120, jump @0\n      : @149 [@dyn 60] (gas: 6)\n 10655: i32 a1 = a0 + 0\n 10657: a0 = 0x1\n 10660: a2 = 0x24\n 10663: ra = 0x7a\n 10666: ecalli 6 // 'seal_return'\n 10668: fallthrough\n      : @150 [@dyn 61] (gas: 20)\n 10669: sp = sp + 0xffffffffffffffb0\n 10672: u64 [sp + 0x48] = ra\n 10675: u64 [sp + 0x40] = s0\n 10678: s0 = sp + 0x50\n 10681: sp = sp & 0xfffffffffffffff0\n 10684: a2 = u64 [a0]\n 10686: a1 = u64 [a0 + 0x8]\n 10689: a3 = u64 [a0 + 0x10]\n 10692: a0 = u64 [a0 + 0x18]\n 10695: u64 [sp + 24] = 0\n 10698: u64 [sp + 16] = 0\n 10701: u64 [sp + 8] = 0\n 10704: u64 [sp + 0] = 0\n 10706: u64 [sp + 0x38] = a0\n 10709: u64 [sp + 0x30] = a3\n 10712: u64 [sp + 0x28] = a1\n 10715: a0 = sp + 0x20\n 10718: a1 = sp\n 10720: u64 [sp + 0x20] = a2\n 10723: ra = 124, jump @138\n      : @151 [@dyn 62] (gas: 5)\n 10728: sp = s0 + 0xffffffffffffffb0\n 10731: ra = u64 [sp + 0x48]\n 10734: s0 = u64 [sp + 0x40]\n 10737: sp = sp + 0x50\n 10740: ret\n      : @152 (gas: 21)\n 10742: sp = sp + 0xfffffffffffffea0\n 10746: u64 [sp + 0x158] = ra\n 10750: u64 [sp + 0x150] = s0\n 10754: u64 [sp + 0x148] = s1\n 10758: s0 = sp + 0x160\n 10762: sp = sp & 0xffffffffffffffe0\n 10765: a2 = u64 [a1 + 0x8]\n 10768: a4 = u64 [a1 + 0x18]\n 10771: a3 = u64 [a1]\n 10773: a5 = u64 [a1 + 0x10]\n 10776: a1 = a2 + 0xffffffffffffffff\n 10779: u64 [sp + 0x40] = a2\n 10782: a2 = a2 <u 0x1\n 10785: u64 [sp + 0x48] = a3\n 10788: a3 = a3 <u 0x1\n 10791: a3 = a2 if a1 != 0\n 10794: u64 [sp + 0x58] = a4\n 10797: u64 [sp + 0x50] = a5\n 10800: a1 = a5 | a4\n 10803: a3 = 0 if a1 != 0\n 10805: jump @163 if a3 == 0\n      : @153 (gas: 53)\n 10809: a3 = u64 [a0 + 0x10]\n 10812: u64 [sp + 0x10] = a3\n 10815: a2 = u64 [a0 + 0x8]\n 10818: u64 [sp + 0x18] = a2\n 10821: a1 = u64 [a0]\n 10823: u64 [sp + 0x30] = a1\n 10826: s1 = u64 [a0 + 0x18]\n 10829: u64 [sp + 0x110] = a3\n 10833: u64 [sp + 0x108] = a2\n 10837: u64 [sp + 0x100] = a1\n 10841: u64 [sp + 0x118] = s1\n 10845: u64 [sp + 312] = 0\n 10849: u64 [sp + 304] = 0\n 10853: u64 [sp + 296] = 0\n 10857: u64 [sp + 288] = 0\n 10861: u32 [sp + 224] = 0x20\n 10866: i32 a1 = sp + 0x100\n 10870: i32 a3 = sp + 0x120\n 10874: i32 a4 = sp + 0xe0\n 10878: a2 = 0xffffffffffffffff\n 10881: a0 = 0\n 10883: ecalli 3 // 'get_storage'\n 10885: a0 = u64 [sp + 0x138]\n 10889: u64 [sp + 0x20] = a0\n 10892: a0 = u64 [sp + 0x130]\n 10896: u64 [sp + 0x28] = a0\n 10899: a0 = u64 [sp + 0x128]\n 10903: u64 [sp + 0x38] = a0\n 10906: a0 = u64 [sp + 0x120]\n 10910: u64 [sp + 0x8] = a0\n 10913: u64 [sp] = s1\n 10915: u64 [sp + 0x118] = s1\n 10919: a0 = u64 [sp + 0x10]\n 10922: u64 [sp + 0x110] = a0\n 10926: a0 = u64 [sp + 0x18]\n 10929: u64 [sp + 0x108] = a0\n 10933: a0 = u64 [sp + 0x30]\n 10936: u64 [sp + 0x100] = a0\n 10940: a0 = u64 [sp + 0x58]\n 10943: u64 [sp + 0x138] = a0\n 10947: a0 = u64 [sp + 0x50]\n 10950: u64 [sp + 0x130] = a0\n 10954: s1 = u64 [sp + 0x40]\n 10957: u64 [sp + 0x128] = s1\n 10961: a0 = u64 [sp + 0x48]\n 10964: u64 [sp + 0x120] = a0\n 10968: i32 a1 = sp + 0x100\n 10972: i32 a3 = sp + 0x120\n 10976: a2 = 0xffffffffffffffff\n 10979: a4 = 0x20\n 10982: a0 = 0\n 10984: ecalli 8 // 'set_storage'\n 10986: fallthrough\n      : @154 (gas: 19)\n 10987: a4 = u64 [sp + 0x20]\n 10990: a5 = u64 [sp + 0x58]\n 10993: a0 = a4 ^ a5\n 10996: a2 = u64 [sp + 0x38]\n 10999: a1 = a2 ^ s1\n 11002: a2 = s1 <u a2\n 11005: s1 = u64 [sp + 0x8]\n 11008: a3 = u64 [sp + 0x48]\n 11011: a3 = a3 <u s1\n 11014: a3 = a2 if a1 != 0\n 11017: a1 = a5 <u a4\n 11020: a4 = u64 [sp + 0x28]\n 11023: a5 = u64 [sp + 0x50]\n 11026: a2 = a5 <u a4\n 11029: a2 = a1 if a0 != 0\n 11032: a1 = a4 ^ a5\n 11035: a0 = a0 | a1\n 11038: a3 = a2 if a0 != 0\n 11041: jump @162 if a3 == 0\n      : @155 (gas: 3)\n 11045: a1 = 0x20\n 11048: a0 = 0\n 11050: ra = 126, jump @0\n      : @156 [@dyn 63] (gas: 71)\n 11055: a1 = u64 [sp]\n 11057: a1 = reverse a1\n 11059: a2 = u64 [sp + 0x10]\n 11062: a2 = reverse a2\n 11064: a3 = u64 [sp + 0x18]\n 11067: a3 = reverse a3\n 11069: a4 = u64 [sp + 0x30]\n 11072: a4 = reverse a4\n 11074: a5 = a4 >> 0x38\n 11077: u8 [a0 + 0x1f] = a5\n 11080: a5 = a4 >> 0x30\n 11083: u8 [a0 + 0x1e] = a5\n 11086: a5 = a4 >> 0x28\n 11089: u8 [a0 + 0x1d] = a5\n 11092: a5 = a4 >> 0x20\n 11095: u8 [a0 + 0x1c] = a5\n 11098: a5 = a4 >> 0x18\n 11101: u8 [a0 + 0x1b] = a5\n 11104: a5 = a4 >> 0x10\n 11107: u8 [a0 + 0x1a] = a5\n 11110: a5 = a4 >> 0x8\n 11113: u8 [a0 + 0x19] = a5\n 11116: u8 [a0 + 0x18] = a4\n 11119: u8 [a0 + 0x10] = a3\n 11122: a4 = a3 >> 0x38\n 11125: u8 [a0 + 0x17] = a4\n 11128: a4 = a3 >> 0x30\n 11131: u8 [a0 + 0x16] = a4\n 11134: a4 = a3 >> 0x28\n 11137: u8 [a0 + 0x15] = a4\n 11140: a4 = a3 >> 0x20\n 11143: u8 [a0 + 0x14] = a4\n 11146: a4 = a3 >> 0x18\n 11149: u8 [a0 + 0x13] = a4\n 11152: a4 = a3 >> 0x10\n 11155: u8 [a0 + 0x12] = a4\n 11158: a3 = a3 >> 0x8\n 11161: u8 [a0 + 0x11] = a3\n 11164: u8 [a0 + 0x8] = a2\n 11167: a3 = a2 >> 0x38\n 11170: u8 [a0 + 0xf] = a3\n 11173: a3 = a2 >> 0x30\n 11176: u8 [a0 + 0xe] = a3\n 11179: a3 = a2 >> 0x28\n 11182: u8 [a0 + 0xd] = a3\n 11185: a3 = a2 >> 0x20\n 11188: u8 [a0 + 0xc] = a3\n 11191: a3 = a2 >> 0x18\n 11194: u8 [a0 + 0xb] = a3\n 11197: a3 = a2 >> 0x10\n 11200: u8 [a0 + 0xa] = a3\n 11203: a2 = a2 >> 0x8\n 11206: u8 [a0 + 0x9] = a2\n 11209: u8 [a0] = a1\n 11211: a2 = a1 >> 0x38\n 11214: u8 [a0 + 0x7] = a2\n 11217: a2 = a1 >> 0x30\n 11220: u8 [a0 + 0x6] = a2\n 11223: a2 = a1 >> 0x28\n 11226: u8 [a0 + 0x5] = a2\n 11229: a2 = a1 >> 0x20\n 11232: u8 [a0 + 0x4] = a2\n 11235: a2 = a1 >> 0x18\n 11238: u8 [a0 + 0x3] = a2\n 11241: a2 = a1 >> 0x10\n 11244: u8 [a0 + 0x2] = a2\n 11247: a1 = a1 >> 0x8\n 11250: u8 [a0 + 0x1] = a1\n 11253: a1 = 0x20\n 11256: a0 = 0\n 11258: ra = 128, jump @0\n      : @157 [@dyn 64] (gas: 5)\n 11264: i32 a0 = a0 + 0\n 11266: i32 a2 = sp + 0x120\n 11270: a1 = 0x20\n 11273: ecalli 4 // 'hash_keccak_256'\n 11275: fallthrough\n      : @158 (gas: 58)\n 11276: a0 = u64 [sp + 0x138]\n 11280: a1 = u64 [sp + 0x130]\n 11284: a5 = reverse a0\n 11286: a1 = reverse a1\n 11288: a0 = u64 [sp + 0x40]\n 11291: a0 = a0 + a1\n 11294: a3 = u64 [sp + 0x48]\n 11297: t1 = a5 + a3\n 11300: a3 = t1 <u a5\n 11303: a2 = a0 + a3\n 11306: a4 = a2 ^ a1\n 11309: a0 = a2 <u a1\n 11312: a0 = a3 if a4 == 0\n 11315: a3 = u64 [sp + 0x38]\n 11318: a3 = a3 + a1\n 11321: t2 = a5 + s1\n 11324: s1 = t2 <u a5\n 11327: ra = a3 + s1\n 11330: a3 = u64 [sp + 0x128]\n 11334: a4 = u64 [sp + 0x120]\n 11338: a5 = ra ^ a1\n 11341: a1 = ra <u a1\n 11344: a1 = s1 if a5 == 0\n 11347: t0 = reverse a4\n 11349: a3 = reverse a3\n 11351: a4 = u64 [sp + 0x50]\n 11354: a4 = a4 + a3\n 11357: a5 = u64 [sp + 0x58]\n 11360: a5 = a5 + t0\n 11363: s1 = a4 <u a3\n 11366: a5 = a5 + s1\n 11369: a0 = a0 + a4\n 11372: s1 = a0 <u a4\n 11375: s1 = s1 + a5\n 11378: a5 = a0\n 11380: a0 = u64 [sp + 0x28]\n 11383: a0 = a0 + a3\n 11386: a4 = a0 + a1\n 11389: a1 = u64 [sp + 0x20]\n 11392: t0 = t0 + a1\n 11395: a1 = a4 <u a0\n 11398: a0 = a0 <u a3\n 11401: a0 = a0 + t0\n 11404: t0 = a4\n 11406: a3 = a0 + a1\n 11409: a0 = a2 ^ ra\n 11412: a1 = a2 <u ra\n 11415: a4 = t1 <u t2\n 11418: a4 = a1 if a0 != 0\n 11421: a0 = a5 <u t0\n 11424: a1 = s1 ^ a3\n 11427: u64 [sp + 0x40] = a3\n 11430: a3 = s1 <u a3\n 11433: a3 = a0 if a1 == 0\n 11436: a0 = a5 ^ t0\n 11439: a0 = a0 | a1\n 11442: a4 = a3 if a0 != 0\n 11445: jump @162 if a4 == 0\n      : @159 (gas: 4)\n 11449: u64 [sp + 0x38] = t2\n 11452: u64 [sp + 0x30] = ra\n 11455: u64 [sp + 0x28] = t0\n 11458: fallthrough\n      : @160 (gas: 15)\n 11459: u64 [sp + 0x48] = s1\n 11462: u64 [sp + 0x50] = a2\n 11465: u64 [sp + 0x58] = t1\n 11468: u64 [sp + 184] = 0\n 11472: u64 [sp + 176] = 0\n 11476: u64 [sp + 168] = 0\n 11480: u64 [sp + 160] = 0\n 11484: u64 [sp + 0xc0] = t1\n 11488: u64 [sp + 0xc8] = a2\n 11492: u64 [sp + 0xd0] = a5\n 11496: a0 = sp + 0xc0\n 11500: a1 = sp + 0xa0\n 11504: u64 [sp + 0xd8] = s1\n 11508: s1 = a5\n 11510: ra = 130, jump @138\n      : @161 [@dyn 65] (gas: 28)\n 11516: t0 = u64 [sp + 0x28]\n 11519: ra = u64 [sp + 0x30]\n 11522: t2 = u64 [sp + 0x38]\n 11525: a2 = u64 [sp + 0x50]\n 11528: t1 = u64 [sp + 0x58]\n 11531: t1 = t1 + 0x1\n 11534: a0 = t1 <u 0x1\n 11537: a2 = a2 + a0\n 11540: a0 = t1 | a2\n 11543: a0 = a0 <u 0x1\n 11546: a0 = a0 + s1\n 11549: a1 = a0 <u s1\n 11552: s1 = u64 [sp + 0x48]\n 11555: s1 = s1 + a1\n 11558: a1 = t1 <u t2\n 11561: a4 = a2 ^ ra\n 11564: a3 = a2 <u ra\n 11567: a3 = a1 if a4 == 0\n 11570: a1 = a0 <u t0\n 11573: a4 = u64 [sp + 0x40]\n 11576: a5 = s1 ^ a4\n 11579: a4 = s1 <u a4\n 11582: a4 = a1 if a5 == 0\n 11585: a1 = a0 ^ t0\n 11588: a1 = a1 | a5\n 11591: a4 = a3 if a1 == 0\n 11594: a5 = a0\n 11596: jump @160 if a4 != 0\n      : @162 (gas: 6)\n 11600: sp = s0 + 0xfffffffffffffea0\n 11604: ra = u64 [sp + 0x158]\n 11608: s0 = u64 [sp + 0x150]\n 11612: s1 = u64 [sp + 0x148]\n 11616: sp = sp + 0x160\n 11620: ret\n      : @163 (gas: 8)\n 11622: u64 [sp + 144] = 0\n 11626: u64 [sp + 136] = 0\n 11630: u64 [sp + 128] = 0\n 11634: a0 = 0x4e487b7100000000\n 11644: a1 = sp + 0x80\n 11648: u64 [sp + 0x98] = a0\n 11652: a0 = 0\n 11654: ra = 132, jump @23\n      : @164 [@dyn 66] (gas: 7)\n 11660: u64 [sp + 120] = 0\n 11663: u64 [sp + 112] = 0\n 11666: u64 [sp + 96] = 0x41\n 11670: a0 = 0x4\n 11673: a1 = sp + 0x60\n 11676: u64 [sp + 104] = 0\n 11679: ra = 134, jump @23\n      : @165 [@dyn 67] (gas: 3)\n 11685: a1 = 0x24\n 11688: a0 = 0\n 11690: ra = 136, jump @0\n      : @166 [@dyn 68] (gas: 6)\n 11696: i32 a1 = a0 + 0\n 11698: a0 = 0x1\n 11701: a2 = 0x24\n 11704: ra = 0x8a\n 11708: ecalli 6 // 'seal_return'\n 11710: fallthrough\n      : @167 [@dyn 69] (gas: 6)\n 11711: u64 [a0 + 24] = 0\n 11714: u64 [a0 + 16] = 0\n 11717: u64 [a0 + 8] = 0\n 11720: a1 = 0x4b\n 11723: u64 [a0] = a1\n 11725: ret\n      : @168 (gas: 15)\n 11727: sp = sp + 0xffffffffffffff20\n 11731: u64 [sp + 0xd8] = ra\n 11735: u64 [sp + 0xd0] = s0\n 11739: u64 [sp + 0xc8] = s1\n 11743: s0 = sp + 0xe0\n 11747: sp = sp & 0xffffffffffffffe0\n 11750: t0 = u64 [a1 + 0x18]\n 11753: a5 = u64 [a1 + 0x10]\n 11756: a4 = u64 [a1]\n 11758: s1 = u64 [a1 + 0x8]\n 11761: a1 = a5 | t0\n 11764: a3 = a4 <u 0x20\n 11767: a3 = 0 if s1 != 0\n 11769: a3 = 0 if a1 != 0\n 11771: jump @176 if a3 != 0\n      : @169 (gas: 23)\n 11775: a1 = u64 [a2 + 0x18]\n 11778: u64 [sp + 0x50] = a1\n 11781: a1 = u64 [a2 + 0x10]\n 11784: u64 [sp + 0x40] = a1\n 11787: a1 = u64 [a2 + 0x8]\n 11790: u64 [sp + 0x58] = a1\n 11793: a1 = u64 [a2]\n 11795: u64 [sp + 0x20] = a1\n 11798: a1 = u64 [a0 + 0x18]\n 11801: u64 [sp] = a1\n 11803: a1 = u64 [a0 + 0x10]\n 11806: u64 [sp + 0x8] = a1\n 11809: a1 = u64 [a0 + 0x8]\n 11812: u64 [sp + 0x10] = a1\n 11815: a0 = u64 [a0]\n 11817: u64 [sp + 0x18] = a0\n 11820: a1 = 0x20\n 11823: a0 = 0\n 11825: u64 [sp + 0x28] = t0\n 11828: u64 [sp + 0x48] = a5\n 11831: u64 [sp + 0x38] = s1\n 11834: u64 [sp + 0x30] = a4\n 11837: ra = 140, jump @0\n      : @170 [@dyn 70] (gas: 71)\n 11843: a1 = u64 [sp]\n 11845: a1 = reverse a1\n 11847: a2 = u64 [sp + 0x8]\n 11850: a2 = reverse a2\n 11852: a3 = u64 [sp + 0x10]\n 11855: a3 = reverse a3\n 11857: a4 = u64 [sp + 0x18]\n 11860: a4 = reverse a4\n 11862: a5 = a4 >> 0x38\n 11865: u8 [a0 + 0x1f] = a5\n 11868: a5 = a4 >> 0x30\n 11871: u8 [a0 + 0x1e] = a5\n 11874: a5 = a4 >> 0x28\n 11877: u8 [a0 + 0x1d] = a5\n 11880: a5 = a4 >> 0x20\n 11883: u8 [a0 + 0x1c] = a5\n 11886: a5 = a4 >> 0x18\n 11889: u8 [a0 + 0x1b] = a5\n 11892: a5 = a4 >> 0x10\n 11895: u8 [a0 + 0x1a] = a5\n 11898: a5 = a4 >> 0x8\n 11901: u8 [a0 + 0x19] = a5\n 11904: u8 [a0 + 0x18] = a4\n 11907: u8 [a0 + 0x10] = a3\n 11910: a4 = a3 >> 0x38\n 11913: u8 [a0 + 0x17] = a4\n 11916: a4 = a3 >> 0x30\n 11919: u8 [a0 + 0x16] = a4\n 11922: a4 = a3 >> 0x28\n 11925: u8 [a0 + 0x15] = a4\n 11928: a4 = a3 >> 0x20\n 11931: u8 [a0 + 0x14] = a4\n 11934: a4 = a3 >> 0x18\n 11937: u8 [a0 + 0x13] = a4\n 11940: a4 = a3 >> 0x10\n 11943: u8 [a0 + 0x12] = a4\n 11946: a3 = a3 >> 0x8\n 11949: u8 [a0 + 0x11] = a3\n 11952: u8 [a0 + 0x8] = a2\n 11955: a3 = a2 >> 0x38\n 11958: u8 [a0 + 0xf] = a3\n 11961: a3 = a2 >> 0x30\n 11964: u8 [a0 + 0xe] = a3\n 11967: a3 = a2 >> 0x28\n 11970: u8 [a0 + 0xd] = a3\n 11973: a3 = a2 >> 0x20\n 11976: u8 [a0 + 0xc] = a3\n 11979: a3 = a2 >> 0x18\n 11982: u8 [a0 + 0xb] = a3\n 11985: a3 = a2 >> 0x10\n 11988: u8 [a0 + 0xa] = a3\n 11991: a2 = a2 >> 0x8\n 11994: u8 [a0 + 0x9] = a2\n 11997: u8 [a0] = a1\n 11999: a2 = a1 >> 0x38\n 12002: u8 [a0 + 0x7] = a2\n 12005: a2 = a1 >> 0x30\n 12008: u8 [a0 + 0x6] = a2\n 12011: a2 = a1 >> 0x28\n 12014: u8 [a0 + 0x5] = a2\n 12017: a2 = a1 >> 0x20\n 12020: u8 [a0 + 0x4] = a2\n 12023: a2 = a1 >> 0x18\n 12026: u8 [a0 + 0x3] = a2\n 12029: a2 = a1 >> 0x10\n 12032: u8 [a0 + 0x2] = a2\n 12035: a1 = a1 >> 0x8\n 12038: u8 [a0 + 0x1] = a1\n 12041: a1 = 0x20\n 12044: a0 = 0\n 12046: ra = 142, jump @0\n      : @171 [@dyn 71] (gas: 5)\n 12052: i32 a0 = a0 + 0\n 12054: i32 a2 = sp + 0xa0\n 12058: a1 = 0x20\n 12061: ecalli 4 // 'hash_keccak_256'\n 12063: fallthrough\n      : @172 (gas: 112)\n 12064: a2 = u64 [sp + 0x20]\n 12067: a1 = a2 + 0x1f\n 12070: a0 = a1 <u a2\n 12073: t1 = a2\n 12075: a4 = u64 [sp + 0x58]\n 12078: a3 = a4 + a0\n 12081: a2 = a3 <u a4\n 12084: t0 = a4\n 12086: a2 = a0 if a0 == 0\n 12089: s1 = u64 [sp + 0x40]\n 12092: a2 = a2 + s1\n 12095: u64 [sp + 0x18] = a2\n 12098: a2 = a2 << 0x3b\n 12101: a4 = a3 >> 0x5\n 12104: a2 = a2 | a4\n 12107: a3 = a3 << 0x3b\n 12110: a1 = a1 >> 0x5\n 12113: a5 = a1 | a3\n 12116: a1 = t1 <u 0x20\n 12119: a1 = 0 if t0 != 0\n 12121: a3 = u64 [sp + 0xb8]\n 12125: t1 = u64 [sp + 0xb0]\n 12129: a0 = u64 [sp + 0x50]\n 12132: a4 = s1 | a0\n 12135: a1 = 0 if a4 != 0\n 12137: a4 = reverse a3\n 12139: s1 = reverse t1\n 12141: a2 = 0 if a1 != 0\n 12143: a5 = 0 if a1 != 0\n 12145: a5 = a5 + a4\n 12148: u64 [sp + 0x58] = a5\n 12151: a5 = a5 <u a4\n 12154: a3 = s1 + a5\n 12157: t0 = a3 + a2\n 12160: a3 = t0 ^ s1\n 12163: ra = t0 <u s1\n 12166: ra = a5 if a3 == 0\n 12169: a0 = u64 [sp + 0x30]\n 12172: t2 = a0 + 0x1f\n 12175: a0 = t2 <u a0\n 12178: a2 = u64 [sp + 0x38]\n 12181: a3 = a2 + a0\n 12184: a5 = a3 <u a2\n 12187: a5 = a0 if a0 == 0\n 12190: a0 = u64 [sp + 0x48]\n 12193: a5 = a5 + a0\n 12196: a0 = a5 << 0x3b\n 12199: a2 = a3 >> 0x5\n 12202: a0 = a0 | a2\n 12205: a3 = a3 << 0x3b\n 12208: a2 = t2 >> 0x5\n 12211: a2 = a2 | a3\n 12214: t2 = a4 + a2\n 12217: a2 = t2 <u a4\n 12220: a3 = s1 + a2\n 12223: t1 = a3 + a0\n 12226: a0 = t1 ^ s1\n 12229: a3 = t1 <u s1\n 12232: a3 = a2 if a0 == 0\n 12235: a4 = u64 [sp + 0x18]\n 12238: a0 = u64 [sp + 0x40]\n 12241: a0 = a4 <u a0\n 12244: a2 = u64 [sp + 0x50]\n 12247: a0 = a0 + a2\n 12250: a2 = a4 >> 0x5\n 12253: a4 = a0 << 0x3b\n 12256: a2 = a2 | a4\n 12259: a0 = a0 >> 0x5\n 12262: a4 = u64 [sp + 0xa8]\n 12266: s1 = u64 [sp + 0xa0]\n 12270: a2 = 0 if a1 != 0\n 12272: a0 = 0 if a1 != 0\n 12274: a1 = reverse a4\n 12276: a4 = reverse s1\n 12278: u64 [sp + 0x50] = a4\n 12281: a0 = a0 + a4\n 12284: a2 = a2 + a1\n 12287: s1 = a2 <u a1\n 12290: a0 = a0 + s1\n 12293: a4 = a2 + ra\n 12296: s1 = a4 <u a2\n 12299: s1 = s1 + a0\n 12302: a0 = u64 [sp + 0x48]\n 12305: a0 = a5 <u a0\n 12308: a2 = u64 [sp + 0x28]\n 12311: a0 = a0 + a2\n 12314: a5 = a5 >> 0x5\n 12317: a2 = a0 << 0x3b\n 12320: a2 = a2 | a5\n 12323: a5 = u64 [sp + 0x58]\n 12326: a0 = a0 >> 0x5\n 12329: a2 = a2 + a1\n 12332: ra = a2 + a3\n 12335: a1 = a2 <u a1\n 12338: a2 = ra <u a2\n 12341: a3 = u64 [sp + 0x50]\n 12344: a0 = a0 + a3\n 12347: a0 = a0 + a1\n 12350: a3 = a0 + a2\n 12353: a0 = t0 ^ t1\n 12356: a1 = t0 <u t1\n 12359: a2 = a5 <u t2\n 12362: a2 = a1 if a0 != 0\n 12365: a0 = a4 <u ra\n 12368: a1 = s1 ^ a3\n 12371: u64 [sp + 0x40] = a3\n 12374: a3 = s1 <u a3\n 12377: a3 = a0 if a1 == 0\n 12380: a0 = a4 ^ ra\n 12383: a0 = a0 | a1\n 12386: a2 = a3 if a0 != 0\n 12389: jump @176 if a2 == 0\n      : @173 (gas: 5)\n 12393: a0 = a4\n 12395: u64 [sp + 0x38] = t2\n 12398: u64 [sp + 0x30] = t1\n 12401: u64 [sp + 0x28] = ra\n 12404: fallthrough\n      : @174 (gas: 36)\n 12405: u64 [sp + 0x48] = a0\n 12408: u64 [sp + 0x50] = t0\n 12411: u64 [sp + 0x58] = a5\n 12414: u64 [sp + 0x90] = a0\n 12418: u64 [sp + 0x88] = t0\n 12422: u64 [sp + 0x80] = a5\n 12426: u64 [sp + 0x98] = s1\n 12430: u64 [sp + 184] = 0\n 12434: u64 [sp + 176] = 0\n 12438: u64 [sp + 168] = 0\n 12442: u64 [sp + 160] = 0\n 12446: u32 [sp + 96] = 0x20\n 12450: i32 a1 = sp + 0x80\n 12454: i32 a3 = sp + 0xa0\n 12458: i32 a4 = sp + 0x60\n 12461: a2 = 0xffffffffffffffff\n 12464: a0 = 0\n 12466: ecalli 3 // 'get_storage'\n 12468: u64 [sp + 0x98] = s1\n 12472: a0 = u64 [sp + 0x48]\n 12475: u64 [sp + 0x90] = a0\n 12479: a0 = u64 [sp + 0x50]\n 12482: u64 [sp + 0x88] = a0\n 12486: a0 = u64 [sp + 0x58]\n 12489: u64 [sp + 0x80] = a0\n 12493: u64 [sp + 184] = 0\n 12497: u64 [sp + 176] = 0\n 12501: u64 [sp + 168] = 0\n 12505: u64 [sp + 160] = 0\n 12509: i32 a1 = sp + 0x80\n 12513: i32 a3 = sp + 0xa0\n 12517: a2 = 0xffffffffffffffff\n 12520: a4 = 0x20\n 12523: a0 = 0\n 12525: ecalli 8 // 'set_storage'\n 12527: fallthrough\n      : @175 (gas: 27)\n 12528: ra = u64 [sp + 0x28]\n 12531: t1 = u64 [sp + 0x30]\n 12534: t2 = u64 [sp + 0x38]\n 12537: t0 = u64 [sp + 0x50]\n 12540: a5 = u64 [sp + 0x58]\n 12543: a5 = a5 + 0x1\n 12546: a0 = a5 <u 0x1\n 12549: t0 = t0 + a0\n 12552: a0 = a5 | t0\n 12555: a0 = a0 <u 0x1\n 12558: a1 = u64 [sp + 0x48]\n 12561: a0 = a0 + a1\n 12564: a1 = a0 <u a1\n 12567: s1 = s1 + a1\n 12570: a1 = a5 <u t2\n 12573: a2 = t0 ^ t1\n 12576: a3 = t0 <u t1\n 12579: a3 = a1 if a2 == 0\n 12582: a1 = a0 <u ra\n 12585: a4 = u64 [sp + 0x40]\n 12588: a2 = s1 ^ a4\n 12591: a4 = s1 <u a4\n 12594: a4 = a1 if a2 == 0\n 12597: a1 = a0 ^ ra\n 12600: a1 = a1 | a2\n 12603: a4 = a3 if a1 == 0\n 12606: jump @174 if a4 != 0\n      : @176 (gas: 6)\n 12610: sp = s0 + 0xffffffffffffff20\n 12614: ra = u64 [sp + 0xd8]\n 12618: s0 = u64 [sp + 0xd0]\n 12622: s1 = u64 [sp + 0xc8]\n 12626: sp = sp + 0xe0\n 12630: ret\n      : @177 (gas: 21)\n 12632: sp = sp + 0xfffffffffffffd40\n 12636: u64 [sp + 0x2b8] = ra\n 12640: u64 [sp + 0x2b0] = s0\n 12644: u64 [sp + 0x2a8] = s1\n 12648: s0 = sp + 0x2c0\n 12652: sp = sp & 0xffffffffffffffe0\n 12655: a3 = u64 [a1 + 0x10]\n 12658: a2 = u64 [a1 + 0x18]\n 12661: a4 = u64 [a1 + 0x8]\n 12664: a5 = u64 [a1]\n 12666: u64 [sp + 0x98] = a2\n 12670: u64 [sp + 0x88] = a4\n 12674: a1 = a4 | a2\n 12677: a2 = a5 | a3\n 12680: a2 = a2 | a1\n 12683: a2 = a2 >> 0x20\n 12686: u64 [sp + 0x90] = a3\n 12690: a1 = a1 | a3\n 12693: a1 = a1 << 0x20\n 12696: a1 = a1 | a2\n 12699: jump @207 if a1 != 0\n      : @178 (gas: 13)\n 12703: a1 = u64 [a0 + 0x18]\n 12706: u64 [sp + 0x40] = a1\n 12709: a1 = u64 [a0 + 0x10]\n 12712: u64 [sp + 0x58] = a1\n 12715: a1 = u64 [a0 + 0x8]\n 12718: u64 [sp + 0x48] = a1\n 12721: a0 = u64 [a0]\n 12723: u64 [sp + 0x50] = a0\n 12726: u64 [sp + 0x80] = a5\n 12730: i32 a0 = a5 + 0\n 12732: a1 = 0x20\n 12735: u64 [sp + 0x18] = a0\n 12738: ra = 144, jump @0\n      : @179 [@dyn 72] (gas: 80)\n 12744: a1 = u8 [a0 + 0x9]\n 12747: a2 = u8 [a0 + 0x8]\n 12750: a3 = u8 [a0 + 0xa]\n 12753: a4 = u8 [a0 + 0xb]\n 12756: a1 = a1 << 0x8\n 12759: a1 = a1 | a2\n 12762: a3 = a3 << 0x10\n 12765: a4 = a4 << 0x18\n 12768: a3 = a3 | a4\n 12771: a1 = a1 | a3\n 12774: a2 = u8 [a0 + 0xd]\n 12777: a3 = u8 [a0 + 0xc]\n 12780: a4 = u8 [a0 + 0xe]\n 12783: a5 = u8 [a0 + 0xf]\n 12786: a2 = a2 << 0x8\n 12789: a2 = a2 | a3\n 12792: a4 = a4 << 0x10\n 12795: a5 = a5 << 0x18\n 12798: a4 = a4 | a5\n 12801: a2 = a2 | a4\n 12804: a2 = a2 << 0x20\n 12807: t0 = a2 | a1\n 12810: a1 = u8 [a0 + 0x1]\n 12813: a2 = u8 [a0]\n 12815: a3 = u8 [a0 + 0x2]\n 12818: a4 = u8 [a0 + 0x3]\n 12821: a1 = a1 << 0x8\n 12824: a1 = a1 | a2\n 12827: a3 = a3 << 0x10\n 12830: a4 = a4 << 0x18\n 12833: a3 = a3 | a4\n 12836: a1 = a1 | a3\n 12839: a2 = u8 [a0 + 0x5]\n 12842: a3 = u8 [a0 + 0x4]\n 12845: a4 = u8 [a0 + 0x6]\n 12848: a5 = u8 [a0 + 0x7]\n 12851: a2 = a2 << 0x8\n 12854: a2 = a2 | a3\n 12857: a4 = a4 << 0x10\n 12860: a5 = a5 << 0x18\n 12863: a4 = a4 | a5\n 12866: a2 = a2 | a4\n 12869: a2 = a2 << 0x20\n 12872: s1 = a2 | a1\n 12875: a1 = u8 [a0 + 0x11]\n 12878: a2 = u8 [a0 + 0x10]\n 12881: a3 = u8 [a0 + 0x12]\n 12884: a4 = u8 [a0 + 0x13]\n 12887: a1 = a1 << 0x8\n 12890: a1 = a1 | a2\n 12893: a3 = a3 << 0x10\n 12896: a4 = a4 << 0x18\n 12899: a3 = a3 | a4\n 12902: a1 = a1 | a3\n 12905: a2 = u8 [a0 + 0x15]\n 12908: a3 = u8 [a0 + 0x14]\n 12911: a4 = u8 [a0 + 0x16]\n 12914: a5 = u8 [a0 + 0x17]\n 12917: a2 = a2 << 0x8\n 12920: a2 = a2 | a3\n 12923: a4 = a4 << 0x10\n 12926: a5 = a5 << 0x18\n 12929: a4 = a4 | a5\n 12932: a2 = a2 | a4\n 12935: a2 = a2 << 0x20\n 12938: a1 = a1 | a2\n 12941: u64 [sp + 0x60] = a1\n 12944: a1 = reverse a1\n 12946: u64 [sp + 0x68] = s1\n 12949: a3 = reverse s1\n 12951: u64 [sp + 0x70] = t0\n 12954: a2 = reverse t0\n 12956: u64 [sp + 0x30] = a2\n 12959: u64 [sp + 0x28] = a3\n 12962: a2 = a2 | a3\n 12965: u64 [sp + 0x38] = a1\n 12968: a1 = a1 <u 0x1\n 12971: u64 [sp + 0xd8] = a2\n 12975: a1 = 0 if a2 != 0\n 12977: jump @208 if a1 == 0\n      : @180 (gas: 36)\n 12981: a1 = u8 [a0 + 0x18]\n 12984: u64 [sp + 0xb8] = a1\n 12988: a1 = u8 [a0 + 0x19]\n 12991: u64 [sp + 0x78] = a1\n 12994: a1 = u8 [a0 + 0x1a]\n 12997: u64 [sp + 0xa8] = a1\n 13001: a1 = u8 [a0 + 0x1b]\n 13004: u64 [sp + 0xa0] = a1\n 13008: a1 = u8 [a0 + 0x1c]\n 13011: u64 [sp + 0xd0] = a1\n 13015: a1 = u8 [a0 + 0x1d]\n 13018: u64 [sp + 0xb0] = a1\n 13022: a1 = u8 [a0 + 0x1e]\n 13025: u64 [sp + 0xc8] = a1\n 13029: a0 = u8 [a0 + 0x1f]\n 13032: u64 [sp + 0xc0] = a0\n 13036: u32 [sp + 576] = 0x20\n 13041: a0 = u64 [sp + 0x58]\n 13044: u64 [sp + 0x270] = a0\n 13048: a0 = u64 [sp + 0x48]\n 13051: u64 [sp + 0x268] = a0\n 13055: a0 = u64 [sp + 0x50]\n 13058: u64 [sp + 0x260] = a0\n 13062: s1 = u64 [sp + 0x40]\n 13065: u64 [sp + 0x278] = s1\n 13069: u64 [sp + 664] = 0\n 13073: u64 [sp + 656] = 0\n 13077: u64 [sp + 648] = 0\n 13081: u64 [sp + 640] = 0\n 13085: i32 a1 = sp + 0x260\n 13089: i32 a3 = sp + 0x280\n 13093: i32 a4 = sp + 0x240\n 13097: a2 = 0xffffffffffffffff\n 13100: a0 = 0\n 13102: ecalli 3 // 'get_storage'\n 13104: fallthrough\n      : @181 (gas: 28)\n 13105: a0 = u64 [sp + 0x290]\n 13109: a1 = u64 [sp + 0x288]\n 13113: a2 = u64 [sp + 0x280]\n 13117: a3 = u64 [sp + 0x298]\n 13121: a4 = a0 << 0x3f\n 13124: a5 = a1 >> 0x1\n 13127: a4 = a4 | a5\n 13130: a5 = a3 << 0x3f\n 13133: a0 = a0 >> 0x1\n 13136: t2 = s1\n 13138: s1 = a0 | a5\n 13141: a1 = a1 << 0x3f\n 13144: a5 = a2 >> 0x1\n 13147: a1 = a1 | a5\n 13150: a5 = a3 >> 0x1\n 13153: a2 = a2 & 0x1\n 13156: a0 = -a2\n 13158: t0 = a2 <u 0x1\n 13161: a3 = a1 & 0x7f\n 13164: t1 = a0 & s1\n 13167: a4 = a4 & a0\n 13170: a3 = a1 if a2 != 0\n 13173: a1 = a0 & a5\n 13176: a0 = a3 <u 0x20\n 13179: a0 = 0 if a4 != 0\n 13181: a2 = t1 | a1\n 13184: a0 = 0 if a2 != 0\n 13186: jump @210 if t0 != a0\n      : @182 (gas: 47)\n 13190: a0 = u64 [sp + 0x78]\n 13193: a0 = a0 << 0x8\n 13196: a2 = u64 [sp + 0xb8]\n 13200: a0 = a0 | a2\n 13203: a2 = u64 [sp + 0xa8]\n 13207: a2 = a2 << 0x10\n 13210: a5 = u64 [sp + 0xa0]\n 13214: a5 = a5 << 0x18\n 13217: a2 = a2 | a5\n 13220: a0 = a0 | a2\n 13223: a2 = u64 [sp + 0xb0]\n 13227: a2 = a2 << 0x8\n 13230: a5 = u64 [sp + 0xd0]\n 13234: a2 = a2 | a5\n 13237: a5 = u64 [sp + 0xc8]\n 13241: a5 = a5 << 0x10\n 13244: s1 = u64 [sp + 0xc0]\n 13248: s1 = s1 << 0x18\n 13251: a5 = a5 | s1\n 13254: a2 = a2 | a5\n 13257: a2 = a2 << 0x20\n 13260: a0 = a0 | a2\n 13263: u64 [sp + 0xd0] = a0\n 13267: a0 = reverse a0\n 13269: u64 [sp + 0x20] = a0\n 13272: u64 [sp + 0x1e0] = a0\n 13276: u64 [sp + 0x200] = a3\n 13280: a0 = u64 [sp + 0x50]\n 13283: u64 [sp + 0x220] = a0\n 13287: a0 = u64 [sp + 0x38]\n 13290: u64 [sp + 0x1e8] = a0\n 13294: u64 [sp + 0x208] = a4\n 13298: a0 = u64 [sp + 0x48]\n 13301: u64 [sp + 0x228] = a0\n 13305: a0 = u64 [sp + 0x30]\n 13308: u64 [sp + 0x1f0] = a0\n 13312: u64 [sp + 0x210] = t1\n 13316: a0 = u64 [sp + 0x58]\n 13319: u64 [sp + 0x230] = a0\n 13323: s1 = u64 [sp + 0x28]\n 13326: u64 [sp + 0x1f8] = s1\n 13330: u64 [sp + 0x218] = a1\n 13334: a0 = sp + 0x220\n 13338: a1 = sp + 0x200\n 13342: a2 = sp + 0x1e0\n 13346: u64 [sp + 0x238] = t2\n 13350: ra = 146, jump @168\n      : @183 [@dyn 73] (gas: 16)\n 13356: a3 = u64 [sp + 0x20]\n 13359: a2 = u64 [sp + 0x38]\n 13362: a0 = a2 >u 0\n 13364: a1 = a3 <u 0x20\n 13367: a1 = a1 ^ 0x1\n 13370: a1 = a0 if a2 != 0\n 13373: a0 = u64 [sp + 0x30]\n 13376: a0 = a0 >u 0\n 13378: a2 = s1 >u 0\n 13380: a2 = a0 if s1 == 0\n 13383: a0 = u64 [sp + 0xd8]\n 13387: a2 = a1 if a0 == 0\n 13390: a4 = u64 [sp + 0x40]\n 13393: a5 = u64 [sp + 0x58]\n 13396: s1 = u64 [sp + 0x50]\n 13399: jump @194 if a2 == 0\n      : @184 (gas: 5)\n 13403: a3 = a3 & 0xffffffffffffffe0\n 13406: u64 [sp + 0x18] = a3\n 13409: a1 = 0x20\n 13412: a0 = 0\n 13414: ra = 148, jump @0\n      : @185 [@dyn 74] (gas: 70)\n 13420: a1 = u64 [sp + 0x40]\n 13423: a1 = reverse a1\n 13425: a2 = u64 [sp + 0x58]\n 13428: a2 = reverse a2\n 13430: a3 = u64 [sp + 0x48]\n 13433: a3 = reverse a3\n 13435: a4 = reverse s1\n 13437: a5 = a4 >> 0x38\n 13440: u8 [a0 + 0x1f] = a5\n 13443: a5 = a4 >> 0x30\n 13446: u8 [a0 + 0x1e] = a5\n 13449: a5 = a4 >> 0x28\n 13452: u8 [a0 + 0x1d] = a5\n 13455: a5 = a4 >> 0x20\n 13458: u8 [a0 + 0x1c] = a5\n 13461: a5 = a4 >> 0x18\n 13464: u8 [a0 + 0x1b] = a5\n 13467: a5 = a4 >> 0x10\n 13470: u8 [a0 + 0x1a] = a5\n 13473: a5 = a4 >> 0x8\n 13476: u8 [a0 + 0x19] = a5\n 13479: u8 [a0 + 0x18] = a4\n 13482: u8 [a0 + 0x10] = a3\n 13485: a4 = a3 >> 0x38\n 13488: u8 [a0 + 0x17] = a4\n 13491: a4 = a3 >> 0x30\n 13494: u8 [a0 + 0x16] = a4\n 13497: a4 = a3 >> 0x28\n 13500: u8 [a0 + 0x15] = a4\n 13503: a4 = a3 >> 0x20\n 13506: u8 [a0 + 0x14] = a4\n 13509: a4 = a3 >> 0x18\n 13512: u8 [a0 + 0x13] = a4\n 13515: a4 = a3 >> 0x10\n 13518: u8 [a0 + 0x12] = a4\n 13521: a3 = a3 >> 0x8\n 13524: u8 [a0 + 0x11] = a3\n 13527: u8 [a0 + 0x8] = a2\n 13530: a3 = a2 >> 0x38\n 13533: u8 [a0 + 0xf] = a3\n 13536: a3 = a2 >> 0x30\n 13539: u8 [a0 + 0xe] = a3\n 13542: a3 = a2 >> 0x28\n 13545: u8 [a0 + 0xd] = a3\n 13548: a3 = a2 >> 0x20\n 13551: u8 [a0 + 0xc] = a3\n 13554: a3 = a2 >> 0x18\n 13557: u8 [a0 + 0xb] = a3\n 13560: a3 = a2 >> 0x10\n 13563: u8 [a0 + 0xa] = a3\n 13566: a2 = a2 >> 0x8\n 13569: u8 [a0 + 0x9] = a2\n 13572: u8 [a0] = a1\n 13574: a2 = a1 >> 0x38\n 13577: u8 [a0 + 0x7] = a2\n 13580: a2 = a1 >> 0x30\n 13583: u8 [a0 + 0x6] = a2\n 13586: a2 = a1 >> 0x28\n 13589: u8 [a0 + 0x5] = a2\n 13592: a2 = a1 >> 0x20\n 13595: u8 [a0 + 0x4] = a2\n 13598: a2 = a1 >> 0x18\n 13601: u8 [a0 + 0x3] = a2\n 13604: a2 = a1 >> 0x10\n 13607: u8 [a0 + 0x2] = a2\n 13610: a1 = a1 >> 0x8\n 13613: u8 [a0 + 0x1] = a1\n 13616: a1 = 0x20\n 13619: a0 = 0\n 13621: ra = 150, jump @0\n      : @186 [@dyn 75] (gas: 5)\n 13627: i32 a0 = a0 + 0\n 13629: i32 a2 = sp + 0x280\n 13633: a1 = 0x20\n 13636: ecalli 4 // 'hash_keccak_256'\n 13638: fallthrough\n      : @187 (gas: 13)\n 13639: a0 = u64 [sp + 0x280]\n 13643: a1 = u64 [sp + 0x288]\n 13647: a2 = u64 [sp + 0x290]\n 13651: a3 = u64 [sp + 0x298]\n 13655: a0 = reverse a0\n 13657: u64 [sp + 0xd0] = a0\n 13661: t0 = reverse a1\n 13663: a0 = reverse a2\n 13665: u64 [sp + 0xd8] = a0\n 13669: a0 = reverse a3\n 13671: u64 [sp + 0xc0] = a0\n 13675: a0 = u64 [sp + 0x18]\n 13678: jump @198 if a0 == 0\n      : @188 (gas: 118)\n 13682: u64 [sp + 176] = 0\n 13686: u64 [sp + 184] = 0\n 13690: u64 [sp + 168] = 0\n 13694: ra = u64 [sp + 0x80]\n 13698: s1 = ra + 0x20\n 13701: a0 = s1 <u ra\n 13704: t2 = u64 [sp + 0x88]\n 13708: a2 = t2 + a0\n 13711: a3 = a2 <u t2\n 13714: a3 = a0 if a0 == 0\n 13717: t1 = u64 [sp + 0x90]\n 13721: a3 = a3 + t1\n 13724: a0 = a3 <u t1\n 13727: u64 [sp + 0xc8] = t0\n 13731: t0 = u64 [sp + 0x98]\n 13735: t0 = t0 + a0\n 13738: a4 = a3 >u 0\n 13740: a5 = t0 >u 0\n 13742: a5 = a4 if t0 == 0\n 13745: a4 = 0x100000000\n 13755: a1 = s1\n 13757: a0 = maxu(s1, a4)\n 13760: s1 = a4 if a5 == 0\n 13763: a1 = a4 if a2 == 0\n 13766: a0 = a1 if a2 != 0\n 13769: a1 = a3 | t0\n 13772: a0 = s1 if a1 != 0\n 13775: a4 = a2\n 13777: a4 = 0 if a5 == 0\n 13779: a4 = a2 if a1 == 0\n 13782: a1 = a3\n 13784: a1 = 0 if t0 == 0\n 13786: a1 = a3 if t0 == 0\n 13789: a2 = t2 ^ 0xffffffffffffffff\n 13792: a4 = a4 + a2\n 13795: a3 = ra ^ 0xffffffffffffffff\n 13798: a0 = a0 + a3\n 13801: a3 = a0 <u a3\n 13804: a4 = a4 + a3\n 13807: a5 = a4 ^ a2\n 13810: a2 = a4 <u a2\n 13813: a2 = a3 if a5 == 0\n 13816: a5 = t1 ^ 0xffffffffffffffff\n 13819: u64 [sp + 0x78] = a5\n 13822: a5 = a5 + a1\n 13825: s1 = a5 + a2\n 13828: a1 = s1 << 0x3b\n 13831: a2 = a4 >> 0x5\n 13834: a1 = a1 | a2\n 13837: a4 = a4 << 0x3b\n 13840: a0 = a0 >> 0x5\n 13843: a2 = a0 | a4\n 13846: u64 [sp + 0xa0] = a2\n 13850: a4 = u64 [sp + 0x18]\n 13853: a0 = a4 <u 0x1\n 13856: a3 = -a0\n 13858: ra = a0 << 0x3b\n 13861: a4 = a4 + 0xffffffffffffffff\n 13864: a4 = a4 >> 0x5\n 13867: a0 = a4 - ra\n 13870: t2 = a1 ^ a3\n 13873: a4 = a1 <u a3\n 13876: t1 = a2 <u a0\n 13879: t1 = a4 if t2 != 0\n 13882: a2 = u64 [sp + 0x98]\n 13886: a4 = a2 ^ 0xffffffffffffffff\n 13889: t0 = t0 + a4\n 13892: a2 = u64 [sp + 0x78]\n 13895: a4 = a5 <u a2\n 13898: a4 = a4 + t0\n 13901: a5 = s1 <u a5\n 13904: a4 = a4 + a5\n 13907: s1 = s1 >> 0x5\n 13910: a5 = a4 << 0x3b\n 13913: a5 = a5 | s1\n 13916: a4 = a4 >> 0x5\n 13919: s1 = a3 >> 0x5\n 13922: t0 = s1 - ra\n 13925: a2 = a5 <u t0\n 13928: t2 = a4 ^ s1\n 13931: ra = a4 <u s1\n 13934: ra = a2 if t2 == 0\n 13937: a2 = a5 ^ t0\n 13940: a2 = a2 | t2\n 13943: ra = t1 if a2 == 0\n 13946: a2 = u64 [sp + 0xa0]\n 13950: a2 = a0 if ra == 0\n 13953: a1 = a3 if ra == 0\n 13956: a4 = s1 if ra == 0\n 13959: a5 = t0 if ra == 0\n 13962: a0 = a5 >> 0x3b\n 13965: a4 = a4 << 0x5\n 13968: t0 = a4 | a0\n 13971: a4 = u64 [sp + 0xb0]\n 13975: a0 = a1 >> 0x3b\n 13978: a5 = a5 << 0x5\n 13981: t2 = a5 | a0\n 13984: a5 = u64 [sp + 0xb8]\n 13988: a3 = a2 >> 0x3b\n 13991: a1 = a1 << 0x5\n 13994: a0 = a1 | a3\n 13997: t1 = a2 << 0x5\n 14000: a3 = t1 + 0x40\n 14003: u64 [sp + 0x78] = a3\n 14006: a3 = a3 <u t1\n 14009: s1 = u64 [sp + 0xa8]\n 14013: a1 = a0 + a3\n 14016: u64 [sp + 0x70] = a1\n 14019: a1 = a1 <u a0\n 14022: a1 = a3 if a3 == 0\n 14025: a1 = a1 + t2\n 14028: u64 [sp + 0x68] = a1\n 14031: a1 = a1 <u t2\n 14034: a1 = a1 + t0\n 14037: u64 [sp + 0x60] = a1\n 14040: a2 = 0x20\n 14043: a3 = u64 [sp + 0xc8]\n 14047: fallthrough\n      : @189 (gas: 31)\n 14048: u64 [sp + 0xa8] = s1\n 14052: u64 [sp + 0xc8] = a3\n 14056: a0 = u64 [sp + 0x80]\n 14060: a0 = a0 + a2\n 14063: u64 [sp + 0xa0] = a2\n 14067: a1 = a0 <u a2\n 14070: a2 = u64 [sp + 0x88]\n 14074: a2 = a2 + a4\n 14077: a2 = a2 + a1\n 14080: a3 = a2 ^ a4\n 14083: u64 [sp + 0xb0] = a4\n 14087: a4 = a2 <u a4\n 14090: a4 = a1 if a3 == 0\n 14093: a1 = u64 [sp + 0x90]\n 14097: a1 = a1 + a5\n 14100: u64 [sp + 0xb8] = a5\n 14104: a3 = a1 <u a5\n 14107: a5 = u64 [sp + 0x98]\n 14111: a5 = a5 + s1\n 14114: a3 = a3 + a5\n 14117: a4 = a4 + a1\n 14120: a1 = a4 <u a1\n 14123: a1 = a1 + a3\n 14126: a1 = a1 | a2\n 14129: a2 = a0 | a4\n 14132: a2 = a2 | a1\n 14135: a1 = a1 | a4\n 14138: a2 = a2 >> 0x20\n 14141: a1 = a1 << 0x20\n 14144: a1 = a1 | a2\n 14147: jump @207 if a1 != 0\n      : @190 (gas: 3)\n 14151: i32 a0 = a0 + 0\n 14153: a1 = 0x20\n 14156: ra = 152, jump @0\n      : @191 [@dyn 76] (gas: 111)\n 14162: a1 = u8 [a0 + 0x1]\n 14165: a2 = u8 [a0]\n 14167: a3 = u8 [a0 + 0x2]\n 14170: a4 = u8 [a0 + 0x3]\n 14173: a1 = a1 << 0x8\n 14176: a1 = a1 | a2\n 14179: a3 = a3 << 0x10\n 14182: a4 = a4 << 0x18\n 14185: a3 = a3 | a4\n 14188: a1 = a1 | a3\n 14191: a2 = u8 [a0 + 0x5]\n 14194: a3 = u8 [a0 + 0x4]\n 14197: a4 = u8 [a0 + 0x6]\n 14200: a5 = u8 [a0 + 0x7]\n 14203: a2 = a2 << 0x8\n 14206: a2 = a2 | a3\n 14209: a4 = a4 << 0x10\n 14212: a5 = a5 << 0x18\n 14215: a4 = a4 | a5\n 14218: a2 = a2 | a4\n 14221: a2 = a2 << 0x20\n 14224: t0 = a2 | a1\n 14227: a2 = u8 [a0 + 0x9]\n 14230: a3 = u8 [a0 + 0x8]\n 14233: a4 = u8 [a0 + 0xa]\n 14236: a5 = u8 [a0 + 0xb]\n 14239: a2 = a2 << 0x8\n 14242: a2 = a2 | a3\n 14245: a4 = a4 << 0x10\n 14248: a5 = a5 << 0x18\n 14251: a4 = a4 | a5\n 14254: a2 = a2 | a4\n 14257: a3 = u8 [a0 + 0xd]\n 14260: a4 = u8 [a0 + 0xc]\n 14263: a5 = u8 [a0 + 0xe]\n 14266: s1 = u8 [a0 + 0xf]\n 14269: a3 = a3 << 0x8\n 14272: a3 = a3 | a4\n 14275: a5 = a5 << 0x10\n 14278: s1 = s1 << 0x18\n 14281: a5 = a5 | s1\n 14284: a3 = a3 | a5\n 14287: a3 = a3 << 0x20\n 14290: a2 = a2 | a3\n 14293: a3 = u8 [a0 + 0x11]\n 14296: a4 = u8 [a0 + 0x10]\n 14299: a5 = u8 [a0 + 0x12]\n 14302: s1 = u8 [a0 + 0x13]\n 14305: a3 = a3 << 0x8\n 14308: a3 = a3 | a4\n 14311: a5 = a5 << 0x10\n 14314: s1 = s1 << 0x18\n 14317: a5 = a5 | s1\n 14320: a3 = a3 | a5\n 14323: a4 = u8 [a0 + 0x15]\n 14326: a5 = u8 [a0 + 0x14]\n 14329: s1 = u8 [a0 + 0x16]\n 14332: a1 = u8 [a0 + 0x17]\n 14335: a4 = a4 << 0x8\n 14338: a4 = a4 | a5\n 14341: s1 = s1 << 0x10\n 14344: a1 = a1 << 0x18\n 14347: a1 = a1 | s1\n 14350: a1 = a1 | a4\n 14353: a1 = a1 << 0x20\n 14356: a3 = a3 | a1\n 14359: a1 = u8 [a0 + 0x19]\n 14362: a4 = u8 [a0 + 0x18]\n 14365: a5 = u8 [a0 + 0x1a]\n 14368: s1 = u8 [a0 + 0x1b]\n 14371: a1 = a1 << 0x8\n 14374: a1 = a1 | a4\n 14377: a5 = a5 << 0x10\n 14380: s1 = s1 << 0x18\n 14383: a5 = a5 | s1\n 14386: a1 = a1 | a5\n 14389: a4 = u8 [a0 + 0x1d]\n 14392: a5 = u8 [a0 + 0x1c]\n 14395: s1 = u8 [a0 + 0x1e]\n 14398: a0 = u8 [a0 + 0x1f]\n 14401: a4 = a4 << 0x8\n 14404: a4 = a4 | a5\n 14407: s1 = s1 << 0x10\n 14410: a0 = a0 << 0x18\n 14413: a0 = a0 | s1\n 14416: a0 = a0 | a4\n 14419: a0 = a0 << 0x20\n 14422: a0 = a0 | a1\n 14425: a0 = reverse a0\n 14427: a1 = reverse a3\n 14429: a2 = reverse a2\n 14431: a3 = reverse t0\n 14433: a4 = u64 [sp + 0xd0]\n 14437: u64 [sp + 0x278] = a4\n 14441: a4 = u64 [sp + 0xc8]\n 14445: u64 [sp + 0x270] = a4\n 14449: a4 = u64 [sp + 0xd8]\n 14453: u64 [sp + 0x268] = a4\n 14457: s1 = u64 [sp + 0xc0]\n 14461: u64 [sp + 0x260] = s1\n 14465: u64 [sp + 0x298] = a3\n 14469: u64 [sp + 0x290] = a2\n 14473: u64 [sp + 0x288] = a1\n 14477: u64 [sp + 0x280] = a0\n 14481: i32 a1 = sp + 0x260\n 14485: i32 a3 = sp + 0x280\n 14489: a2 = 0xffffffffffffffff\n 14492: a4 = 0x20\n 14495: a0 = 0\n 14497: ecalli 8 // 'set_storage'\n 14499: fallthrough\n      : @192 (gas: 42)\n 14500: s1 = s1 + 0x1\n 14503: a0 = s1 <u 0x1\n 14506: a1 = u64 [sp + 0xd8]\n 14510: a1 = a1 + a0\n 14513: u64 [sp + 0xc0] = s1\n 14517: u64 [sp + 0xd8] = a1\n 14521: a0 = s1 | a1\n 14524: a0 = a0 <u 0x1\n 14527: a1 = u64 [sp + 0xc8]\n 14531: t0 = a1 + a0\n 14534: a2 = t0 <u a1\n 14537: a0 = u64 [sp + 0xa0]\n 14541: a1 = a0 + 0x20\n 14544: a0 = a1 <u a0\n 14547: a3 = u64 [sp + 0xb0]\n 14551: t2 = a3 + a0\n 14554: a3 = t2 <u a3\n 14557: a3 = a0 if a0 == 0\n 14560: a4 = u64 [sp + 0xb8]\n 14564: a0 = a4 + a3\n 14567: a3 = a0 <u a4\n 14570: s1 = u64 [sp + 0xa8]\n 14574: s1 = s1 + a3\n 14577: a3 = u64 [sp + 0x68]\n 14580: a3 = a3 ^ a0\n 14583: a4 = u64 [sp + 0x78]\n 14586: a4 = a4 ^ a1\n 14589: a3 = a3 | a4\n 14592: a4 = u64 [sp + 0x60]\n 14595: a4 = a4 ^ s1\n 14598: a5 = u64 [sp + 0x70]\n 14601: a5 = t2 ^ a5\n 14604: a4 = a4 | a5\n 14607: t1 = a3 | a4\n 14610: a3 = u64 [sp + 0xd0]\n 14614: a3 = a3 + a2\n 14617: u64 [sp + 0xd0] = a3\n 14621: a2 = a1\n 14623: a4 = t2\n 14625: a5 = a0\n 14627: a3 = t0\n 14629: jump @189 if t1 != 0\n      : @193 (gas: 1)\n 14633: jump @199\n      : @194 (gas: 8)\n 14636: a0 = u64 [sp + 0x68]\n 14639: a1 = u64 [sp + 0x60]\n 14642: a0 = a0 | a1\n 14645: a1 = u64 [sp + 0x70]\n 14648: a2 = u64 [sp + 0xd0]\n 14652: a1 = a1 | a2\n 14655: a0 = a0 | a1\n 14658: jump @204 if a0 == 0\n      : @195 (gas: 10)\n 14662: a0 = u64 [sp + 0x98]\n 14666: a1 = u64 [sp + 0x90]\n 14670: a0 = a0 | a1\n 14673: a1 = 0xffffffe0\n 14683: a2 = u64 [sp + 0x80]\n 14687: a1 = a2 <u a1\n 14690: a2 = u64 [sp + 0x88]\n 14694: a1 = 0 if a2 != 0\n 14696: a1 = 0 if a0 != 0\n 14698: jump @207 if a1 == 0\n      : @196 (gas: 4)\n 14702: a0 = u64 [sp + 0x18]\n 14705: i32 a0 = a0 + 0x20\n 14708: a1 = 0x20\n 14711: ra = 154, jump @0\n      : @197 [@dyn 77] (gas: 280)\n 14717: a1 = u8 [a0 + 0x19]\n 14720: a2 = u8 [a0 + 0x18]\n 14723: a3 = u8 [a0 + 0x1a]\n 14726: a4 = u8 [a0 + 0x1b]\n 14729: a1 = a1 << 0x8\n 14732: a1 = a1 | a2\n 14735: a3 = a3 << 0x10\n 14738: a4 = a4 << 0x18\n 14741: a3 = a3 | a4\n 14744: a1 = a1 | a3\n 14747: a2 = u8 [a0 + 0x1d]\n 14750: a3 = u8 [a0 + 0x1c]\n 14753: a4 = u8 [a0 + 0x1e]\n 14756: a5 = u8 [a0 + 0x1f]\n 14759: a2 = a2 << 0x8\n 14762: a2 = a2 | a3\n 14765: a4 = a4 << 0x10\n 14768: a5 = a5 << 0x18\n 14771: a4 = a4 | a5\n 14774: a2 = a2 | a4\n 14777: a2 = a2 << 0x20\n 14780: t0 = a2 | a1\n 14783: a1 = u8 [a0 + 0x11]\n 14786: a2 = u8 [a0 + 0x10]\n 14789: a3 = u8 [a0 + 0x12]\n 14792: a4 = u8 [a0 + 0x13]\n 14795: a1 = a1 << 0x8\n 14798: a1 = a1 | a2\n 14801: a3 = a3 << 0x10\n 14804: a4 = a4 << 0x18\n 14807: a3 = a3 | a4\n 14810: a1 = a1 | a3\n 14813: a2 = u8 [a0 + 0x15]\n 14816: a3 = u8 [a0 + 0x14]\n 14819: a4 = u8 [a0 + 0x16]\n 14822: a5 = u8 [a0 + 0x17]\n 14825: a2 = a2 << 0x8\n 14828: a2 = a2 | a3\n 14831: a4 = a4 << 0x10\n 14834: a5 = a5 << 0x18\n 14837: a4 = a4 | a5\n 14840: a2 = a2 | a4\n 14843: a2 = a2 << 0x20\n 14846: a1 = a1 | a2\n 14849: u64 [sp + 0xd8] = a1\n 14853: a1 = u8 [a0 + 0x9]\n 14856: a3 = u8 [a0 + 0x8]\n 14859: a4 = u8 [a0 + 0xa]\n 14862: a5 = u8 [a0 + 0xb]\n 14865: a1 = a1 << 0x8\n 14868: a1 = a1 | a3\n 14871: a4 = a4 << 0x10\n 14874: a5 = a5 << 0x18\n 14877: a4 = a4 | a5\n 14880: a1 = a1 | a4\n 14883: a3 = u8 [a0 + 0xd]\n 14886: a4 = u8 [a0 + 0xc]\n 14889: a5 = u8 [a0 + 0xe]\n 14892: s1 = u8 [a0 + 0xf]\n 14895: a3 = a3 << 0x8\n 14898: a3 = a3 | a4\n 14901: a5 = a5 << 0x10\n 14904: s1 = s1 << 0x18\n 14907: a5 = a5 | s1\n 14910: a3 = a3 | a5\n 14913: a3 = a3 << 0x20\n 14916: a1 = a1 | a3\n 14919: u64 [sp + 0xd0] = a1\n 14923: a1 = u8 [a0 + 0x1]\n 14926: a4 = u8 [a0]\n 14928: a5 = u8 [a0 + 0x2]\n 14931: s1 = u8 [a0 + 0x3]\n 14934: a1 = a1 << 0x8\n 14937: a1 = a1 | a4\n 14940: a5 = a5 << 0x10\n 14943: s1 = s1 << 0x18\n 14946: a5 = a5 | s1\n 14949: a1 = a1 | a5\n 14952: a4 = u8 [a0 + 0x5]\n 14955: a5 = u8 [a0 + 0x4]\n 14958: s1 = u8 [a0 + 0x6]\n 14961: a0 = u8 [a0 + 0x7]\n 14964: a4 = a4 << 0x8\n 14967: a4 = a4 | a5\n 14970: s1 = s1 << 0x10\n 14973: a0 = a0 << 0x18\n 14976: a0 = a0 | s1\n 14979: a0 = a0 | a4\n 14982: a0 = a0 << 0x20\n 14985: ra = a0 | a1\n 14988: u8 [sp + 479] = 0\n 14992: u8 [sp + 478] = 0\n 14996: u8 [sp + 477] = 0\n 15000: u8 [sp + 476] = 0\n 15004: u8 [sp + 475] = 0\n 15008: u8 [sp + 474] = 0\n 15012: u8 [sp + 473] = 0\n 15016: u8 [sp + 472] = 0\n 15020: u8 [sp + 471] = 0\n 15024: u8 [sp + 470] = 0\n 15028: u8 [sp + 469] = 0\n 15032: u8 [sp + 468] = 0\n 15036: u8 [sp + 467] = 0\n 15040: u8 [sp + 466] = 0\n 15044: u8 [sp + 465] = 0\n 15048: u8 [sp + 464] = 0\n 15052: u8 [sp + 463] = 0\n 15056: u8 [sp + 462] = 0\n 15060: u8 [sp + 461] = 0\n 15064: u8 [sp + 460] = 0\n 15068: u8 [sp + 459] = 0\n 15072: u8 [sp + 458] = 0\n 15076: u8 [sp + 457] = 0\n 15080: u8 [sp + 456] = 0\n 15084: u8 [sp + 455] = 0\n 15088: u8 [sp + 454] = 0\n 15092: u8 [sp + 453] = 0\n 15096: u8 [sp + 452] = 0\n 15100: u8 [sp + 451] = 0\n 15104: u8 [sp + 450] = 0\n 15108: u8 [sp + 449] = 0\n 15112: u8 [sp + 448] = 0\n 15116: u8 [sp + 447] = 0xff\n 15122: u8 [sp + 446] = 0xff\n 15128: u8 [sp + 445] = 0xff\n 15134: u8 [sp + 443] = 0xff\n 15140: u8 [sp + 440] = 0xffffffffffffffff\n 15145: u8 [sp + 439] = 0xff\n 15151: u8 [sp + 438] = 0xff\n 15157: u8 [sp + 437] = 0xff\n 15163: u8 [sp + 435] = 0xff\n 15169: u8 [sp + 432] = 0xffffffffffffffff\n 15174: u8 [sp + 431] = 0xff\n 15180: u8 [sp + 430] = 0xff\n 15186: u8 [sp + 429] = 0xff\n 15192: u8 [sp + 427] = 0xff\n 15198: u8 [sp + 424] = 0xffffffffffffffff\n 15203: u8 [sp + 423] = 0xff\n 15209: u8 [sp + 422] = 0xff\n 15215: u8 [sp + 421] = 0xff\n 15221: u8 [sp + 419] = 0xff\n 15227: u8 [sp + 416] = 0xffffffffffffffff\n 15232: a1 = 0xffffffff\n 15242: u8 [sp + 0x1bc] = a1\n 15246: a5 = 0xffffffffffff\n 15256: u8 [sp + 0x1ba] = a5\n 15260: a4 = 0xffffffffffffff\n 15270: u8 [sp + 0x1b9] = a4\n 15274: u8 [sp + 0x1b4] = a1\n 15278: u8 [sp + 0x1b2] = a5\n 15282: u8 [sp + 0x1b1] = a4\n 15286: u8 [sp + 0x1ac] = a1\n 15290: u8 [sp + 0x1aa] = a5\n 15294: u8 [sp + 0x1a9] = a4\n 15298: u8 [sp + 0x1a4] = a1\n 15302: u8 [sp + 0x1a2] = a5\n 15306: u8 [sp + 0x1a1] = a4\n 15310: t2 = u64 [sp + 0x20]\n 15313: a4 = t2 & 0x1f\n 15316: a1 = sp + 0x1a0\n 15320: a4 = a4 + a1\n 15323: a1 = u8 [a4 + 0x19]\n 15326: a5 = u8 [a4 + 0x18]\n 15329: s1 = u8 [a4 + 0x1a]\n 15332: a2 = u8 [a4 + 0x1b]\n 15335: a1 = a1 << 0x8\n 15338: a1 = a1 | a5\n 15341: s1 = s1 << 0x10\n 15344: a2 = a2 << 0x18\n 15347: a2 = a2 | s1\n 15350: a1 = a1 | a2\n 15353: a2 = u8 [a4 + 0x1d]\n 15356: a5 = u8 [a4 + 0x1c]\n 15359: s1 = u8 [a4 + 0x1e]\n 15362: a3 = u8 [a4 + 0x1f]\n 15365: a2 = a2 << 0x8\n 15368: a2 = a2 | a5\n 15371: s1 = s1 << 0x10\n 15374: a3 = a3 << 0x18\n 15377: a3 = a3 | s1\n 15380: a2 = a2 | a3\n 15383: a2 = a2 << 0x20\n 15386: t1 = a2 | a1\n 15389: a1 = u8 [a4 + 0x11]\n 15392: a2 = u8 [a4 + 0x10]\n 15395: a3 = u8 [a4 + 0x12]\n 15398: s1 = u8 [a4 + 0x13]\n 15401: a1 = a1 << 0x8\n 15404: a1 = a1 | a2\n 15407: a3 = a3 << 0x10\n 15410: s1 = s1 << 0x18\n 15413: a3 = a3 | s1\n 15416: a1 = a1 | a3\n 15419: a2 = u8 [a4 + 0x15]\n 15422: a3 = u8 [a4 + 0x14]\n 15425: s1 = u8 [a4 + 0x16]\n 15428: a0 = u8 [a4 + 0x17]\n 15431: a2 = a2 << 0x8\n 15434: a2 = a2 | a3\n 15437: s1 = s1 << 0x10\n 15440: a0 = a0 << 0x18\n 15443: a0 = a0 | s1\n 15446: a0 = a0 | a2\n 15449: a0 = a0 << 0x20\n 15452: s1 = a0 | a1\n 15455: a0 = u8 [a4 + 0x9]\n 15458: a1 = u8 [a4 + 0x8]\n 15461: a2 = u8 [a4 + 0xa]\n 15464: a3 = u8 [a4 + 0xb]\n 15467: a0 = a0 << 0x8\n 15470: a0 = a0 | a1\n 15473: a2 = a2 << 0x10\n 15476: a3 = a3 << 0x18\n 15479: a2 = a2 | a3\n 15482: a5 = a2 | a0\n 15485: a1 = u8 [a4 + 0xd]\n 15488: a2 = u8 [a4 + 0xc]\n 15491: a3 = u8 [a4 + 0xe]\n 15494: a0 = u8 [a4 + 0xf]\n 15497: a1 = a1 << 0x8\n 15500: a1 = a1 | a2\n 15503: a3 = a3 << 0x10\n 15506: a0 = a0 << 0x18\n 15509: a0 = a0 | a3\n 15512: a0 = a0 | a1\n 15515: a0 = a0 << 0x20\n 15518: a1 = a0 | a5\n 15521: a0 = u8 [a4 + 0x1]\n 15524: a2 = u8 [a4]\n 15526: a3 = u8 [a4 + 0x2]\n 15529: a5 = u8 [a4 + 0x3]\n 15532: a0 = a0 << 0x8\n 15535: a0 = a0 | a2\n 15538: a3 = a3 << 0x10\n 15541: a5 = a5 << 0x18\n 15544: a3 = a3 | a5\n 15547: a0 = a0 | a3\n 15550: a2 = u8 [a4 + 0x5]\n 15553: a3 = u8 [a4 + 0x4]\n 15556: a5 = u8 [a4 + 0x6]\n 15559: a4 = u8 [a4 + 0x7]\n 15562: a2 = a2 << 0x8\n 15565: a2 = a2 | a3\n 15568: a5 = a5 << 0x10\n 15571: a4 = a4 << 0x18\n 15574: a4 = a4 | a5\n 15577: a2 = a2 | a4\n 15580: a2 = a2 << 0x20\n 15583: a0 = a0 | a2\n 15586: a2 = reverse t0\n 15588: t0 = a2 & ~a0\n 15591: a0 = u64 [sp + 0xd8]\n 15595: a0 = reverse a0\n 15597: a2 = a0 & ~a1\n 15600: a0 = reverse ra\n 15602: a1 = u64 [sp + 0xd0]\n 15606: a1 = reverse a1\n 15608: a1 = a1 & ~s1\n 15611: a0 = a0 & ~t1\n 15614: a4 = t2 >> 0x3f\n 15617: a3 = u64 [sp + 0x38]\n 15620: a5 = a3 << 0x1\n 15623: a4 = a4 | a5\n 15626: a5 = a3 >> 0x3f\n 15629: a3 = u64 [sp + 0x30]\n 15632: s1 = a3 << 0x1\n 15635: a5 = a5 | s1\n 15638: s1 = a3 >> 0x3f\n 15641: a3 = u64 [sp + 0x28]\n 15644: a3 = a3 << 0x1\n 15647: a3 = a3 | s1\n 15650: t1 = a0 | a3\n 15653: a1 = a1 | a5\n 15656: a2 = a2 | a4\n 15659: a3 = t2 << 0x1\n 15662: a3 = t0 | a3\n 15665: a4 = u64 [sp + 0x40]\n 15668: a5 = u64 [sp + 0x58]\n 15671: s1 = u64 [sp + 0x50]\n 15674: jump @205\n      : @198 (gas: 4)\n 15677: t2 = 0\n 15679: s1 = 0\n 15681: a1 = 0x20\n 15684: fallthrough\n      : @199 (gas: 10)\n 15685: a5 = u64 [sp + 0x20]\n 15688: a2 = u64 [sp + 0x18]\n 15691: a2 = a2 ^ a5\n 15694: a3 = u64 [sp + 0x30]\n 15697: a2 = a2 | a3\n 15700: a3 = u64 [sp + 0x38]\n 15703: a4 = u64 [sp + 0x28]\n 15706: a3 = a3 | a4\n 15709: a2 = a2 | a3\n 15712: jump @203 if a2 == 0\n      : @200 (gas: 27)\n 15716: u64 [sp + 0xc8] = t0\n 15720: a2 = u64 [sp + 0x80]\n 15724: a2 = a2 + a1\n 15727: a3 = a2 <u a1\n 15730: a4 = u64 [sp + 0x88]\n 15734: a4 = a4 + t2\n 15737: a4 = a4 + a3\n 15740: a5 = a4 ^ t2\n 15743: a1 = a4 <u t2\n 15746: a1 = a3 if a5 == 0\n 15749: a3 = u64 [sp + 0x90]\n 15753: a3 = a3 + a0\n 15756: a1 = a1 + a3\n 15759: a5 = a1 <u a3\n 15762: a0 = a3 <u a0\n 15765: a3 = u64 [sp + 0x98]\n 15769: a3 = a3 + s1\n 15772: a0 = a0 + a3\n 15775: a0 = a0 + a5\n 15778: a3 = a2 | a1\n 15781: a0 = a0 | a4\n 15784: a3 = a3 | a0\n 15787: a3 = a3 >> 0x20\n 15790: a0 = a0 | a1\n 15793: a0 = a0 << 0x20\n 15796: a0 = a0 | a3\n 15799: jump @207 if a0 != 0\n      : @201 (gas: 3)\n 15803: i32 a0 = a2 + 0\n 15805: a1 = 0x20\n 15808: ra = 156, jump @0\n      : @202 [@dyn 78] (gas: 277)\n 15814: a1 = u8 [a0 + 0x19]\n 15817: a2 = u8 [a0 + 0x18]\n 15820: a3 = u8 [a0 + 0x1a]\n 15823: a4 = u8 [a0 + 0x1b]\n 15826: a1 = a1 << 0x8\n 15829: a1 = a1 | a2\n 15832: a3 = a3 << 0x10\n 15835: a4 = a4 << 0x18\n 15838: a3 = a3 | a4\n 15841: a1 = a1 | a3\n 15844: a2 = u8 [a0 + 0x1d]\n 15847: a3 = u8 [a0 + 0x1c]\n 15850: a4 = u8 [a0 + 0x1e]\n 15853: a5 = u8 [a0 + 0x1f]\n 15856: a2 = a2 << 0x8\n 15859: a2 = a2 | a3\n 15862: a4 = a4 << 0x10\n 15865: a5 = a5 << 0x18\n 15868: a4 = a4 | a5\n 15871: a2 = a2 | a4\n 15874: a2 = a2 << 0x20\n 15877: a1 = a1 | a2\n 15880: u64 [sp + 0xb8] = a1\n 15884: a1 = u8 [a0 + 0x11]\n 15887: a2 = u8 [a0 + 0x10]\n 15890: a3 = u8 [a0 + 0x12]\n 15893: a4 = u8 [a0 + 0x13]\n 15896: a1 = a1 << 0x8\n 15899: a1 = a1 | a2\n 15902: a3 = a3 << 0x10\n 15905: a4 = a4 << 0x18\n 15908: a3 = a3 | a4\n 15911: a1 = a1 | a3\n 15914: a2 = u8 [a0 + 0x15]\n 15917: a3 = u8 [a0 + 0x14]\n 15920: a4 = u8 [a0 + 0x16]\n 15923: a5 = u8 [a0 + 0x17]\n 15926: a2 = a2 << 0x8\n 15929: a2 = a2 | a3\n 15932: a4 = a4 << 0x10\n 15935: a5 = a5 << 0x18\n 15938: a4 = a4 | a5\n 15941: a2 = a2 | a4\n 15944: a2 = a2 << 0x20\n 15947: t1 = a2 | a1\n 15950: a1 = u8 [a0 + 0x9]\n 15953: a3 = u8 [a0 + 0x8]\n 15956: a4 = u8 [a0 + 0xa]\n 15959: a5 = u8 [a0 + 0xb]\n 15962: a1 = a1 << 0x8\n 15965: a1 = a1 | a3\n 15968: a4 = a4 << 0x10\n 15971: a5 = a5 << 0x18\n 15974: a4 = a4 | a5\n 15977: a1 = a1 | a4\n 15980: a3 = u8 [a0 + 0xd]\n 15983: a4 = u8 [a0 + 0xc]\n 15986: a5 = u8 [a0 + 0xe]\n 15989: s1 = u8 [a0 + 0xf]\n 15992: a3 = a3 << 0x8\n 15995: a3 = a3 | a4\n 15998: a5 = a5 << 0x10\n 16001: s1 = s1 << 0x18\n 16004: a5 = a5 | s1\n 16007: a3 = a3 | a5\n 16010: a3 = a3 << 0x20\n 16013: t2 = a3 | a1\n 16016: a1 = u8 [a0 + 0x1]\n 16019: a4 = u8 [a0]\n 16021: a5 = u8 [a0 + 0x2]\n 16024: s1 = u8 [a0 + 0x3]\n 16027: a1 = a1 << 0x8\n 16030: a1 = a1 | a4\n 16033: a5 = a5 << 0x10\n 16036: s1 = s1 << 0x18\n 16039: a5 = a5 | s1\n 16042: a1 = a1 | a5\n 16045: a4 = u8 [a0 + 0x5]\n 16048: a5 = u8 [a0 + 0x4]\n 16051: s1 = u8 [a0 + 0x6]\n 16054: a0 = u8 [a0 + 0x7]\n 16057: a4 = a4 << 0x8\n 16060: a4 = a4 | a5\n 16063: s1 = s1 << 0x10\n 16066: a0 = a0 << 0x18\n 16069: a0 = a0 | s1\n 16072: a0 = a0 | a4\n 16075: a0 = a0 << 0x20\n 16078: ra = a0 | a1\n 16081: u8 [sp + 415] = 0\n 16085: u8 [sp + 414] = 0\n 16089: u8 [sp + 413] = 0\n 16093: u8 [sp + 412] = 0\n 16097: u8 [sp + 411] = 0\n 16101: u8 [sp + 410] = 0\n 16105: u8 [sp + 409] = 0\n 16109: u8 [sp + 408] = 0\n 16113: u8 [sp + 407] = 0\n 16117: u8 [sp + 406] = 0\n 16121: u8 [sp + 405] = 0\n 16125: u8 [sp + 404] = 0\n 16129: u8 [sp + 403] = 0\n 16133: u8 [sp + 402] = 0\n 16137: u8 [sp + 401] = 0\n 16141: u8 [sp + 400] = 0\n 16145: u8 [sp + 399] = 0\n 16149: u8 [sp + 398] = 0\n 16153: u8 [sp + 397] = 0\n 16157: u8 [sp + 396] = 0\n 16161: u8 [sp + 395] = 0\n 16165: u8 [sp + 394] = 0\n 16169: u8 [sp + 393] = 0\n 16173: u8 [sp + 392] = 0\n 16177: u8 [sp + 391] = 0\n 16181: u8 [sp + 390] = 0\n 16185: u8 [sp + 389] = 0\n 16189: u8 [sp + 388] = 0\n 16193: u8 [sp + 387] = 0\n 16197: u8 [sp + 386] = 0\n 16201: u8 [sp + 385] = 0\n 16205: u8 [sp + 384] = 0\n 16209: u8 [sp + 383] = 0xff\n 16215: u8 [sp + 382] = 0xff\n 16221: u8 [sp + 381] = 0xff\n 16227: u8 [sp + 379] = 0xff\n 16233: u8 [sp + 376] = 0xffffffffffffffff\n 16238: u8 [sp + 375] = 0xff\n 16244: u8 [sp + 374] = 0xff\n 16250: u8 [sp + 373] = 0xff\n 16256: u8 [sp + 371] = 0xff\n 16262: u8 [sp + 368] = 0xffffffffffffffff\n 16267: u8 [sp + 367] = 0xff\n 16273: u8 [sp + 366] = 0xff\n 16279: u8 [sp + 365] = 0xff\n 16285: u8 [sp + 363] = 0xff\n 16291: u8 [sp + 360] = 0xffffffffffffffff\n 16296: u8 [sp + 359] = 0xff\n 16302: u8 [sp + 358] = 0xff\n 16308: u8 [sp + 357] = 0xff\n 16314: u8 [sp + 355] = 0xff\n 16320: u8 [sp + 352] = 0xffffffffffffffff\n 16325: a1 = 0xffffffff\n 16335: u8 [sp + 0x17c] = a1\n 16339: a5 = 0xffffffffffff\n 16349: u8 [sp + 0x17a] = a5\n 16353: a4 = 0xffffffffffffff\n 16363: u8 [sp + 0x179] = a4\n 16367: u8 [sp + 0x174] = a1\n 16371: u8 [sp + 0x172] = a5\n 16375: u8 [sp + 0x171] = a4\n 16379: u8 [sp + 0x16c] = a1\n 16383: u8 [sp + 0x16a] = a5\n 16387: u8 [sp + 0x169] = a4\n 16391: u8 [sp + 0x164] = a1\n 16395: u8 [sp + 0x162] = a5\n 16399: u8 [sp + 0x161] = a4\n 16403: a4 = u64 [sp + 0x20]\n 16406: a4 = a4 & 0x1f\n 16409: a1 = sp + 0x160\n 16413: a4 = a4 + a1\n 16416: a1 = u8 [a4 + 0x19]\n 16419: a5 = u8 [a4 + 0x18]\n 16422: s1 = u8 [a4 + 0x1a]\n 16425: a2 = u8 [a4 + 0x1b]\n 16428: a1 = a1 << 0x8\n 16431: a1 = a1 | a5\n 16434: s1 = s1 << 0x10\n 16437: a2 = a2 << 0x18\n 16440: a2 = a2 | s1\n 16443: a1 = a1 | a2\n 16446: a2 = u8 [a4 + 0x1d]\n 16449: a5 = u8 [a4 + 0x1c]\n 16452: s1 = u8 [a4 + 0x1e]\n 16455: a3 = u8 [a4 + 0x1f]\n 16458: a2 = a2 << 0x8\n 16461: a2 = a2 | a5\n 16464: s1 = s1 << 0x10\n 16467: a3 = a3 << 0x18\n 16470: a3 = a3 | s1\n 16473: a2 = a2 | a3\n 16476: a2 = a2 << 0x20\n 16479: t0 = a2 | a1\n 16482: a1 = u8 [a4 + 0x11]\n 16485: a2 = u8 [a4 + 0x10]\n 16488: a3 = u8 [a4 + 0x12]\n 16491: s1 = u8 [a4 + 0x13]\n 16494: a1 = a1 << 0x8\n 16497: a1 = a1 | a2\n 16500: a3 = a3 << 0x10\n 16503: s1 = s1 << 0x18\n 16506: a3 = a3 | s1\n 16509: a1 = a1 | a3\n 16512: a2 = u8 [a4 + 0x15]\n 16515: a3 = u8 [a4 + 0x14]\n 16518: s1 = u8 [a4 + 0x16]\n 16521: a0 = u8 [a4 + 0x17]\n 16524: a2 = a2 << 0x8\n 16527: a2 = a2 | a3\n 16530: s1 = s1 << 0x10\n 16533: a0 = a0 << 0x18\n 16536: a0 = a0 | s1\n 16539: a0 = a0 | a2\n 16542: a0 = a0 << 0x20\n 16545: s1 = a0 | a1\n 16548: a0 = u8 [a4 + 0x9]\n 16551: a1 = u8 [a4 + 0x8]\n 16554: a2 = u8 [a4 + 0xa]\n 16557: a3 = u8 [a4 + 0xb]\n 16560: a0 = a0 << 0x8\n 16563: a0 = a0 | a1\n 16566: a2 = a2 << 0x10\n 16569: a3 = a3 << 0x18\n 16572: a2 = a2 | a3\n 16575: a5 = a2 | a0\n 16578: a1 = u8 [a4 + 0xd]\n 16581: a2 = u8 [a4 + 0xc]\n 16584: a3 = u8 [a4 + 0xe]\n 16587: a0 = u8 [a4 + 0xf]\n 16590: a1 = a1 << 0x8\n 16593: a1 = a1 | a2\n 16596: a3 = a3 << 0x10\n 16599: a0 = a0 << 0x18\n 16602: a0 = a0 | a3\n 16605: a0 = a0 | a1\n 16608: a0 = a0 << 0x20\n 16611: a1 = a0 | a5\n 16614: a0 = u8 [a4 + 0x1]\n 16617: a2 = u8 [a4]\n 16619: a3 = u8 [a4 + 0x2]\n 16622: a5 = u8 [a4 + 0x3]\n 16625: a0 = a0 << 0x8\n 16628: a0 = a0 | a2\n 16631: a3 = a3 << 0x10\n 16634: a5 = a5 << 0x18\n 16637: a3 = a3 | a5\n 16640: a0 = a0 | a3\n 16643: a2 = u8 [a4 + 0x5]\n 16646: a3 = u8 [a4 + 0x4]\n 16649: a5 = u8 [a4 + 0x6]\n 16652: a4 = u8 [a4 + 0x7]\n 16655: a2 = a2 << 0x8\n 16658: a2 = a2 | a3\n 16661: a5 = a5 << 0x10\n 16664: a4 = a4 << 0x18\n 16667: a4 = a4 | a5\n 16670: a2 = a2 | a4\n 16673: a2 = a2 << 0x20\n 16676: a0 = a0 | a2\n 16679: a2 = u64 [sp + 0xb8]\n 16683: a2 = reverse a2\n 16685: a0 = a2 & ~a0\n 16688: a2 = reverse t1\n 16690: a1 = a2 & ~a1\n 16693: a2 = reverse t2\n 16695: a2 = a2 & ~s1\n 16698: a3 = reverse ra\n 16700: a3 = a3 & ~t0\n 16703: a4 = u64 [sp + 0xd0]\n 16707: u64 [sp + 0x278] = a4\n 16711: a4 = u64 [sp + 0xc8]\n 16715: u64 [sp + 0x270] = a4\n 16719: a4 = u64 [sp + 0xd8]\n 16723: u64 [sp + 0x268] = a4\n 16727: a4 = u64 [sp + 0xc0]\n 16731: u64 [sp + 0x260] = a4\n 16735: u64 [sp + 0x298] = a3\n 16739: u64 [sp + 0x290] = a2\n 16743: u64 [sp + 0x288] = a1\n 16747: u64 [sp + 0x280] = a0\n 16751: i32 a1 = sp + 0x260\n 16755: i32 a3 = sp + 0x280\n 16759: a2 = 0xffffffffffffffff\n 16762: a4 = 0x20\n 16765: a0 = 0\n 16767: ecalli 8 // 'set_storage'\n 16769: a5 = u64 [sp + 0x20]\n 16772: fallthrough\n      : @203 (gas: 27)\n 16773: a2 = u64 [sp + 0x30]\n 16776: a0 = a2 >> 0x3f\n 16779: a1 = u64 [sp + 0x28]\n 16782: a1 = a1 << 0x1\n 16785: a0 = a0 | a1\n 16788: a3 = u64 [sp + 0x38]\n 16791: a1 = a3 >> 0x3f\n 16794: a2 = a2 << 0x1\n 16797: a1 = a1 | a2\n 16800: a2 = a5 >> 0x3f\n 16803: a3 = a3 << 0x1\n 16806: a2 = a2 | a3\n 16809: a3 = a5 << 0x1\n 16812: a3 = a3 + 0x1\n 16815: a4 = u64 [sp + 0x48]\n 16818: u64 [sp + 0x268] = a4\n 16822: a4 = u64 [sp + 0x50]\n 16825: u64 [sp + 0x260] = a4\n 16829: a4 = u64 [sp + 0x58]\n 16832: u64 [sp + 0x270] = a4\n 16836: a4 = u64 [sp + 0x40]\n 16839: u64 [sp + 0x278] = a4\n 16843: u64 [sp + 0x280] = a3\n 16847: u64 [sp + 0x288] = a2\n 16851: u64 [sp + 0x290] = a1\n 16855: u64 [sp + 0x298] = a0\n 16859: jump @206\n      : @204 (gas: 5)\n 16861: a3 = 0\n 16863: a2 = 0\n 16865: a1 = 0\n 16867: t1 = 0\n 16869: fallthrough\n      : @205 (gas: 10)\n 16870: a0 = u64 [sp + 0x48]\n 16873: u64 [sp + 0x268] = a0\n 16877: u64 [sp + 0x260] = s1\n 16881: u64 [sp + 0x270] = a5\n 16885: u64 [sp + 0x278] = a4\n 16889: u64 [sp + 0x280] = a3\n 16893: u64 [sp + 0x288] = a2\n 16897: u64 [sp + 0x290] = a1\n 16901: u64 [sp + 0x298] = t1\n 16905: fallthrough\n      : @206 (gas: 12)\n 16906: i32 a1 = sp + 0x260\n 16910: i32 a3 = sp + 0x280\n 16914: a2 = 0xffffffffffffffff\n 16917: a4 = 0x20\n 16920: a0 = 0\n 16922: ecalli 8 // 'set_storage'\n 16924: sp = s0 + 0xfffffffffffffd40\n 16928: ra = u64 [sp + 0x2b8]\n 16932: s0 = u64 [sp + 0x2b0]\n 16936: s1 = u64 [sp + 0x2a8]\n 16940: sp = sp + 0x2c0\n 16944: ret\n      : @207 (gas: 1)\n 16946: trap\n      : @208 (gas: 8)\n 16947: u64 [sp + 272] = 0\n 16951: u64 [sp + 264] = 0\n 16955: u64 [sp + 256] = 0\n 16959: a0 = 0x4e487b7100000000\n 16969: a1 = sp + 0x100\n 16973: u64 [sp + 0x118] = a0\n 16977: a0 = 0\n 16979: ra = 158, jump @23\n      : @209 [@dyn 79] (gas: 8)\n 16985: u64 [sp + 248] = 0\n 16989: u64 [sp + 240] = 0\n 16993: u64 [sp + 224] = 0x41\n 16998: a0 = 0x4\n 17001: a1 = sp + 0xe0\n 17005: u64 [sp + 232] = 0\n 17009: ra = 0xa2\n 17013: jump @23\n      : @210 (gas: 8)\n 17016: u64 [sp + 336] = 0\n 17020: u64 [sp + 328] = 0\n 17024: u64 [sp + 320] = 0\n 17028: a0 = 0x4e487b7100000000\n 17038: a1 = sp + 0x140\n 17042: u64 [sp + 0x158] = a0\n 17046: a0 = 0\n 17048: ra = 160, jump @23\n      : @211 [@dyn 80] (gas: 7)\n 17054: u64 [sp + 312] = 0\n 17058: u64 [sp + 304] = 0\n 17062: u64 [sp + 288] = 0x22\n 17067: a0 = 0x4\n 17070: a1 = sp + 0x120\n 17074: u64 [sp + 296] = 0\n 17078: ra = 162, jump @23\n      : @212 [@dyn 81] (gas: 3)\n 17084: a1 = 0x24\n 17087: a0 = 0\n 17089: ra = 164, jump @0\n      : @213 [@dyn 82] (gas: 6)\n 17095: i32 a1 = a0 + 0\n 17097: a0 = 0x1\n 17100: a2 = 0x24\n 17103: ra = 0xa6\n 17107: ecalli 6 // 'seal_return'\n 17109: fallthrough\n      : @214 [@dyn 83] (gas: 24)\n 17110: sp = sp + 0xffffffffffffffb0\n 17113: u64 [sp + 0x48] = ra\n 17116: u64 [sp + 0x40] = s0\n 17119: s0 = sp + 0x50\n 17122: sp = sp & 0xfffffffffffffff0\n 17125: t0 = u64 [a0]\n 17127: t1 = u64 [a0 + 0x8]\n 17130: a4 = u64 [a0 + 0x10]\n 17133: a0 = u64 [a0 + 0x18]\n 17136: a5 = u64 [a1]\n 17138: a2 = u64 [a1 + 0x8]\n 17141: a3 = u64 [a1 + 0x10]\n 17144: a1 = u64 [a1 + 0x18]\n 17147: u64 [sp + 0x18] = a1\n 17150: u64 [sp + 0x10] = a3\n 17153: u64 [sp + 0x8] = a2\n 17156: u64 [sp] = a5\n 17158: u64 [sp + 0x38] = a0\n 17161: u64 [sp + 0x30] = a4\n 17164: u64 [sp + 0x28] = t1\n 17167: a0 = sp + 0x20\n 17170: a1 = sp\n 17172: u64 [sp + 0x20] = t0\n 17175: ra = 168, jump @177\n      : @215 [@dyn 84] (gas: 5)\n 17181: sp = s0 + 0xffffffffffffffb0\n 17184: ra = u64 [sp + 0x48]\n 17187: s0 = u64 [sp + 0x40]\n 17190: sp = sp + 0x50\n 17193: ret\n      : @216 [@dyn 85] (gas: 3)\n 17195: a1 = 0x20\n 17198: a0 = 0\n 17200: ra = 172, jump @0\n      : @217 [@dyn 86] (gas: 70)\n 17206: a1 = reverse s1\n 17208: a2 = u64 [sp + 0x68]\n 17211: a2 = reverse a2\n 17213: a3 = u64 [sp + 0x70]\n 17216: a3 = reverse a3\n 17218: a4 = u64 [sp + 0x48]\n 17221: a4 = reverse a4\n 17223: a5 = a4 >> 0x38\n 17226: u8 [a0 + 0x1f] = a5\n 17229: a5 = a4 >> 0x30\n 17232: u8 [a0 + 0x1e] = a5\n 17235: a5 = a4 >> 0x28\n 17238: u8 [a0 + 0x1d] = a5\n 17241: a5 = a4 >> 0x20\n 17244: u8 [a0 + 0x1c] = a5\n 17247: a5 = a4 >> 0x18\n 17250: u8 [a0 + 0x1b] = a5\n 17253: a5 = a4 >> 0x10\n 17256: u8 [a0 + 0x1a] = a5\n 17259: a5 = a4 >> 0x8\n 17262: u8 [a0 + 0x19] = a5\n 17265: u8 [a0 + 0x18] = a4\n 17268: a4 = a3 >> 0x38\n 17271: u8 [a0 + 0x17] = a4\n 17274: a4 = a3 >> 0x30\n 17277: u8 [a0 + 0x16] = a4\n 17280: a4 = a3 >> 0x28\n 17283: u8 [a0 + 0x15] = a4\n 17286: a4 = a3 >> 0x20\n 17289: u8 [a0 + 0x14] = a4\n 17292: a4 = a3 >> 0x18\n 17295: u8 [a0 + 0x13] = a4\n 17298: a4 = a3 >> 0x10\n 17301: u8 [a0 + 0x12] = a4\n 17304: a4 = a3 >> 0x8\n 17307: u8 [a0 + 0x11] = a4\n 17310: u8 [a0 + 0x10] = a3\n 17313: a3 = a2 >> 0x38\n 17316: u8 [a0 + 0xf] = a3\n 17319: a3 = a2 >> 0x30\n 17322: u8 [a0 + 0xe] = a3\n 17325: a3 = a2 >> 0x28\n 17328: u8 [a0 + 0xd] = a3\n 17331: a3 = a2 >> 0x20\n 17334: u8 [a0 + 0xc] = a3\n 17337: a3 = a2 >> 0x18\n 17340: u8 [a0 + 0xb] = a3\n 17343: a3 = a2 >> 0x10\n 17346: u8 [a0 + 0xa] = a3\n 17349: a3 = a2 >> 0x8\n 17352: u8 [a0 + 0x9] = a3\n 17355: u8 [a0 + 0x8] = a2\n 17358: a2 = a1 >> 0x38\n 17361: u8 [a0 + 0x7] = a2\n 17364: a2 = a1 >> 0x30\n 17367: u8 [a0 + 0x6] = a2\n 17370: a2 = a1 >> 0x28\n 17373: u8 [a0 + 0x5] = a2\n 17376: a2 = a1 >> 0x20\n 17379: u8 [a0 + 0x4] = a2\n 17382: a2 = a1 >> 0x18\n 17385: u8 [a0 + 0x3] = a2\n 17388: a2 = a1 >> 0x10\n 17391: u8 [a0 + 0x2] = a2\n 17394: a2 = a1 >> 0x8\n 17397: u8 [a0 + 0x1] = a2\n 17400: u8 [a0] = a1\n 17402: a1 = 0x20\n 17405: a0 = 0\n 17407: ra = 174, jump @0\n      : @218 [@dyn 87] (gas: 23)\n 17413: i32 a0 = a0 + 0\n 17415: i32 a2 = sp + 0x100\n 17419: a1 = 0x20\n 17422: ecalli 4 // 'hash_keccak_256'\n 17424: t0 = u64 [sp + 0x50]\n 17427: t1 = u64 [sp + 0x58]\n 17430: t2 = u64 [sp + 0x60]\n 17433: u64 [sp + 64] = 0\n 17436: a5 = 0\n 17438: a4 = 0\n 17440: ra = 0\n 17442: a0 = u64 [sp + 0x100]\n 17446: a1 = u64 [sp + 0x108]\n 17450: a2 = u64 [sp + 0x110]\n 17454: a3 = u64 [sp + 0x118]\n 17458: a0 = reverse a0\n 17460: u64 [sp + 0x70] = a0\n 17463: s1 = reverse a1\n 17465: a0 = reverse a2\n 17467: u64 [sp + 0x68] = a0\n 17470: a0 = reverse a3\n 17472: u64 [sp + 0x48] = a0\n 17475: fallthrough\n      : @219 (gas: 14)\n 17476: u64 [sp + 0x28] = a5\n 17479: u64 [sp + 0x30] = ra\n 17482: u64 [sp + 0x38] = a4\n 17485: a0 = t0 | t2\n 17488: u64 [sp + 0x58] = t1\n 17491: a1 = u64 [sp + 0x78]\n 17494: a1 = t1 | a1\n 17497: a0 = a0 | a1\n 17500: a0 = a0 >> 0x20\n 17503: u64 [sp + 0x60] = t2\n 17506: a1 = a1 | t2\n 17509: a1 = a1 << 0x20\n 17512: a0 = a0 | a1\n 17515: jump @224 if a0 != 0\n      : @220 (gas: 4)\n 17519: i32 a0 = t0 + 0\n 17521: a1 = 0x20\n 17524: u64 [sp + 0x50] = t0\n 17527: ra = 176, jump @0\n      : @221 [@dyn 88] (gas: 107)\n 17533: a1 = u8 [a0 + 0x1]\n 17536: a2 = u8 [a0]\n 17538: a3 = u8 [a0 + 0x2]\n 17541: a4 = u8 [a0 + 0x3]\n 17544: a1 = a1 << 0x8\n 17547: a1 = a1 | a2\n 17550: a3 = a3 << 0x10\n 17553: a4 = a4 << 0x18\n 17556: a3 = a3 | a4\n 17559: a1 = a1 | a3\n 17562: a2 = u8 [a0 + 0x5]\n 17565: a3 = u8 [a0 + 0x4]\n 17568: a4 = u8 [a0 + 0x6]\n 17571: a5 = u8 [a0 + 0x7]\n 17574: a2 = a2 << 0x8\n 17577: a2 = a2 | a3\n 17580: a4 = a4 << 0x10\n 17583: a5 = a5 << 0x18\n 17586: a4 = a4 | a5\n 17589: a2 = a2 | a4\n 17592: a2 = a2 << 0x20\n 17595: t0 = a2 | a1\n 17598: a2 = u8 [a0 + 0x9]\n 17601: a3 = u8 [a0 + 0x8]\n 17604: a4 = u8 [a0 + 0xa]\n 17607: a5 = u8 [a0 + 0xb]\n 17610: a2 = a2 << 0x8\n 17613: a2 = a2 | a3\n 17616: a4 = a4 << 0x10\n 17619: a5 = a5 << 0x18\n 17622: a4 = a4 | a5\n 17625: a2 = a2 | a4\n 17628: a3 = u8 [a0 + 0xd]\n 17631: a4 = u8 [a0 + 0xc]\n 17634: a5 = u8 [a0 + 0xe]\n 17637: a1 = u8 [a0 + 0xf]\n 17640: a3 = a3 << 0x8\n 17643: a3 = a3 | a4\n 17646: a5 = a5 << 0x10\n 17649: a1 = a1 << 0x18\n 17652: a1 = a1 | a5\n 17655: a1 = a1 | a3\n 17658: a1 = a1 << 0x20\n 17661: t1 = a1 | a2\n 17664: a1 = u8 [a0 + 0x11]\n 17667: a3 = u8 [a0 + 0x10]\n 17670: a4 = u8 [a0 + 0x12]\n 17673: a5 = u8 [a0 + 0x13]\n 17676: a1 = a1 << 0x8\n 17679: a1 = a1 | a3\n 17682: a4 = a4 << 0x10\n 17685: a5 = a5 << 0x18\n 17688: a4 = a4 | a5\n 17691: a1 = a1 | a4\n 17694: a3 = u8 [a0 + 0x15]\n 17697: a4 = u8 [a0 + 0x14]\n 17700: a5 = u8 [a0 + 0x16]\n 17703: a2 = u8 [a0 + 0x17]\n 17706: a3 = a3 << 0x8\n 17709: a3 = a3 | a4\n 17712: a5 = a5 << 0x10\n 17715: a2 = a2 << 0x18\n 17718: a2 = a2 | a5\n 17721: a2 = a2 | a3\n 17724: a2 = a2 << 0x20\n 17727: a3 = a2 | a1\n 17730: a1 = u8 [a0 + 0x19]\n 17733: a2 = u8 [a0 + 0x18]\n 17736: a4 = u8 [a0 + 0x1a]\n 17739: a5 = u8 [a0 + 0x1b]\n 17742: a1 = a1 << 0x8\n 17745: a1 = a1 | a2\n 17748: a4 = a4 << 0x10\n 17751: a5 = a5 << 0x18\n 17754: a4 = a4 | a5\n 17757: a1 = a1 | a4\n 17760: a2 = u8 [a0 + 0x1d]\n 17763: a4 = u8 [a0 + 0x1c]\n 17766: a5 = u8 [a0 + 0x1e]\n 17769: a0 = u8 [a0 + 0x1f]\n 17772: a2 = a2 << 0x8\n 17775: a2 = a2 | a4\n 17778: a5 = a5 << 0x10\n 17781: a0 = a0 << 0x18\n 17784: a0 = a0 | a5\n 17787: a0 = a0 | a2\n 17790: a0 = a0 << 0x20\n 17793: a0 = a0 | a1\n 17796: a2 = reverse a0\n 17798: a0 = reverse a3\n 17800: a1 = reverse t1\n 17802: a3 = reverse t0\n 17804: a4 = u64 [sp + 0x70]\n 17807: u64 [sp + 0xb8] = a4\n 17811: u64 [sp + 0xb0] = s1\n 17815: a4 = u64 [sp + 0x68]\n 17818: u64 [sp + 0xa8] = a4\n 17822: u64 [sp + 0x20] = s1\n 17825: s1 = u64 [sp + 0x48]\n 17828: u64 [sp + 0xa0] = s1\n 17832: u64 [sp + 0x98] = a3\n 17836: u64 [sp + 0x90] = a1\n 17840: u64 [sp + 0x88] = a0\n 17844: a0 = sp + 0xa0\n 17848: a1 = sp + 0x80\n 17852: u64 [sp + 0x80] = a2\n 17856: ra = 178, jump @177\n      : @222 [@dyn 89] (gas: 48)\n 17862: a0 = u64 [sp + 0x50]\n 17865: a1 = a0 + 0x20\n 17868: u64 [sp + 0x18] = a1\n 17871: a2 = a1 <u a0\n 17874: a0 = u64 [sp + 0x58]\n 17877: t1 = a0 + a2\n 17880: a3 = t1 <u a0\n 17883: a3 = a2 if a2 == 0\n 17886: a0 = u64 [sp + 0x60]\n 17889: t2 = a0 + a3\n 17892: a3 = t2 <u a0\n 17895: a0 = u64 [sp + 0x78]\n 17898: a0 = a0 + a3\n 17901: u64 [sp + 0x78] = a0\n 17904: s1 = s1 + 0x1\n 17907: a3 = s1 <u 0x1\n 17910: a2 = u64 [sp + 0x68]\n 17913: a2 = a2 + a3\n 17916: a0 = u64 [sp + 0x40]\n 17919: a3 = a0 <u 0x4a\n 17922: a0 = a0 + 0x1\n 17925: a5 = a0 <u 0x1\n 17928: a1 = u64 [sp + 0x28]\n 17931: a3 = 0 if a1 != 0\n 17933: a5 = a5 + a1\n 17936: a4 = a0 | a5\n 17939: a4 = a4 <u 0x1\n 17942: a1 = u64 [sp + 0x38]\n 17945: a4 = a4 + a1\n 17948: t0 = a4 <u a1\n 17951: ra = u64 [sp + 0x30]\n 17954: a1 = a1 | ra\n 17957: ra = ra + t0\n 17960: a3 = 0 if a1 != 0\n 17962: u64 [sp + 0x68] = a2\n 17965: u64 [sp + 0x48] = s1\n 17968: a1 = s1 | a2\n 17971: a1 = a1 <u 0x1\n 17974: a2 = u64 [sp + 0x20]\n 17977: a1 = a1 + a2\n 17980: a2 = a1 <u a2\n 17983: s1 = u64 [sp + 0x70]\n 17986: s1 = s1 + a2\n 17989: u64 [sp + 0x70] = s1\n 17992: u64 [sp + 0x40] = a0\n 17995: s1 = a1\n 17997: t0 = u64 [sp + 0x18]\n 18000: jump @219 if a3 != 0\n      : @223 (gas: 6)\n 18004: sp = s0 + 0xfffffffffffffec0\n 18008: ra = u64 [sp + 0x138]\n 18012: s0 = u64 [sp + 0x130]\n 18016: s1 = u64 [sp + 0x128]\n 18020: sp = sp + 0x140\n 18024: ret\n      : @224 (gas: 1)\n 18026: trap\n      : @225 [@dyn 90] (gas: 15)\n 18027: a0 = u64 [s1 + 0x3c0]\n 18031: u64 [sp + 0x40] = a0\n 18034: a0 = u64 [s1 + 0x3b8]\n 18038: u64 [sp + 0x48] = a0\n 18041: a0 = u64 [s1 + 0x3b0]\n 18045: u64 [sp + 0x60] = a0\n 18048: a0 = u64 [s1 + 0x3a8]\n 18052: u64 [sp + 0x68] = a0\n 18055: u64 [s1 + 864] = 0\n 18059: u64 [s1 + 856] = 0\n 18063: u64 [s1 + 840] = 0x40\n 18068: a0 = sp + 0x1350\n 18072: a1 = sp + 0x1330\n 18076: u64 [s1 + 848] = 0\n 18080: ra = 182, jump @56\n      : @226 [@dyn 91] (gas: 15)\n 18086: a1 = u64 [s1 + 0x380]\n 18090: a2 = u64 [s1 + 0x378]\n 18094: a0 = u64 [s1 + 0x370]\n 18098: s1 = u64 [s1 + 0x368]\n 18102: u64 [sp + 0x30] = a0\n 18105: u64 [sp + 0x38] = a1\n 18108: a0 = a0 | a1\n 18111: a1 = s1 | a2\n 18114: a1 = a1 | a0\n 18117: a1 = a1 >> 0x20\n 18120: u64 [sp + 0x58] = a2\n 18123: a0 = a0 | a2\n 18126: a0 = a0 << 0x20\n 18129: a0 = a0 | a1\n 18132: jump @228 if a0 == 0\n      : @227 (gas: 1)\n 18135: jump @961\n      : @228 (gas: 4)\n 18139: i32 a0 = s1 + 0\n 18141: a1 = 0x20\n 18144: u64 [sp + 0x50] = a0\n 18147: ra = 184, jump @0\n      : @229 [@dyn 92] (gas: 42)\n 18153: u8 [a0 + 31] = 0x7\n 18157: a1 = u64 [sp + 0x38]\n 18160: a2 = u64 [sp + 0x58]\n 18163: a2 = a2 | a1\n 18166: a1 = 0xffffffe0\n 18176: u64 [sp + 0x28] = s1\n 18179: a1 = s1 <u a1\n 18182: s1 = u64 [sp + 0x30]\n 18185: a1 = 0 if s1 != 0\n 18187: a1 = 0 if a2 != 0\n 18189: u8 [a0 + 30] = 0\n 18192: u8 [a0 + 29] = 0\n 18195: u8 [a0 + 28] = 0\n 18198: u8 [a0 + 27] = 0\n 18201: u8 [a0 + 26] = 0\n 18204: u8 [a0 + 25] = 0\n 18207: u8 [a0 + 24] = 0\n 18210: u8 [a0 + 23] = 0\n 18213: u8 [a0 + 22] = 0\n 18216: u8 [a0 + 21] = 0\n 18219: u8 [a0 + 20] = 0\n 18222: u8 [a0 + 19] = 0\n 18225: u8 [a0 + 18] = 0\n 18228: u8 [a0 + 17] = 0\n 18231: u8 [a0 + 16] = 0\n 18234: u8 [a0 + 15] = 0\n 18237: u8 [a0 + 14] = 0\n 18240: u8 [a0 + 13] = 0\n 18243: u8 [a0 + 12] = 0\n 18246: u8 [a0 + 11] = 0\n 18249: u8 [a0 + 10] = 0\n 18252: u8 [a0 + 9] = 0\n 18255: u8 [a0 + 8] = 0\n 18258: u8 [a0 + 7] = 0\n 18261: u8 [a0 + 6] = 0\n 18264: u8 [a0 + 5] = 0\n 18267: u8 [a0 + 4] = 0\n 18270: u8 [a0 + 3] = 0\n 18273: u8 [a0 + 2] = 0\n 18276: u8 [a0 + 1] = 0\n 18279: u8 [a0 + 0] = 0\n 18281: jump @231 if a1 != 0\n      : @230 (gas: 1)\n 18284: jump @961\n      : @231 (gas: 4)\n 18288: a0 = u64 [sp + 0x50]\n 18291: i32 a0 = a0 + 0x20\n 18294: a1 = 0x20\n 18297: ra = 186, jump @0\n      : @232 [@dyn 93] (gas: 44)\n 18303: u8 [a0 + 31] = 0\n 18306: u8 [a0 + 30] = 0\n 18309: u8 [a0 + 29] = 0\n 18312: u8 [a0 + 28] = 0\n 18315: u8 [a0 + 27] = 0\n 18318: u8 [a0 + 26] = 0\n 18321: u8 [a0 + 25] = 0\n 18324: u8 [a0 + 24] = 0\n 18327: u8 [a0 + 23] = 0\n 18330: u8 [a0 + 22] = 0\n 18333: u8 [a0 + 21] = 0\n 18336: u8 [a0 + 20] = 0\n 18339: u8 [a0 + 19] = 0\n 18342: u8 [a0 + 18] = 0\n 18345: u8 [a0 + 17] = 0\n 18348: u8 [a0 + 16] = 0\n 18351: u8 [a0 + 15] = 0\n 18354: u8 [a0 + 14] = 0\n 18357: u8 [a0 + 13] = 0\n 18360: u8 [a0 + 12] = 0\n 18363: u8 [a0 + 11] = 0\n 18366: u8 [a0 + 10] = 0\n 18369: u8 [a0 + 9] = 0\n 18372: u8 [a0 + 8] = 0\n 18375: u8 [a0 + 7] = 0\n 18378: u8 [a0 + 6] = 0x67\n 18382: u8 [a0 + 5] = 0x6e\n 18386: u8 [a0 + 4] = 0x69\n 18390: u8 [a0 + 3] = 0x7a\n 18394: u8 [a0 + 1] = 0x6d\n 18398: a3 = u64 [sp + 0x68]\n 18401: a4 = u64 [sp + 0x48]\n 18404: a1 = a3 | a4\n 18407: a2 = u64 [sp + 0x60]\n 18410: a5 = u64 [sp + 0x40]\n 18413: a2 = a2 | a5\n 18416: a1 = a1 | a2\n 18419: a1 = a1 >> 0x20\n 18422: a2 = a2 | a4\n 18425: a2 = a2 << 0x20\n 18428: a1 = a1 | a2\n 18431: u8 [a0 + 2] = 0x61\n 18435: u8 [a0 + 0] = 0x61\n 18438: jump @234 if a1 == 0\n      : @233 (gas: 1)\n 18441: jump @961\n      : @234 (gas: 4)\n 18445: i32 a0 = a3 + 0\n 18447: a1 = 0x20\n 18450: u64 [sp + 0x50] = a0\n 18453: ra = 188, jump @0\n      : @235 [@dyn 94] (gas: 76)\n 18459: a1 = u64 [sp + 0x38]\n 18462: a1 = reverse a1\n 18464: a2 = u64 [sp + 0x58]\n 18467: a2 = reverse a2\n 18469: a3 = reverse s1\n 18471: a4 = u64 [sp + 0x28]\n 18474: a4 = reverse a4\n 18476: a5 = a4 >> 0x38\n 18479: u8 [a0 + 0x1f] = a5\n 18482: a5 = a4 >> 0x30\n 18485: u8 [a0 + 0x1e] = a5\n 18488: a5 = a4 >> 0x28\n 18491: u8 [a0 + 0x1d] = a5\n 18494: a5 = a4 >> 0x20\n 18497: u8 [a0 + 0x1c] = a5\n 18500: a5 = a4 >> 0x18\n 18503: u8 [a0 + 0x1b] = a5\n 18506: a5 = a4 >> 0x10\n 18509: u8 [a0 + 0x1a] = a5\n 18512: a5 = a4 >> 0x8\n 18515: u8 [a0 + 0x19] = a5\n 18518: u8 [a0 + 0x18] = a4\n 18521: u8 [a0 + 0x10] = a3\n 18524: a4 = a3 >> 0x38\n 18527: u8 [a0 + 0x17] = a4\n 18530: a4 = a3 >> 0x30\n 18533: u8 [a0 + 0x16] = a4\n 18536: a4 = a3 >> 0x28\n 18539: u8 [a0 + 0x15] = a4\n 18542: a4 = a3 >> 0x20\n 18545: u8 [a0 + 0x14] = a4\n 18548: a4 = a3 >> 0x18\n 18551: u8 [a0 + 0x13] = a4\n 18554: a4 = a3 >> 0x10\n 18557: u8 [a0 + 0x12] = a4\n 18560: a3 = a3 >> 0x8\n 18563: u8 [a0 + 0x11] = a3\n 18566: u8 [a0 + 0x8] = a2\n 18569: a3 = a2 >> 0x38\n 18572: u8 [a0 + 0xf] = a3\n 18575: a3 = a2 >> 0x30\n 18578: u8 [a0 + 0xe] = a3\n 18581: a3 = a2 >> 0x28\n 18584: u8 [a0 + 0xd] = a3\n 18587: a3 = a2 >> 0x20\n 18590: u8 [a0 + 0xc] = a3\n 18593: a3 = a2 >> 0x18\n 18596: u8 [a0 + 0xb] = a3\n 18599: a3 = a2 >> 0x10\n 18602: u8 [a0 + 0xa] = a3\n 18605: a2 = a2 >> 0x8\n 18608: u8 [a0 + 0x9] = a2\n 18611: u8 [a0] = a1\n 18613: a2 = a1 >> 0x38\n 18616: u8 [a0 + 0x7] = a2\n 18619: a2 = a1 >> 0x30\n 18622: u8 [a0 + 0x6] = a2\n 18625: a2 = a1 >> 0x28\n 18628: u8 [a0 + 0x5] = a2\n 18631: a2 = a1 >> 0x20\n 18634: u8 [a0 + 0x4] = a2\n 18637: a2 = a1 >> 0x18\n 18640: u8 [a0 + 0x3] = a2\n 18643: a2 = a1 >> 0x10\n 18646: u8 [a0 + 0x2] = a2\n 18649: a1 = a1 >> 0x8\n 18652: u8 [a0 + 0x1] = a1\n 18655: s1 = sp + 0x7ff\n 18659: s1 = s1 + 0x7e9\n 18663: u64 [s1 + 800] = 0\n 18667: u64 [s1 + 792] = 0\n 18671: u64 [s1 + 776] = 0x40\n 18676: a0 = sp + 0x1310\n 18680: a1 = sp + 0x12f0\n 18684: u64 [s1 + 784] = 0\n 18688: ra = 190, jump @56\n      : @236 [@dyn 95] (gas: 15)\n 18694: a1 = u64 [s1 + 0x340]\n 18698: a2 = u64 [s1 + 0x338]\n 18702: a0 = u64 [s1 + 0x330]\n 18706: s1 = u64 [s1 + 0x328]\n 18710: u64 [sp + 0x28] = a0\n 18713: u64 [sp + 0x30] = a1\n 18716: a0 = a0 | a1\n 18719: a1 = s1 | a2\n 18722: a1 = a1 | a0\n 18725: a1 = a1 >> 0x20\n 18728: u64 [sp + 0x38] = a2\n 18731: a0 = a0 | a2\n 18734: a0 = a0 << 0x20\n 18737: a0 = a0 | a1\n 18740: jump @238 if a0 == 0\n      : @237 (gas: 1)\n 18743: jump @961\n      : @238 (gas: 4)\n 18747: i32 a0 = s1 + 0\n 18749: a1 = 0x20\n 18752: u64 [sp + 0x20] = a0\n 18755: ra = 192, jump @0\n      : @239 [@dyn 96] (gas: 43)\n 18761: u8 [a0 + 31] = 0x7\n 18765: a1 = u64 [sp + 0x30]\n 18768: a2 = u64 [sp + 0x38]\n 18771: a2 = a2 | a1\n 18774: a1 = 0xffffffe0\n 18784: u64 [sp + 0x18] = s1\n 18787: u64 [sp + 0x58] = a1\n 18790: a1 = s1 <u a1\n 18793: s1 = u64 [sp + 0x28]\n 18796: a1 = 0 if s1 != 0\n 18798: a1 = 0 if a2 != 0\n 18800: u8 [a0 + 30] = 0\n 18803: u8 [a0 + 29] = 0\n 18806: u8 [a0 + 28] = 0\n 18809: u8 [a0 + 27] = 0\n 18812: u8 [a0 + 26] = 0\n 18815: u8 [a0 + 25] = 0\n 18818: u8 [a0 + 24] = 0\n 18821: u8 [a0 + 23] = 0\n 18824: u8 [a0 + 22] = 0\n 18827: u8 [a0 + 21] = 0\n 18830: u8 [a0 + 20] = 0\n 18833: u8 [a0 + 19] = 0\n 18836: u8 [a0 + 18] = 0\n 18839: u8 [a0 + 17] = 0\n 18842: u8 [a0 + 16] = 0\n 18845: u8 [a0 + 15] = 0\n 18848: u8 [a0 + 14] = 0\n 18851: u8 [a0 + 13] = 0\n 18854: u8 [a0 + 12] = 0\n 18857: u8 [a0 + 11] = 0\n 18860: u8 [a0 + 10] = 0\n 18863: u8 [a0 + 9] = 0\n 18866: u8 [a0 + 8] = 0\n 18869: u8 [a0 + 7] = 0\n 18872: u8 [a0 + 6] = 0\n 18875: u8 [a0 + 5] = 0\n 18878: u8 [a0 + 4] = 0\n 18881: u8 [a0 + 3] = 0\n 18884: u8 [a0 + 2] = 0\n 18887: u8 [a0 + 1] = 0\n 18890: u8 [a0 + 0] = 0\n 18892: jump @241 if a1 != 0\n      : @240 (gas: 1)\n 18895: jump @961\n      : @241 (gas: 4)\n 18899: a0 = u64 [sp + 0x20]\n 18902: i32 a0 = a0 + 0x20\n 18905: a1 = 0x20\n 18908: ra = 194, jump @0\n      : @242 [@dyn 97] (gas: 43)\n 18914: u8 [a0 + 31] = 0\n 18917: u8 [a0 + 30] = 0\n 18920: u8 [a0 + 29] = 0\n 18923: u8 [a0 + 28] = 0\n 18926: u8 [a0 + 27] = 0\n 18929: u8 [a0 + 26] = 0\n 18932: u8 [a0 + 25] = 0\n 18935: u8 [a0 + 24] = 0\n 18938: u8 [a0 + 23] = 0\n 18941: u8 [a0 + 22] = 0\n 18944: u8 [a0 + 21] = 0\n 18947: u8 [a0 + 20] = 0\n 18950: u8 [a0 + 19] = 0\n 18953: u8 [a0 + 18] = 0\n 18956: u8 [a0 + 17] = 0\n 18959: u8 [a0 + 16] = 0\n 18962: u8 [a0 + 15] = 0\n 18965: u8 [a0 + 14] = 0\n 18968: u8 [a0 + 13] = 0\n 18971: u8 [a0 + 12] = 0\n 18974: u8 [a0 + 11] = 0\n 18977: u8 [a0 + 10] = 0\n 18980: u8 [a0 + 9] = 0\n 18983: u8 [a0 + 8] = 0\n 18986: u8 [a0 + 7] = 0\n 18989: u8 [a0 + 6] = 0x65\n 18993: u8 [a0 + 5] = 0x6d\n 18997: u8 [a0 + 4] = 0x6f\n 19001: u8 [a0 + 3] = 0x73\n 19005: u8 [a0 + 2] = 0x65\n 19009: u8 [a0 + 1] = 0x77\n 19013: a2 = u64 [sp + 0x48]\n 19016: a3 = u64 [sp + 0x40]\n 19019: a4 = a2 | a3\n 19022: a2 = u64 [sp + 0x68]\n 19025: a3 = u64 [sp + 0x58]\n 19028: a2 = a2 <u a3\n 19031: a3 = u64 [sp + 0x60]\n 19034: a2 = 0 if a3 != 0\n 19036: u64 [sp + 0x58] = a4\n 19039: a2 = 0 if a4 != 0\n 19041: u8 [a0 + 0] = 0x61\n 19044: jump @244 if a2 != 0\n      : @243 (gas: 1)\n 19047: jump @961\n      : @244 (gas: 4)\n 19051: a0 = u64 [sp + 0x50]\n 19054: i32 a0 = a0 + 0x20\n 19057: a1 = 0x20\n 19060: ra = 196, jump @0\n      : @245 [@dyn 98] (gas: 76)\n 19066: a1 = u64 [sp + 0x30]\n 19069: a1 = reverse a1\n 19071: a2 = u64 [sp + 0x38]\n 19074: a2 = reverse a2\n 19076: a3 = reverse s1\n 19078: a4 = u64 [sp + 0x18]\n 19081: a4 = reverse a4\n 19083: a5 = a4 >> 0x38\n 19086: u8 [a0 + 0x1f] = a5\n 19089: a5 = a4 >> 0x30\n 19092: u8 [a0 + 0x1e] = a5\n 19095: a5 = a4 >> 0x28\n 19098: u8 [a0 + 0x1d] = a5\n 19101: a5 = a4 >> 0x20\n 19104: u8 [a0 + 0x1c] = a5\n 19107: a5 = a4 >> 0x18\n 19110: u8 [a0 + 0x1b] = a5\n 19113: a5 = a4 >> 0x10\n 19116: u8 [a0 + 0x1a] = a5\n 19119: a5 = a4 >> 0x8\n 19122: u8 [a0 + 0x19] = a5\n 19125: u8 [a0 + 0x18] = a4\n 19128: u8 [a0 + 0x10] = a3\n 19131: a4 = a3 >> 0x38\n 19134: u8 [a0 + 0x17] = a4\n 19137: a4 = a3 >> 0x30\n 19140: u8 [a0 + 0x16] = a4\n 19143: a4 = a3 >> 0x28\n 19146: u8 [a0 + 0x15] = a4\n 19149: a4 = a3 >> 0x20\n 19152: u8 [a0 + 0x14] = a4\n 19155: a4 = a3 >> 0x18\n 19158: u8 [a0 + 0x13] = a4\n 19161: a4 = a3 >> 0x10\n 19164: u8 [a0 + 0x12] = a4\n 19167: a3 = a3 >> 0x8\n 19170: u8 [a0 + 0x11] = a3\n 19173: u8 [a0 + 0x8] = a2\n 19176: a3 = a2 >> 0x38\n 19179: u8 [a0 + 0xf] = a3\n 19182: a3 = a2 >> 0x30\n 19185: u8 [a0 + 0xe] = a3\n 19188: a3 = a2 >> 0x28\n 19191: u8 [a0 + 0xd] = a3\n 19194: a3 = a2 >> 0x20\n 19197: u8 [a0 + 0xc] = a3\n 19200: a3 = a2 >> 0x18\n 19203: u8 [a0 + 0xb] = a3\n 19206: a3 = a2 >> 0x10\n 19209: u8 [a0 + 0xa] = a3\n 19212: a2 = a2 >> 0x8\n 19215: u8 [a0 + 0x9] = a2\n 19218: u8 [a0] = a1\n 19220: a2 = a1 >> 0x38\n 19223: u8 [a0 + 0x7] = a2\n 19226: a2 = a1 >> 0x30\n 19229: u8 [a0 + 0x6] = a2\n 19232: a2 = a1 >> 0x28\n 19235: u8 [a0 + 0x5] = a2\n 19238: a2 = a1 >> 0x20\n 19241: u8 [a0 + 0x4] = a2\n 19244: a2 = a1 >> 0x18\n 19247: u8 [a0 + 0x3] = a2\n 19250: a2 = a1 >> 0x10\n 19253: u8 [a0 + 0x2] = a2\n 19256: a1 = a1 >> 0x8\n 19259: u8 [a0 + 0x1] = a1\n 19262: s1 = sp + 0x7ff\n 19266: s1 = s1 + 0x7e9\n 19270: u64 [s1 + 736] = 0\n 19274: u64 [s1 + 728] = 0\n 19278: u64 [s1 + 712] = 0x40\n 19283: a0 = sp + 0x12d0\n 19287: a1 = sp + 0x12b0\n 19291: u64 [s1 + 720] = 0\n 19295: ra = 198, jump @56\n      : @246 [@dyn 99] (gas: 15)\n 19301: a1 = u64 [s1 + 0x300]\n 19305: a2 = u64 [s1 + 0x2f8]\n 19309: a0 = u64 [s1 + 0x2f0]\n 19313: s1 = u64 [s1 + 0x2e8]\n 19317: u64 [sp + 0x28] = a0\n 19320: u64 [sp + 0x30] = a1\n 19323: a0 = a0 | a1\n 19326: a1 = s1 | a2\n 19329: a1 = a1 | a0\n 19332: a1 = a1 >> 0x20\n 19335: u64 [sp + 0x38] = a2\n 19338: a0 = a0 | a2\n 19341: a0 = a0 << 0x20\n 19344: a0 = a0 | a1\n 19347: jump @248 if a0 == 0\n      : @247 (gas: 1)\n 19350: jump @961\n      : @248 (gas: 4)\n 19354: i32 a0 = s1 + 0\n 19356: a1 = 0x20\n 19359: u64 [sp + 0x18] = a0\n 19362: ra = 200, jump @0\n      : @249 [@dyn 100] (gas: 44)\n 19368: u8 [a0 + 31] = 0x9\n 19372: a1 = u64 [sp + 0x30]\n 19375: a2 = u64 [sp + 0x38]\n 19378: a2 = a2 | a1\n 19381: a1 = 0x100000000\n 19391: u64 [sp + 0x20] = a1\n 19394: a1 = 0xffffffe0\n 19404: u64 [sp + 0x10] = s1\n 19407: a1 = s1 <u a1\n 19410: s1 = u64 [sp + 0x28]\n 19413: a1 = 0 if s1 != 0\n 19415: a1 = 0 if a2 != 0\n 19417: u8 [a0 + 30] = 0\n 19420: u8 [a0 + 29] = 0\n 19423: u8 [a0 + 28] = 0\n 19426: u8 [a0 + 27] = 0\n 19429: u8 [a0 + 26] = 0\n 19432: u8 [a0 + 25] = 0\n 19435: u8 [a0 + 24] = 0\n 19438: u8 [a0 + 23] = 0\n 19441: u8 [a0 + 22] = 0\n 19444: u8 [a0 + 21] = 0\n 19447: u8 [a0 + 20] = 0\n 19450: u8 [a0 + 19] = 0\n 19453: u8 [a0 + 18] = 0\n 19456: u8 [a0 + 17] = 0\n 19459: u8 [a0 + 16] = 0\n 19462: u8 [a0 + 15] = 0\n 19465: u8 [a0 + 14] = 0\n 19468: u8 [a0 + 13] = 0\n 19471: u8 [a0 + 12] = 0\n 19474: u8 [a0 + 11] = 0\n 19477: u8 [a0 + 10] = 0\n 19480: u8 [a0 + 9] = 0\n 19483: u8 [a0 + 8] = 0\n 19486: u8 [a0 + 7] = 0\n 19489: u8 [a0 + 6] = 0\n 19492: u8 [a0 + 5] = 0\n 19495: u8 [a0 + 4] = 0\n 19498: u8 [a0 + 3] = 0\n 19501: u8 [a0 + 2] = 0\n 19504: u8 [a0 + 1] = 0\n 19507: u8 [a0 + 0] = 0\n 19509: jump @251 if a1 != 0\n      : @250 (gas: 1)\n 19512: jump @961\n      : @251 (gas: 4)\n 19516: a0 = u64 [sp + 0x18]\n 19519: i32 a0 = a0 + 0x20\n 19522: a1 = 0x20\n 19525: ra = 202, jump @0\n      : @252 [@dyn 101] (gas: 41)\n 19531: u8 [a0 + 31] = 0\n 19534: u8 [a0 + 30] = 0\n 19537: u8 [a0 + 29] = 0\n 19540: u8 [a0 + 28] = 0\n 19543: u8 [a0 + 27] = 0\n 19546: u8 [a0 + 26] = 0\n 19549: u8 [a0 + 25] = 0\n 19552: u8 [a0 + 24] = 0\n 19555: u8 [a0 + 23] = 0\n 19558: u8 [a0 + 22] = 0\n 19561: u8 [a0 + 21] = 0\n 19564: u8 [a0 + 20] = 0\n 19567: u8 [a0 + 19] = 0\n 19570: u8 [a0 + 18] = 0\n 19573: u8 [a0 + 17] = 0\n 19576: u8 [a0 + 16] = 0\n 19579: u8 [a0 + 15] = 0\n 19582: u8 [a0 + 14] = 0\n 19585: u8 [a0 + 13] = 0\n 19588: u8 [a0 + 12] = 0\n 19591: u8 [a0 + 11] = 0\n 19594: u8 [a0 + 10] = 0\n 19597: u8 [a0 + 9] = 0\n 19600: u8 [a0 + 8] = 0x74\n 19604: u8 [a0 + 7] = 0x6e\n 19608: u8 [a0 + 6] = 0x61\n 19612: u8 [a0 + 5] = 0x69\n 19616: u8 [a0 + 4] = 0x6c\n 19620: u8 [a0 + 3] = 0x6c\n 19624: u8 [a0 + 2] = 0x69\n 19628: u8 [a0 + 1] = 0x72\n 19632: a2 = u64 [sp + 0x20]\n 19635: a2 = a2 + 0xffffffffffffffc0\n 19638: a3 = u64 [sp + 0x68]\n 19641: a2 = a3 <u a2\n 19644: a3 = u64 [sp + 0x60]\n 19647: a2 = 0 if a3 != 0\n 19649: a3 = u64 [sp + 0x58]\n 19652: a2 = 0 if a3 != 0\n 19654: u8 [a0 + 0] = 0x62\n 19657: jump @254 if a2 != 0\n      : @253 (gas: 1)\n 19660: jump @961\n      : @254 (gas: 4)\n 19664: a0 = u64 [sp + 0x50]\n 19667: i32 a0 = a0 + 0x40\n 19670: a1 = 0x20\n 19673: ra = 204, jump @0\n      : @255 [@dyn 102] (gas: 76)\n 19679: a1 = u64 [sp + 0x30]\n 19682: a1 = reverse a1\n 19684: a2 = u64 [sp + 0x38]\n 19687: a2 = reverse a2\n 19689: a3 = reverse s1\n 19691: a4 = u64 [sp + 0x10]\n 19694: a4 = reverse a4\n 19696: a5 = a4 >> 0x38\n 19699: u8 [a0 + 0x1f] = a5\n 19702: a5 = a4 >> 0x30\n 19705: u8 [a0 + 0x1e] = a5\n 19708: a5 = a4 >> 0x28\n 19711: u8 [a0 + 0x1d] = a5\n 19714: a5 = a4 >> 0x20\n 19717: u8 [a0 + 0x1c] = a5\n 19720: a5 = a4 >> 0x18\n 19723: u8 [a0 + 0x1b] = a5\n 19726: a5 = a4 >> 0x10\n 19729: u8 [a0 + 0x1a] = a5\n 19732: a5 = a4 >> 0x8\n 19735: u8 [a0 + 0x19] = a5\n 19738: u8 [a0 + 0x18] = a4\n 19741: u8 [a0 + 0x10] = a3\n 19744: a4 = a3 >> 0x38\n 19747: u8 [a0 + 0x17] = a4\n 19750: a4 = a3 >> 0x30\n 19753: u8 [a0 + 0x16] = a4\n 19756: a4 = a3 >> 0x28\n 19759: u8 [a0 + 0x15] = a4\n 19762: a4 = a3 >> 0x20\n 19765: u8 [a0 + 0x14] = a4\n 19768: a4 = a3 >> 0x18\n 19771: u8 [a0 + 0x13] = a4\n 19774: a4 = a3 >> 0x10\n 19777: u8 [a0 + 0x12] = a4\n 19780: a3 = a3 >> 0x8\n 19783: u8 [a0 + 0x11] = a3\n 19786: u8 [a0 + 0x8] = a2\n 19789: a3 = a2 >> 0x38\n 19792: u8 [a0 + 0xf] = a3\n 19795: a3 = a2 >> 0x30\n 19798: u8 [a0 + 0xe] = a3\n 19801: a3 = a2 >> 0x28\n 19804: u8 [a0 + 0xd] = a3\n 19807: a3 = a2 >> 0x20\n 19810: u8 [a0 + 0xc] = a3\n 19813: a3 = a2 >> 0x18\n 19816: u8 [a0 + 0xb] = a3\n 19819: a3 = a2 >> 0x10\n 19822: u8 [a0 + 0xa] = a3\n 19825: a2 = a2 >> 0x8\n 19828: u8 [a0 + 0x9] = a2\n 19831: u8 [a0] = a1\n 19833: a2 = a1 >> 0x38\n 19836: u8 [a0 + 0x7] = a2\n 19839: a2 = a1 >> 0x30\n 19842: u8 [a0 + 0x6] = a2\n 19845: a2 = a1 >> 0x28\n 19848: u8 [a0 + 0x5] = a2\n 19851: a2 = a1 >> 0x20\n 19854: u8 [a0 + 0x4] = a2\n 19857: a2 = a1 >> 0x18\n 19860: u8 [a0 + 0x3] = a2\n 19863: a2 = a1 >> 0x10\n 19866: u8 [a0 + 0x2] = a2\n 19869: a1 = a1 >> 0x8\n 19872: u8 [a0 + 0x1] = a1\n 19875: s1 = sp + 0x7ff\n 19879: s1 = s1 + 0x7e9\n 19883: u64 [s1 + 672] = 0\n 19887: u64 [s1 + 664] = 0\n 19891: u64 [s1 + 648] = 0x40\n 19896: a0 = sp + 0x1290\n 19900: a1 = sp + 0x1270\n 19904: u64 [s1 + 656] = 0\n 19908: ra = 206, jump @56\n      : @256 [@dyn 103] (gas: 15)\n 19914: a1 = u64 [s1 + 0x2c0]\n 19918: a2 = u64 [s1 + 0x2b8]\n 19922: a0 = u64 [s1 + 0x2b0]\n 19926: s1 = u64 [s1 + 0x2a8]\n 19930: u64 [sp + 0x28] = a0\n 19933: u64 [sp + 0x30] = a1\n 19936: a0 = a0 | a1\n 19939: a1 = s1 | a2\n 19942: a1 = a1 | a0\n 19945: a1 = a1 >> 0x20\n 19948: u64 [sp + 0x38] = a2\n 19951: a0 = a0 | a2\n 19954: a0 = a0 << 0x20\n 19957: a0 = a0 | a1\n 19960: jump @258 if a0 == 0\n      : @257 (gas: 1)\n 19963: jump @961\n      : @258 (gas: 4)\n 19967: i32 a0 = s1 + 0\n 19969: a1 = 0x20\n 19972: u64 [sp + 0x18] = a0\n 19975: ra = 208, jump @0\n      : @259 [@dyn 104] (gas: 44)\n 19981: u8 [a0 + 31] = 0x9\n 19985: a1 = u64 [sp + 0x30]\n 19988: a2 = u64 [sp + 0x38]\n 19991: a2 = a2 | a1\n 19994: a1 = 0x100000000\n 20004: u64 [sp + 0x20] = a1\n 20007: a1 = 0xffffffe0\n 20017: u64 [sp + 0x10] = s1\n 20020: a1 = s1 <u a1\n 20023: s1 = u64 [sp + 0x28]\n 20026: a1 = 0 if s1 != 0\n 20028: a1 = 0 if a2 != 0\n 20030: u8 [a0 + 30] = 0\n 20033: u8 [a0 + 29] = 0\n 20036: u8 [a0 + 28] = 0\n 20039: u8 [a0 + 27] = 0\n 20042: u8 [a0 + 26] = 0\n 20045: u8 [a0 + 25] = 0\n 20048: u8 [a0 + 24] = 0\n 20051: u8 [a0 + 23] = 0\n 20054: u8 [a0 + 22] = 0\n 20057: u8 [a0 + 21] = 0\n 20060: u8 [a0 + 20] = 0\n 20063: u8 [a0 + 19] = 0\n 20066: u8 [a0 + 18] = 0\n 20069: u8 [a0 + 17] = 0\n 20072: u8 [a0 + 16] = 0\n 20075: u8 [a0 + 15] = 0\n 20078: u8 [a0 + 14] = 0\n 20081: u8 [a0 + 13] = 0\n 20084: u8 [a0 + 12] = 0\n 20087: u8 [a0 + 11] = 0\n 20090: u8 [a0 + 10] = 0\n 20093: u8 [a0 + 9] = 0\n 20096: u8 [a0 + 8] = 0\n 20099: u8 [a0 + 7] = 0\n 20102: u8 [a0 + 6] = 0\n 20105: u8 [a0 + 5] = 0\n 20108: u8 [a0 + 4] = 0\n 20111: u8 [a0 + 3] = 0\n 20114: u8 [a0 + 2] = 0\n 20117: u8 [a0 + 1] = 0\n 20120: u8 [a0 + 0] = 0\n 20122: jump @261 if a1 != 0\n      : @260 (gas: 1)\n 20125: jump @961\n      : @261 (gas: 4)\n 20129: a0 = u64 [sp + 0x18]\n 20132: i32 a0 = a0 + 0x20\n 20135: a1 = 0x20\n 20138: ra = 210, jump @0\n      : @262 [@dyn 105] (gas: 41)\n 20144: u8 [a0 + 31] = 0\n 20147: u8 [a0 + 30] = 0\n 20150: u8 [a0 + 29] = 0\n 20153: u8 [a0 + 28] = 0\n 20156: u8 [a0 + 27] = 0\n 20159: u8 [a0 + 26] = 0\n 20162: u8 [a0 + 25] = 0\n 20165: u8 [a0 + 24] = 0\n 20168: u8 [a0 + 23] = 0\n 20171: u8 [a0 + 22] = 0\n 20174: u8 [a0 + 21] = 0\n 20177: u8 [a0 + 20] = 0\n 20180: u8 [a0 + 19] = 0\n 20183: u8 [a0 + 18] = 0\n 20186: u8 [a0 + 17] = 0\n 20189: u8 [a0 + 16] = 0\n 20192: u8 [a0 + 15] = 0\n 20195: u8 [a0 + 14] = 0\n 20198: u8 [a0 + 13] = 0\n 20201: u8 [a0 + 12] = 0\n 20204: u8 [a0 + 11] = 0\n 20207: u8 [a0 + 10] = 0\n 20210: u8 [a0 + 9] = 0\n 20213: u8 [a0 + 8] = 0x6c\n 20217: u8 [a0 + 7] = 0x75\n 20221: u8 [a0 + 6] = 0x66\n 20225: u8 [a0 + 5] = 0x69\n 20229: u8 [a0 + 4] = 0x74\n 20233: u8 [a0 + 3] = 0x75\n 20237: u8 [a0 + 2] = 0x61\n 20241: u8 [a0 + 1] = 0x65\n 20245: a2 = u64 [sp + 0x20]\n 20248: a2 = a2 + 0xffffffffffffffa0\n 20251: a3 = u64 [sp + 0x68]\n 20254: a2 = a3 <u a2\n 20257: a3 = u64 [sp + 0x60]\n 20260: a2 = 0 if a3 != 0\n 20262: a3 = u64 [sp + 0x58]\n 20265: a2 = 0 if a3 != 0\n 20267: u8 [a0 + 0] = 0x62\n 20270: jump @264 if a2 != 0\n      : @263 (gas: 1)\n 20273: jump @961\n      : @264 (gas: 4)\n 20277: a0 = u64 [sp + 0x50]\n 20280: i32 a0 = a0 + 0x60\n 20283: a1 = 0x20\n 20286: ra = 212, jump @0\n      : @265 [@dyn 106] (gas: 76)\n 20292: a1 = u64 [sp + 0x30]\n 20295: a1 = reverse a1\n 20297: a2 = u64 [sp + 0x38]\n 20300: a2 = reverse a2\n 20302: a3 = reverse s1\n 20304: a4 = u64 [sp + 0x10]\n 20307: a4 = reverse a4\n 20309: a5 = a4 >> 0x38\n 20312: u8 [a0 + 0x1f] = a5\n 20315: a5 = a4 >> 0x30\n 20318: u8 [a0 + 0x1e] = a5\n 20321: a5 = a4 >> 0x28\n 20324: u8 [a0 + 0x1d] = a5\n 20327: a5 = a4 >> 0x20\n 20330: u8 [a0 + 0x1c] = a5\n 20333: a5 = a4 >> 0x18\n 20336: u8 [a0 + 0x1b] = a5\n 20339: a5 = a4 >> 0x10\n 20342: u8 [a0 + 0x1a] = a5\n 20345: a5 = a4 >> 0x8\n 20348: u8 [a0 + 0x19] = a5\n 20351: u8 [a0 + 0x18] = a4\n 20354: u8 [a0 + 0x10] = a3\n 20357: a4 = a3 >> 0x38\n 20360: u8 [a0 + 0x17] = a4\n 20363: a4 = a3 >> 0x30\n 20366: u8 [a0 + 0x16] = a4\n 20369: a4 = a3 >> 0x28\n 20372: u8 [a0 + 0x15] = a4\n 20375: a4 = a3 >> 0x20\n 20378: u8 [a0 + 0x14] = a4\n 20381: a4 = a3 >> 0x18\n 20384: u8 [a0 + 0x13] = a4\n 20387: a4 = a3 >> 0x10\n 20390: u8 [a0 + 0x12] = a4\n 20393: a3 = a3 >> 0x8\n 20396: u8 [a0 + 0x11] = a3\n 20399: u8 [a0 + 0x8] = a2\n 20402: a3 = a2 >> 0x38\n 20405: u8 [a0 + 0xf] = a3\n 20408: a3 = a2 >> 0x30\n 20411: u8 [a0 + 0xe] = a3\n 20414: a3 = a2 >> 0x28\n 20417: u8 [a0 + 0xd] = a3\n 20420: a3 = a2 >> 0x20\n 20423: u8 [a0 + 0xc] = a3\n 20426: a3 = a2 >> 0x18\n 20429: u8 [a0 + 0xb] = a3\n 20432: a3 = a2 >> 0x10\n 20435: u8 [a0 + 0xa] = a3\n 20438: a2 = a2 >> 0x8\n 20441: u8 [a0 + 0x9] = a2\n 20444: u8 [a0] = a1\n 20446: a2 = a1 >> 0x38\n 20449: u8 [a0 + 0x7] = a2\n 20452: a2 = a1 >> 0x30\n 20455: u8 [a0 + 0x6] = a2\n 20458: a2 = a1 >> 0x28\n 20461: u8 [a0 + 0x5] = a2\n 20464: a2 = a1 >> 0x20\n 20467: u8 [a0 + 0x4] = a2\n 20470: a2 = a1 >> 0x18\n 20473: u8 [a0 + 0x3] = a2\n 20476: a2 = a1 >> 0x10\n 20479: u8 [a0 + 0x2] = a2\n 20482: a1 = a1 >> 0x8\n 20485: u8 [a0 + 0x1] = a1\n 20488: s1 = sp + 0x7ff\n 20492: s1 = s1 + 0x7e9\n 20496: u64 [s1 + 608] = 0\n 20500: u64 [s1 + 600] = 0\n 20504: u64 [s1 + 584] = 0x40\n 20509: a0 = sp + 0x1250\n 20513: a1 = sp + 0x1230\n 20517: u64 [s1 + 592] = 0\n 20521: ra = 214, jump @56\n      : @266 [@dyn 107] (gas: 15)\n 20527: a1 = u64 [s1 + 0x280]\n 20531: a2 = u64 [s1 + 0x278]\n 20535: a0 = u64 [s1 + 0x270]\n 20539: s1 = u64 [s1 + 0x268]\n 20543: u64 [sp + 0x28] = a0\n 20546: u64 [sp + 0x30] = a1\n 20549: a0 = a0 | a1\n 20552: a1 = s1 | a2\n 20555: a1 = a1 | a0\n 20558: a1 = a1 >> 0x20\n 20561: u64 [sp + 0x38] = a2\n 20564: a0 = a0 | a2\n 20567: a0 = a0 << 0x20\n 20570: a0 = a0 | a1\n 20573: jump @268 if a0 == 0\n      : @267 (gas: 1)\n 20576: jump @961\n      : @268 (gas: 4)\n 20580: i32 a0 = s1 + 0\n 20582: a1 = 0x20\n 20585: u64 [sp + 0x18] = a0\n 20588: ra = 216, jump @0\n      : @269 [@dyn 108] (gas: 44)\n 20594: u8 [a0 + 31] = 0x5\n 20598: a1 = u64 [sp + 0x30]\n 20601: a2 = u64 [sp + 0x38]\n 20604: a2 = a2 | a1\n 20607: a1 = 0x100000000\n 20617: u64 [sp + 0x20] = a1\n 20620: a1 = 0xffffffe0\n 20630: u64 [sp + 0x10] = s1\n 20633: a1 = s1 <u a1\n 20636: s1 = u64 [sp + 0x28]\n 20639: a1 = 0 if s1 != 0\n 20641: a1 = 0 if a2 != 0\n 20643: u8 [a0 + 30] = 0\n 20646: u8 [a0 + 29] = 0\n 20649: u8 [a0 + 28] = 0\n 20652: u8 [a0 + 27] = 0\n 20655: u8 [a0 + 26] = 0\n 20658: u8 [a0 + 25] = 0\n 20661: u8 [a0 + 24] = 0\n 20664: u8 [a0 + 23] = 0\n 20667: u8 [a0 + 22] = 0\n 20670: u8 [a0 + 21] = 0\n 20673: u8 [a0 + 20] = 0\n 20676: u8 [a0 + 19] = 0\n 20679: u8 [a0 + 18] = 0\n 20682: u8 [a0 + 17] = 0\n 20685: u8 [a0 + 16] = 0\n 20688: u8 [a0 + 15] = 0\n 20691: u8 [a0 + 14] = 0\n 20694: u8 [a0 + 13] = 0\n 20697: u8 [a0 + 12] = 0\n 20700: u8 [a0 + 11] = 0\n 20703: u8 [a0 + 10] = 0\n 20706: u8 [a0 + 9] = 0\n 20709: u8 [a0 + 8] = 0\n 20712: u8 [a0 + 7] = 0\n 20715: u8 [a0 + 6] = 0\n 20718: u8 [a0 + 5] = 0\n 20721: u8 [a0 + 4] = 0\n 20724: u8 [a0 + 3] = 0\n 20727: u8 [a0 + 2] = 0\n 20730: u8 [a0 + 1] = 0\n 20733: u8 [a0 + 0] = 0\n 20735: jump @271 if a1 != 0\n      : @270 (gas: 1)\n 20738: jump @961\n      : @271 (gas: 4)\n 20742: a0 = u64 [sp + 0x18]\n 20745: i32 a0 = a0 + 0x20\n 20748: a1 = 0x20\n 20751: ra = 218, jump @0\n      : @272 [@dyn 109] (gas: 41)\n 20757: u8 [a0 + 31] = 0\n 20760: u8 [a0 + 30] = 0\n 20763: u8 [a0 + 29] = 0\n 20766: u8 [a0 + 28] = 0\n 20769: u8 [a0 + 27] = 0\n 20772: u8 [a0 + 26] = 0\n 20775: u8 [a0 + 25] = 0\n 20778: u8 [a0 + 24] = 0\n 20781: u8 [a0 + 23] = 0\n 20784: u8 [a0 + 22] = 0\n 20787: u8 [a0 + 21] = 0\n 20790: u8 [a0 + 20] = 0\n 20793: u8 [a0 + 19] = 0\n 20796: u8 [a0 + 18] = 0\n 20799: u8 [a0 + 17] = 0\n 20802: u8 [a0 + 16] = 0\n 20805: u8 [a0 + 15] = 0\n 20808: u8 [a0 + 14] = 0\n 20811: u8 [a0 + 13] = 0\n 20814: u8 [a0 + 12] = 0\n 20817: u8 [a0 + 11] = 0\n 20820: u8 [a0 + 10] = 0\n 20823: u8 [a0 + 9] = 0\n 20826: u8 [a0 + 8] = 0\n 20829: u8 [a0 + 7] = 0\n 20832: u8 [a0 + 6] = 0\n 20835: u8 [a0 + 5] = 0\n 20838: u8 [a0 + 4] = 0x65\n 20842: u8 [a0 + 3] = 0x76\n 20846: u8 [a0 + 2] = 0x61\n 20850: u8 [a0 + 1] = 0x72\n 20854: a2 = u64 [sp + 0x20]\n 20857: a2 = a2 + 0xffffffffffffff80\n 20860: a3 = u64 [sp + 0x68]\n 20863: a2 = a3 <u a2\n 20866: a3 = u64 [sp + 0x60]\n 20869: a2 = 0 if a3 != 0\n 20871: a3 = u64 [sp + 0x58]\n 20874: a2 = 0 if a3 != 0\n 20876: u8 [a0 + 0] = 0x62\n 20879: jump @274 if a2 != 0\n      : @273 (gas: 1)\n 20882: jump @961\n      : @274 (gas: 4)\n 20886: a0 = u64 [sp + 0x50]\n 20889: i32 a0 = a0 + 0x80\n 20893: a1 = 0x20\n 20896: ra = 220, jump @0\n      : @275 [@dyn 110] (gas: 76)\n 20902: a1 = u64 [sp + 0x30]\n 20905: a1 = reverse a1\n 20907: a2 = u64 [sp + 0x38]\n 20910: a2 = reverse a2\n 20912: a3 = reverse s1\n 20914: a4 = u64 [sp + 0x10]\n 20917: a4 = reverse a4\n 20919: a5 = a4 >> 0x38\n 20922: u8 [a0 + 0x1f] = a5\n 20925: a5 = a4 >> 0x30\n 20928: u8 [a0 + 0x1e] = a5\n 20931: a5 = a4 >> 0x28\n 20934: u8 [a0 + 0x1d] = a5\n 20937: a5 = a4 >> 0x20\n 20940: u8 [a0 + 0x1c] = a5\n 20943: a5 = a4 >> 0x18\n 20946: u8 [a0 + 0x1b] = a5\n 20949: a5 = a4 >> 0x10\n 20952: u8 [a0 + 0x1a] = a5\n 20955: a5 = a4 >> 0x8\n 20958: u8 [a0 + 0x19] = a5\n 20961: u8 [a0 + 0x18] = a4\n 20964: u8 [a0 + 0x10] = a3\n 20967: a4 = a3 >> 0x38\n 20970: u8 [a0 + 0x17] = a4\n 20973: a4 = a3 >> 0x30\n 20976: u8 [a0 + 0x16] = a4\n 20979: a4 = a3 >> 0x28\n 20982: u8 [a0 + 0x15] = a4\n 20985: a4 = a3 >> 0x20\n 20988: u8 [a0 + 0x14] = a4\n 20991: a4 = a3 >> 0x18\n 20994: u8 [a0 + 0x13] = a4\n 20997: a4 = a3 >> 0x10\n 21000: u8 [a0 + 0x12] = a4\n 21003: a3 = a3 >> 0x8\n 21006: u8 [a0 + 0x11] = a3\n 21009: u8 [a0 + 0x8] = a2\n 21012: a3 = a2 >> 0x38\n 21015: u8 [a0 + 0xf] = a3\n 21018: a3 = a2 >> 0x30\n 21021: u8 [a0 + 0xe] = a3\n 21024: a3 = a2 >> 0x28\n 21027: u8 [a0 + 0xd] = a3\n 21030: a3 = a2 >> 0x20\n 21033: u8 [a0 + 0xc] = a3\n 21036: a3 = a2 >> 0x18\n 21039: u8 [a0 + 0xb] = a3\n 21042: a3 = a2 >> 0x10\n 21045: u8 [a0 + 0xa] = a3\n 21048: a2 = a2 >> 0x8\n 21051: u8 [a0 + 0x9] = a2\n 21054: u8 [a0] = a1\n 21056: a2 = a1 >> 0x38\n 21059: u8 [a0 + 0x7] = a2\n 21062: a2 = a1 >> 0x30\n 21065: u8 [a0 + 0x6] = a2\n 21068: a2 = a1 >> 0x28\n 21071: u8 [a0 + 0x5] = a2\n 21074: a2 = a1 >> 0x20\n 21077: u8 [a0 + 0x4] = a2\n 21080: a2 = a1 >> 0x18\n 21083: u8 [a0 + 0x3] = a2\n 21086: a2 = a1 >> 0x10\n 21089: u8 [a0 + 0x2] = a2\n 21092: a1 = a1 >> 0x8\n 21095: u8 [a0 + 0x1] = a1\n 21098: s1 = sp + 0x7ff\n 21102: s1 = s1 + 0x7e9\n 21106: u64 [s1 + 544] = 0\n 21110: u64 [s1 + 536] = 0\n 21114: u64 [s1 + 520] = 0x40\n 21119: a0 = sp + 0x1210\n 21123: a1 = sp + 0x11f0\n 21127: u64 [s1 + 528] = 0\n 21131: ra = 222, jump @56\n      : @276 [@dyn 111] (gas: 15)\n 21137: a1 = u64 [s1 + 0x240]\n 21141: a2 = u64 [s1 + 0x238]\n 21145: a0 = u64 [s1 + 0x230]\n 21149: s1 = u64 [s1 + 0x228]\n 21153: u64 [sp + 0x28] = a0\n 21156: u64 [sp + 0x30] = a1\n 21159: a0 = a0 | a1\n 21162: a1 = s1 | a2\n 21165: a1 = a1 | a0\n 21168: a1 = a1 >> 0x20\n 21171: u64 [sp + 0x38] = a2\n 21174: a0 = a0 | a2\n 21177: a0 = a0 << 0x20\n 21180: a0 = a0 | a1\n 21183: jump @278 if a0 == 0\n      : @277 (gas: 1)\n 21186: jump @961\n      : @278 (gas: 4)\n 21190: i32 a0 = s1 + 0\n 21192: a1 = 0x20\n 21195: u64 [sp + 0x18] = a0\n 21198: ra = 224, jump @0\n      : @279 [@dyn 112] (gas: 44)\n 21204: u8 [a0 + 31] = 0x4\n 21208: a1 = u64 [sp + 0x30]\n 21211: a2 = u64 [sp + 0x38]\n 21214: a2 = a2 | a1\n 21217: a1 = 0x100000000\n 21227: u64 [sp + 0x20] = a1\n 21230: a1 = 0xffffffe0\n 21240: u64 [sp + 0x10] = s1\n 21243: a1 = s1 <u a1\n 21246: s1 = u64 [sp + 0x28]\n 21249: a1 = 0 if s1 != 0\n 21251: a1 = 0 if a2 != 0\n 21253: u8 [a0 + 30] = 0\n 21256: u8 [a0 + 29] = 0\n 21259: u8 [a0 + 28] = 0\n 21262: u8 [a0 + 27] = 0\n 21265: u8 [a0 + 26] = 0\n 21268: u8 [a0 + 25] = 0\n 21271: u8 [a0 + 24] = 0\n 21274: u8 [a0 + 23] = 0\n 21277: u8 [a0 + 22] = 0\n 21280: u8 [a0 + 21] = 0\n 21283: u8 [a0 + 20] = 0\n 21286: u8 [a0 + 19] = 0\n 21289: u8 [a0 + 18] = 0\n 21292: u8 [a0 + 17] = 0\n 21295: u8 [a0 + 16] = 0\n 21298: u8 [a0 + 15] = 0\n 21301: u8 [a0 + 14] = 0\n 21304: u8 [a0 + 13] = 0\n 21307: u8 [a0 + 12] = 0\n 21310: u8 [a0 + 11] = 0\n 21313: u8 [a0 + 10] = 0\n 21316: u8 [a0 + 9] = 0\n 21319: u8 [a0 + 8] = 0\n 21322: u8 [a0 + 7] = 0\n 21325: u8 [a0 + 6] = 0\n 21328: u8 [a0 + 5] = 0\n 21331: u8 [a0 + 4] = 0\n 21334: u8 [a0 + 3] = 0\n 21337: u8 [a0 + 2] = 0\n 21340: u8 [a0 + 1] = 0\n 21343: u8 [a0 + 0] = 0\n 21345: jump @281 if a1 != 0\n      : @280 (gas: 1)\n 21348: jump @961\n      : @281 (gas: 4)\n 21352: a0 = u64 [sp + 0x18]\n 21355: i32 a0 = a0 + 0x20\n 21358: a1 = 0x20\n 21361: ra = 226, jump @0\n      : @282 [@dyn 113] (gas: 41)\n 21367: u8 [a0 + 31] = 0\n 21370: u8 [a0 + 30] = 0\n 21373: u8 [a0 + 29] = 0\n 21376: u8 [a0 + 28] = 0\n 21379: u8 [a0 + 27] = 0\n 21382: u8 [a0 + 26] = 0\n 21385: u8 [a0 + 25] = 0\n 21388: u8 [a0 + 24] = 0\n 21391: u8 [a0 + 23] = 0\n 21394: u8 [a0 + 22] = 0\n 21397: u8 [a0 + 21] = 0\n 21400: u8 [a0 + 20] = 0\n 21403: u8 [a0 + 19] = 0\n 21406: u8 [a0 + 18] = 0\n 21409: u8 [a0 + 17] = 0\n 21412: u8 [a0 + 16] = 0\n 21415: u8 [a0 + 15] = 0\n 21418: u8 [a0 + 14] = 0\n 21421: u8 [a0 + 13] = 0\n 21424: u8 [a0 + 12] = 0\n 21427: u8 [a0 + 11] = 0\n 21430: u8 [a0 + 10] = 0\n 21433: u8 [a0 + 9] = 0\n 21436: u8 [a0 + 8] = 0\n 21439: u8 [a0 + 7] = 0\n 21442: u8 [a0 + 6] = 0\n 21445: u8 [a0 + 5] = 0\n 21448: u8 [a0 + 4] = 0\n 21451: u8 [a0 + 3] = 0x64\n 21455: u8 [a0 + 2] = 0x6c\n 21459: u8 [a0 + 1] = 0x6f\n 21463: a2 = u64 [sp + 0x20]\n 21466: a2 = a2 + 0xffffffffffffff60\n 21470: a3 = u64 [sp + 0x68]\n 21473: a2 = a3 <u a2\n 21476: a3 = u64 [sp + 0x60]\n 21479: a2 = 0 if a3 != 0\n 21481: a3 = u64 [sp + 0x58]\n 21484: a2 = 0 if a3 != 0\n 21486: u8 [a0 + 0] = 0x62\n 21489: jump @284 if a2 != 0\n      : @283 (gas: 1)\n 21492: jump @961\n      : @284 (gas: 4)\n 21496: a0 = u64 [sp + 0x50]\n 21499: i32 a0 = a0 + 0xa0\n 21503: a1 = 0x20\n 21506: ra = 228, jump @0\n      : @285 [@dyn 114] (gas: 76)\n 21512: a1 = u64 [sp + 0x30]\n 21515: a1 = reverse a1\n 21517: a2 = u64 [sp + 0x38]\n 21520: a2 = reverse a2\n 21522: a3 = reverse s1\n 21524: a4 = u64 [sp + 0x10]\n 21527: a4 = reverse a4\n 21529: a5 = a4 >> 0x38\n 21532: u8 [a0 + 0x1f] = a5\n 21535: a5 = a4 >> 0x30\n 21538: u8 [a0 + 0x1e] = a5\n 21541: a5 = a4 >> 0x28\n 21544: u8 [a0 + 0x1d] = a5\n 21547: a5 = a4 >> 0x20\n 21550: u8 [a0 + 0x1c] = a5\n 21553: a5 = a4 >> 0x18\n 21556: u8 [a0 + 0x1b] = a5\n 21559: a5 = a4 >> 0x10\n 21562: u8 [a0 + 0x1a] = a5\n 21565: a5 = a4 >> 0x8\n 21568: u8 [a0 + 0x19] = a5\n 21571: u8 [a0 + 0x18] = a4\n 21574: u8 [a0 + 0x10] = a3\n 21577: a4 = a3 >> 0x38\n 21580: u8 [a0 + 0x17] = a4\n 21583: a4 = a3 >> 0x30\n 21586: u8 [a0 + 0x16] = a4\n 21589: a4 = a3 >> 0x28\n 21592: u8 [a0 + 0x15] = a4\n 21595: a4 = a3 >> 0x20\n 21598: u8 [a0 + 0x14] = a4\n 21601: a4 = a3 >> 0x18\n 21604: u8 [a0 + 0x13] = a4\n 21607: a4 = a3 >> 0x10\n 21610: u8 [a0 + 0x12] = a4\n 21613: a3 = a3 >> 0x8\n 21616: u8 [a0 + 0x11] = a3\n 21619: u8 [a0 + 0x8] = a2\n 21622: a3 = a2 >> 0x38\n 21625: u8 [a0 + 0xf] = a3\n 21628: a3 = a2 >> 0x30\n 21631: u8 [a0 + 0xe] = a3\n 21634: a3 = a2 >> 0x28\n 21637: u8 [a0 + 0xd] = a3\n 21640: a3 = a2 >> 0x20\n 21643: u8 [a0 + 0xc] = a3\n 21646: a3 = a2 >> 0x18\n 21649: u8 [a0 + 0xb] = a3\n 21652: a3 = a2 >> 0x10\n 21655: u8 [a0 + 0xa] = a3\n 21658: a2 = a2 >> 0x8\n 21661: u8 [a0 + 0x9] = a2\n 21664: u8 [a0] = a1\n 21666: a2 = a1 >> 0x38\n 21669: u8 [a0 + 0x7] = a2\n 21672: a2 = a1 >> 0x30\n 21675: u8 [a0 + 0x6] = a2\n 21678: a2 = a1 >> 0x28\n 21681: u8 [a0 + 0x5] = a2\n 21684: a2 = a1 >> 0x20\n 21687: u8 [a0 + 0x4] = a2\n 21690: a2 = a1 >> 0x18\n 21693: u8 [a0 + 0x3] = a2\n 21696: a2 = a1 >> 0x10\n 21699: u8 [a0 + 0x2] = a2\n 21702: a1 = a1 >> 0x8\n 21705: u8 [a0 + 0x1] = a1\n 21708: s1 = sp + 0x7ff\n 21712: s1 = s1 + 0x7e9\n 21716: u64 [s1 + 480] = 0\n 21720: u64 [s1 + 472] = 0\n 21724: u64 [s1 + 456] = 0x40\n 21729: a0 = sp + 0x11d0\n 21733: a1 = sp + 0x11b0\n 21737: u64 [s1 + 464] = 0\n 21741: ra = 230, jump @56\n      : @286 [@dyn 115] (gas: 15)\n 21747: a1 = u64 [s1 + 0x200]\n 21751: a2 = u64 [s1 + 0x1f8]\n 21755: a0 = u64 [s1 + 0x1f0]\n 21759: s1 = u64 [s1 + 0x1e8]\n 21763: u64 [sp + 0x28] = a0\n 21766: u64 [sp + 0x30] = a1\n 21769: a0 = a0 | a1\n 21772: a1 = s1 | a2\n 21775: a1 = a1 | a0\n 21778: a1 = a1 >> 0x20\n 21781: u64 [sp + 0x38] = a2\n 21784: a0 = a0 | a2\n 21787: a0 = a0 << 0x20\n 21790: a0 = a0 | a1\n 21793: jump @288 if a0 == 0\n      : @287 (gas: 1)\n 21796: jump @961\n      : @288 (gas: 4)\n 21800: i32 a0 = s1 + 0\n 21802: a1 = 0x20\n 21805: u64 [sp + 0x18] = a0\n 21808: ra = 232, jump @0\n      : @289 [@dyn 116] (gas: 44)\n 21814: u8 [a0 + 31] = 0x6\n 21818: a1 = u64 [sp + 0x30]\n 21821: a2 = u64 [sp + 0x38]\n 21824: a2 = a2 | a1\n 21827: a1 = 0x100000000\n 21837: u64 [sp + 0x20] = a1\n 21840: a1 = 0xffffffe0\n 21850: u64 [sp + 0x10] = s1\n 21853: a1 = s1 <u a1\n 21856: s1 = u64 [sp + 0x28]\n 21859: a1 = 0 if s1 != 0\n 21861: a1 = 0 if a2 != 0\n 21863: u8 [a0 + 30] = 0\n 21866: u8 [a0 + 29] = 0\n 21869: u8 [a0 + 28] = 0\n 21872: u8 [a0 + 27] = 0\n 21875: u8 [a0 + 26] = 0\n 21878: u8 [a0 + 25] = 0\n 21881: u8 [a0 + 24] = 0\n 21884: u8 [a0 + 23] = 0\n 21887: u8 [a0 + 22] = 0\n 21890: u8 [a0 + 21] = 0\n 21893: u8 [a0 + 20] = 0\n 21896: u8 [a0 + 19] = 0\n 21899: u8 [a0 + 18] = 0\n 21902: u8 [a0 + 17] = 0\n 21905: u8 [a0 + 16] = 0\n 21908: u8 [a0 + 15] = 0\n 21911: u8 [a0 + 14] = 0\n 21914: u8 [a0 + 13] = 0\n 21917: u8 [a0 + 12] = 0\n 21920: u8 [a0 + 11] = 0\n 21923: u8 [a0 + 10] = 0\n 21926: u8 [a0 + 9] = 0\n 21929: u8 [a0 + 8] = 0\n 21932: u8 [a0 + 7] = 0\n 21935: u8 [a0 + 6] = 0\n 21938: u8 [a0 + 5] = 0\n 21941: u8 [a0 + 4] = 0\n 21944: u8 [a0 + 3] = 0\n 21947: u8 [a0 + 2] = 0\n 21950: u8 [a0 + 1] = 0\n 21953: u8 [a0 + 0] = 0\n 21955: jump @291 if a1 != 0\n      : @290 (gas: 1)\n 21958: jump @961\n      : @291 (gas: 4)\n 21962: a0 = u64 [sp + 0x18]\n 21965: i32 a0 = a0 + 0x20\n 21968: a1 = 0x20\n 21971: ra = 234, jump @0\n      : @292 [@dyn 117] (gas: 41)\n 21977: u8 [a0 + 31] = 0\n 21980: u8 [a0 + 30] = 0\n 21983: u8 [a0 + 29] = 0\n 21986: u8 [a0 + 28] = 0\n 21989: u8 [a0 + 27] = 0\n 21992: u8 [a0 + 26] = 0\n 21995: u8 [a0 + 25] = 0\n 21998: u8 [a0 + 24] = 0\n 22001: u8 [a0 + 23] = 0\n 22004: u8 [a0 + 22] = 0\n 22007: u8 [a0 + 21] = 0\n 22010: u8 [a0 + 20] = 0\n 22013: u8 [a0 + 19] = 0\n 22016: u8 [a0 + 18] = 0\n 22019: u8 [a0 + 17] = 0\n 22022: u8 [a0 + 16] = 0\n 22025: u8 [a0 + 15] = 0\n 22028: u8 [a0 + 14] = 0\n 22031: u8 [a0 + 13] = 0\n 22034: u8 [a0 + 12] = 0\n 22037: u8 [a0 + 11] = 0\n 22040: u8 [a0 + 10] = 0\n 22043: u8 [a0 + 9] = 0\n 22046: u8 [a0 + 8] = 0\n 22049: u8 [a0 + 7] = 0\n 22052: u8 [a0 + 6] = 0\n 22055: u8 [a0 + 5] = 0x74\n 22059: u8 [a0 + 4] = 0x68\n 22063: u8 [a0 + 3] = 0x67\n 22067: u8 [a0 + 2] = 0x69\n 22071: u8 [a0 + 1] = 0x72\n 22075: a2 = u64 [sp + 0x20]\n 22078: a2 = a2 + 0xffffffffffffff40\n 22082: a3 = u64 [sp + 0x68]\n 22085: a2 = a3 <u a2\n 22088: a3 = u64 [sp + 0x60]\n 22091: a2 = 0 if a3 != 0\n 22093: a3 = u64 [sp + 0x58]\n 22096: a2 = 0 if a3 != 0\n 22098: u8 [a0 + 0] = 0x62\n 22101: jump @294 if a2 != 0\n      : @293 (gas: 1)\n 22104: jump @961\n      : @294 (gas: 4)\n 22108: a0 = u64 [sp + 0x50]\n 22111: i32 a0 = a0 + 0xc0\n 22115: a1 = 0x20\n 22118: ra = 236, jump @0\n      : @295 [@dyn 118] (gas: 76)\n 22124: a1 = u64 [sp + 0x30]\n 22127: a1 = reverse a1\n 22129: a2 = u64 [sp + 0x38]\n 22132: a2 = reverse a2\n 22134: a3 = reverse s1\n 22136: a4 = u64 [sp + 0x10]\n 22139: a4 = reverse a4\n 22141: a5 = a4 >> 0x38\n 22144: u8 [a0 + 0x1f] = a5\n 22147: a5 = a4 >> 0x30\n 22150: u8 [a0 + 0x1e] = a5\n 22153: a5 = a4 >> 0x28\n 22156: u8 [a0 + 0x1d] = a5\n 22159: a5 = a4 >> 0x20\n 22162: u8 [a0 + 0x1c] = a5\n 22165: a5 = a4 >> 0x18\n 22168: u8 [a0 + 0x1b] = a5\n 22171: a5 = a4 >> 0x10\n 22174: u8 [a0 + 0x1a] = a5\n 22177: a5 = a4 >> 0x8\n 22180: u8 [a0 + 0x19] = a5\n 22183: u8 [a0 + 0x18] = a4\n 22186: u8 [a0 + 0x10] = a3\n 22189: a4 = a3 >> 0x38\n 22192: u8 [a0 + 0x17] = a4\n 22195: a4 = a3 >> 0x30\n 22198: u8 [a0 + 0x16] = a4\n 22201: a4 = a3 >> 0x28\n 22204: u8 [a0 + 0x15] = a4\n 22207: a4 = a3 >> 0x20\n 22210: u8 [a0 + 0x14] = a4\n 22213: a4 = a3 >> 0x18\n 22216: u8 [a0 + 0x13] = a4\n 22219: a4 = a3 >> 0x10\n 22222: u8 [a0 + 0x12] = a4\n 22225: a3 = a3 >> 0x8\n 22228: u8 [a0 + 0x11] = a3\n 22231: u8 [a0 + 0x8] = a2\n 22234: a3 = a2 >> 0x38\n 22237: u8 [a0 + 0xf] = a3\n 22240: a3 = a2 >> 0x30\n 22243: u8 [a0 + 0xe] = a3\n 22246: a3 = a2 >> 0x28\n 22249: u8 [a0 + 0xd] = a3\n 22252: a3 = a2 >> 0x20\n 22255: u8 [a0 + 0xc] = a3\n 22258: a3 = a2 >> 0x18\n 22261: u8 [a0 + 0xb] = a3\n 22264: a3 = a2 >> 0x10\n 22267: u8 [a0 + 0xa] = a3\n 22270: a2 = a2 >> 0x8\n 22273: u8 [a0 + 0x9] = a2\n 22276: u8 [a0] = a1\n 22278: a2 = a1 >> 0x38\n 22281: u8 [a0 + 0x7] = a2\n 22284: a2 = a1 >> 0x30\n 22287: u8 [a0 + 0x6] = a2\n 22290: a2 = a1 >> 0x28\n 22293: u8 [a0 + 0x5] = a2\n 22296: a2 = a1 >> 0x20\n 22299: u8 [a0 + 0x4] = a2\n 22302: a2 = a1 >> 0x18\n 22305: u8 [a0 + 0x3] = a2\n 22308: a2 = a1 >> 0x10\n 22311: u8 [a0 + 0x2] = a2\n 22314: a1 = a1 >> 0x8\n 22317: u8 [a0 + 0x1] = a1\n 22320: s1 = sp + 0x7ff\n 22324: s1 = s1 + 0x7e9\n 22328: u64 [s1 + 416] = 0\n 22332: u64 [s1 + 408] = 0\n 22336: u64 [s1 + 392] = 0x40\n 22341: a0 = sp + 0x1190\n 22345: a1 = sp + 0x1170\n 22349: u64 [s1 + 400] = 0\n 22353: ra = 238, jump @56\n      : @296 [@dyn 119] (gas: 15)\n 22359: a1 = u64 [s1 + 0x1c0]\n 22363: a2 = u64 [s1 + 0x1b8]\n 22367: a0 = u64 [s1 + 0x1b0]\n 22371: s1 = u64 [s1 + 0x1a8]\n 22375: u64 [sp + 0x28] = a0\n 22378: u64 [sp + 0x30] = a1\n 22381: a0 = a0 | a1\n 22384: a1 = s1 | a2\n 22387: a1 = a1 | a0\n 22390: a1 = a1 >> 0x20\n 22393: u64 [sp + 0x38] = a2\n 22396: a0 = a0 | a2\n 22399: a0 = a0 << 0x20\n 22402: a0 = a0 | a1\n 22405: jump @298 if a0 == 0\n      : @297 (gas: 1)\n 22408: jump @961\n      : @298 (gas: 4)\n 22412: i32 a0 = s1 + 0\n 22414: a1 = 0x20\n 22417: u64 [sp + 0x18] = a0\n 22420: ra = 240, jump @0\n      : @299 [@dyn 120] (gas: 44)\n 22426: u8 [a0 + 31] = 0x4\n 22430: a1 = u64 [sp + 0x30]\n 22433: a2 = u64 [sp + 0x38]\n 22436: a2 = a2 | a1\n 22439: a1 = 0x100000000\n 22449: u64 [sp + 0x20] = a1\n 22452: a1 = 0xffffffe0\n 22462: u64 [sp + 0x10] = s1\n 22465: a1 = s1 <u a1\n 22468: s1 = u64 [sp + 0x28]\n 22471: a1 = 0 if s1 != 0\n 22473: a1 = 0 if a2 != 0\n 22475: u8 [a0 + 30] = 0\n 22478: u8 [a0 + 29] = 0\n 22481: u8 [a0 + 28] = 0\n 22484: u8 [a0 + 27] = 0\n 22487: u8 [a0 + 26] = 0\n 22490: u8 [a0 + 25] = 0\n 22493: u8 [a0 + 24] = 0\n 22496: u8 [a0 + 23] = 0\n 22499: u8 [a0 + 22] = 0\n 22502: u8 [a0 + 21] = 0\n 22505: u8 [a0 + 20] = 0\n 22508: u8 [a0 + 19] = 0\n 22511: u8 [a0 + 18] = 0\n 22514: u8 [a0 + 17] = 0\n 22517: u8 [a0 + 16] = 0\n 22520: u8 [a0 + 15] = 0\n 22523: u8 [a0 + 14] = 0\n 22526: u8 [a0 + 13] = 0\n 22529: u8 [a0 + 12] = 0\n 22532: u8 [a0 + 11] = 0\n 22535: u8 [a0 + 10] = 0\n 22538: u8 [a0 + 9] = 0\n 22541: u8 [a0 + 8] = 0\n 22544: u8 [a0 + 7] = 0\n 22547: u8 [a0 + 6] = 0\n 22550: u8 [a0 + 5] = 0\n 22553: u8 [a0 + 4] = 0\n 22556: u8 [a0 + 3] = 0\n 22559: u8 [a0 + 2] = 0\n 22562: u8 [a0 + 1] = 0\n 22565: u8 [a0 + 0] = 0\n 22567: jump @301 if a1 != 0\n      : @300 (gas: 1)\n 22570: jump @961\n      : @301 (gas: 4)\n 22574: a0 = u64 [sp + 0x18]\n 22577: i32 a0 = a0 + 0x20\n 22580: a1 = 0x20\n 22583: ra = 242, jump @0\n      : @302 [@dyn 121] (gas: 41)\n 22589: u8 [a0 + 31] = 0\n 22592: u8 [a0 + 30] = 0\n 22595: u8 [a0 + 29] = 0\n 22598: u8 [a0 + 28] = 0\n 22601: u8 [a0 + 27] = 0\n 22604: u8 [a0 + 26] = 0\n 22607: u8 [a0 + 25] = 0\n 22610: u8 [a0 + 24] = 0\n 22613: u8 [a0 + 23] = 0\n 22616: u8 [a0 + 22] = 0\n 22619: u8 [a0 + 21] = 0\n 22622: u8 [a0 + 20] = 0\n 22625: u8 [a0 + 19] = 0\n 22628: u8 [a0 + 18] = 0\n 22631: u8 [a0 + 17] = 0\n 22634: u8 [a0 + 16] = 0\n 22637: u8 [a0 + 15] = 0\n 22640: u8 [a0 + 14] = 0\n 22643: u8 [a0 + 13] = 0\n 22646: u8 [a0 + 12] = 0\n 22649: u8 [a0 + 11] = 0\n 22652: u8 [a0 + 10] = 0\n 22655: u8 [a0 + 9] = 0\n 22658: u8 [a0 + 8] = 0\n 22661: u8 [a0 + 7] = 0\n 22664: u8 [a0 + 6] = 0\n 22667: u8 [a0 + 5] = 0\n 22670: u8 [a0 + 4] = 0\n 22673: u8 [a0 + 3] = 0x6d\n 22677: u8 [a0 + 2] = 0x6c\n 22681: u8 [a0 + 1] = 0x61\n 22685: a2 = u64 [sp + 0x20]\n 22688: a2 = a2 + 0xffffffffffffff20\n 22692: a3 = u64 [sp + 0x68]\n 22695: a2 = a3 <u a2\n 22698: a3 = u64 [sp + 0x60]\n 22701: a2 = 0 if a3 != 0\n 22703: a3 = u64 [sp + 0x58]\n 22706: a2 = 0 if a3 != 0\n 22708: u8 [a0 + 0] = 0x63\n 22711: jump @304 if a2 != 0\n      : @303 (gas: 1)\n 22714: jump @961\n      : @304 (gas: 4)\n 22718: a0 = u64 [sp + 0x50]\n 22721: i32 a0 = a0 + 0xe0\n 22725: a1 = 0x20\n 22728: ra = 244, jump @0\n      : @305 [@dyn 122] (gas: 76)\n 22734: a1 = u64 [sp + 0x30]\n 22737: a1 = reverse a1\n 22739: a2 = u64 [sp + 0x38]\n 22742: a2 = reverse a2\n 22744: a3 = reverse s1\n 22746: a4 = u64 [sp + 0x10]\n 22749: a4 = reverse a4\n 22751: a5 = a4 >> 0x38\n 22754: u8 [a0 + 0x1f] = a5\n 22757: a5 = a4 >> 0x30\n 22760: u8 [a0 + 0x1e] = a5\n 22763: a5 = a4 >> 0x28\n 22766: u8 [a0 + 0x1d] = a5\n 22769: a5 = a4 >> 0x20\n 22772: u8 [a0 + 0x1c] = a5\n 22775: a5 = a4 >> 0x18\n 22778: u8 [a0 + 0x1b] = a5\n 22781: a5 = a4 >> 0x10\n 22784: u8 [a0 + 0x1a] = a5\n 22787: a5 = a4 >> 0x8\n 22790: u8 [a0 + 0x19] = a5\n 22793: u8 [a0 + 0x18] = a4\n 22796: u8 [a0 + 0x10] = a3\n 22799: a4 = a3 >> 0x38\n 22802: u8 [a0 + 0x17] = a4\n 22805: a4 = a3 >> 0x30\n 22808: u8 [a0 + 0x16] = a4\n 22811: a4 = a3 >> 0x28\n 22814: u8 [a0 + 0x15] = a4\n 22817: a4 = a3 >> 0x20\n 22820: u8 [a0 + 0x14] = a4\n 22823: a4 = a3 >> 0x18\n 22826: u8 [a0 + 0x13] = a4\n 22829: a4 = a3 >> 0x10\n 22832: u8 [a0 + 0x12] = a4\n 22835: a3 = a3 >> 0x8\n 22838: u8 [a0 + 0x11] = a3\n 22841: u8 [a0 + 0x8] = a2\n 22844: a3 = a2 >> 0x38\n 22847: u8 [a0 + 0xf] = a3\n 22850: a3 = a2 >> 0x30\n 22853: u8 [a0 + 0xe] = a3\n 22856: a3 = a2 >> 0x28\n 22859: u8 [a0 + 0xd] = a3\n 22862: a3 = a2 >> 0x20\n 22865: u8 [a0 + 0xc] = a3\n 22868: a3 = a2 >> 0x18\n 22871: u8 [a0 + 0xb] = a3\n 22874: a3 = a2 >> 0x10\n 22877: u8 [a0 + 0xa] = a3\n 22880: a2 = a2 >> 0x8\n 22883: u8 [a0 + 0x9] = a2\n 22886: u8 [a0] = a1\n 22888: a2 = a1 >> 0x38\n 22891: u8 [a0 + 0x7] = a2\n 22894: a2 = a1 >> 0x30\n 22897: u8 [a0 + 0x6] = a2\n 22900: a2 = a1 >> 0x28\n 22903: u8 [a0 + 0x5] = a2\n 22906: a2 = a1 >> 0x20\n 22909: u8 [a0 + 0x4] = a2\n 22912: a2 = a1 >> 0x18\n 22915: u8 [a0 + 0x3] = a2\n 22918: a2 = a1 >> 0x10\n 22921: u8 [a0 + 0x2] = a2\n 22924: a1 = a1 >> 0x8\n 22927: u8 [a0 + 0x1] = a1\n 22930: s1 = sp + 0x7ff\n 22934: s1 = s1 + 0x7e9\n 22938: u64 [s1 + 352] = 0\n 22942: u64 [s1 + 344] = 0\n 22946: u64 [s1 + 328] = 0x40\n 22951: a0 = sp + 0x1150\n 22955: a1 = sp + 0x1130\n 22959: u64 [s1 + 336] = 0\n 22963: ra = 246, jump @56\n      : @306 [@dyn 123] (gas: 15)\n 22969: a1 = u64 [s1 + 0x180]\n 22973: a2 = u64 [s1 + 0x178]\n 22977: a0 = u64 [s1 + 0x170]\n 22981: s1 = u64 [s1 + 0x168]\n 22985: u64 [sp + 0x28] = a0\n 22988: u64 [sp + 0x30] = a1\n 22991: a0 = a0 | a1\n 22994: a1 = s1 | a2\n 22997: a1 = a1 | a0\n 23000: a1 = a1 >> 0x20\n 23003: u64 [sp + 0x38] = a2\n 23006: a0 = a0 | a2\n 23009: a0 = a0 << 0x20\n 23012: a0 = a0 | a1\n 23015: jump @308 if a0 == 0\n      : @307 (gas: 1)\n 23018: jump @961\n      : @308 (gas: 4)\n 23022: i32 a0 = s1 + 0\n 23024: a1 = 0x20\n 23027: u64 [sp + 0x18] = a0\n 23030: ra = 248, jump @0\n      : @309 [@dyn 124] (gas: 44)\n 23036: u8 [a0 + 31] = 0x8\n 23040: a1 = u64 [sp + 0x30]\n 23043: a2 = u64 [sp + 0x38]\n 23046: a2 = a2 | a1\n 23049: a1 = 0x100000000\n 23059: u64 [sp + 0x20] = a1\n 23062: a1 = 0xffffffe0\n 23072: u64 [sp + 0x10] = s1\n 23075: a1 = s1 <u a1\n 23078: s1 = u64 [sp + 0x28]\n 23081: a1 = 0 if s1 != 0\n 23083: a1 = 0 if a2 != 0\n 23085: u8 [a0 + 30] = 0\n 23088: u8 [a0 + 29] = 0\n 23091: u8 [a0 + 28] = 0\n 23094: u8 [a0 + 27] = 0\n 23097: u8 [a0 + 26] = 0\n 23100: u8 [a0 + 25] = 0\n 23103: u8 [a0 + 24] = 0\n 23106: u8 [a0 + 23] = 0\n 23109: u8 [a0 + 22] = 0\n 23112: u8 [a0 + 21] = 0\n 23115: u8 [a0 + 20] = 0\n 23118: u8 [a0 + 19] = 0\n 23121: u8 [a0 + 18] = 0\n 23124: u8 [a0 + 17] = 0\n 23127: u8 [a0 + 16] = 0\n 23130: u8 [a0 + 15] = 0\n 23133: u8 [a0 + 14] = 0\n 23136: u8 [a0 + 13] = 0\n 23139: u8 [a0 + 12] = 0\n 23142: u8 [a0 + 11] = 0\n 23145: u8 [a0 + 10] = 0\n 23148: u8 [a0 + 9] = 0\n 23151: u8 [a0 + 8] = 0\n 23154: u8 [a0 + 7] = 0\n 23157: u8 [a0 + 6] = 0\n 23160: u8 [a0 + 5] = 0\n 23163: u8 [a0 + 4] = 0\n 23166: u8 [a0 + 3] = 0\n 23169: u8 [a0 + 2] = 0\n 23172: u8 [a0 + 1] = 0\n 23175: u8 [a0 + 0] = 0\n 23177: jump @311 if a1 != 0\n      : @310 (gas: 1)\n 23180: jump @961\n      : @311 (gas: 4)\n 23184: a0 = u64 [sp + 0x18]\n 23187: i32 a0 = a0 + 0x20\n 23190: a1 = 0x20\n 23193: ra = 250, jump @0\n      : @312 [@dyn 125] (gas: 41)\n 23199: u8 [a0 + 31] = 0\n 23202: u8 [a0 + 30] = 0\n 23205: u8 [a0 + 29] = 0\n 23208: u8 [a0 + 28] = 0\n 23211: u8 [a0 + 27] = 0\n 23214: u8 [a0 + 26] = 0\n 23217: u8 [a0 + 25] = 0\n 23220: u8 [a0 + 24] = 0\n 23223: u8 [a0 + 23] = 0\n 23226: u8 [a0 + 22] = 0\n 23229: u8 [a0 + 21] = 0\n 23232: u8 [a0 + 20] = 0\n 23235: u8 [a0 + 19] = 0\n 23238: u8 [a0 + 18] = 0\n 23241: u8 [a0 + 17] = 0\n 23244: u8 [a0 + 16] = 0\n 23247: u8 [a0 + 15] = 0\n 23250: u8 [a0 + 14] = 0\n 23253: u8 [a0 + 13] = 0\n 23256: u8 [a0 + 12] = 0\n 23259: u8 [a0 + 11] = 0\n 23262: u8 [a0 + 10] = 0\n 23265: u8 [a0 + 9] = 0\n 23268: u8 [a0 + 8] = 0\n 23271: u8 [a0 + 7] = 0x67\n 23275: u8 [a0 + 6] = 0x6e\n 23279: u8 [a0 + 5] = 0x69\n 23283: u8 [a0 + 4] = 0x6d\n 23287: u8 [a0 + 3] = 0x72\n 23291: u8 [a0 + 2] = 0x61\n 23295: u8 [a0 + 1] = 0x68\n 23299: a2 = u64 [sp + 0x20]\n 23302: a2 = a2 + 0xffffffffffffff00\n 23306: a3 = u64 [sp + 0x68]\n 23309: a2 = a3 <u a2\n 23312: a3 = u64 [sp + 0x60]\n 23315: a2 = 0 if a3 != 0\n 23317: a3 = u64 [sp + 0x58]\n 23320: a2 = 0 if a3 != 0\n 23322: u8 [a0 + 0] = 0x63\n 23325: jump @314 if a2 != 0\n      : @313 (gas: 1)\n 23328: jump @961\n      : @314 (gas: 4)\n 23332: a0 = u64 [sp + 0x50]\n 23335: i32 a0 = a0 + 0x100\n 23339: a1 = 0x20\n 23342: ra = 252, jump @0\n      : @315 [@dyn 126] (gas: 76)\n 23348: a1 = u64 [sp + 0x30]\n 23351: a1 = reverse a1\n 23353: a2 = u64 [sp + 0x38]\n 23356: a2 = reverse a2\n 23358: a3 = reverse s1\n 23360: a4 = u64 [sp + 0x10]\n 23363: a4 = reverse a4\n 23365: a5 = a4 >> 0x38\n 23368: u8 [a0 + 0x1f] = a5\n 23371: a5 = a4 >> 0x30\n 23374: u8 [a0 + 0x1e] = a5\n 23377: a5 = a4 >> 0x28\n 23380: u8 [a0 + 0x1d] = a5\n 23383: a5 = a4 >> 0x20\n 23386: u8 [a0 + 0x1c] = a5\n 23389: a5 = a4 >> 0x18\n 23392: u8 [a0 + 0x1b] = a5\n 23395: a5 = a4 >> 0x10\n 23398: u8 [a0 + 0x1a] = a5\n 23401: a5 = a4 >> 0x8\n 23404: u8 [a0 + 0x19] = a5\n 23407: u8 [a0 + 0x18] = a4\n 23410: u8 [a0 + 0x10] = a3\n 23413: a4 = a3 >> 0x38\n 23416: u8 [a0 + 0x17] = a4\n 23419: a4 = a3 >> 0x30\n 23422: u8 [a0 + 0x16] = a4\n 23425: a4 = a3 >> 0x28\n 23428: u8 [a0 + 0x15] = a4\n 23431: a4 = a3 >> 0x20\n 23434: u8 [a0 + 0x14] = a4\n 23437: a4 = a3 >> 0x18\n 23440: u8 [a0 + 0x13] = a4\n 23443: a4 = a3 >> 0x10\n 23446: u8 [a0 + 0x12] = a4\n 23449: a3 = a3 >> 0x8\n 23452: u8 [a0 + 0x11] = a3\n 23455: u8 [a0 + 0x8] = a2\n 23458: a3 = a2 >> 0x38\n 23461: u8 [a0 + 0xf] = a3\n 23464: a3 = a2 >> 0x30\n 23467: u8 [a0 + 0xe] = a3\n 23470: a3 = a2 >> 0x28\n 23473: u8 [a0 + 0xd] = a3\n 23476: a3 = a2 >> 0x20\n 23479: u8 [a0 + 0xc] = a3\n 23482: a3 = a2 >> 0x18\n 23485: u8 [a0 + 0xb] = a3\n 23488: a3 = a2 >> 0x10\n 23491: u8 [a0 + 0xa] = a3\n 23494: a2 = a2 >> 0x8\n 23497: u8 [a0 + 0x9] = a2\n 23500: u8 [a0] = a1\n 23502: a2 = a1 >> 0x38\n 23505: u8 [a0 + 0x7] = a2\n 23508: a2 = a1 >> 0x30\n 23511: u8 [a0 + 0x6] = a2\n 23514: a2 = a1 >> 0x28\n 23517: u8 [a0 + 0x5] = a2\n 23520: a2 = a1 >> 0x20\n 23523: u8 [a0 + 0x4] = a2\n 23526: a2 = a1 >> 0x18\n 23529: u8 [a0 + 0x3] = a2\n 23532: a2 = a1 >> 0x10\n 23535: u8 [a0 + 0x2] = a2\n 23538: a1 = a1 >> 0x8\n 23541: u8 [a0 + 0x1] = a1\n 23544: s1 = sp + 0x7ff\n 23548: s1 = s1 + 0x7e9\n 23552: u64 [s1 + 288] = 0\n 23556: u64 [s1 + 280] = 0\n 23560: u64 [s1 + 264] = 0x40\n 23565: a0 = sp + 0x1110\n 23569: a1 = sp + 0x10f0\n 23573: u64 [s1 + 272] = 0\n 23577: ra = 254, jump @56\n      : @316 [@dyn 127] (gas: 15)\n 23583: a1 = u64 [s1 + 0x140]\n 23587: a2 = u64 [s1 + 0x138]\n 23591: a0 = u64 [s1 + 0x130]\n 23595: s1 = u64 [s1 + 0x128]\n 23599: u64 [sp + 0x28] = a0\n 23602: u64 [sp + 0x30] = a1\n 23605: a0 = a0 | a1\n 23608: a1 = s1 | a2\n 23611: a1 = a1 | a0\n 23614: a1 = a1 >> 0x20\n 23617: u64 [sp + 0x38] = a2\n 23620: a0 = a0 | a2\n 23623: a0 = a0 << 0x20\n 23626: a0 = a0 | a1\n 23629: jump @318 if a0 == 0\n      : @317 (gas: 1)\n 23632: jump @961\n      : @318 (gas: 4)\n 23636: i32 a0 = s1 + 0\n 23638: a1 = 0x20\n 23641: u64 [sp + 0x18] = a0\n 23644: ra = 256, jump @0\n      : @319 [@dyn 128] (gas: 44)\n 23650: u8 [a0 + 31] = 0x8\n 23654: a1 = u64 [sp + 0x30]\n 23657: a2 = u64 [sp + 0x38]\n 23660: a2 = a2 | a1\n 23663: a1 = 0x100000000\n 23673: u64 [sp + 0x20] = a1\n 23676: a1 = 0xffffffe0\n 23686: u64 [sp + 0x10] = s1\n 23689: a1 = s1 <u a1\n 23692: s1 = u64 [sp + 0x28]\n 23695: a1 = 0 if s1 != 0\n 23697: a1 = 0 if a2 != 0\n 23699: u8 [a0 + 30] = 0\n 23702: u8 [a0 + 29] = 0\n 23705: u8 [a0 + 28] = 0\n 23708: u8 [a0 + 27] = 0\n 23711: u8 [a0 + 26] = 0\n 23714: u8 [a0 + 25] = 0\n 23717: u8 [a0 + 24] = 0\n 23720: u8 [a0 + 23] = 0\n 23723: u8 [a0 + 22] = 0\n 23726: u8 [a0 + 21] = 0\n 23729: u8 [a0 + 20] = 0\n 23732: u8 [a0 + 19] = 0\n 23735: u8 [a0 + 18] = 0\n 23738: u8 [a0 + 17] = 0\n 23741: u8 [a0 + 16] = 0\n 23744: u8 [a0 + 15] = 0\n 23747: u8 [a0 + 14] = 0\n 23750: u8 [a0 + 13] = 0\n 23753: u8 [a0 + 12] = 0\n 23756: u8 [a0 + 11] = 0\n 23759: u8 [a0 + 10] = 0\n 23762: u8 [a0 + 9] = 0\n 23765: u8 [a0 + 8] = 0\n 23768: u8 [a0 + 7] = 0\n 23771: u8 [a0 + 6] = 0\n 23774: u8 [a0 + 5] = 0\n 23777: u8 [a0 + 4] = 0\n 23780: u8 [a0 + 3] = 0\n 23783: u8 [a0 + 2] = 0\n 23786: u8 [a0 + 1] = 0\n 23789: u8 [a0 + 0] = 0\n 23791: jump @321 if a1 != 0\n      : @320 (gas: 1)\n 23794: jump @961\n      : @321 (gas: 4)\n 23798: a0 = u64 [sp + 0x18]\n 23801: i32 a0 = a0 + 0x20\n 23804: a1 = 0x20\n 23807: ra = 258, jump @0\n      : @322 [@dyn 129] (gas: 41)\n 23813: u8 [a0 + 31] = 0\n 23816: u8 [a0 + 30] = 0\n 23819: u8 [a0 + 29] = 0\n 23822: u8 [a0 + 28] = 0\n 23825: u8 [a0 + 27] = 0\n 23828: u8 [a0 + 26] = 0\n 23831: u8 [a0 + 25] = 0\n 23834: u8 [a0 + 24] = 0\n 23837: u8 [a0 + 23] = 0\n 23840: u8 [a0 + 22] = 0\n 23843: u8 [a0 + 21] = 0\n 23846: u8 [a0 + 20] = 0\n 23849: u8 [a0 + 19] = 0\n 23852: u8 [a0 + 18] = 0\n 23855: u8 [a0 + 17] = 0\n 23858: u8 [a0 + 16] = 0\n 23861: u8 [a0 + 15] = 0\n 23864: u8 [a0 + 14] = 0\n 23867: u8 [a0 + 13] = 0\n 23870: u8 [a0 + 12] = 0\n 23873: u8 [a0 + 11] = 0\n 23876: u8 [a0 + 10] = 0\n 23879: u8 [a0 + 9] = 0\n 23882: u8 [a0 + 8] = 0\n 23885: u8 [a0 + 7] = 0x6c\n 23889: u8 [a0 + 6] = 0x75\n 23893: u8 [a0 + 5] = 0x66\n 23897: u8 [a0 + 4] = 0x72\n 23901: u8 [a0 + 3] = 0x65\n 23905: u8 [a0 + 2] = 0x65\n 23909: u8 [a0 + 1] = 0x68\n 23913: a2 = u64 [sp + 0x20]\n 23916: a2 = a2 + 0xfffffffffffffee0\n 23920: a3 = u64 [sp + 0x68]\n 23923: a2 = a3 <u a2\n 23926: a3 = u64 [sp + 0x60]\n 23929: a2 = 0 if a3 != 0\n 23931: a3 = u64 [sp + 0x58]\n 23934: a2 = 0 if a3 != 0\n 23936: u8 [a0 + 0] = 0x63\n 23939: jump @324 if a2 != 0\n      : @323 (gas: 1)\n 23942: jump @961\n      : @324 (gas: 4)\n 23946: a0 = u64 [sp + 0x50]\n 23949: i32 a0 = a0 + 0x120\n 23953: a1 = 0x20\n 23956: ra = 260, jump @0\n      : @325 [@dyn 130] (gas: 76)\n 23962: a1 = u64 [sp + 0x30]\n 23965: a1 = reverse a1\n 23967: a2 = u64 [sp + 0x38]\n 23970: a2 = reverse a2\n 23972: a3 = reverse s1\n 23974: a4 = u64 [sp + 0x10]\n 23977: a4 = reverse a4\n 23979: a5 = a4 >> 0x38\n 23982: u8 [a0 + 0x1f] = a5\n 23985: a5 = a4 >> 0x30\n 23988: u8 [a0 + 0x1e] = a5\n 23991: a5 = a4 >> 0x28\n 23994: u8 [a0 + 0x1d] = a5\n 23997: a5 = a4 >> 0x20\n 24000: u8 [a0 + 0x1c] = a5\n 24003: a5 = a4 >> 0x18\n 24006: u8 [a0 + 0x1b] = a5\n 24009: a5 = a4 >> 0x10\n 24012: u8 [a0 + 0x1a] = a5\n 24015: a5 = a4 >> 0x8\n 24018: u8 [a0 + 0x19] = a5\n 24021: u8 [a0 + 0x18] = a4\n 24024: u8 [a0 + 0x10] = a3\n 24027: a4 = a3 >> 0x38\n 24030: u8 [a0 + 0x17] = a4\n 24033: a4 = a3 >> 0x30\n 24036: u8 [a0 + 0x16] = a4\n 24039: a4 = a3 >> 0x28\n 24042: u8 [a0 + 0x15] = a4\n 24045: a4 = a3 >> 0x20\n 24048: u8 [a0 + 0x14] = a4\n 24051: a4 = a3 >> 0x18\n 24054: u8 [a0 + 0x13] = a4\n 24057: a4 = a3 >> 0x10\n 24060: u8 [a0 + 0x12] = a4\n 24063: a3 = a3 >> 0x8\n 24066: u8 [a0 + 0x11] = a3\n 24069: u8 [a0 + 0x8] = a2\n 24072: a3 = a2 >> 0x38\n 24075: u8 [a0 + 0xf] = a3\n 24078: a3 = a2 >> 0x30\n 24081: u8 [a0 + 0xe] = a3\n 24084: a3 = a2 >> 0x28\n 24087: u8 [a0 + 0xd] = a3\n 24090: a3 = a2 >> 0x20\n 24093: u8 [a0 + 0xc] = a3\n 24096: a3 = a2 >> 0x18\n 24099: u8 [a0 + 0xb] = a3\n 24102: a3 = a2 >> 0x10\n 24105: u8 [a0 + 0xa] = a3\n 24108: a2 = a2 >> 0x8\n 24111: u8 [a0 + 0x9] = a2\n 24114: u8 [a0] = a1\n 24116: a2 = a1 >> 0x38\n 24119: u8 [a0 + 0x7] = a2\n 24122: a2 = a1 >> 0x30\n 24125: u8 [a0 + 0x6] = a2\n 24128: a2 = a1 >> 0x28\n 24131: u8 [a0 + 0x5] = a2\n 24134: a2 = a1 >> 0x20\n 24137: u8 [a0 + 0x4] = a2\n 24140: a2 = a1 >> 0x18\n 24143: u8 [a0 + 0x3] = a2\n 24146: a2 = a1 >> 0x10\n 24149: u8 [a0 + 0x2] = a2\n 24152: a1 = a1 >> 0x8\n 24155: u8 [a0 + 0x1] = a1\n 24158: s1 = sp + 0x7ff\n 24162: s1 = s1 + 0x7e9\n 24166: u64 [s1 + 224] = 0\n 24170: u64 [s1 + 216] = 0\n 24174: u64 [s1 + 200] = 0x40\n 24179: a0 = sp + 0x10d0\n 24183: a1 = sp + 0x10b0\n 24187: u64 [s1 + 208] = 0\n 24191: ra = 262, jump @56\n      : @326 [@dyn 131] (gas: 15)\n 24197: a1 = u64 [s1 + 0x100]\n 24201: a2 = u64 [s1 + 0xf8]\n 24205: a0 = u64 [s1 + 0xf0]\n 24209: s1 = u64 [s1 + 0xe8]\n 24213: u64 [sp + 0x28] = a0\n 24216: u64 [sp + 0x30] = a1\n 24219: a0 = a0 | a1\n 24222: a1 = s1 | a2\n 24225: a1 = a1 | a0\n 24228: a1 = a1 >> 0x20\n 24231: u64 [sp + 0x38] = a2\n 24234: a0 = a0 | a2\n 24237: a0 = a0 << 0x20\n 24240: a0 = a0 | a1\n 24243: jump @328 if a0 == 0\n      : @327 (gas: 1)\n 24246: jump @961\n      : @328 (gas: 4)\n 24250: i32 a0 = s1 + 0\n 24252: a1 = 0x20\n 24255: u64 [sp + 0x18] = a0\n 24258: ra = 264, jump @0\n      : @329 [@dyn 132] (gas: 44)\n 24264: u8 [a0 + 31] = 0x6\n 24268: a1 = u64 [sp + 0x30]\n 24271: a2 = u64 [sp + 0x38]\n 24274: a2 = a2 | a1\n 24277: a1 = 0x100000000\n 24287: u64 [sp + 0x20] = a1\n 24290: a1 = 0xffffffe0\n 24300: u64 [sp + 0x10] = s1\n 24303: a1 = s1 <u a1\n 24306: s1 = u64 [sp + 0x28]\n 24309: a1 = 0 if s1 != 0\n 24311: a1 = 0 if a2 != 0\n 24313: u8 [a0 + 30] = 0\n 24316: u8 [a0 + 29] = 0\n 24319: u8 [a0 + 28] = 0\n 24322: u8 [a0 + 27] = 0\n 24325: u8 [a0 + 26] = 0\n 24328: u8 [a0 + 25] = 0\n 24331: u8 [a0 + 24] = 0\n 24334: u8 [a0 + 23] = 0\n 24337: u8 [a0 + 22] = 0\n 24340: u8 [a0 + 21] = 0\n 24343: u8 [a0 + 20] = 0\n 24346: u8 [a0 + 19] = 0\n 24349: u8 [a0 + 18] = 0\n 24352: u8 [a0 + 17] = 0\n 24355: u8 [a0 + 16] = 0\n 24358: u8 [a0 + 15] = 0\n 24361: u8 [a0 + 14] = 0\n 24364: u8 [a0 + 13] = 0\n 24367: u8 [a0 + 12] = 0\n 24370: u8 [a0 + 11] = 0\n 24373: u8 [a0 + 10] = 0\n 24376: u8 [a0 + 9] = 0\n 24379: u8 [a0 + 8] = 0\n 24382: u8 [a0 + 7] = 0\n 24385: u8 [a0 + 6] = 0\n 24388: u8 [a0 + 5] = 0\n 24391: u8 [a0 + 4] = 0\n 24394: u8 [a0 + 3] = 0\n 24397: u8 [a0 + 2] = 0\n 24400: u8 [a0 + 1] = 0\n 24403: u8 [a0 + 0] = 0\n 24405: jump @331 if a1 != 0\n      : @330 (gas: 1)\n 24408: jump @961\n      : @331 (gas: 4)\n 24412: a0 = u64 [sp + 0x18]\n 24415: i32 a0 = a0 + 0x20\n 24418: a1 = 0x20\n 24421: ra = 266, jump @0\n      : @332 [@dyn 133] (gas: 41)\n 24427: u8 [a0 + 31] = 0\n 24430: u8 [a0 + 30] = 0\n 24433: u8 [a0 + 29] = 0\n 24436: u8 [a0 + 28] = 0\n 24439: u8 [a0 + 27] = 0\n 24442: u8 [a0 + 26] = 0\n 24445: u8 [a0 + 25] = 0\n 24448: u8 [a0 + 24] = 0\n 24451: u8 [a0 + 23] = 0\n 24454: u8 [a0 + 22] = 0\n 24457: u8 [a0 + 21] = 0\n 24460: u8 [a0 + 20] = 0\n 24463: u8 [a0 + 19] = 0\n 24466: u8 [a0 + 18] = 0\n 24469: u8 [a0 + 17] = 0\n 24472: u8 [a0 + 16] = 0\n 24475: u8 [a0 + 15] = 0\n 24478: u8 [a0 + 14] = 0\n 24481: u8 [a0 + 13] = 0\n 24484: u8 [a0 + 12] = 0\n 24487: u8 [a0 + 11] = 0\n 24490: u8 [a0 + 10] = 0\n 24493: u8 [a0 + 9] = 0\n 24496: u8 [a0 + 8] = 0\n 24499: u8 [a0 + 7] = 0\n 24502: u8 [a0 + 6] = 0\n 24505: u8 [a0 + 5] = 0x72\n 24509: u8 [a0 + 4] = 0x65\n 24513: u8 [a0 + 3] = 0x76\n 24517: u8 [a0 + 2] = 0x65\n 24521: u8 [a0 + 1] = 0x6c\n 24525: a2 = u64 [sp + 0x20]\n 24528: a2 = a2 + 0xfffffffffffffec0\n 24532: a3 = u64 [sp + 0x68]\n 24535: a2 = a3 <u a2\n 24538: a3 = u64 [sp + 0x60]\n 24541: a2 = 0 if a3 != 0\n 24543: a3 = u64 [sp + 0x58]\n 24546: a2 = 0 if a3 != 0\n 24548: u8 [a0 + 0] = 0x63\n 24551: jump @334 if a2 != 0\n      : @333 (gas: 1)\n 24554: jump @961\n      : @334 (gas: 4)\n 24558: a0 = u64 [sp + 0x50]\n 24561: i32 a0 = a0 + 0x140\n 24565: a1 = 0x20\n 24568: ra = 268, jump @0\n      : @335 [@dyn 134] (gas: 76)\n 24574: a1 = u64 [sp + 0x30]\n 24577: a1 = reverse a1\n 24579: a2 = u64 [sp + 0x38]\n 24582: a2 = reverse a2\n 24584: a3 = reverse s1\n 24586: a4 = u64 [sp + 0x10]\n 24589: a4 = reverse a4\n 24591: a5 = a4 >> 0x38\n 24594: u8 [a0 + 0x1f] = a5\n 24597: a5 = a4 >> 0x30\n 24600: u8 [a0 + 0x1e] = a5\n 24603: a5 = a4 >> 0x28\n 24606: u8 [a0 + 0x1d] = a5\n 24609: a5 = a4 >> 0x20\n 24612: u8 [a0 + 0x1c] = a5\n 24615: a5 = a4 >> 0x18\n 24618: u8 [a0 + 0x1b] = a5\n 24621: a5 = a4 >> 0x10\n 24624: u8 [a0 + 0x1a] = a5\n 24627: a5 = a4 >> 0x8\n 24630: u8 [a0 + 0x19] = a5\n 24633: u8 [a0 + 0x18] = a4\n 24636: u8 [a0 + 0x10] = a3\n 24639: a4 = a3 >> 0x38\n 24642: u8 [a0 + 0x17] = a4\n 24645: a4 = a3 >> 0x30\n 24648: u8 [a0 + 0x16] = a4\n 24651: a4 = a3 >> 0x28\n 24654: u8 [a0 + 0x15] = a4\n 24657: a4 = a3 >> 0x20\n 24660: u8 [a0 + 0x14] = a4\n 24663: a4 = a3 >> 0x18\n 24666: u8 [a0 + 0x13] = a4\n 24669: a4 = a3 >> 0x10\n 24672: u8 [a0 + 0x12] = a4\n 24675: a3 = a3 >> 0x8\n 24678: u8 [a0 + 0x11] = a3\n 24681: u8 [a0 + 0x8] = a2\n 24684: a3 = a2 >> 0x38\n 24687: u8 [a0 + 0xf] = a3\n 24690: a3 = a2 >> 0x30\n 24693: u8 [a0 + 0xe] = a3\n 24696: a3 = a2 >> 0x28\n 24699: u8 [a0 + 0xd] = a3\n 24702: a3 = a2 >> 0x20\n 24705: u8 [a0 + 0xc] = a3\n 24708: a3 = a2 >> 0x18\n 24711: u8 [a0 + 0xb] = a3\n 24714: a3 = a2 >> 0x10\n 24717: u8 [a0 + 0xa] = a3\n 24720: a2 = a2 >> 0x8\n 24723: u8 [a0 + 0x9] = a2\n 24726: u8 [a0] = a1\n 24728: a2 = a1 >> 0x38\n 24731: u8 [a0 + 0x7] = a2\n 24734: a2 = a1 >> 0x30\n 24737: u8 [a0 + 0x6] = a2\n 24740: a2 = a1 >> 0x28\n 24743: u8 [a0 + 0x5] = a2\n 24746: a2 = a1 >> 0x20\n 24749: u8 [a0 + 0x4] = a2\n 24752: a2 = a1 >> 0x18\n 24755: u8 [a0 + 0x3] = a2\n 24758: a2 = a1 >> 0x10\n 24761: u8 [a0 + 0x2] = a2\n 24764: a1 = a1 >> 0x8\n 24767: u8 [a0 + 0x1] = a1\n 24770: s1 = sp + 0x7ff\n 24774: s1 = s1 + 0x7e9\n 24778: u64 [s1 + 160] = 0\n 24782: u64 [s1 + 152] = 0\n 24786: u64 [s1 + 136] = 0x40\n 24791: a0 = sp + 0x1090\n 24795: a1 = sp + 0x1070\n 24799: u64 [s1 + 144] = 0\n 24803: ra = 270, jump @56\n      : @336 [@dyn 135] (gas: 15)\n 24809: a1 = u64 [s1 + 0xc0]\n 24813: a2 = u64 [s1 + 0xb8]\n 24817: a0 = u64 [s1 + 0xb0]\n 24821: s1 = u64 [s1 + 0xa8]\n 24825: u64 [sp + 0x28] = a0\n 24828: u64 [sp + 0x30] = a1\n 24831: a0 = a0 | a1\n 24834: a1 = s1 | a2\n 24837: a1 = a1 | a0\n 24840: a1 = a1 >> 0x20\n 24843: u64 [sp + 0x38] = a2\n 24846: a0 = a0 | a2\n 24849: a0 = a0 << 0x20\n 24852: a0 = a0 | a1\n 24855: jump @338 if a0 == 0\n      : @337 (gas: 1)\n 24858: jump @961\n      : @338 (gas: 4)\n 24862: i32 a0 = s1 + 0\n 24864: a1 = 0x20\n 24867: u64 [sp + 0x18] = a0\n 24870: ra = 272, jump @0\n      : @339 [@dyn 136] (gas: 44)\n 24876: u8 [a0 + 31] = 0x8\n 24880: a1 = u64 [sp + 0x30]\n 24883: a2 = u64 [sp + 0x38]\n 24886: a2 = a2 | a1\n 24889: a1 = 0x100000000\n 24899: u64 [sp + 0x20] = a1\n 24902: a1 = 0xffffffe0\n 24912: u64 [sp + 0x10] = s1\n 24915: a1 = s1 <u a1\n 24918: s1 = u64 [sp + 0x28]\n 24921: a1 = 0 if s1 != 0\n 24923: a1 = 0 if a2 != 0\n 24925: u8 [a0 + 30] = 0\n 24928: u8 [a0 + 29] = 0\n 24931: u8 [a0 + 28] = 0\n 24934: u8 [a0 + 27] = 0\n 24937: u8 [a0 + 26] = 0\n 24940: u8 [a0 + 25] = 0\n 24943: u8 [a0 + 24] = 0\n 24946: u8 [a0 + 23] = 0\n 24949: u8 [a0 + 22] = 0\n 24952: u8 [a0 + 21] = 0\n 24955: u8 [a0 + 20] = 0\n 24958: u8 [a0 + 19] = 0\n 24961: u8 [a0 + 18] = 0\n 24964: u8 [a0 + 17] = 0\n 24967: u8 [a0 + 16] = 0\n 24970: u8 [a0 + 15] = 0\n 24973: u8 [a0 + 14] = 0\n 24976: u8 [a0 + 13] = 0\n 24979: u8 [a0 + 12] = 0\n 24982: u8 [a0 + 11] = 0\n 24985: u8 [a0 + 10] = 0\n 24988: u8 [a0 + 9] = 0\n 24991: u8 [a0 + 8] = 0\n 24994: u8 [a0 + 7] = 0\n 24997: u8 [a0 + 6] = 0\n 25000: u8 [a0 + 5] = 0\n 25003: u8 [a0 + 4] = 0\n 25006: u8 [a0 + 3] = 0\n 25009: u8 [a0 + 2] = 0\n 25012: u8 [a0 + 1] = 0\n 25015: u8 [a0 + 0] = 0\n 25017: jump @341 if a1 != 0\n      : @340 (gas: 1)\n 25020: jump @961\n      : @341 (gas: 4)\n 25024: a0 = u64 [sp + 0x18]\n 25027: i32 a0 = a0 + 0x20\n 25030: a1 = 0x20\n 25033: ra = 274, jump @0\n      : @342 [@dyn 137] (gas: 41)\n 25039: u8 [a0 + 31] = 0\n 25042: u8 [a0 + 30] = 0\n 25045: u8 [a0 + 29] = 0\n 25048: u8 [a0 + 28] = 0\n 25051: u8 [a0 + 27] = 0\n 25054: u8 [a0 + 26] = 0\n 25057: u8 [a0 + 25] = 0\n 25060: u8 [a0 + 24] = 0\n 25063: u8 [a0 + 23] = 0\n 25066: u8 [a0 + 22] = 0\n 25069: u8 [a0 + 21] = 0\n 25072: u8 [a0 + 20] = 0\n 25075: u8 [a0 + 19] = 0\n 25078: u8 [a0 + 18] = 0\n 25081: u8 [a0 + 17] = 0\n 25084: u8 [a0 + 16] = 0\n 25087: u8 [a0 + 15] = 0\n 25090: u8 [a0 + 14] = 0\n 25093: u8 [a0 + 13] = 0\n 25096: u8 [a0 + 12] = 0\n 25099: u8 [a0 + 11] = 0\n 25102: u8 [a0 + 10] = 0\n 25105: u8 [a0 + 9] = 0\n 25108: u8 [a0 + 8] = 0\n 25111: u8 [a0 + 7] = 0x6c\n 25115: u8 [a0 + 6] = 0x75\n 25119: u8 [a0 + 5] = 0x66\n 25123: u8 [a0 + 4] = 0x72\n 25127: u8 [a0 + 3] = 0x6f\n 25131: u8 [a0 + 2] = 0x6c\n 25135: u8 [a0 + 1] = 0x6f\n 25139: a2 = u64 [sp + 0x20]\n 25142: a2 = a2 + 0xfffffffffffffea0\n 25146: a3 = u64 [sp + 0x68]\n 25149: a2 = a3 <u a2\n 25152: a3 = u64 [sp + 0x60]\n 25155: a2 = 0 if a3 != 0\n 25157: a3 = u64 [sp + 0x58]\n 25160: a2 = 0 if a3 != 0\n 25162: u8 [a0 + 0] = 0x63\n 25165: jump @344 if a2 != 0\n      : @343 (gas: 1)\n 25168: jump @961\n      : @344 (gas: 4)\n 25172: a0 = u64 [sp + 0x50]\n 25175: i32 a0 = a0 + 0x160\n 25179: a1 = 0x20\n 25182: ra = 276, jump @0\n      : @345 [@dyn 138] (gas: 76)\n 25188: a1 = u64 [sp + 0x30]\n 25191: a1 = reverse a1\n 25193: a2 = u64 [sp + 0x38]\n 25196: a2 = reverse a2\n 25198: a3 = reverse s1\n 25200: a4 = u64 [sp + 0x10]\n 25203: a4 = reverse a4\n 25205: a5 = a4 >> 0x38\n 25208: u8 [a0 + 0x1f] = a5\n 25211: a5 = a4 >> 0x30\n 25214: u8 [a0 + 0x1e] = a5\n 25217: a5 = a4 >> 0x28\n 25220: u8 [a0 + 0x1d] = a5\n 25223: a5 = a4 >> 0x20\n 25226: u8 [a0 + 0x1c] = a5\n 25229: a5 = a4 >> 0x18\n 25232: u8 [a0 + 0x1b] = a5\n 25235: a5 = a4 >> 0x10\n 25238: u8 [a0 + 0x1a] = a5\n 25241: a5 = a4 >> 0x8\n 25244: u8 [a0 + 0x19] = a5\n 25247: u8 [a0 + 0x18] = a4\n 25250: u8 [a0 + 0x10] = a3\n 25253: a4 = a3 >> 0x38\n 25256: u8 [a0 + 0x17] = a4\n 25259: a4 = a3 >> 0x30\n 25262: u8 [a0 + 0x16] = a4\n 25265: a4 = a3 >> 0x28\n 25268: u8 [a0 + 0x15] = a4\n 25271: a4 = a3 >> 0x20\n 25274: u8 [a0 + 0x14] = a4\n 25277: a4 = a3 >> 0x18\n 25280: u8 [a0 + 0x13] = a4\n 25283: a4 = a3 >> 0x10\n 25286: u8 [a0 + 0x12] = a4\n 25289: a3 = a3 >> 0x8\n 25292: u8 [a0 + 0x11] = a3\n 25295: u8 [a0 + 0x8] = a2\n 25298: a3 = a2 >> 0x38\n 25301: u8 [a0 + 0xf] = a3\n 25304: a3 = a2 >> 0x30\n 25307: u8 [a0 + 0xe] = a3\n 25310: a3 = a2 >> 0x28\n 25313: u8 [a0 + 0xd] = a3\n 25316: a3 = a2 >> 0x20\n 25319: u8 [a0 + 0xc] = a3\n 25322: a3 = a2 >> 0x18\n 25325: u8 [a0 + 0xb] = a3\n 25328: a3 = a2 >> 0x10\n 25331: u8 [a0 + 0xa] = a3\n 25334: a2 = a2 >> 0x8\n 25337: u8 [a0 + 0x9] = a2\n 25340: u8 [a0] = a1\n 25342: a2 = a1 >> 0x38\n 25345: u8 [a0 + 0x7] = a2\n 25348: a2 = a1 >> 0x30\n 25351: u8 [a0 + 0x6] = a2\n 25354: a2 = a1 >> 0x28\n 25357: u8 [a0 + 0x5] = a2\n 25360: a2 = a1 >> 0x20\n 25363: u8 [a0 + 0x4] = a2\n 25366: a2 = a1 >> 0x18\n 25369: u8 [a0 + 0x3] = a2\n 25372: a2 = a1 >> 0x10\n 25375: u8 [a0 + 0x2] = a2\n 25378: a1 = a1 >> 0x8\n 25381: u8 [a0 + 0x1] = a1\n 25384: s1 = sp + 0x7ff\n 25388: s1 = s1 + 0x7e9\n 25392: u64 [s1 + 96] = 0\n 25395: u64 [s1 + 88] = 0\n 25398: u64 [s1 + 72] = 0x40\n 25402: a0 = sp + 0x1050\n 25406: a1 = sp + 0x1030\n 25410: u64 [s1 + 80] = 0\n 25413: ra = 278, jump @56\n      : @346 [@dyn 139] (gas: 15)\n 25419: a1 = u64 [s1 + 0x80]\n 25423: a2 = u64 [s1 + 0x78]\n 25426: a0 = u64 [s1 + 0x70]\n 25429: s1 = u64 [s1 + 0x68]\n 25432: u64 [sp + 0x28] = a0\n 25435: u64 [sp + 0x30] = a1\n 25438: a0 = a0 | a1\n 25441: a1 = s1 | a2\n 25444: a1 = a1 | a0\n 25447: a1 = a1 >> 0x20\n 25450: u64 [sp + 0x38] = a2\n 25453: a0 = a0 | a2\n 25456: a0 = a0 << 0x20\n 25459: a0 = a0 | a1\n 25462: jump @348 if a0 == 0\n      : @347 (gas: 1)\n 25465: jump @961\n      : @348 (gas: 4)\n 25469: i32 a0 = s1 + 0\n 25471: a1 = 0x20\n 25474: u64 [sp + 0x18] = a0\n 25477: ra = 280, jump @0\n      : @349 [@dyn 140] (gas: 44)\n 25483: u8 [a0 + 31] = 0xb\n 25487: a1 = u64 [sp + 0x30]\n 25490: a2 = u64 [sp + 0x38]\n 25493: a2 = a2 | a1\n 25496: a1 = 0x100000000\n 25506: u64 [sp + 0x20] = a1\n 25509: a1 = 0xffffffe0\n 25519: u64 [sp + 0x10] = s1\n 25522: a1 = s1 <u a1\n 25525: s1 = u64 [sp + 0x28]\n 25528: a1 = 0 if s1 != 0\n 25530: a1 = 0 if a2 != 0\n 25532: u8 [a0 + 30] = 0\n 25535: u8 [a0 + 29] = 0\n 25538: u8 [a0 + 28] = 0\n 25541: u8 [a0 + 27] = 0\n 25544: u8 [a0 + 26] = 0\n 25547: u8 [a0 + 25] = 0\n 25550: u8 [a0 + 24] = 0\n 25553: u8 [a0 + 23] = 0\n 25556: u8 [a0 + 22] = 0\n 25559: u8 [a0 + 21] = 0\n 25562: u8 [a0 + 20] = 0\n 25565: u8 [a0 + 19] = 0\n 25568: u8 [a0 + 18] = 0\n 25571: u8 [a0 + 17] = 0\n 25574: u8 [a0 + 16] = 0\n 25577: u8 [a0 + 15] = 0\n 25580: u8 [a0 + 14] = 0\n 25583: u8 [a0 + 13] = 0\n 25586: u8 [a0 + 12] = 0\n 25589: u8 [a0 + 11] = 0\n 25592: u8 [a0 + 10] = 0\n 25595: u8 [a0 + 9] = 0\n 25598: u8 [a0 + 8] = 0\n 25601: u8 [a0 + 7] = 0\n 25604: u8 [a0 + 6] = 0\n 25607: u8 [a0 + 5] = 0\n 25610: u8 [a0 + 4] = 0\n 25613: u8 [a0 + 3] = 0\n 25616: u8 [a0 + 2] = 0\n 25619: u8 [a0 + 1] = 0\n 25622: u8 [a0 + 0] = 0\n 25624: jump @351 if a1 != 0\n      : @350 (gas: 1)\n 25627: jump @961\n      : @351 (gas: 4)\n 25631: a0 = u64 [sp + 0x18]\n 25634: i32 a0 = a0 + 0x20\n 25637: a1 = 0x20\n 25640: ra = 282, jump @0\n      : @352 [@dyn 141] (gas: 41)\n 25646: u8 [a0 + 31] = 0\n 25649: u8 [a0 + 30] = 0\n 25652: u8 [a0 + 29] = 0\n 25655: u8 [a0 + 28] = 0\n 25658: u8 [a0 + 27] = 0\n 25661: u8 [a0 + 26] = 0\n 25664: u8 [a0 + 25] = 0\n 25667: u8 [a0 + 24] = 0\n 25670: u8 [a0 + 23] = 0\n 25673: u8 [a0 + 22] = 0\n 25676: u8 [a0 + 21] = 0\n 25679: u8 [a0 + 20] = 0\n 25682: u8 [a0 + 19] = 0\n 25685: u8 [a0 + 18] = 0\n 25688: u8 [a0 + 17] = 0\n 25691: u8 [a0 + 16] = 0\n 25694: u8 [a0 + 15] = 0\n 25697: u8 [a0 + 14] = 0\n 25700: u8 [a0 + 13] = 0\n 25703: u8 [a0 + 12] = 0\n 25706: u8 [a0 + 11] = 0\n 25709: u8 [a0 + 10] = 0x65\n 25713: u8 [a0 + 9] = 0x6c\n 25717: u8 [a0 + 8] = 0x62\n 25721: u8 [a0 + 7] = 0x61\n 25725: u8 [a0 + 6] = 0x74\n 25729: u8 [a0 + 5] = 0x72\n 25733: u8 [a0 + 4] = 0x6f\n 25737: u8 [a0 + 3] = 0x66\n 25741: u8 [a0 + 2] = 0x6d\n 25745: u8 [a0 + 1] = 0x6f\n 25749: a2 = u64 [sp + 0x20]\n 25752: a2 = a2 + 0xfffffffffffffe80\n 25756: a3 = u64 [sp + 0x68]\n 25759: a2 = a3 <u a2\n 25762: a3 = u64 [sp + 0x60]\n 25765: a2 = 0 if a3 != 0\n 25767: a3 = u64 [sp + 0x58]\n 25770: a2 = 0 if a3 != 0\n 25772: u8 [a0 + 0] = 0x63\n 25775: jump @354 if a2 != 0\n      : @353 (gas: 1)\n 25778: jump @961\n      : @354 (gas: 4)\n 25782: a0 = u64 [sp + 0x50]\n 25785: i32 a0 = a0 + 0x180\n 25789: a1 = 0x20\n 25792: ra = 284, jump @0\n      : @355 [@dyn 142] (gas: 77)\n 25798: a1 = u64 [sp + 0x30]\n 25801: a1 = reverse a1\n 25803: a2 = u64 [sp + 0x38]\n 25806: a2 = reverse a2\n 25808: a3 = reverse s1\n 25810: a4 = u64 [sp + 0x10]\n 25813: a4 = reverse a4\n 25815: a5 = a4 >> 0x38\n 25818: u8 [a0 + 0x1f] = a5\n 25821: a5 = a4 >> 0x30\n 25824: u8 [a0 + 0x1e] = a5\n 25827: a5 = a4 >> 0x28\n 25830: u8 [a0 + 0x1d] = a5\n 25833: a5 = a4 >> 0x20\n 25836: u8 [a0 + 0x1c] = a5\n 25839: a5 = a4 >> 0x18\n 25842: u8 [a0 + 0x1b] = a5\n 25845: a5 = a4 >> 0x10\n 25848: u8 [a0 + 0x1a] = a5\n 25851: a5 = a4 >> 0x8\n 25854: u8 [a0 + 0x19] = a5\n 25857: u8 [a0 + 0x18] = a4\n 25860: u8 [a0 + 0x10] = a3\n 25863: a4 = a3 >> 0x38\n 25866: u8 [a0 + 0x17] = a4\n 25869: a4 = a3 >> 0x30\n 25872: u8 [a0 + 0x16] = a4\n 25875: a4 = a3 >> 0x28\n 25878: u8 [a0 + 0x15] = a4\n 25881: a4 = a3 >> 0x20\n 25884: u8 [a0 + 0x14] = a4\n 25887: a4 = a3 >> 0x18\n 25890: u8 [a0 + 0x13] = a4\n 25893: a4 = a3 >> 0x10\n 25896: u8 [a0 + 0x12] = a4\n 25899: a3 = a3 >> 0x8\n 25902: u8 [a0 + 0x11] = a3\n 25905: u8 [a0 + 0x8] = a2\n 25908: a3 = a2 >> 0x38\n 25911: u8 [a0 + 0xf] = a3\n 25914: a3 = a2 >> 0x30\n 25917: u8 [a0 + 0xe] = a3\n 25920: a3 = a2 >> 0x28\n 25923: u8 [a0 + 0xd] = a3\n 25926: a3 = a2 >> 0x20\n 25929: u8 [a0 + 0xc] = a3\n 25932: a3 = a2 >> 0x18\n 25935: u8 [a0 + 0xb] = a3\n 25938: a3 = a2 >> 0x10\n 25941: u8 [a0 + 0xa] = a3\n 25944: a2 = a2 >> 0x8\n 25947: u8 [a0 + 0x9] = a2\n 25950: u8 [a0] = a1\n 25952: a2 = a1 >> 0x38\n 25955: u8 [a0 + 0x7] = a2\n 25958: a2 = a1 >> 0x30\n 25961: u8 [a0 + 0x6] = a2\n 25964: a2 = a1 >> 0x28\n 25967: u8 [a0 + 0x5] = a2\n 25970: a2 = a1 >> 0x20\n 25973: u8 [a0 + 0x4] = a2\n 25976: a2 = a1 >> 0x18\n 25979: u8 [a0 + 0x3] = a2\n 25982: a2 = a1 >> 0x10\n 25985: u8 [a0 + 0x2] = a2\n 25988: a1 = a1 >> 0x8\n 25991: u8 [a0 + 0x1] = a1\n 25994: s1 = sp + 0x7ff\n 25998: s1 = s1 + 0x7e9\n 26002: u64 [s1 + 32] = 0\n 26005: u64 [s1 + 24] = 0\n 26008: u64 [s1 + 8] = 0x40\n 26012: a0 = sp + 0x1010\n 26016: a1 = sp + 0x7ff\n 26020: a1 = a1 + 0x7f1\n 26024: u64 [s1 + 16] = 0\n 26027: ra = 286, jump @56\n      : @356 [@dyn 143] (gas: 15)\n 26033: a1 = u64 [s1 + 0x40]\n 26036: a2 = u64 [s1 + 0x38]\n 26039: a0 = u64 [s1 + 0x30]\n 26042: s1 = u64 [s1 + 0x28]\n 26045: u64 [sp + 0x38] = a0\n 26048: u64 [sp + 0x28] = a1\n 26051: a0 = a0 | a1\n 26054: a1 = s1 | a2\n 26057: a1 = a1 | a0\n 26060: a1 = a1 >> 0x20\n 26063: u64 [sp + 0x30] = a2\n 26066: a0 = a0 | a2\n 26069: a0 = a0 << 0x20\n 26072: a0 = a0 | a1\n 26075: jump @358 if a0 == 0\n      : @357 (gas: 1)\n 26078: jump @961\n      : @358 (gas: 4)\n 26082: i32 a0 = s1 + 0\n 26084: a1 = 0x20\n 26087: u64 [sp + 0x18] = a0\n 26090: ra = 288, jump @0\n      : @359 [@dyn 144] (gas: 44)\n 26096: u8 [a0 + 31] = 0x9\n 26100: a1 = u64 [sp + 0x28]\n 26103: a2 = u64 [sp + 0x30]\n 26106: a2 = a2 | a1\n 26109: a1 = 0x100000000\n 26119: u64 [sp + 0x20] = a1\n 26122: a1 = 0xffffffe0\n 26132: u64 [sp + 0x10] = s1\n 26135: a1 = s1 <u a1\n 26138: a3 = u64 [sp + 0x38]\n 26141: a1 = 0 if a3 != 0\n 26143: a1 = 0 if a2 != 0\n 26145: u8 [a0 + 30] = 0\n 26148: u8 [a0 + 29] = 0\n 26151: u8 [a0 + 28] = 0\n 26154: u8 [a0 + 27] = 0\n 26157: u8 [a0 + 26] = 0\n 26160: u8 [a0 + 25] = 0\n 26163: u8 [a0 + 24] = 0\n 26166: u8 [a0 + 23] = 0\n 26169: u8 [a0 + 22] = 0\n 26172: u8 [a0 + 21] = 0\n 26175: u8 [a0 + 20] = 0\n 26178: u8 [a0 + 19] = 0\n 26181: u8 [a0 + 18] = 0\n 26184: u8 [a0 + 17] = 0\n 26187: u8 [a0 + 16] = 0\n 26190: u8 [a0 + 15] = 0\n 26193: u8 [a0 + 14] = 0\n 26196: u8 [a0 + 13] = 0\n 26199: u8 [a0 + 12] = 0\n 26202: u8 [a0 + 11] = 0\n 26205: u8 [a0 + 10] = 0\n 26208: u8 [a0 + 9] = 0\n 26211: u8 [a0 + 8] = 0\n 26214: u8 [a0 + 7] = 0\n 26217: u8 [a0 + 6] = 0\n 26220: u8 [a0 + 5] = 0\n 26223: u8 [a0 + 4] = 0\n 26226: u8 [a0 + 3] = 0\n 26229: u8 [a0 + 2] = 0\n 26232: u8 [a0 + 1] = 0\n 26235: u8 [a0 + 0] = 0\n 26237: jump @361 if a1 != 0\n      : @360 (gas: 1)\n 26240: jump @961\n      : @361 (gas: 4)\n 26244: a0 = u64 [sp + 0x18]\n 26247: i32 a0 = a0 + 0x20\n 26250: a1 = 0x20\n 26253: ra = 290, jump @0\n      : @362 [@dyn 145] (gas: 41)\n 26259: u8 [a0 + 31] = 0\n 26262: u8 [a0 + 30] = 0\n 26265: u8 [a0 + 29] = 0\n 26268: u8 [a0 + 28] = 0\n 26271: u8 [a0 + 27] = 0\n 26274: u8 [a0 + 26] = 0\n 26277: u8 [a0 + 25] = 0\n 26280: u8 [a0 + 24] = 0\n 26283: u8 [a0 + 23] = 0\n 26286: u8 [a0 + 22] = 0\n 26289: u8 [a0 + 21] = 0\n 26292: u8 [a0 + 20] = 0\n 26295: u8 [a0 + 19] = 0\n 26298: u8 [a0 + 18] = 0\n 26301: u8 [a0 + 17] = 0\n 26304: u8 [a0 + 16] = 0\n 26307: u8 [a0 + 15] = 0\n 26310: u8 [a0 + 14] = 0\n 26313: u8 [a0 + 13] = 0\n 26316: u8 [a0 + 12] = 0\n 26319: u8 [a0 + 11] = 0\n 26322: u8 [a0 + 10] = 0\n 26325: u8 [a0 + 9] = 0\n 26328: u8 [a0 + 8] = 0x74\n 26332: u8 [a0 + 7] = 0x6e\n 26336: u8 [a0 + 6] = 0x65\n 26340: u8 [a0 + 5] = 0x64\n 26344: u8 [a0 + 4] = 0x69\n 26348: u8 [a0 + 3] = 0x66\n 26352: u8 [a0 + 2] = 0x6e\n 26356: u8 [a0 + 1] = 0x6f\n 26360: a2 = u64 [sp + 0x20]\n 26363: a2 = a2 + 0xfffffffffffffe60\n 26367: a3 = u64 [sp + 0x68]\n 26370: a2 = a3 <u a2\n 26373: a3 = u64 [sp + 0x60]\n 26376: a2 = 0 if a3 != 0\n 26378: a3 = u64 [sp + 0x58]\n 26381: a2 = 0 if a3 != 0\n 26383: u8 [a0 + 0] = 0x63\n 26386: jump @364 if a2 != 0\n      : @363 (gas: 1)\n 26389: jump @961\n      : @364 (gas: 5)\n 26393: s1 = sp + 0x7e8\n 26397: a0 = u64 [sp + 0x50]\n 26400: i32 a0 = a0 + 0x1a0\n 26404: a1 = 0x20\n 26407: ra = 292, jump @0\n      : @365 [@dyn 146] (gas: 77)\n 26413: a1 = u64 [sp + 0x28]\n 26416: a1 = reverse a1\n 26418: a2 = u64 [sp + 0x30]\n 26421: a2 = reverse a2\n 26423: a3 = u64 [sp + 0x38]\n 26426: a3 = reverse a3\n 26428: a4 = u64 [sp + 0x10]\n 26431: a4 = reverse a4\n 26433: a5 = a4 >> 0x38\n 26436: u8 [a0 + 0x1f] = a5\n 26439: a5 = a4 >> 0x30\n 26442: u8 [a0 + 0x1e] = a5\n 26445: a5 = a4 >> 0x28\n 26448: u8 [a0 + 0x1d] = a5\n 26451: a5 = a4 >> 0x20\n 26454: u8 [a0 + 0x1c] = a5\n 26457: a5 = a4 >> 0x18\n 26460: u8 [a0 + 0x1b] = a5\n 26463: a5 = a4 >> 0x10\n 26466: u8 [a0 + 0x1a] = a5\n 26469: a5 = a4 >> 0x8\n 26472: u8 [a0 + 0x19] = a5\n 26475: u8 [a0 + 0x18] = a4\n 26478: u8 [a0 + 0x10] = a3\n 26481: a4 = a3 >> 0x38\n 26484: u8 [a0 + 0x17] = a4\n 26487: a4 = a3 >> 0x30\n 26490: u8 [a0 + 0x16] = a4\n 26493: a4 = a3 >> 0x28\n 26496: u8 [a0 + 0x15] = a4\n 26499: a4 = a3 >> 0x20\n 26502: u8 [a0 + 0x14] = a4\n 26505: a4 = a3 >> 0x18\n 26508: u8 [a0 + 0x13] = a4\n 26511: a4 = a3 >> 0x10\n 26514: u8 [a0 + 0x12] = a4\n 26517: a3 = a3 >> 0x8\n 26520: u8 [a0 + 0x11] = a3\n 26523: u8 [a0 + 0x8] = a2\n 26526: a3 = a2 >> 0x38\n 26529: u8 [a0 + 0xf] = a3\n 26532: a3 = a2 >> 0x30\n 26535: u8 [a0 + 0xe] = a3\n 26538: a3 = a2 >> 0x28\n 26541: u8 [a0 + 0xd] = a3\n 26544: a3 = a2 >> 0x20\n 26547: u8 [a0 + 0xc] = a3\n 26550: a3 = a2 >> 0x18\n 26553: u8 [a0 + 0xb] = a3\n 26556: a3 = a2 >> 0x10\n 26559: u8 [a0 + 0xa] = a3\n 26562: a2 = a2 >> 0x8\n 26565: u8 [a0 + 0x9] = a2\n 26568: u8 [a0] = a1\n 26570: a2 = a1 >> 0x38\n 26573: u8 [a0 + 0x7] = a2\n 26576: a2 = a1 >> 0x30\n 26579: u8 [a0 + 0x6] = a2\n 26582: a2 = a1 >> 0x28\n 26585: u8 [a0 + 0x5] = a2\n 26588: a2 = a1 >> 0x20\n 26591: u8 [a0 + 0x4] = a2\n 26594: a2 = a1 >> 0x18\n 26597: u8 [a0 + 0x3] = a2\n 26600: a2 = a1 >> 0x10\n 26603: u8 [a0 + 0x2] = a2\n 26606: a1 = a1 >> 0x8\n 26609: u8 [a0 + 0x1] = a1\n 26612: u64 [s1 + 2016] = 0\n 26616: u64 [s1 + 2008] = 0\n 26620: u64 [s1 + 1992] = 0x40\n 26625: a0 = sp + 0x7ff\n 26629: a0 = a0 + 0x7d1\n 26633: a1 = sp + 0x7ff\n 26637: a1 = a1 + 0x7b1\n 26641: u64 [s1 + 2000] = 0\n 26645: ra = 294, jump @56\n      : @366 [@dyn 147] (gas: 17)\n 26651: a0 = sp + 0x7ff\n 26655: a0 = a0 + 0x7e9\n 26659: a2 = u64 [a0]\n 26661: a3 = u64 [a0 + 0xfffffffffffffff8]\n 26664: a1 = u64 [a0 + 0xfffffffffffffff0]\n 26667: s1 = u64 [a0 + 0xffffffffffffffe8]\n 26670: u64 [sp + 0x28] = a1\n 26673: u64 [sp + 0x30] = a2\n 26676: a0 = a1 | a2\n 26679: a1 = s1 | a3\n 26682: a1 = a1 | a0\n 26685: a1 = a1 >> 0x20\n 26688: u64 [sp + 0x38] = a3\n 26691: a0 = a0 | a3\n 26694: a0 = a0 << 0x20\n 26697: a0 = a0 | a1\n 26700: jump @368 if a0 == 0\n      : @367 (gas: 1)\n 26703: jump @961\n      : @368 (gas: 4)\n 26707: i32 a0 = s1 + 0\n 26709: a1 = 0x20\n 26712: u64 [sp + 0x18] = a0\n 26715: ra = 296, jump @0\n      : @369 [@dyn 148] (gas: 44)\n 26721: u8 [a0 + 31] = 0xb\n 26725: a1 = u64 [sp + 0x30]\n 26728: a2 = u64 [sp + 0x38]\n 26731: a2 = a2 | a1\n 26734: a1 = 0x100000000\n 26744: u64 [sp + 0x20] = a1\n 26747: a1 = 0xffffffe0\n 26757: u64 [sp + 0x10] = s1\n 26760: a1 = s1 <u a1\n 26763: s1 = u64 [sp + 0x28]\n 26766: a1 = 0 if s1 != 0\n 26768: a1 = 0 if a2 != 0\n 26770: u8 [a0 + 30] = 0\n 26773: u8 [a0 + 29] = 0\n 26776: u8 [a0 + 28] = 0\n 26779: u8 [a0 + 27] = 0\n 26782: u8 [a0 + 26] = 0\n 26785: u8 [a0 + 25] = 0\n 26788: u8 [a0 + 24] = 0\n 26791: u8 [a0 + 23] = 0\n 26794: u8 [a0 + 22] = 0\n 26797: u8 [a0 + 21] = 0\n 26800: u8 [a0 + 20] = 0\n 26803: u8 [a0 + 19] = 0\n 26806: u8 [a0 + 18] = 0\n 26809: u8 [a0 + 17] = 0\n 26812: u8 [a0 + 16] = 0\n 26815: u8 [a0 + 15] = 0\n 26818: u8 [a0 + 14] = 0\n 26821: u8 [a0 + 13] = 0\n 26824: u8 [a0 + 12] = 0\n 26827: u8 [a0 + 11] = 0\n 26830: u8 [a0 + 10] = 0\n 26833: u8 [a0 + 9] = 0\n 26836: u8 [a0 + 8] = 0\n 26839: u8 [a0 + 7] = 0\n 26842: u8 [a0 + 6] = 0\n 26845: u8 [a0 + 5] = 0\n 26848: u8 [a0 + 4] = 0\n 26851: u8 [a0 + 3] = 0\n 26854: u8 [a0 + 2] = 0\n 26857: u8 [a0 + 1] = 0\n 26860: u8 [a0 + 0] = 0\n 26862: jump @371 if a1 != 0\n      : @370 (gas: 1)\n 26865: jump @961\n      : @371 (gas: 4)\n 26869: a0 = u64 [sp + 0x18]\n 26872: i32 a0 = a0 + 0x20\n 26875: a1 = 0x20\n 26878: ra = 298, jump @0\n      : @372 [@dyn 149] (gas: 41)\n 26884: u8 [a0 + 31] = 0\n 26887: u8 [a0 + 30] = 0\n 26890: u8 [a0 + 29] = 0\n 26893: u8 [a0 + 28] = 0\n 26896: u8 [a0 + 27] = 0\n 26899: u8 [a0 + 26] = 0\n 26902: u8 [a0 + 25] = 0\n 26905: u8 [a0 + 24] = 0\n 26908: u8 [a0 + 23] = 0\n 26911: u8 [a0 + 22] = 0\n 26914: u8 [a0 + 21] = 0\n 26917: u8 [a0 + 20] = 0\n 26920: u8 [a0 + 19] = 0\n 26923: u8 [a0 + 18] = 0\n 26926: u8 [a0 + 17] = 0\n 26929: u8 [a0 + 16] = 0\n 26932: u8 [a0 + 15] = 0\n 26935: u8 [a0 + 14] = 0\n 26938: u8 [a0 + 13] = 0\n 26941: u8 [a0 + 12] = 0\n 26944: u8 [a0 + 11] = 0\n 26947: u8 [a0 + 10] = 0x65\n 26951: u8 [a0 + 9] = 0x74\n 26955: u8 [a0 + 8] = 0x61\n 26959: u8 [a0 + 7] = 0x72\n 26963: u8 [a0 + 6] = 0x65\n 26967: u8 [a0 + 5] = 0x64\n 26971: u8 [a0 + 4] = 0x69\n 26975: u8 [a0 + 3] = 0x73\n 26979: u8 [a0 + 2] = 0x6e\n 26983: u8 [a0 + 1] = 0x6f\n 26987: a2 = u64 [sp + 0x20]\n 26990: a2 = a2 + 0xfffffffffffffe40\n 26994: a3 = u64 [sp + 0x68]\n 26997: a2 = a3 <u a2\n 27000: a3 = u64 [sp + 0x60]\n 27003: a2 = 0 if a3 != 0\n 27005: a3 = u64 [sp + 0x58]\n 27008: a2 = 0 if a3 != 0\n 27010: u8 [a0 + 0] = 0x63\n 27013: jump @374 if a2 != 0\n      : @373 (gas: 1)\n 27016: jump @961\n      : @374 (gas: 4)\n 27020: a0 = u64 [sp + 0x50]\n 27023: i32 a0 = a0 + 0x1c0\n 27027: a1 = 0x20\n 27030: ra = 300, jump @0\n      : @375 [@dyn 150] (gas: 77)\n 27036: a1 = u64 [sp + 0x30]\n 27039: a1 = reverse a1\n 27041: a2 = u64 [sp + 0x38]\n 27044: a2 = reverse a2\n 27046: a3 = reverse s1\n 27048: a4 = u64 [sp + 0x10]\n 27051: a4 = reverse a4\n 27053: a5 = a4 >> 0x38\n 27056: u8 [a0 + 0x1f] = a5\n 27059: a5 = a4 >> 0x30\n 27062: u8 [a0 + 0x1e] = a5\n 27065: a5 = a4 >> 0x28\n 27068: u8 [a0 + 0x1d] = a5\n 27071: a5 = a4 >> 0x20\n 27074: u8 [a0 + 0x1c] = a5\n 27077: a5 = a4 >> 0x18\n 27080: u8 [a0 + 0x1b] = a5\n 27083: a5 = a4 >> 0x10\n 27086: u8 [a0 + 0x1a] = a5\n 27089: a5 = a4 >> 0x8\n 27092: u8 [a0 + 0x19] = a5\n 27095: u8 [a0 + 0x18] = a4\n 27098: u8 [a0 + 0x10] = a3\n 27101: a4 = a3 >> 0x38\n 27104: u8 [a0 + 0x17] = a4\n 27107: a4 = a3 >> 0x30\n 27110: u8 [a0 + 0x16] = a4\n 27113: a4 = a3 >> 0x28\n 27116: u8 [a0 + 0x15] = a4\n 27119: a4 = a3 >> 0x20\n 27122: u8 [a0 + 0x14] = a4\n 27125: a4 = a3 >> 0x18\n 27128: u8 [a0 + 0x13] = a4\n 27131: a4 = a3 >> 0x10\n 27134: u8 [a0 + 0x12] = a4\n 27137: a3 = a3 >> 0x8\n 27140: u8 [a0 + 0x11] = a3\n 27143: u8 [a0 + 0x8] = a2\n 27146: a3 = a2 >> 0x38\n 27149: u8 [a0 + 0xf] = a3\n 27152: a3 = a2 >> 0x30\n 27155: u8 [a0 + 0xe] = a3\n 27158: a3 = a2 >> 0x28\n 27161: u8 [a0 + 0xd] = a3\n 27164: a3 = a2 >> 0x20\n 27167: u8 [a0 + 0xc] = a3\n 27170: a3 = a2 >> 0x18\n 27173: u8 [a0 + 0xb] = a3\n 27176: a3 = a2 >> 0x10\n 27179: u8 [a0 + 0xa] = a3\n 27182: a2 = a2 >> 0x8\n 27185: u8 [a0 + 0x9] = a2\n 27188: u8 [a0] = a1\n 27190: a2 = a1 >> 0x38\n 27193: u8 [a0 + 0x7] = a2\n 27196: a2 = a1 >> 0x30\n 27199: u8 [a0 + 0x6] = a2\n 27202: a2 = a1 >> 0x28\n 27205: u8 [a0 + 0x5] = a2\n 27208: a2 = a1 >> 0x20\n 27211: u8 [a0 + 0x4] = a2\n 27214: a2 = a1 >> 0x18\n 27217: u8 [a0 + 0x3] = a2\n 27220: a2 = a1 >> 0x10\n 27223: u8 [a0 + 0x2] = a2\n 27226: a1 = a1 >> 0x8\n 27229: u8 [a0 + 0x1] = a1\n 27232: s1 = sp + 0x7e8\n 27236: u64 [s1 + 1952] = 0\n 27240: u64 [s1 + 1944] = 0\n 27244: u64 [s1 + 1928] = 0x40\n 27249: a0 = sp + 0x7ff\n 27253: a0 = a0 + 0x791\n 27257: a1 = sp + 0x7ff\n 27261: a1 = a1 + 0x771\n 27265: u64 [s1 + 1936] = 0\n 27269: ra = 302, jump @56\n      : @376 [@dyn 151] (gas: 15)\n 27275: a1 = u64 [s1 + 0x7c0]\n 27279: a2 = u64 [s1 + 0x7b8]\n 27283: a0 = u64 [s1 + 0x7b0]\n 27287: s1 = u64 [s1 + 0x7a8]\n 27291: u64 [sp + 0x28] = a0\n 27294: u64 [sp + 0x30] = a1\n 27297: a0 = a0 | a1\n 27300: a1 = s1 | a2\n 27303: a1 = a1 | a0\n 27306: a1 = a1 >> 0x20\n 27309: u64 [sp + 0x38] = a2\n 27312: a0 = a0 | a2\n 27315: a0 = a0 << 0x20\n 27318: a0 = a0 | a1\n 27321: jump @378 if a0 == 0\n      : @377 (gas: 1)\n 27324: jump @961\n      : @378 (gas: 4)\n 27328: i32 a0 = s1 + 0\n 27330: a1 = 0x20\n 27333: u64 [sp + 0x20] = a0\n 27336: ra = 304, jump @0\n      : @379 [@dyn 152] (gas: 44)\n 27342: u8 [a0 + 31] = 0x4\n 27346: a1 = u64 [sp + 0x30]\n 27349: a2 = u64 [sp + 0x38]\n 27352: a2 = a2 | a1\n 27355: a1 = 0x100000000\n 27365: u64 [sp + 0x18] = a1\n 27368: a1 = 0xffffffe0\n 27378: u64 [sp + 0x10] = s1\n 27381: a1 = s1 <u a1\n 27384: s1 = u64 [sp + 0x28]\n 27387: a1 = 0 if s1 != 0\n 27389: a1 = 0 if a2 != 0\n 27391: u8 [a0 + 30] = 0\n 27394: u8 [a0 + 29] = 0\n 27397: u8 [a0 + 28] = 0\n 27400: u8 [a0 + 27] = 0\n 27403: u8 [a0 + 26] = 0\n 27406: u8 [a0 + 25] = 0\n 27409: u8 [a0 + 24] = 0\n 27412: u8 [a0 + 23] = 0\n 27415: u8 [a0 + 22] = 0\n 27418: u8 [a0 + 21] = 0\n 27421: u8 [a0 + 20] = 0\n 27424: u8 [a0 + 19] = 0\n 27427: u8 [a0 + 18] = 0\n 27430: u8 [a0 + 17] = 0\n 27433: u8 [a0 + 16] = 0\n 27436: u8 [a0 + 15] = 0\n 27439: u8 [a0 + 14] = 0\n 27442: u8 [a0 + 13] = 0\n 27445: u8 [a0 + 12] = 0\n 27448: u8 [a0 + 11] = 0\n 27451: u8 [a0 + 10] = 0\n 27454: u8 [a0 + 9] = 0\n 27457: u8 [a0 + 8] = 0\n 27460: u8 [a0 + 7] = 0\n 27463: u8 [a0 + 6] = 0\n 27466: u8 [a0 + 5] = 0\n 27469: u8 [a0 + 4] = 0\n 27472: u8 [a0 + 3] = 0\n 27475: u8 [a0 + 2] = 0\n 27478: u8 [a0 + 1] = 0\n 27481: u8 [a0 + 0] = 0\n 27483: jump @381 if a1 != 0\n      : @380 (gas: 1)\n 27486: jump @961\n      : @381 (gas: 4)\n 27490: a0 = u64 [sp + 0x20]\n 27493: i32 a0 = a0 + 0x20\n 27496: a1 = 0x20\n 27499: ra = 306, jump @0\n      : @382 [@dyn 153] (gas: 41)\n 27505: u8 [a0 + 31] = 0\n 27508: u8 [a0 + 30] = 0\n 27511: u8 [a0 + 29] = 0\n 27514: u8 [a0 + 28] = 0\n 27517: u8 [a0 + 27] = 0\n 27520: u8 [a0 + 26] = 0\n 27523: u8 [a0 + 25] = 0\n 27526: u8 [a0 + 24] = 0\n 27529: u8 [a0 + 23] = 0\n 27532: u8 [a0 + 22] = 0\n 27535: u8 [a0 + 21] = 0\n 27538: u8 [a0 + 20] = 0\n 27541: u8 [a0 + 19] = 0\n 27544: u8 [a0 + 18] = 0\n 27547: u8 [a0 + 17] = 0\n 27550: u8 [a0 + 16] = 0\n 27553: u8 [a0 + 15] = 0\n 27556: u8 [a0 + 14] = 0\n 27559: u8 [a0 + 13] = 0\n 27562: u8 [a0 + 12] = 0\n 27565: u8 [a0 + 11] = 0\n 27568: u8 [a0 + 10] = 0\n 27571: u8 [a0 + 9] = 0\n 27574: u8 [a0 + 8] = 0\n 27577: u8 [a0 + 7] = 0\n 27580: u8 [a0 + 6] = 0\n 27583: u8 [a0 + 5] = 0\n 27586: u8 [a0 + 4] = 0\n 27589: u8 [a0 + 3] = 0x6c\n 27593: u8 [a0 + 2] = 0x6f\n 27597: u8 [a0 + 1] = 0x6f\n 27601: a2 = u64 [sp + 0x18]\n 27604: a2 = a2 + 0xfffffffffffffe20\n 27608: a3 = u64 [sp + 0x68]\n 27611: a2 = a3 <u a2\n 27614: a3 = u64 [sp + 0x60]\n 27617: a2 = 0 if a3 != 0\n 27619: a3 = u64 [sp + 0x58]\n 27622: a2 = 0 if a3 != 0\n 27624: u8 [a0 + 0] = 0x63\n 27627: jump @384 if a2 != 0\n      : @383 (gas: 1)\n 27630: jump @961\n      : @384 (gas: 4)\n 27634: a0 = u64 [sp + 0x50]\n 27637: i32 a0 = a0 + 0x1e0\n 27641: a1 = 0x20\n 27644: ra = 308, jump @0\n      : @385 [@dyn 154] (gas: 77)\n 27650: a1 = u64 [sp + 0x30]\n 27653: a1 = reverse a1\n 27655: a2 = u64 [sp + 0x38]\n 27658: a2 = reverse a2\n 27660: a3 = reverse s1\n 27662: a4 = u64 [sp + 0x10]\n 27665: a4 = reverse a4\n 27667: a5 = a4 >> 0x38\n 27670: u8 [a0 + 0x1f] = a5\n 27673: a5 = a4 >> 0x30\n 27676: u8 [a0 + 0x1e] = a5\n 27679: a5 = a4 >> 0x28\n 27682: u8 [a0 + 0x1d] = a5\n 27685: a5 = a4 >> 0x20\n 27688: u8 [a0 + 0x1c] = a5\n 27691: a5 = a4 >> 0x18\n 27694: u8 [a0 + 0x1b] = a5\n 27697: a5 = a4 >> 0x10\n 27700: u8 [a0 + 0x1a] = a5\n 27703: a5 = a4 >> 0x8\n 27706: u8 [a0 + 0x19] = a5\n 27709: u8 [a0 + 0x18] = a4\n 27712: u8 [a0 + 0x10] = a3\n 27715: a4 = a3 >> 0x38\n 27718: u8 [a0 + 0x17] = a4\n 27721: a4 = a3 >> 0x30\n 27724: u8 [a0 + 0x16] = a4\n 27727: a4 = a3 >> 0x28\n 27730: u8 [a0 + 0x15] = a4\n 27733: a4 = a3 >> 0x20\n 27736: u8 [a0 + 0x14] = a4\n 27739: a4 = a3 >> 0x18\n 27742: u8 [a0 + 0x13] = a4\n 27745: a4 = a3 >> 0x10\n 27748: u8 [a0 + 0x12] = a4\n 27751: a3 = a3 >> 0x8\n 27754: u8 [a0 + 0x11] = a3\n 27757: u8 [a0 + 0x8] = a2\n 27760: a3 = a2 >> 0x38\n 27763: u8 [a0 + 0xf] = a3\n 27766: a3 = a2 >> 0x30\n 27769: u8 [a0 + 0xe] = a3\n 27772: a3 = a2 >> 0x28\n 27775: u8 [a0 + 0xd] = a3\n 27778: a3 = a2 >> 0x20\n 27781: u8 [a0 + 0xc] = a3\n 27784: a3 = a2 >> 0x18\n 27787: u8 [a0 + 0xb] = a3\n 27790: a3 = a2 >> 0x10\n 27793: u8 [a0 + 0xa] = a3\n 27796: a2 = a2 >> 0x8\n 27799: u8 [a0 + 0x9] = a2\n 27802: u8 [a0] = a1\n 27804: a2 = a1 >> 0x38\n 27807: u8 [a0 + 0x7] = a2\n 27810: a2 = a1 >> 0x30\n 27813: u8 [a0 + 0x6] = a2\n 27816: a2 = a1 >> 0x28\n 27819: u8 [a0 + 0x5] = a2\n 27822: a2 = a1 >> 0x20\n 27825: u8 [a0 + 0x4] = a2\n 27828: a2 = a1 >> 0x18\n 27831: u8 [a0 + 0x3] = a2\n 27834: a2 = a1 >> 0x10\n 27837: u8 [a0 + 0x2] = a2\n 27840: a1 = a1 >> 0x8\n 27843: u8 [a0 + 0x1] = a1\n 27846: s1 = sp + 0x7e8\n 27850: u64 [s1 + 1888] = 0\n 27854: u64 [s1 + 1880] = 0\n 27858: u64 [s1 + 1864] = 0x40\n 27863: a0 = sp + 0x7ff\n 27867: a0 = a0 + 0x751\n 27871: a1 = sp + 0x7ff\n 27875: a1 = a1 + 0x731\n 27879: u64 [s1 + 1872] = 0\n 27883: ra = 310, jump @56\n      : @386 [@dyn 155] (gas: 15)\n 27889: a1 = u64 [s1 + 0x780]\n 27893: a2 = u64 [s1 + 0x778]\n 27897: a0 = u64 [s1 + 0x770]\n 27901: s1 = u64 [s1 + 0x768]\n 27905: u64 [sp + 0x28] = a0\n 27908: u64 [sp + 0x30] = a1\n 27911: a0 = a0 | a1\n 27914: a1 = s1 | a2\n 27917: a1 = a1 | a0\n 27920: a1 = a1 >> 0x20\n 27923: u64 [sp + 0x38] = a2\n 27926: a0 = a0 | a2\n 27929: a0 = a0 << 0x20\n 27932: a0 = a0 | a1\n 27935: jump @388 if a0 == 0\n      : @387 (gas: 1)\n 27938: jump @961\n      : @388 (gas: 4)\n 27942: i32 a0 = s1 + 0\n 27944: a1 = 0x20\n 27947: u64 [sp + 0x18] = a0\n 27950: ra = 312, jump @0\n      : @389 [@dyn 156] (gas: 44)\n 27956: u8 [a0 + 31] = 0xa\n 27960: a1 = u64 [sp + 0x30]\n 27963: a2 = u64 [sp + 0x38]\n 27966: a2 = a2 | a1\n 27969: a1 = 0x100000000\n 27979: u64 [sp + 0x20] = a1\n 27982: a1 = 0xffffffe0\n 27992: u64 [sp + 0x10] = s1\n 27995: a1 = s1 <u a1\n 27998: s1 = u64 [sp + 0x28]\n 28001: a1 = 0 if s1 != 0\n 28003: a1 = 0 if a2 != 0\n 28005: u8 [a0 + 30] = 0\n 28008: u8 [a0 + 29] = 0\n 28011: u8 [a0 + 28] = 0\n 28014: u8 [a0 + 27] = 0\n 28017: u8 [a0 + 26] = 0\n 28020: u8 [a0 + 25] = 0\n 28023: u8 [a0 + 24] = 0\n 28026: u8 [a0 + 23] = 0\n 28029: u8 [a0 + 22] = 0\n 28032: u8 [a0 + 21] = 0\n 28035: u8 [a0 + 20] = 0\n 28038: u8 [a0 + 19] = 0\n 28041: u8 [a0 + 18] = 0\n 28044: u8 [a0 + 17] = 0\n 28047: u8 [a0 + 16] = 0\n 28050: u8 [a0 + 15] = 0\n 28053: u8 [a0 + 14] = 0\n 28056: u8 [a0 + 13] = 0\n 28059: u8 [a0 + 12] = 0\n 28062: u8 [a0 + 11] = 0\n 28065: u8 [a0 + 10] = 0\n 28068: u8 [a0 + 9] = 0\n 28071: u8 [a0 + 8] = 0\n 28074: u8 [a0 + 7] = 0\n 28077: u8 [a0 + 6] = 0\n 28080: u8 [a0 + 5] = 0\n 28083: u8 [a0 + 4] = 0\n 28086: u8 [a0 + 3] = 0\n 28089: u8 [a0 + 2] = 0\n 28092: u8 [a0 + 1] = 0\n 28095: u8 [a0 + 0] = 0\n 28097: jump @391 if a1 != 0\n      : @390 (gas: 1)\n 28100: jump @961\n      : @391 (gas: 4)\n 28104: a0 = u64 [sp + 0x18]\n 28107: i32 a0 = a0 + 0x20\n 28110: a1 = 0x20\n 28113: ra = 314, jump @0\n      : @392 [@dyn 157] (gas: 41)\n 28119: u8 [a0 + 31] = 0\n 28122: u8 [a0 + 30] = 0\n 28125: u8 [a0 + 29] = 0\n 28128: u8 [a0 + 28] = 0\n 28131: u8 [a0 + 27] = 0\n 28134: u8 [a0 + 26] = 0\n 28137: u8 [a0 + 25] = 0\n 28140: u8 [a0 + 24] = 0\n 28143: u8 [a0 + 23] = 0\n 28146: u8 [a0 + 22] = 0\n 28149: u8 [a0 + 21] = 0\n 28152: u8 [a0 + 20] = 0\n 28155: u8 [a0 + 19] = 0\n 28158: u8 [a0 + 18] = 0\n 28161: u8 [a0 + 17] = 0\n 28164: u8 [a0 + 16] = 0\n 28167: u8 [a0 + 15] = 0\n 28170: u8 [a0 + 14] = 0\n 28173: u8 [a0 + 13] = 0\n 28176: u8 [a0 + 12] = 0\n 28179: u8 [a0 + 11] = 0\n 28182: u8 [a0 + 10] = 0\n 28185: u8 [a0 + 9] = 0x73\n 28189: u8 [a0 + 8] = 0x75\n 28193: u8 [a0 + 7] = 0x6f\n 28197: u8 [a0 + 6] = 0x65\n 28201: u8 [a0 + 5] = 0x67\n 28205: u8 [a0 + 4] = 0x61\n 28209: u8 [a0 + 3] = 0x72\n 28213: u8 [a0 + 2] = 0x75\n 28217: u8 [a0 + 1] = 0x6f\n 28221: a2 = u64 [sp + 0x20]\n 28224: a2 = a2 + 0xfffffffffffffe00\n 28228: a3 = u64 [sp + 0x68]\n 28231: a2 = a3 <u a2\n 28234: a3 = u64 [sp + 0x60]\n 28237: a2 = 0 if a3 != 0\n 28239: a3 = u64 [sp + 0x58]\n 28242: a2 = 0 if a3 != 0\n 28244: u8 [a0 + 0] = 0x63\n 28247: jump @394 if a2 != 0\n      : @393 (gas: 1)\n 28250: jump @961\n      : @394 (gas: 4)\n 28254: a0 = u64 [sp + 0x50]\n 28257: i32 a0 = a0 + 0x200\n 28261: a1 = 0x20\n 28264: ra = 316, jump @0\n      : @395 [@dyn 158] (gas: 77)\n 28270: a1 = u64 [sp + 0x30]\n 28273: a1 = reverse a1\n 28275: a2 = u64 [sp + 0x38]\n 28278: a2 = reverse a2\n 28280: a3 = reverse s1\n 28282: a4 = u64 [sp + 0x10]\n 28285: a4 = reverse a4\n 28287: a5 = a4 >> 0x38\n 28290: u8 [a0 + 0x1f] = a5\n 28293: a5 = a4 >> 0x30\n 28296: u8 [a0 + 0x1e] = a5\n 28299: a5 = a4 >> 0x28\n 28302: u8 [a0 + 0x1d] = a5\n 28305: a5 = a4 >> 0x20\n 28308: u8 [a0 + 0x1c] = a5\n 28311: a5 = a4 >> 0x18\n 28314: u8 [a0 + 0x1b] = a5\n 28317: a5 = a4 >> 0x10\n 28320: u8 [a0 + 0x1a] = a5\n 28323: a5 = a4 >> 0x8\n 28326: u8 [a0 + 0x19] = a5\n 28329: u8 [a0 + 0x18] = a4\n 28332: u8 [a0 + 0x10] = a3\n 28335: a4 = a3 >> 0x38\n 28338: u8 [a0 + 0x17] = a4\n 28341: a4 = a3 >> 0x30\n 28344: u8 [a0 + 0x16] = a4\n 28347: a4 = a3 >> 0x28\n 28350: u8 [a0 + 0x15] = a4\n 28353: a4 = a3 >> 0x20\n 28356: u8 [a0 + 0x14] = a4\n 28359: a4 = a3 >> 0x18\n 28362: u8 [a0 + 0x13] = a4\n 28365: a4 = a3 >> 0x10\n 28368: u8 [a0 + 0x12] = a4\n 28371: a3 = a3 >> 0x8\n 28374: u8 [a0 + 0x11] = a3\n 28377: u8 [a0 + 0x8] = a2\n 28380: a3 = a2 >> 0x38\n 28383: u8 [a0 + 0xf] = a3\n 28386: a3 = a2 >> 0x30\n 28389: u8 [a0 + 0xe] = a3\n 28392: a3 = a2 >> 0x28\n 28395: u8 [a0 + 0xd] = a3\n 28398: a3 = a2 >> 0x20\n 28401: u8 [a0 + 0xc] = a3\n 28404: a3 = a2 >> 0x18\n 28407: u8 [a0 + 0xb] = a3\n 28410: a3 = a2 >> 0x10\n 28413: u8 [a0 + 0xa] = a3\n 28416: a2 = a2 >> 0x8\n 28419: u8 [a0 + 0x9] = a2\n 28422: u8 [a0] = a1\n 28424: a2 = a1 >> 0x38\n 28427: u8 [a0 + 0x7] = a2\n 28430: a2 = a1 >> 0x30\n 28433: u8 [a0 + 0x6] = a2\n 28436: a2 = a1 >> 0x28\n 28439: u8 [a0 + 0x5] = a2\n 28442: a2 = a1 >> 0x20\n 28445: u8 [a0 + 0x4] = a2\n 28448: a2 = a1 >> 0x18\n 28451: u8 [a0 + 0x3] = a2\n 28454: a2 = a1 >> 0x10\n 28457: u8 [a0 + 0x2] = a2\n 28460: a1 = a1 >> 0x8\n 28463: u8 [a0 + 0x1] = a1\n 28466: s1 = sp + 0x7e8\n 28470: u64 [s1 + 1824] = 0\n 28474: u64 [s1 + 1816] = 0\n 28478: u64 [s1 + 1800] = 0x40\n 28483: a0 = sp + 0x7ff\n 28487: a0 = a0 + 0x711\n 28491: a1 = sp + 0x7ff\n 28495: a1 = a1 + 0x6f1\n 28499: u64 [s1 + 1808] = 0\n 28503: ra = 318, jump @56\n      : @396 [@dyn 159] (gas: 15)\n 28509: a1 = u64 [s1 + 0x740]\n 28513: a2 = u64 [s1 + 0x738]\n 28517: a0 = u64 [s1 + 0x730]\n 28521: s1 = u64 [s1 + 0x728]\n 28525: u64 [sp + 0x28] = a0\n 28528: u64 [sp + 0x30] = a1\n 28531: a0 = a0 | a1\n 28534: a1 = s1 | a2\n 28537: a1 = a1 | a0\n 28540: a1 = a1 >> 0x20\n 28543: u64 [sp + 0x38] = a2\n 28546: a0 = a0 | a2\n 28549: a0 = a0 << 0x20\n 28552: a0 = a0 | a1\n 28555: jump @398 if a0 == 0\n      : @397 (gas: 1)\n 28558: jump @961\n      : @398 (gas: 4)\n 28562: i32 a0 = s1 + 0\n 28564: a1 = 0x20\n 28567: u64 [sp + 0x18] = a0\n 28570: ra = 320, jump @0\n      : @399 [@dyn 160] (gas: 44)\n 28576: u8 [a0 + 31] = 0x8\n 28580: a1 = u64 [sp + 0x30]\n 28583: a2 = u64 [sp + 0x38]\n 28586: a2 = a2 | a1\n 28589: a1 = 0x100000000\n 28599: u64 [sp + 0x20] = a1\n 28602: a1 = 0xffffffe0\n 28612: u64 [sp + 0x10] = s1\n 28615: a1 = s1 <u a1\n 28618: s1 = u64 [sp + 0x28]\n 28621: a1 = 0 if s1 != 0\n 28623: a1 = 0 if a2 != 0\n 28625: u8 [a0 + 30] = 0\n 28628: u8 [a0 + 29] = 0\n 28631: u8 [a0 + 28] = 0\n 28634: u8 [a0 + 27] = 0\n 28637: u8 [a0 + 26] = 0\n 28640: u8 [a0 + 25] = 0\n 28643: u8 [a0 + 24] = 0\n 28646: u8 [a0 + 23] = 0\n 28649: u8 [a0 + 22] = 0\n 28652: u8 [a0 + 21] = 0\n 28655: u8 [a0 + 20] = 0\n 28658: u8 [a0 + 19] = 0\n 28661: u8 [a0 + 18] = 0\n 28664: u8 [a0 + 17] = 0\n 28667: u8 [a0 + 16] = 0\n 28670: u8 [a0 + 15] = 0\n 28673: u8 [a0 + 14] = 0\n 28676: u8 [a0 + 13] = 0\n 28679: u8 [a0 + 12] = 0\n 28682: u8 [a0 + 11] = 0\n 28685: u8 [a0 + 10] = 0\n 28688: u8 [a0 + 9] = 0\n 28691: u8 [a0 + 8] = 0\n 28694: u8 [a0 + 7] = 0\n 28697: u8 [a0 + 6] = 0\n 28700: u8 [a0 + 5] = 0\n 28703: u8 [a0 + 4] = 0\n 28706: u8 [a0 + 3] = 0\n 28709: u8 [a0 + 2] = 0\n 28712: u8 [a0 + 1] = 0\n 28715: u8 [a0 + 0] = 0\n 28717: jump @401 if a1 != 0\n      : @400 (gas: 1)\n 28720: jump @961\n      : @401 (gas: 4)\n 28724: a0 = u64 [sp + 0x18]\n 28727: i32 a0 = a0 + 0x20\n 28730: a1 = 0x20\n 28733: ra = 322, jump @0\n      : @402 [@dyn 161] (gas: 41)\n 28739: u8 [a0 + 31] = 0\n 28742: u8 [a0 + 30] = 0\n 28745: u8 [a0 + 29] = 0\n 28748: u8 [a0 + 28] = 0\n 28751: u8 [a0 + 27] = 0\n 28754: u8 [a0 + 26] = 0\n 28757: u8 [a0 + 25] = 0\n 28760: u8 [a0 + 24] = 0\n 28763: u8 [a0 + 23] = 0\n 28766: u8 [a0 + 22] = 0\n 28769: u8 [a0 + 21] = 0\n 28772: u8 [a0 + 20] = 0\n 28775: u8 [a0 + 19] = 0\n 28778: u8 [a0 + 18] = 0\n 28781: u8 [a0 + 17] = 0\n 28784: u8 [a0 + 16] = 0\n 28787: u8 [a0 + 15] = 0\n 28790: u8 [a0 + 14] = 0\n 28793: u8 [a0 + 13] = 0\n 28796: u8 [a0 + 12] = 0\n 28799: u8 [a0 + 11] = 0\n 28802: u8 [a0 + 10] = 0\n 28805: u8 [a0 + 9] = 0\n 28808: u8 [a0 + 8] = 0\n 28811: u8 [a0 + 7] = 0x65\n 28815: u8 [a0 + 6] = 0x76\n 28819: u8 [a0 + 5] = 0x69\n 28823: u8 [a0 + 4] = 0x74\n 28827: u8 [a0 + 3] = 0x61\n 28831: u8 [a0 + 2] = 0x65\n 28835: u8 [a0 + 1] = 0x72\n 28839: a2 = u64 [sp + 0x20]\n 28842: a2 = a2 + 0xfffffffffffffde0\n 28846: a3 = u64 [sp + 0x68]\n 28849: a2 = a3 <u a2\n 28852: a3 = u64 [sp + 0x60]\n 28855: a2 = 0 if a3 != 0\n 28857: a3 = u64 [sp + 0x58]\n 28860: a2 = 0 if a3 != 0\n 28862: u8 [a0 + 0] = 0x63\n 28865: jump @404 if a2 != 0\n      : @403 (gas: 1)\n 28868: jump @961\n      : @404 (gas: 4)\n 28872: a0 = u64 [sp + 0x50]\n 28875: i32 a0 = a0 + 0x220\n 28879: a1 = 0x20\n 28882: ra = 324, jump @0\n      : @405 [@dyn 162] (gas: 77)\n 28888: a1 = u64 [sp + 0x30]\n 28891: a1 = reverse a1\n 28893: a2 = u64 [sp + 0x38]\n 28896: a2 = reverse a2\n 28898: a3 = reverse s1\n 28900: a4 = u64 [sp + 0x10]\n 28903: a4 = reverse a4\n 28905: a5 = a4 >> 0x38\n 28908: u8 [a0 + 0x1f] = a5\n 28911: a5 = a4 >> 0x30\n 28914: u8 [a0 + 0x1e] = a5\n 28917: a5 = a4 >> 0x28\n 28920: u8 [a0 + 0x1d] = a5\n 28923: a5 = a4 >> 0x20\n 28926: u8 [a0 + 0x1c] = a5\n 28929: a5 = a4 >> 0x18\n 28932: u8 [a0 + 0x1b] = a5\n 28935: a5 = a4 >> 0x10\n 28938: u8 [a0 + 0x1a] = a5\n 28941: a5 = a4 >> 0x8\n 28944: u8 [a0 + 0x19] = a5\n 28947: u8 [a0 + 0x18] = a4\n 28950: u8 [a0 + 0x10] = a3\n 28953: a4 = a3 >> 0x38\n 28956: u8 [a0 + 0x17] = a4\n 28959: a4 = a3 >> 0x30\n 28962: u8 [a0 + 0x16] = a4\n 28965: a4 = a3 >> 0x28\n 28968: u8 [a0 + 0x15] = a4\n 28971: a4 = a3 >> 0x20\n 28974: u8 [a0 + 0x14] = a4\n 28977: a4 = a3 >> 0x18\n 28980: u8 [a0 + 0x13] = a4\n 28983: a4 = a3 >> 0x10\n 28986: u8 [a0 + 0x12] = a4\n 28989: a3 = a3 >> 0x8\n 28992: u8 [a0 + 0x11] = a3\n 28995: u8 [a0 + 0x8] = a2\n 28998: a3 = a2 >> 0x38\n 29001: u8 [a0 + 0xf] = a3\n 29004: a3 = a2 >> 0x30\n 29007: u8 [a0 + 0xe] = a3\n 29010: a3 = a2 >> 0x28\n 29013: u8 [a0 + 0xd] = a3\n 29016: a3 = a2 >> 0x20\n 29019: u8 [a0 + 0xc] = a3\n 29022: a3 = a2 >> 0x18\n 29025: u8 [a0 + 0xb] = a3\n 29028: a3 = a2 >> 0x10\n 29031: u8 [a0 + 0xa] = a3\n 29034: a2 = a2 >> 0x8\n 29037: u8 [a0 + 0x9] = a2\n 29040: u8 [a0] = a1\n 29042: a2 = a1 >> 0x38\n 29045: u8 [a0 + 0x7] = a2\n 29048: a2 = a1 >> 0x30\n 29051: u8 [a0 + 0x6] = a2\n 29054: a2 = a1 >> 0x28\n 29057: u8 [a0 + 0x5] = a2\n 29060: a2 = a1 >> 0x20\n 29063: u8 [a0 + 0x4] = a2\n 29066: a2 = a1 >> 0x18\n 29069: u8 [a0 + 0x3] = a2\n 29072: a2 = a1 >> 0x10\n 29075: u8 [a0 + 0x2] = a2\n 29078: a1 = a1 >> 0x8\n 29081: u8 [a0 + 0x1] = a1\n 29084: s1 = sp + 0x7e8\n 29088: u64 [s1 + 1760] = 0\n 29092: u64 [s1 + 1752] = 0\n 29096: u64 [s1 + 1736] = 0x40\n 29101: a0 = sp + 0x7ff\n 29105: a0 = a0 + 0x6d1\n 29109: a1 = sp + 0x7ff\n 29113: a1 = a1 + 0x6b1\n 29117: u64 [s1 + 1744] = 0\n 29121: ra = 326, jump @56\n      : @406 [@dyn 163] (gas: 15)\n 29127: a1 = u64 [s1 + 0x700]\n 29131: a2 = u64 [s1 + 0x6f8]\n 29135: a0 = u64 [s1 + 0x6f0]\n 29139: s1 = u64 [s1 + 0x6e8]\n 29143: u64 [sp + 0x28] = a0\n 29146: u64 [sp + 0x30] = a1\n 29149: a0 = a0 | a1\n 29152: a1 = s1 | a2\n 29155: a1 = a1 | a0\n 29158: a1 = a1 >> 0x20\n 29161: u64 [sp + 0x38] = a2\n 29164: a0 = a0 | a2\n 29167: a0 = a0 << 0x20\n 29170: a0 = a0 | a1\n 29173: jump @408 if a0 == 0\n      : @407 (gas: 1)\n 29176: jump @961\n      : @408 (gas: 4)\n 29180: i32 a0 = s1 + 0\n 29182: a1 = 0x20\n 29185: u64 [sp + 0x18] = a0\n 29188: ra = 328, jump @0\n      : @409 [@dyn 164] (gas: 44)\n 29194: u8 [a0 + 31] = 0x7\n 29198: a1 = u64 [sp + 0x30]\n 29201: a2 = u64 [sp + 0x38]\n 29204: a2 = a2 | a1\n 29207: a1 = 0x100000000\n 29217: u64 [sp + 0x20] = a1\n 29220: a1 = 0xffffffe0\n 29230: u64 [sp + 0x10] = s1\n 29233: a1 = s1 <u a1\n 29236: s1 = u64 [sp + 0x28]\n 29239: a1 = 0 if s1 != 0\n 29241: a1 = 0 if a2 != 0\n 29243: u8 [a0 + 30] = 0\n 29246: u8 [a0 + 29] = 0\n 29249: u8 [a0 + 28] = 0\n 29252: u8 [a0 + 27] = 0\n 29255: u8 [a0 + 26] = 0\n 29258: u8 [a0 + 25] = 0\n 29261: u8 [a0 + 24] = 0\n 29264: u8 [a0 + 23] = 0\n 29267: u8 [a0 + 22] = 0\n 29270: u8 [a0 + 21] = 0\n 29273: u8 [a0 + 20] = 0\n 29276: u8 [a0 + 19] = 0\n 29279: u8 [a0 + 18] = 0\n 29282: u8 [a0 + 17] = 0\n 29285: u8 [a0 + 16] = 0\n 29288: u8 [a0 + 15] = 0\n 29291: u8 [a0 + 14] = 0\n 29294: u8 [a0 + 13] = 0\n 29297: u8 [a0 + 12] = 0\n 29300: u8 [a0 + 11] = 0\n 29303: u8 [a0 + 10] = 0\n 29306: u8 [a0 + 9] = 0\n 29309: u8 [a0 + 8] = 0\n 29312: u8 [a0 + 7] = 0\n 29315: u8 [a0 + 6] = 0\n 29318: u8 [a0 + 5] = 0\n 29321: u8 [a0 + 4] = 0\n 29324: u8 [a0 + 3] = 0\n 29327: u8 [a0 + 2] = 0\n 29330: u8 [a0 + 1] = 0\n 29333: u8 [a0 + 0] = 0\n 29335: jump @411 if a1 != 0\n      : @410 (gas: 1)\n 29338: jump @961\n      : @411 (gas: 4)\n 29342: a0 = u64 [sp + 0x18]\n 29345: i32 a0 = a0 + 0x20\n 29348: a1 = 0x20\n 29351: ra = 330, jump @0\n      : @412 [@dyn 165] (gas: 41)\n 29357: u8 [a0 + 31] = 0\n 29360: u8 [a0 + 30] = 0\n 29363: u8 [a0 + 29] = 0\n 29366: u8 [a0 + 28] = 0\n 29369: u8 [a0 + 27] = 0\n 29372: u8 [a0 + 26] = 0\n 29375: u8 [a0 + 25] = 0\n 29378: u8 [a0 + 24] = 0\n 29381: u8 [a0 + 23] = 0\n 29384: u8 [a0 + 22] = 0\n 29387: u8 [a0 + 21] = 0\n 29390: u8 [a0 + 20] = 0\n 29393: u8 [a0 + 19] = 0\n 29396: u8 [a0 + 18] = 0\n 29399: u8 [a0 + 17] = 0\n 29402: u8 [a0 + 16] = 0\n 29405: u8 [a0 + 15] = 0\n 29408: u8 [a0 + 14] = 0\n 29411: u8 [a0 + 13] = 0\n 29414: u8 [a0 + 12] = 0\n 29417: u8 [a0 + 11] = 0\n 29420: u8 [a0 + 10] = 0\n 29423: u8 [a0 + 9] = 0\n 29426: u8 [a0 + 8] = 0\n 29429: u8 [a0 + 7] = 0\n 29432: u8 [a0 + 6] = 0x73\n 29436: u8 [a0 + 5] = 0x75\n 29440: u8 [a0 + 4] = 0x6f\n 29444: u8 [a0 + 3] = 0x69\n 29448: u8 [a0 + 2] = 0x72\n 29452: u8 [a0 + 1] = 0x75\n 29456: a2 = u64 [sp + 0x20]\n 29459: a2 = a2 + 0xfffffffffffffdc0\n 29463: a3 = u64 [sp + 0x68]\n 29466: a2 = a3 <u a2\n 29469: a3 = u64 [sp + 0x60]\n 29472: a2 = 0 if a3 != 0\n 29474: a3 = u64 [sp + 0x58]\n 29477: a2 = 0 if a3 != 0\n 29479: u8 [a0 + 0] = 0x63\n 29482: jump @414 if a2 != 0\n      : @413 (gas: 1)\n 29485: jump @961\n      : @414 (gas: 4)\n 29489: a0 = u64 [sp + 0x50]\n 29492: i32 a0 = a0 + 0x240\n 29496: a1 = 0x20\n 29499: ra = 332, jump @0\n      : @415 [@dyn 166] (gas: 77)\n 29505: a1 = u64 [sp + 0x30]\n 29508: a1 = reverse a1\n 29510: a2 = u64 [sp + 0x38]\n 29513: a2 = reverse a2\n 29515: a3 = reverse s1\n 29517: a4 = u64 [sp + 0x10]\n 29520: a4 = reverse a4\n 29522: a5 = a4 >> 0x38\n 29525: u8 [a0 + 0x1f] = a5\n 29528: a5 = a4 >> 0x30\n 29531: u8 [a0 + 0x1e] = a5\n 29534: a5 = a4 >> 0x28\n 29537: u8 [a0 + 0x1d] = a5\n 29540: a5 = a4 >> 0x20\n 29543: u8 [a0 + 0x1c] = a5\n 29546: a5 = a4 >> 0x18\n 29549: u8 [a0 + 0x1b] = a5\n 29552: a5 = a4 >> 0x10\n 29555: u8 [a0 + 0x1a] = a5\n 29558: a5 = a4 >> 0x8\n 29561: u8 [a0 + 0x19] = a5\n 29564: u8 [a0 + 0x18] = a4\n 29567: u8 [a0 + 0x10] = a3\n 29570: a4 = a3 >> 0x38\n 29573: u8 [a0 + 0x17] = a4\n 29576: a4 = a3 >> 0x30\n 29579: u8 [a0 + 0x16] = a4\n 29582: a4 = a3 >> 0x28\n 29585: u8 [a0 + 0x15] = a4\n 29588: a4 = a3 >> 0x20\n 29591: u8 [a0 + 0x14] = a4\n 29594: a4 = a3 >> 0x18\n 29597: u8 [a0 + 0x13] = a4\n 29600: a4 = a3 >> 0x10\n 29603: u8 [a0 + 0x12] = a4\n 29606: a3 = a3 >> 0x8\n 29609: u8 [a0 + 0x11] = a3\n 29612: u8 [a0 + 0x8] = a2\n 29615: a3 = a2 >> 0x38\n 29618: u8 [a0 + 0xf] = a3\n 29621: a3 = a2 >> 0x30\n 29624: u8 [a0 + 0xe] = a3\n 29627: a3 = a2 >> 0x28\n 29630: u8 [a0 + 0xd] = a3\n 29633: a3 = a2 >> 0x20\n 29636: u8 [a0 + 0xc] = a3\n 29639: a3 = a2 >> 0x18\n 29642: u8 [a0 + 0xb] = a3\n 29645: a3 = a2 >> 0x10\n 29648: u8 [a0 + 0xa] = a3\n 29651: a2 = a2 >> 0x8\n 29654: u8 [a0 + 0x9] = a2\n 29657: u8 [a0] = a1\n 29659: a2 = a1 >> 0x38\n 29662: u8 [a0 + 0x7] = a2\n 29665: a2 = a1 >> 0x30\n 29668: u8 [a0 + 0x6] = a2\n 29671: a2 = a1 >> 0x28\n 29674: u8 [a0 + 0x5] = a2\n 29677: a2 = a1 >> 0x20\n 29680: u8 [a0 + 0x4] = a2\n 29683: a2 = a1 >> 0x18\n 29686: u8 [a0 + 0x3] = a2\n 29689: a2 = a1 >> 0x10\n 29692: u8 [a0 + 0x2] = a2\n 29695: a1 = a1 >> 0x8\n 29698: u8 [a0 + 0x1] = a1\n 29701: s1 = sp + 0x7e8\n 29705: u64 [s1 + 1696] = 0\n 29709: u64 [s1 + 1688] = 0\n 29713: u64 [s1 + 1672] = 0x40\n 29718: a0 = sp + 0x7ff\n 29722: a0 = a0 + 0x691\n 29726: a1 = sp + 0x7ff\n 29730: a1 = a1 + 0x671\n 29734: u64 [s1 + 1680] = 0\n 29738: ra = 334, jump @56\n      : @416 [@dyn 167] (gas: 15)\n 29744: a1 = u64 [s1 + 0x6c0]\n 29748: a2 = u64 [s1 + 0x6b8]\n 29752: a0 = u64 [s1 + 0x6b0]\n 29756: s1 = u64 [s1 + 0x6a8]\n 29760: u64 [sp + 0x28] = a0\n 29763: u64 [sp + 0x30] = a1\n 29766: a0 = a0 | a1\n 29769: a1 = s1 | a2\n 29772: a1 = a1 | a0\n 29775: a1 = a1 >> 0x20\n 29778: u64 [sp + 0x38] = a2\n 29781: a0 = a0 | a2\n 29784: a0 = a0 << 0x20\n 29787: a0 = a0 | a1\n 29790: jump @418 if a0 == 0\n      : @417 (gas: 1)\n 29793: jump @961\n      : @418 (gas: 4)\n 29797: i32 a0 = s1 + 0\n 29799: a1 = 0x20\n 29802: u64 [sp + 0x18] = a0\n 29805: ra = 336, jump @0\n      : @419 [@dyn 168] (gas: 44)\n 29811: u8 [a0 + 31] = 0x6\n 29815: a1 = u64 [sp + 0x30]\n 29818: a2 = u64 [sp + 0x38]\n 29821: a2 = a2 | a1\n 29824: a1 = 0x100000000\n 29834: u64 [sp + 0x20] = a1\n 29837: a1 = 0xffffffe0\n 29847: u64 [sp + 0x10] = s1\n 29850: a1 = s1 <u a1\n 29853: s1 = u64 [sp + 0x28]\n 29856: a1 = 0 if s1 != 0\n 29858: a1 = 0 if a2 != 0\n 29860: u8 [a0 + 30] = 0\n 29863: u8 [a0 + 29] = 0\n 29866: u8 [a0 + 28] = 0\n 29869: u8 [a0 + 27] = 0\n 29872: u8 [a0 + 26] = 0\n 29875: u8 [a0 + 25] = 0\n 29878: u8 [a0 + 24] = 0\n 29881: u8 [a0 + 23] = 0\n 29884: u8 [a0 + 22] = 0\n 29887: u8 [a0 + 21] = 0\n 29890: u8 [a0 + 20] = 0\n 29893: u8 [a0 + 19] = 0\n 29896: u8 [a0 + 18] = 0\n 29899: u8 [a0 + 17] = 0\n 29902: u8 [a0 + 16] = 0\n 29905: u8 [a0 + 15] = 0\n 29908: u8 [a0 + 14] = 0\n 29911: u8 [a0 + 13] = 0\n 29914: u8 [a0 + 12] = 0\n 29917: u8 [a0 + 11] = 0\n 29920: u8 [a0 + 10] = 0\n 29923: u8 [a0 + 9] = 0\n 29926: u8 [a0 + 8] = 0\n 29929: u8 [a0 + 7] = 0\n 29932: u8 [a0 + 6] = 0\n 29935: u8 [a0 + 5] = 0\n 29938: u8 [a0 + 4] = 0\n 29941: u8 [a0 + 3] = 0\n 29944: u8 [a0 + 2] = 0\n 29947: u8 [a0 + 1] = 0\n 29950: u8 [a0 + 0] = 0\n 29952: jump @421 if a1 != 0\n      : @420 (gas: 1)\n 29955: jump @961\n      : @421 (gas: 4)\n 29959: a0 = u64 [sp + 0x18]\n 29962: i32 a0 = a0 + 0x20\n 29965: a1 = 0x20\n 29968: ra = 338, jump @0\n      : @422 [@dyn 169] (gas: 41)\n 29974: u8 [a0 + 31] = 0\n 29977: u8 [a0 + 30] = 0\n 29980: u8 [a0 + 29] = 0\n 29983: u8 [a0 + 28] = 0\n 29986: u8 [a0 + 27] = 0\n 29989: u8 [a0 + 26] = 0\n 29992: u8 [a0 + 25] = 0\n 29995: u8 [a0 + 24] = 0\n 29998: u8 [a0 + 23] = 0\n 30001: u8 [a0 + 22] = 0\n 30004: u8 [a0 + 21] = 0\n 30007: u8 [a0 + 20] = 0\n 30010: u8 [a0 + 19] = 0\n 30013: u8 [a0 + 18] = 0\n 30016: u8 [a0 + 17] = 0\n 30019: u8 [a0 + 16] = 0\n 30022: u8 [a0 + 15] = 0\n 30025: u8 [a0 + 14] = 0\n 30028: u8 [a0 + 13] = 0\n 30031: u8 [a0 + 12] = 0\n 30034: u8 [a0 + 11] = 0\n 30037: u8 [a0 + 10] = 0\n 30040: u8 [a0 + 9] = 0\n 30043: u8 [a0 + 8] = 0\n 30046: u8 [a0 + 7] = 0\n 30049: u8 [a0 + 6] = 0\n 30052: u8 [a0 + 5] = 0x67\n 30056: u8 [a0 + 4] = 0x6e\n 30060: u8 [a0 + 3] = 0x69\n 30064: u8 [a0 + 2] = 0x72\n 30068: u8 [a0 + 1] = 0x61\n 30072: a2 = u64 [sp + 0x20]\n 30075: a2 = a2 + 0xfffffffffffffda0\n 30079: a3 = u64 [sp + 0x68]\n 30082: a2 = a3 <u a2\n 30085: a3 = u64 [sp + 0x60]\n 30088: a2 = 0 if a3 != 0\n 30090: a3 = u64 [sp + 0x58]\n 30093: a2 = 0 if a3 != 0\n 30095: u8 [a0 + 0] = 0x64\n 30098: jump @424 if a2 != 0\n      : @423 (gas: 1)\n 30101: jump @961\n      : @424 (gas: 4)\n 30105: a0 = u64 [sp + 0x50]\n 30108: i32 a0 = a0 + 0x260\n 30112: a1 = 0x20\n 30115: ra = 340, jump @0\n      : @425 [@dyn 170] (gas: 77)\n 30121: a1 = u64 [sp + 0x30]\n 30124: a1 = reverse a1\n 30126: a2 = u64 [sp + 0x38]\n 30129: a2 = reverse a2\n 30131: a3 = reverse s1\n 30133: a4 = u64 [sp + 0x10]\n 30136: a4 = reverse a4\n 30138: a5 = a4 >> 0x38\n 30141: u8 [a0 + 0x1f] = a5\n 30144: a5 = a4 >> 0x30\n 30147: u8 [a0 + 0x1e] = a5\n 30150: a5 = a4 >> 0x28\n 30153: u8 [a0 + 0x1d] = a5\n 30156: a5 = a4 >> 0x20\n 30159: u8 [a0 + 0x1c] = a5\n 30162: a5 = a4 >> 0x18\n 30165: u8 [a0 + 0x1b] = a5\n 30168: a5 = a4 >> 0x10\n 30171: u8 [a0 + 0x1a] = a5\n 30174: a5 = a4 >> 0x8\n 30177: u8 [a0 + 0x19] = a5\n 30180: u8 [a0 + 0x18] = a4\n 30183: u8 [a0 + 0x10] = a3\n 30186: a4 = a3 >> 0x38\n 30189: u8 [a0 + 0x17] = a4\n 30192: a4 = a3 >> 0x30\n 30195: u8 [a0 + 0x16] = a4\n 30198: a4 = a3 >> 0x28\n 30201: u8 [a0 + 0x15] = a4\n 30204: a4 = a3 >> 0x20\n 30207: u8 [a0 + 0x14] = a4\n 30210: a4 = a3 >> 0x18\n 30213: u8 [a0 + 0x13] = a4\n 30216: a4 = a3 >> 0x10\n 30219: u8 [a0 + 0x12] = a4\n 30222: a3 = a3 >> 0x8\n 30225: u8 [a0 + 0x11] = a3\n 30228: u8 [a0 + 0x8] = a2\n 30231: a3 = a2 >> 0x38\n 30234: u8 [a0 + 0xf] = a3\n 30237: a3 = a2 >> 0x30\n 30240: u8 [a0 + 0xe] = a3\n 30243: a3 = a2 >> 0x28\n 30246: u8 [a0 + 0xd] = a3\n 30249: a3 = a2 >> 0x20\n 30252: u8 [a0 + 0xc] = a3\n 30255: a3 = a2 >> 0x18\n 30258: u8 [a0 + 0xb] = a3\n 30261: a3 = a2 >> 0x10\n 30264: u8 [a0 + 0xa] = a3\n 30267: a2 = a2 >> 0x8\n 30270: u8 [a0 + 0x9] = a2\n 30273: u8 [a0] = a1\n 30275: a2 = a1 >> 0x38\n 30278: u8 [a0 + 0x7] = a2\n 30281: a2 = a1 >> 0x30\n 30284: u8 [a0 + 0x6] = a2\n 30287: a2 = a1 >> 0x28\n 30290: u8 [a0 + 0x5] = a2\n 30293: a2 = a1 >> 0x20\n 30296: u8 [a0 + 0x4] = a2\n 30299: a2 = a1 >> 0x18\n 30302: u8 [a0 + 0x3] = a2\n 30305: a2 = a1 >> 0x10\n 30308: u8 [a0 + 0x2] = a2\n 30311: a1 = a1 >> 0x8\n 30314: u8 [a0 + 0x1] = a1\n 30317: s1 = sp + 0x7e8\n 30321: u64 [s1 + 1632] = 0\n 30325: u64 [s1 + 1624] = 0\n 30329: u64 [s1 + 1608] = 0x40\n 30334: a0 = sp + 0x7ff\n 30338: a0 = a0 + 0x651\n 30342: a1 = sp + 0x7ff\n 30346: a1 = a1 + 0x631\n 30350: u64 [s1 + 1616] = 0\n 30354: ra = 342, jump @56\n      : @426 [@dyn 171] (gas: 15)\n 30360: a1 = u64 [s1 + 0x680]\n 30364: a2 = u64 [s1 + 0x678]\n 30368: a0 = u64 [s1 + 0x670]\n 30372: s1 = u64 [s1 + 0x668]\n 30376: u64 [sp + 0x28] = a0\n 30379: u64 [sp + 0x30] = a1\n 30382: a0 = a0 | a1\n 30385: a1 = s1 | a2\n 30388: a1 = a1 | a0\n 30391: a1 = a1 >> 0x20\n 30394: u64 [sp + 0x38] = a2\n 30397: a0 = a0 | a2\n 30400: a0 = a0 << 0x20\n 30403: a0 = a0 | a1\n 30406: jump @428 if a0 == 0\n      : @427 (gas: 1)\n 30409: jump @961\n      : @428 (gas: 4)\n 30413: i32 a0 = s1 + 0\n 30415: a1 = 0x20\n 30418: u64 [sp + 0x18] = a0\n 30421: ra = 344, jump @0\n      : @429 [@dyn 172] (gas: 44)\n 30427: u8 [a0 + 31] = 0x8\n 30431: a1 = u64 [sp + 0x30]\n 30434: a2 = u64 [sp + 0x38]\n 30437: a2 = a2 | a1\n 30440: a1 = 0x100000000\n 30450: u64 [sp + 0x20] = a1\n 30453: a1 = 0xffffffe0\n 30463: u64 [sp + 0x10] = s1\n 30466: a1 = s1 <u a1\n 30469: s1 = u64 [sp + 0x28]\n 30472: a1 = 0 if s1 != 0\n 30474: a1 = 0 if a2 != 0\n 30476: u8 [a0 + 30] = 0\n 30479: u8 [a0 + 29] = 0\n 30482: u8 [a0 + 28] = 0\n 30485: u8 [a0 + 27] = 0\n 30488: u8 [a0 + 26] = 0\n 30491: u8 [a0 + 25] = 0\n 30494: u8 [a0 + 24] = 0\n 30497: u8 [a0 + 23] = 0\n 30500: u8 [a0 + 22] = 0\n 30503: u8 [a0 + 21] = 0\n 30506: u8 [a0 + 20] = 0\n 30509: u8 [a0 + 19] = 0\n 30512: u8 [a0 + 18] = 0\n 30515: u8 [a0 + 17] = 0\n 30518: u8 [a0 + 16] = 0\n 30521: u8 [a0 + 15] = 0\n 30524: u8 [a0 + 14] = 0\n 30527: u8 [a0 + 13] = 0\n 30530: u8 [a0 + 12] = 0\n 30533: u8 [a0 + 11] = 0\n 30536: u8 [a0 + 10] = 0\n 30539: u8 [a0 + 9] = 0\n 30542: u8 [a0 + 8] = 0\n 30545: u8 [a0 + 7] = 0\n 30548: u8 [a0 + 6] = 0\n 30551: u8 [a0 + 5] = 0\n 30554: u8 [a0 + 4] = 0\n 30557: u8 [a0 + 3] = 0\n 30560: u8 [a0 + 2] = 0\n 30563: u8 [a0 + 1] = 0\n 30566: u8 [a0 + 0] = 0\n 30568: jump @431 if a1 != 0\n      : @430 (gas: 1)\n 30571: jump @961\n      : @431 (gas: 4)\n 30575: a0 = u64 [sp + 0x18]\n 30578: i32 a0 = a0 + 0x20\n 30581: a1 = 0x20\n 30584: ra = 346, jump @0\n      : @432 [@dyn 173] (gas: 41)\n 30590: u8 [a0 + 31] = 0\n 30593: u8 [a0 + 30] = 0\n 30596: u8 [a0 + 29] = 0\n 30599: u8 [a0 + 28] = 0\n 30602: u8 [a0 + 27] = 0\n 30605: u8 [a0 + 26] = 0\n 30608: u8 [a0 + 25] = 0\n 30611: u8 [a0 + 24] = 0\n 30614: u8 [a0 + 23] = 0\n 30617: u8 [a0 + 22] = 0\n 30620: u8 [a0 + 21] = 0\n 30623: u8 [a0 + 20] = 0\n 30626: u8 [a0 + 19] = 0\n 30629: u8 [a0 + 18] = 0\n 30632: u8 [a0 + 17] = 0\n 30635: u8 [a0 + 16] = 0\n 30638: u8 [a0 + 15] = 0\n 30641: u8 [a0 + 14] = 0\n 30644: u8 [a0 + 13] = 0\n 30647: u8 [a0 + 12] = 0\n 30650: u8 [a0 + 11] = 0\n 30653: u8 [a0 + 10] = 0\n 30656: u8 [a0 + 9] = 0\n 30659: u8 [a0 + 8] = 0\n 30662: u8 [a0 + 7] = 0x67\n 30666: u8 [a0 + 6] = 0x6e\n 30670: u8 [a0 + 5] = 0x69\n 30674: u8 [a0 + 4] = 0x6c\n 30678: u8 [a0 + 3] = 0x7a\n 30682: u8 [a0 + 2] = 0x7a\n 30686: u8 [a0 + 1] = 0x61\n 30690: a2 = u64 [sp + 0x20]\n 30693: a2 = a2 + 0xfffffffffffffd80\n 30697: a3 = u64 [sp + 0x68]\n 30700: a2 = a3 <u a2\n 30703: a3 = u64 [sp + 0x60]\n 30706: a2 = 0 if a3 != 0\n 30708: a3 = u64 [sp + 0x58]\n 30711: a2 = 0 if a3 != 0\n 30713: u8 [a0 + 0] = 0x64\n 30716: jump @434 if a2 != 0\n      : @433 (gas: 1)\n 30719: jump @961\n      : @434 (gas: 4)\n 30723: a0 = u64 [sp + 0x50]\n 30726: i32 a0 = a0 + 0x280\n 30730: a1 = 0x20\n 30733: ra = 348, jump @0\n      : @435 [@dyn 174] (gas: 77)\n 30739: a1 = u64 [sp + 0x30]\n 30742: a1 = reverse a1\n 30744: a2 = u64 [sp + 0x38]\n 30747: a2 = reverse a2\n 30749: a3 = reverse s1\n 30751: a4 = u64 [sp + 0x10]\n 30754: a4 = reverse a4\n 30756: a5 = a4 >> 0x38\n 30759: u8 [a0 + 0x1f] = a5\n 30762: a5 = a4 >> 0x30\n 30765: u8 [a0 + 0x1e] = a5\n 30768: a5 = a4 >> 0x28\n 30771: u8 [a0 + 0x1d] = a5\n 30774: a5 = a4 >> 0x20\n 30777: u8 [a0 + 0x1c] = a5\n 30780: a5 = a4 >> 0x18\n 30783: u8 [a0 + 0x1b] = a5\n 30786: a5 = a4 >> 0x10\n 30789: u8 [a0 + 0x1a] = a5\n 30792: a5 = a4 >> 0x8\n 30795: u8 [a0 + 0x19] = a5\n 30798: u8 [a0 + 0x18] = a4\n 30801: u8 [a0 + 0x10] = a3\n 30804: a4 = a3 >> 0x38\n 30807: u8 [a0 + 0x17] = a4\n 30810: a4 = a3 >> 0x30\n 30813: u8 [a0 + 0x16] = a4\n 30816: a4 = a3 >> 0x28\n 30819: u8 [a0 + 0x15] = a4\n 30822: a4 = a3 >> 0x20\n 30825: u8 [a0 + 0x14] = a4\n 30828: a4 = a3 >> 0x18\n 30831: u8 [a0 + 0x13] = a4\n 30834: a4 = a3 >> 0x10\n 30837: u8 [a0 + 0x12] = a4\n 30840: a3 = a3 >> 0x8\n 30843: u8 [a0 + 0x11] = a3\n 30846: u8 [a0 + 0x8] = a2\n 30849: a3 = a2 >> 0x38\n 30852: u8 [a0 + 0xf] = a3\n 30855: a3 = a2 >> 0x30\n 30858: u8 [a0 + 0xe] = a3\n 30861: a3 = a2 >> 0x28\n 30864: u8 [a0 + 0xd] = a3\n 30867: a3 = a2 >> 0x20\n 30870: u8 [a0 + 0xc] = a3\n 30873: a3 = a2 >> 0x18\n 30876: u8 [a0 + 0xb] = a3\n 30879: a3 = a2 >> 0x10\n 30882: u8 [a0 + 0xa] = a3\n 30885: a2 = a2 >> 0x8\n 30888: u8 [a0 + 0x9] = a2\n 30891: u8 [a0] = a1\n 30893: a2 = a1 >> 0x38\n 30896: u8 [a0 + 0x7] = a2\n 30899: a2 = a1 >> 0x30\n 30902: u8 [a0 + 0x6] = a2\n 30905: a2 = a1 >> 0x28\n 30908: u8 [a0 + 0x5] = a2\n 30911: a2 = a1 >> 0x20\n 30914: u8 [a0 + 0x4] = a2\n 30917: a2 = a1 >> 0x18\n 30920: u8 [a0 + 0x3] = a2\n 30923: a2 = a1 >> 0x10\n 30926: u8 [a0 + 0x2] = a2\n 30929: a1 = a1 >> 0x8\n 30932: u8 [a0 + 0x1] = a1\n 30935: s1 = sp + 0x7e8\n 30939: u64 [s1 + 1568] = 0\n 30943: u64 [s1 + 1560] = 0\n 30947: u64 [s1 + 1544] = 0x40\n 30952: a0 = sp + 0x7ff\n 30956: a0 = a0 + 0x611\n 30960: a1 = sp + 0x7ff\n 30964: a1 = a1 + 0x5f1\n 30968: u64 [s1 + 1552] = 0\n 30972: ra = 350, jump @56\n      : @436 [@dyn 175] (gas: 15)\n 30978: a1 = u64 [s1 + 0x640]\n 30982: a2 = u64 [s1 + 0x638]\n 30986: a0 = u64 [s1 + 0x630]\n 30990: s1 = u64 [s1 + 0x628]\n 30994: u64 [sp + 0x28] = a0\n 30997: u64 [sp + 0x30] = a1\n 31000: a0 = a0 | a1\n 31003: a1 = s1 | a2\n 31006: a1 = a1 | a0\n 31009: a1 = a1 >> 0x20\n 31012: u64 [sp + 0x38] = a2\n 31015: a0 = a0 | a2\n 31018: a0 = a0 << 0x20\n 31021: a0 = a0 | a1\n 31024: jump @438 if a0 == 0\n      : @437 (gas: 1)\n 31027: jump @961\n      : @438 (gas: 4)\n 31031: i32 a0 = s1 + 0\n 31033: a1 = 0x20\n 31036: u64 [sp + 0x18] = a0\n 31039: ra = 352, jump @0\n      : @439 [@dyn 176] (gas: 44)\n 31045: u8 [a0 + 31] = 0xa\n 31049: a1 = u64 [sp + 0x30]\n 31052: a2 = u64 [sp + 0x38]\n 31055: a2 = a2 | a1\n 31058: a1 = 0x100000000\n 31068: u64 [sp + 0x20] = a1\n 31071: a1 = 0xffffffe0\n 31081: u64 [sp + 0x10] = s1\n 31084: a1 = s1 <u a1\n 31087: s1 = u64 [sp + 0x28]\n 31090: a1 = 0 if s1 != 0\n 31092: a1 = 0 if a2 != 0\n 31094: u8 [a0 + 30] = 0\n 31097: u8 [a0 + 29] = 0\n 31100: u8 [a0 + 28] = 0\n 31103: u8 [a0 + 27] = 0\n 31106: u8 [a0 + 26] = 0\n 31109: u8 [a0 + 25] = 0\n 31112: u8 [a0 + 24] = 0\n 31115: u8 [a0 + 23] = 0\n 31118: u8 [a0 + 22] = 0\n 31121: u8 [a0 + 21] = 0\n 31124: u8 [a0 + 20] = 0\n 31127: u8 [a0 + 19] = 0\n 31130: u8 [a0 + 18] = 0\n 31133: u8 [a0 + 17] = 0\n 31136: u8 [a0 + 16] = 0\n 31139: u8 [a0 + 15] = 0\n 31142: u8 [a0 + 14] = 0\n 31145: u8 [a0 + 13] = 0\n 31148: u8 [a0 + 12] = 0\n 31151: u8 [a0 + 11] = 0\n 31154: u8 [a0 + 10] = 0\n 31157: u8 [a0 + 9] = 0\n 31160: u8 [a0 + 8] = 0\n 31163: u8 [a0 + 7] = 0\n 31166: u8 [a0 + 6] = 0\n 31169: u8 [a0 + 5] = 0\n 31172: u8 [a0 + 4] = 0\n 31175: u8 [a0 + 3] = 0\n 31178: u8 [a0 + 2] = 0\n 31181: u8 [a0 + 1] = 0\n 31184: u8 [a0 + 0] = 0\n 31186: jump @441 if a1 != 0\n      : @440 (gas: 1)\n 31189: jump @961\n      : @441 (gas: 4)\n 31193: a0 = u64 [sp + 0x18]\n 31196: i32 a0 = a0 + 0x20\n 31199: a1 = 0x20\n 31202: ra = 354, jump @0\n      : @442 [@dyn 177] (gas: 41)\n 31208: u8 [a0 + 31] = 0\n 31211: u8 [a0 + 30] = 0\n 31214: u8 [a0 + 29] = 0\n 31217: u8 [a0 + 28] = 0\n 31220: u8 [a0 + 27] = 0\n 31223: u8 [a0 + 26] = 0\n 31226: u8 [a0 + 25] = 0\n 31229: u8 [a0 + 24] = 0\n 31232: u8 [a0 + 23] = 0\n 31235: u8 [a0 + 22] = 0\n 31238: u8 [a0 + 21] = 0\n 31241: u8 [a0 + 20] = 0\n 31244: u8 [a0 + 19] = 0\n 31247: u8 [a0 + 18] = 0\n 31250: u8 [a0 + 17] = 0\n 31253: u8 [a0 + 16] = 0\n 31256: u8 [a0 + 15] = 0\n 31259: u8 [a0 + 14] = 0\n 31262: u8 [a0 + 13] = 0\n 31265: u8 [a0 + 12] = 0\n 31268: u8 [a0 + 11] = 0\n 31271: u8 [a0 + 10] = 0\n 31274: u8 [a0 + 9] = 0x6c\n 31278: u8 [a0 + 8] = 0x75\n 31282: u8 [a0 + 7] = 0x66\n 31286: u8 [a0 + 6] = 0x74\n 31290: u8 [a0 + 5] = 0x68\n 31294: u8 [a0 + 4] = 0x67\n 31298: u8 [a0 + 3] = 0x69\n 31302: u8 [a0 + 2] = 0x6c\n 31306: u8 [a0 + 1] = 0x65\n 31310: a2 = u64 [sp + 0x20]\n 31313: a2 = a2 + 0xfffffffffffffd60\n 31317: a3 = u64 [sp + 0x68]\n 31320: a2 = a3 <u a2\n 31323: a3 = u64 [sp + 0x60]\n 31326: a2 = 0 if a3 != 0\n 31328: a3 = u64 [sp + 0x58]\n 31331: a2 = 0 if a3 != 0\n 31333: u8 [a0 + 0] = 0x64\n 31336: jump @444 if a2 != 0\n      : @443 (gas: 1)\n 31339: jump @961\n      : @444 (gas: 4)\n 31342: a0 = u64 [sp + 0x50]\n 31345: i32 a0 = a0 + 0x2a0\n 31349: a1 = 0x20\n 31352: ra = 356, jump @0\n      : @445 [@dyn 178] (gas: 77)\n 31358: a1 = u64 [sp + 0x30]\n 31361: a1 = reverse a1\n 31363: a2 = u64 [sp + 0x38]\n 31366: a2 = reverse a2\n 31368: a3 = reverse s1\n 31370: a4 = u64 [sp + 0x10]\n 31373: a4 = reverse a4\n 31375: a5 = a4 >> 0x38\n 31378: u8 [a0 + 0x1f] = a5\n 31381: a5 = a4 >> 0x30\n 31384: u8 [a0 + 0x1e] = a5\n 31387: a5 = a4 >> 0x28\n 31390: u8 [a0 + 0x1d] = a5\n 31393: a5 = a4 >> 0x20\n 31396: u8 [a0 + 0x1c] = a5\n 31399: a5 = a4 >> 0x18\n 31402: u8 [a0 + 0x1b] = a5\n 31405: a5 = a4 >> 0x10\n 31408: u8 [a0 + 0x1a] = a5\n 31411: a5 = a4 >> 0x8\n 31414: u8 [a0 + 0x19] = a5\n 31417: u8 [a0 + 0x18] = a4\n 31420: u8 [a0 + 0x10] = a3\n 31423: a4 = a3 >> 0x38\n 31426: u8 [a0 + 0x17] = a4\n 31429: a4 = a3 >> 0x30\n 31432: u8 [a0 + 0x16] = a4\n 31435: a4 = a3 >> 0x28\n 31438: u8 [a0 + 0x15] = a4\n 31441: a4 = a3 >> 0x20\n 31444: u8 [a0 + 0x14] = a4\n 31447: a4 = a3 >> 0x18\n 31450: u8 [a0 + 0x13] = a4\n 31453: a4 = a3 >> 0x10\n 31456: u8 [a0 + 0x12] = a4\n 31459: a3 = a3 >> 0x8\n 31462: u8 [a0 + 0x11] = a3\n 31465: u8 [a0 + 0x8] = a2\n 31468: a3 = a2 >> 0x38\n 31471: u8 [a0 + 0xf] = a3\n 31474: a3 = a2 >> 0x30\n 31477: u8 [a0 + 0xe] = a3\n 31480: a3 = a2 >> 0x28\n 31483: u8 [a0 + 0xd] = a3\n 31486: a3 = a2 >> 0x20\n 31489: u8 [a0 + 0xc] = a3\n 31492: a3 = a2 >> 0x18\n 31495: u8 [a0 + 0xb] = a3\n 31498: a3 = a2 >> 0x10\n 31501: u8 [a0 + 0xa] = a3\n 31504: a2 = a2 >> 0x8\n 31507: u8 [a0 + 0x9] = a2\n 31510: u8 [a0] = a1\n 31512: a2 = a1 >> 0x38\n 31515: u8 [a0 + 0x7] = a2\n 31518: a2 = a1 >> 0x30\n 31521: u8 [a0 + 0x6] = a2\n 31524: a2 = a1 >> 0x28\n 31527: u8 [a0 + 0x5] = a2\n 31530: a2 = a1 >> 0x20\n 31533: u8 [a0 + 0x4] = a2\n 31536: a2 = a1 >> 0x18\n 31539: u8 [a0 + 0x3] = a2\n 31542: a2 = a1 >> 0x10\n 31545: u8 [a0 + 0x2] = a2\n 31548: a1 = a1 >> 0x8\n 31551: u8 [a0 + 0x1] = a1\n 31554: s1 = sp + 0x7e8\n 31558: u64 [s1 + 1504] = 0\n 31562: u64 [s1 + 1496] = 0\n 31566: u64 [s1 + 1480] = 0x40\n 31571: a0 = sp + 0x7ff\n 31575: a0 = a0 + 0x5d1\n 31579: a1 = sp + 0x7ff\n 31583: a1 = a1 + 0x5b1\n 31587: u64 [s1 + 1488] = 0\n 31591: ra = 358, jump @56\n      : @446 [@dyn 179] (gas: 15)\n 31597: a1 = u64 [s1 + 0x600]\n 31601: a2 = u64 [s1 + 0x5f8]\n 31605: a0 = u64 [s1 + 0x5f0]\n 31609: s1 = u64 [s1 + 0x5e8]\n 31613: u64 [sp + 0x28] = a0\n 31616: u64 [sp + 0x30] = a1\n 31619: a0 = a0 | a1\n 31622: a1 = s1 | a2\n 31625: a1 = a1 | a0\n 31628: a1 = a1 >> 0x20\n 31631: u64 [sp + 0x38] = a2\n 31634: a0 = a0 | a2\n 31637: a0 = a0 << 0x20\n 31640: a0 = a0 | a1\n 31643: jump @448 if a0 == 0\n      : @447 (gas: 1)\n 31646: jump @961\n      : @448 (gas: 4)\n 31649: i32 a0 = s1 + 0\n 31651: a1 = 0x20\n 31654: u64 [sp + 0x18] = a0\n 31657: ra = 360, jump @0\n      : @449 [@dyn 180] (gas: 44)\n 31663: u8 [a0 + 31] = 0xa\n 31667: a1 = u64 [sp + 0x30]\n 31670: a2 = u64 [sp + 0x38]\n 31673: a2 = a2 | a1\n 31676: a1 = 0x100000000\n 31686: u64 [sp + 0x20] = a1\n 31689: a1 = 0xffffffe0\n 31699: u64 [sp + 0x10] = s1\n 31702: a1 = s1 <u a1\n 31705: s1 = u64 [sp + 0x28]\n 31708: a1 = 0 if s1 != 0\n 31710: a1 = 0 if a2 != 0\n 31712: u8 [a0 + 30] = 0\n 31715: u8 [a0 + 29] = 0\n 31718: u8 [a0 + 28] = 0\n 31721: u8 [a0 + 27] = 0\n 31724: u8 [a0 + 26] = 0\n 31727: u8 [a0 + 25] = 0\n 31730: u8 [a0 + 24] = 0\n 31733: u8 [a0 + 23] = 0\n 31736: u8 [a0 + 22] = 0\n 31739: u8 [a0 + 21] = 0\n 31742: u8 [a0 + 20] = 0\n 31745: u8 [a0 + 19] = 0\n 31748: u8 [a0 + 18] = 0\n 31751: u8 [a0 + 17] = 0\n 31754: u8 [a0 + 16] = 0\n 31757: u8 [a0 + 15] = 0\n 31760: u8 [a0 + 14] = 0\n 31763: u8 [a0 + 13] = 0\n 31766: u8 [a0 + 12] = 0\n 31769: u8 [a0 + 11] = 0\n 31772: u8 [a0 + 10] = 0\n 31775: u8 [a0 + 9] = 0\n 31778: u8 [a0 + 8] = 0\n 31781: u8 [a0 + 7] = 0\n 31784: u8 [a0 + 6] = 0\n 31787: u8 [a0 + 5] = 0\n 31790: u8 [a0 + 4] = 0\n 31793: u8 [a0 + 3] = 0\n 31796: u8 [a0 + 2] = 0\n 31799: u8 [a0 + 1] = 0\n 31802: u8 [a0 + 0] = 0\n 31804: jump @451 if a1 != 0\n      : @450 (gas: 1)\n 31807: jump @961\n      : @451 (gas: 4)\n 31810: a0 = u64 [sp + 0x18]\n 31813: i32 a0 = a0 + 0x20\n 31816: a1 = 0x20\n 31819: ra = 362, jump @0\n      : @452 [@dyn 181] (gas: 41)\n 31825: u8 [a0 + 31] = 0\n 31828: u8 [a0 + 30] = 0\n 31831: u8 [a0 + 29] = 0\n 31834: u8 [a0 + 28] = 0\n 31837: u8 [a0 + 27] = 0\n 31840: u8 [a0 + 26] = 0\n 31843: u8 [a0 + 25] = 0\n 31846: u8 [a0 + 24] = 0\n 31849: u8 [a0 + 23] = 0\n 31852: u8 [a0 + 22] = 0\n 31855: u8 [a0 + 21] = 0\n 31858: u8 [a0 + 20] = 0\n 31861: u8 [a0 + 19] = 0\n 31864: u8 [a0 + 18] = 0\n 31867: u8 [a0 + 17] = 0\n 31870: u8 [a0 + 16] = 0\n 31873: u8 [a0 + 15] = 0\n 31876: u8 [a0 + 14] = 0\n 31879: u8 [a0 + 13] = 0\n 31882: u8 [a0 + 12] = 0\n 31885: u8 [a0 + 11] = 0\n 31888: u8 [a0 + 10] = 0\n 31891: u8 [a0 + 9] = 0x64\n 31895: u8 [a0 + 8] = 0x65\n 31899: u8 [a0 + 7] = 0x6e\n 31903: u8 [a0 + 6] = 0x69\n 31907: u8 [a0 + 5] = 0x6d\n 31911: u8 [a0 + 4] = 0x72\n 31915: u8 [a0 + 3] = 0x65\n 31919: u8 [a0 + 2] = 0x74\n 31923: u8 [a0 + 1] = 0x65\n 31927: a2 = u64 [sp + 0x20]\n 31930: a2 = a2 + 0xfffffffffffffd40\n 31934: a3 = u64 [sp + 0x68]\n 31937: a2 = a3 <u a2\n 31940: a3 = u64 [sp + 0x60]\n 31943: a2 = 0 if a3 != 0\n 31945: a3 = u64 [sp + 0x58]\n 31948: a2 = 0 if a3 != 0\n 31950: u8 [a0 + 0] = 0x64\n 31953: jump @454 if a2 != 0\n      : @453 (gas: 1)\n 31956: jump @961\n      : @454 (gas: 4)\n 31959: a0 = u64 [sp + 0x50]\n 31962: i32 a0 = a0 + 0x2c0\n 31966: a1 = 0x20\n 31969: ra = 364, jump @0\n      : @455 [@dyn 182] (gas: 77)\n 31975: a1 = u64 [sp + 0x30]\n 31978: a1 = reverse a1\n 31980: a2 = u64 [sp + 0x38]\n 31983: a2 = reverse a2\n 31985: a3 = reverse s1\n 31987: a4 = u64 [sp + 0x10]\n 31990: a4 = reverse a4\n 31992: a5 = a4 >> 0x38\n 31995: u8 [a0 + 0x1f] = a5\n 31998: a5 = a4 >> 0x30\n 32001: u8 [a0 + 0x1e] = a5\n 32004: a5 = a4 >> 0x28\n 32007: u8 [a0 + 0x1d] = a5\n 32010: a5 = a4 >> 0x20\n 32013: u8 [a0 + 0x1c] = a5\n 32016: a5 = a4 >> 0x18\n 32019: u8 [a0 + 0x1b] = a5\n 32022: a5 = a4 >> 0x10\n 32025: u8 [a0 + 0x1a] = a5\n 32028: a5 = a4 >> 0x8\n 32031: u8 [a0 + 0x19] = a5\n 32034: u8 [a0 + 0x18] = a4\n 32037: u8 [a0 + 0x10] = a3\n 32040: a4 = a3 >> 0x38\n 32043: u8 [a0 + 0x17] = a4\n 32046: a4 = a3 >> 0x30\n 32049: u8 [a0 + 0x16] = a4\n 32052: a4 = a3 >> 0x28\n 32055: u8 [a0 + 0x15] = a4\n 32058: a4 = a3 >> 0x20\n 32061: u8 [a0 + 0x14] = a4\n 32064: a4 = a3 >> 0x18\n 32067: u8 [a0 + 0x13] = a4\n 32070: a4 = a3 >> 0x10\n 32073: u8 [a0 + 0x12] = a4\n 32076: a3 = a3 >> 0x8\n 32079: u8 [a0 + 0x11] = a3\n 32082: u8 [a0 + 0x8] = a2\n 32085: a3 = a2 >> 0x38\n 32088: u8 [a0 + 0xf] = a3\n 32091: a3 = a2 >> 0x30\n 32094: u8 [a0 + 0xe] = a3\n 32097: a3 = a2 >> 0x28\n 32100: u8 [a0 + 0xd] = a3\n 32103: a3 = a2 >> 0x20\n 32106: u8 [a0 + 0xc] = a3\n 32109: a3 = a2 >> 0x18\n 32112: u8 [a0 + 0xb] = a3\n 32115: a3 = a2 >> 0x10\n 32118: u8 [a0 + 0xa] = a3\n 32121: a2 = a2 >> 0x8\n 32124: u8 [a0 + 0x9] = a2\n 32127: u8 [a0] = a1\n 32129: a2 = a1 >> 0x38\n 32132: u8 [a0 + 0x7] = a2\n 32135: a2 = a1 >> 0x30\n 32138: u8 [a0 + 0x6] = a2\n 32141: a2 = a1 >> 0x28\n 32144: u8 [a0 + 0x5] = a2\n 32147: a2 = a1 >> 0x20\n 32150: u8 [a0 + 0x4] = a2\n 32153: a2 = a1 >> 0x18\n 32156: u8 [a0 + 0x3] = a2\n 32159: a2 = a1 >> 0x10\n 32162: u8 [a0 + 0x2] = a2\n 32165: a1 = a1 >> 0x8\n 32168: u8 [a0 + 0x1] = a1\n 32171: s1 = sp + 0x7e8\n 32175: u64 [s1 + 1440] = 0\n 32179: u64 [s1 + 1432] = 0\n 32183: u64 [s1 + 1416] = 0x40\n 32188: a0 = sp + 0x7ff\n 32192: a0 = a0 + 0x591\n 32196: a1 = sp + 0x7ff\n 32200: a1 = a1 + 0x571\n 32204: u64 [s1 + 1424] = 0\n 32208: ra = 366, jump @56\n      : @456 [@dyn 183] (gas: 15)\n 32214: a1 = u64 [s1 + 0x5c0]\n 32218: a2 = u64 [s1 + 0x5b8]\n 32222: a0 = u64 [s1 + 0x5b0]\n 32226: s1 = u64 [s1 + 0x5a8]\n 32230: u64 [sp + 0x28] = a0\n 32233: u64 [sp + 0x30] = a1\n 32236: a0 = a0 | a1\n 32239: a1 = s1 | a2\n 32242: a1 = a1 | a0\n 32245: a1 = a1 >> 0x20\n 32248: u64 [sp + 0x38] = a2\n 32251: a0 = a0 | a2\n 32254: a0 = a0 << 0x20\n 32257: a0 = a0 | a1\n 32260: jump @458 if a0 == 0\n      : @457 (gas: 1)\n 32263: jump @961\n      : @458 (gas: 4)\n 32266: i32 a0 = s1 + 0\n 32268: a1 = 0x20\n 32271: u64 [sp + 0x18] = a0\n 32274: ra = 368, jump @0\n      : @459 [@dyn 184] (gas: 44)\n 32280: u8 [a0 + 31] = 0x8\n 32284: a1 = u64 [sp + 0x30]\n 32287: a2 = u64 [sp + 0x38]\n 32290: a2 = a2 | a1\n 32293: a1 = 0x100000000\n 32303: u64 [sp + 0x20] = a1\n 32306: a1 = 0xffffffe0\n 32316: u64 [sp + 0x10] = s1\n 32319: a1 = s1 <u a1\n 32322: s1 = u64 [sp + 0x28]\n 32325: a1 = 0 if s1 != 0\n 32327: a1 = 0 if a2 != 0\n 32329: u8 [a0 + 30] = 0\n 32332: u8 [a0 + 29] = 0\n 32335: u8 [a0 + 28] = 0\n 32338: u8 [a0 + 27] = 0\n 32341: u8 [a0 + 26] = 0\n 32344: u8 [a0 + 25] = 0\n 32347: u8 [a0 + 24] = 0\n 32350: u8 [a0 + 23] = 0\n 32353: u8 [a0 + 22] = 0\n 32356: u8 [a0 + 21] = 0\n 32359: u8 [a0 + 20] = 0\n 32362: u8 [a0 + 19] = 0\n 32365: u8 [a0 + 18] = 0\n 32368: u8 [a0 + 17] = 0\n 32371: u8 [a0 + 16] = 0\n 32374: u8 [a0 + 15] = 0\n 32377: u8 [a0 + 14] = 0\n 32380: u8 [a0 + 13] = 0\n 32383: u8 [a0 + 12] = 0\n 32386: u8 [a0 + 11] = 0\n 32389: u8 [a0 + 10] = 0\n 32392: u8 [a0 + 9] = 0\n 32395: u8 [a0 + 8] = 0\n 32398: u8 [a0 + 7] = 0\n 32401: u8 [a0 + 6] = 0\n 32404: u8 [a0 + 5] = 0\n 32407: u8 [a0 + 4] = 0\n 32410: u8 [a0 + 3] = 0\n 32413: u8 [a0 + 2] = 0\n 32416: u8 [a0 + 1] = 0\n 32419: u8 [a0 + 0] = 0\n 32421: jump @461 if a1 != 0\n      : @460 (gas: 1)\n 32424: jump @961\n      : @461 (gas: 4)\n 32427: a0 = u64 [sp + 0x18]\n 32430: i32 a0 = a0 + 0x20\n 32433: a1 = 0x20\n 32436: ra = 370, jump @0\n      : @462 [@dyn 185] (gas: 41)\n 32442: u8 [a0 + 31] = 0\n 32445: u8 [a0 + 30] = 0\n 32448: u8 [a0 + 29] = 0\n 32451: u8 [a0 + 28] = 0\n 32454: u8 [a0 + 27] = 0\n 32457: u8 [a0 + 26] = 0\n 32460: u8 [a0 + 25] = 0\n 32463: u8 [a0 + 24] = 0\n 32466: u8 [a0 + 23] = 0\n 32469: u8 [a0 + 22] = 0\n 32472: u8 [a0 + 21] = 0\n 32475: u8 [a0 + 20] = 0\n 32478: u8 [a0 + 19] = 0\n 32481: u8 [a0 + 18] = 0\n 32484: u8 [a0 + 17] = 0\n 32487: u8 [a0 + 16] = 0\n 32490: u8 [a0 + 15] = 0\n 32493: u8 [a0 + 14] = 0\n 32496: u8 [a0 + 13] = 0\n 32499: u8 [a0 + 12] = 0\n 32502: u8 [a0 + 11] = 0\n 32505: u8 [a0 + 10] = 0\n 32508: u8 [a0 + 9] = 0\n 32511: u8 [a0 + 8] = 0\n 32514: u8 [a0 + 7] = 0x74\n 32518: u8 [a0 + 6] = 0x6e\n 32522: u8 [a0 + 5] = 0x65\n 32526: u8 [a0 + 4] = 0x67\n 32530: u8 [a0 + 3] = 0x69\n 32534: u8 [a0 + 2] = 0x6c\n 32538: u8 [a0 + 1] = 0x69\n 32542: a2 = u64 [sp + 0x20]\n 32545: a2 = a2 + 0xfffffffffffffd20\n 32549: a3 = u64 [sp + 0x68]\n 32552: a2 = a3 <u a2\n 32555: a3 = u64 [sp + 0x60]\n 32558: a2 = 0 if a3 != 0\n 32560: a3 = u64 [sp + 0x58]\n 32563: a2 = 0 if a3 != 0\n 32565: u8 [a0 + 0] = 0x64\n 32568: jump @464 if a2 != 0\n      : @463 (gas: 1)\n 32571: jump @961\n      : @464 (gas: 4)\n 32574: a0 = u64 [sp + 0x50]\n 32577: i32 a0 = a0 + 0x2e0\n 32581: a1 = 0x20\n 32584: ra = 372, jump @0\n      : @465 [@dyn 186] (gas: 77)\n 32590: a1 = u64 [sp + 0x30]\n 32593: a1 = reverse a1\n 32595: a2 = u64 [sp + 0x38]\n 32598: a2 = reverse a2\n 32600: a3 = reverse s1\n 32602: a4 = u64 [sp + 0x10]\n 32605: a4 = reverse a4\n 32607: a5 = a4 >> 0x38\n 32610: u8 [a0 + 0x1f] = a5\n 32613: a5 = a4 >> 0x30\n 32616: u8 [a0 + 0x1e] = a5\n 32619: a5 = a4 >> 0x28\n 32622: u8 [a0 + 0x1d] = a5\n 32625: a5 = a4 >> 0x20\n 32628: u8 [a0 + 0x1c] = a5\n 32631: a5 = a4 >> 0x18\n 32634: u8 [a0 + 0x1b] = a5\n 32637: a5 = a4 >> 0x10\n 32640: u8 [a0 + 0x1a] = a5\n 32643: a5 = a4 >> 0x8\n 32646: u8 [a0 + 0x19] = a5\n 32649: u8 [a0 + 0x18] = a4\n 32652: u8 [a0 + 0x10] = a3\n 32655: a4 = a3 >> 0x38\n 32658: u8 [a0 + 0x17] = a4\n 32661: a4 = a3 >> 0x30\n 32664: u8 [a0 + 0x16] = a4\n 32667: a4 = a3 >> 0x28\n 32670: u8 [a0 + 0x15] = a4\n 32673: a4 = a3 >> 0x20\n 32676: u8 [a0 + 0x14] = a4\n 32679: a4 = a3 >> 0x18\n 32682: u8 [a0 + 0x13] = a4\n 32685: a4 = a3 >> 0x10\n 32688: u8 [a0 + 0x12] = a4\n 32691: a3 = a3 >> 0x8\n 32694: u8 [a0 + 0x11] = a3\n 32697: u8 [a0 + 0x8] = a2\n 32700: a3 = a2 >> 0x38\n 32703: u8 [a0 + 0xf] = a3\n 32706: a3 = a2 >> 0x30\n 32709: u8 [a0 + 0xe] = a3\n 32712: a3 = a2 >> 0x28\n 32715: u8 [a0 + 0xd] = a3\n 32718: a3 = a2 >> 0x20\n 32721: u8 [a0 + 0xc] = a3\n 32724: a3 = a2 >> 0x18\n 32727: u8 [a0 + 0xb] = a3\n 32730: a3 = a2 >> 0x10\n 32733: u8 [a0 + 0xa] = a3\n 32736: a2 = a2 >> 0x8\n 32739: u8 [a0 + 0x9] = a2\n 32742: u8 [a0] = a1\n 32744: a2 = a1 >> 0x38\n 32747: u8 [a0 + 0x7] = a2\n 32750: a2 = a1 >> 0x30\n 32753: u8 [a0 + 0x6] = a2\n 32756: a2 = a1 >> 0x28\n 32759: u8 [a0 + 0x5] = a2\n 32762: a2 = a1 >> 0x20\n 32765: u8 [a0 + 0x4] = a2\n 32768: a2 = a1 >> 0x18\n 32771: u8 [a0 + 0x3] = a2\n 32774: a2 = a1 >> 0x10\n 32777: u8 [a0 + 0x2] = a2\n 32780: a1 = a1 >> 0x8\n 32783: u8 [a0 + 0x1] = a1\n 32786: s1 = sp + 0x7e8\n 32790: u64 [s1 + 1376] = 0\n 32794: u64 [s1 + 1368] = 0\n 32798: u64 [s1 + 1352] = 0x40\n 32803: a0 = sp + 0x7ff\n 32807: a0 = a0 + 0x551\n 32811: a1 = sp + 0x7ff\n 32815: a1 = a1 + 0x531\n 32819: u64 [s1 + 1360] = 0\n 32823: ra = 374, jump @56\n      : @466 [@dyn 187] (gas: 15)\n 32829: a1 = u64 [s1 + 0x580]\n 32833: a2 = u64 [s1 + 0x578]\n 32837: a0 = u64 [s1 + 0x570]\n 32841: s1 = u64 [s1 + 0x568]\n 32845: u64 [sp + 0x28] = a0\n 32848: u64 [sp + 0x30] = a1\n 32851: a0 = a0 | a1\n 32854: a1 = s1 | a2\n 32857: a1 = a1 | a0\n 32860: a1 = a1 >> 0x20\n 32863: u64 [sp + 0x38] = a2\n 32866: a0 = a0 | a2\n 32869: a0 = a0 << 0x20\n 32872: a0 = a0 | a1\n 32875: jump @468 if a0 == 0\n      : @467 (gas: 1)\n 32878: jump @961\n      : @468 (gas: 4)\n 32881: i32 a0 = s1 + 0\n 32883: a1 = 0x20\n 32886: u64 [sp + 0x18] = a0\n 32889: ra = 376, jump @0\n      : @469 [@dyn 188] (gas: 44)\n 32896: u8 [a0 + 31] = 0x7\n 32900: a1 = u64 [sp + 0x30]\n 32903: a2 = u64 [sp + 0x38]\n 32906: a2 = a2 | a1\n 32909: a1 = 0x100000000\n 32919: u64 [sp + 0x20] = a1\n 32922: a1 = 0xffffffe0\n 32932: u64 [sp + 0x10] = s1\n 32935: a1 = s1 <u a1\n 32938: s1 = u64 [sp + 0x28]\n 32941: a1 = 0 if s1 != 0\n 32943: a1 = 0 if a2 != 0\n 32945: u8 [a0 + 30] = 0\n 32948: u8 [a0 + 29] = 0\n 32951: u8 [a0 + 28] = 0\n 32954: u8 [a0 + 27] = 0\n 32957: u8 [a0 + 26] = 0\n 32960: u8 [a0 + 25] = 0\n 32963: u8 [a0 + 24] = 0\n 32966: u8 [a0 + 23] = 0\n 32969: u8 [a0 + 22] = 0\n 32972: u8 [a0 + 21] = 0\n 32975: u8 [a0 + 20] = 0\n 32978: u8 [a0 + 19] = 0\n 32981: u8 [a0 + 18] = 0\n 32984: u8 [a0 + 17] = 0\n 32987: u8 [a0 + 16] = 0\n 32990: u8 [a0 + 15] = 0\n 32993: u8 [a0 + 14] = 0\n 32996: u8 [a0 + 13] = 0\n 32999: u8 [a0 + 12] = 0\n 33002: u8 [a0 + 11] = 0\n 33005: u8 [a0 + 10] = 0\n 33008: u8 [a0 + 9] = 0\n 33011: u8 [a0 + 8] = 0\n 33014: u8 [a0 + 7] = 0\n 33017: u8 [a0 + 6] = 0\n 33020: u8 [a0 + 5] = 0\n 33023: u8 [a0 + 4] = 0\n 33026: u8 [a0 + 3] = 0\n 33029: u8 [a0 + 2] = 0\n 33032: u8 [a0 + 1] = 0\n 33035: u8 [a0 + 0] = 0\n 33037: jump @471 if a1 != 0\n      : @470 (gas: 1)\n 33040: jump @961\n      : @471 (gas: 4)\n 33043: a0 = u64 [sp + 0x18]\n 33046: i32 a0 = a0 + 0x20\n 33049: a1 = 0x20\n 33052: ra = 378, jump @0\n      : @472 [@dyn 189] (gas: 41)\n 33059: u8 [a0 + 31] = 0\n 33062: u8 [a0 + 30] = 0\n 33065: u8 [a0 + 29] = 0\n 33068: u8 [a0 + 28] = 0\n 33071: u8 [a0 + 27] = 0\n 33074: u8 [a0 + 26] = 0\n 33077: u8 [a0 + 25] = 0\n 33080: u8 [a0 + 24] = 0\n 33083: u8 [a0 + 23] = 0\n 33086: u8 [a0 + 22] = 0\n 33089: u8 [a0 + 21] = 0\n 33092: u8 [a0 + 20] = 0\n 33095: u8 [a0 + 19] = 0\n 33098: u8 [a0 + 18] = 0\n 33101: u8 [a0 + 17] = 0\n 33104: u8 [a0 + 16] = 0\n 33107: u8 [a0 + 15] = 0\n 33110: u8 [a0 + 14] = 0\n 33113: u8 [a0 + 13] = 0\n 33116: u8 [a0 + 12] = 0\n 33119: u8 [a0 + 11] = 0\n 33122: u8 [a0 + 10] = 0\n 33125: u8 [a0 + 9] = 0\n 33128: u8 [a0 + 8] = 0\n 33131: u8 [a0 + 7] = 0\n 33134: u8 [a0 + 6] = 0x63\n 33138: u8 [a0 + 5] = 0x69\n 33142: u8 [a0 + 4] = 0x6d\n 33146: u8 [a0 + 3] = 0x61\n 33150: u8 [a0 + 2] = 0x6e\n 33154: u8 [a0 + 1] = 0x79\n 33158: a2 = u64 [sp + 0x20]\n 33161: a2 = a2 + 0xfffffffffffffd00\n 33165: a3 = u64 [sp + 0x68]\n 33168: a2 = a3 <u a2\n 33171: a3 = u64 [sp + 0x60]\n 33174: a2 = 0 if a3 != 0\n 33176: a3 = u64 [sp + 0x58]\n 33179: a2 = 0 if a3 != 0\n 33181: u8 [a0 + 0] = 0x64\n 33184: jump @474 if a2 != 0\n      : @473 (gas: 1)\n 33187: jump @961\n      : @474 (gas: 4)\n 33190: a0 = u64 [sp + 0x50]\n 33193: i32 a0 = a0 + 0x300\n 33197: a1 = 0x20\n 33200: ra = 380, jump @0\n      : @475 [@dyn 190] (gas: 77)\n 33207: a1 = u64 [sp + 0x30]\n 33210: a1 = reverse a1\n 33212: a2 = u64 [sp + 0x38]\n 33215: a2 = reverse a2\n 33217: a3 = reverse s1\n 33219: a4 = u64 [sp + 0x10]\n 33222: a4 = reverse a4\n 33224: a5 = a4 >> 0x38\n 33227: u8 [a0 + 0x1f] = a5\n 33230: a5 = a4 >> 0x30\n 33233: u8 [a0 + 0x1e] = a5\n 33236: a5 = a4 >> 0x28\n 33239: u8 [a0 + 0x1d] = a5\n 33242: a5 = a4 >> 0x20\n 33245: u8 [a0 + 0x1c] = a5\n 33248: a5 = a4 >> 0x18\n 33251: u8 [a0 + 0x1b] = a5\n 33254: a5 = a4 >> 0x10\n 33257: u8 [a0 + 0x1a] = a5\n 33260: a5 = a4 >> 0x8\n 33263: u8 [a0 + 0x19] = a5\n 33266: u8 [a0 + 0x18] = a4\n 33269: u8 [a0 + 0x10] = a3\n 33272: a4 = a3 >> 0x38\n 33275: u8 [a0 + 0x17] = a4\n 33278: a4 = a3 >> 0x30\n 33281: u8 [a0 + 0x16] = a4\n 33284: a4 = a3 >> 0x28\n 33287: u8 [a0 + 0x15] = a4\n 33290: a4 = a3 >> 0x20\n 33293: u8 [a0 + 0x14] = a4\n 33296: a4 = a3 >> 0x18\n 33299: u8 [a0 + 0x13] = a4\n 33302: a4 = a3 >> 0x10\n 33305: u8 [a0 + 0x12] = a4\n 33308: a3 = a3 >> 0x8\n 33311: u8 [a0 + 0x11] = a3\n 33314: u8 [a0 + 0x8] = a2\n 33317: a3 = a2 >> 0x38\n 33320: u8 [a0 + 0xf] = a3\n 33323: a3 = a2 >> 0x30\n 33326: u8 [a0 + 0xe] = a3\n 33329: a3 = a2 >> 0x28\n 33332: u8 [a0 + 0xd] = a3\n 33335: a3 = a2 >> 0x20\n 33338: u8 [a0 + 0xc] = a3\n 33341: a3 = a2 >> 0x18\n 33344: u8 [a0 + 0xb] = a3\n 33347: a3 = a2 >> 0x10\n 33350: u8 [a0 + 0xa] = a3\n 33353: a2 = a2 >> 0x8\n 33356: u8 [a0 + 0x9] = a2\n 33359: u8 [a0] = a1\n 33361: a2 = a1 >> 0x38\n 33364: u8 [a0 + 0x7] = a2\n 33367: a2 = a1 >> 0x30\n 33370: u8 [a0 + 0x6] = a2\n 33373: a2 = a1 >> 0x28\n 33376: u8 [a0 + 0x5] = a2\n 33379: a2 = a1 >> 0x20\n 33382: u8 [a0 + 0x4] = a2\n 33385: a2 = a1 >> 0x18\n 33388: u8 [a0 + 0x3] = a2\n 33391: a2 = a1 >> 0x10\n 33394: u8 [a0 + 0x2] = a2\n 33397: a1 = a1 >> 0x8\n 33400: u8 [a0 + 0x1] = a1\n 33403: s1 = sp + 0x7e8\n 33407: u64 [s1 + 1312] = 0\n 33411: u64 [s1 + 1304] = 0\n 33415: u64 [s1 + 1288] = 0x40\n 33420: a0 = sp + 0x7ff\n 33424: a0 = a0 + 0x511\n 33428: a1 = sp + 0x7ff\n 33432: a1 = a1 + 0x4f1\n 33436: u64 [s1 + 1296] = 0\n 33440: ra = 382, jump @56\n      : @476 [@dyn 191] (gas: 15)\n 33446: a1 = u64 [s1 + 0x540]\n 33450: a2 = u64 [s1 + 0x538]\n 33454: a0 = u64 [s1 + 0x530]\n 33458: s1 = u64 [s1 + 0x528]\n 33462: u64 [sp + 0x28] = a0\n 33465: u64 [sp + 0x30] = a1\n 33468: a0 = a0 | a1\n 33471: a1 = s1 | a2\n 33474: a1 = a1 | a0\n 33477: a1 = a1 >> 0x20\n 33480: u64 [sp + 0x38] = a2\n 33483: a0 = a0 | a2\n 33486: a0 = a0 << 0x20\n 33489: a0 = a0 | a1\n 33492: jump @478 if a0 == 0\n      : @477 (gas: 1)\n 33495: jump @961\n      : @478 (gas: 4)\n 33498: i32 a0 = s1 + 0\n 33500: a1 = 0x20\n 33503: u64 [sp + 0x18] = a0\n 33506: ra = 384, jump @0\n      : @479 [@dyn 192] (gas: 44)\n 33513: u8 [a0 + 31] = 0x5\n 33517: a1 = u64 [sp + 0x30]\n 33520: a2 = u64 [sp + 0x38]\n 33523: a2 = a2 | a1\n 33526: a1 = 0x100000000\n 33536: u64 [sp + 0x20] = a1\n 33539: a1 = 0xffffffe0\n 33549: u64 [sp + 0x10] = s1\n 33552: a1 = s1 <u a1\n 33555: s1 = u64 [sp + 0x28]\n 33558: a1 = 0 if s1 != 0\n 33560: a1 = 0 if a2 != 0\n 33562: u8 [a0 + 30] = 0\n 33565: u8 [a0 + 29] = 0\n 33568: u8 [a0 + 28] = 0\n 33571: u8 [a0 + 27] = 0\n 33574: u8 [a0 + 26] = 0\n 33577: u8 [a0 + 25] = 0\n 33580: u8 [a0 + 24] = 0\n 33583: u8 [a0 + 23] = 0\n 33586: u8 [a0 + 22] = 0\n 33589: u8 [a0 + 21] = 0\n 33592: u8 [a0 + 20] = 0\n 33595: u8 [a0 + 19] = 0\n 33598: u8 [a0 + 18] = 0\n 33601: u8 [a0 + 17] = 0\n 33604: u8 [a0 + 16] = 0\n 33607: u8 [a0 + 15] = 0\n 33610: u8 [a0 + 14] = 0\n 33613: u8 [a0 + 13] = 0\n 33616: u8 [a0 + 12] = 0\n 33619: u8 [a0 + 11] = 0\n 33622: u8 [a0 + 10] = 0\n 33625: u8 [a0 + 9] = 0\n 33628: u8 [a0 + 8] = 0\n 33631: u8 [a0 + 7] = 0\n 33634: u8 [a0 + 6] = 0\n 33637: u8 [a0 + 5] = 0\n 33640: u8 [a0 + 4] = 0\n 33643: u8 [a0 + 3] = 0\n 33646: u8 [a0 + 2] = 0\n 33649: u8 [a0 + 1] = 0\n 33652: u8 [a0 + 0] = 0\n 33654: jump @481 if a1 != 0\n      : @480 (gas: 1)\n 33657: jump @961\n      : @481 (gas: 4)\n 33660: a0 = u64 [sp + 0x18]\n 33663: i32 a0 = a0 + 0x20\n 33666: a1 = 0x20\n 33669: ra = 386, jump @0\n      : @482 [@dyn 193] (gas: 41)\n 33676: u8 [a0 + 31] = 0\n 33679: u8 [a0 + 30] = 0\n 33682: u8 [a0 + 29] = 0\n 33685: u8 [a0 + 28] = 0\n 33688: u8 [a0 + 27] = 0\n 33691: u8 [a0 + 26] = 0\n 33694: u8 [a0 + 25] = 0\n 33697: u8 [a0 + 24] = 0\n 33700: u8 [a0 + 23] = 0\n 33703: u8 [a0 + 22] = 0\n 33706: u8 [a0 + 21] = 0\n 33709: u8 [a0 + 20] = 0\n 33712: u8 [a0 + 19] = 0\n 33715: u8 [a0 + 18] = 0\n 33718: u8 [a0 + 17] = 0\n 33721: u8 [a0 + 16] = 0\n 33724: u8 [a0 + 15] = 0\n 33727: u8 [a0 + 14] = 0\n 33730: u8 [a0 + 13] = 0\n 33733: u8 [a0 + 12] = 0\n 33736: u8 [a0 + 11] = 0\n 33739: u8 [a0 + 10] = 0\n 33742: u8 [a0 + 9] = 0\n 33745: u8 [a0 + 8] = 0\n 33748: u8 [a0 + 7] = 0\n 33751: u8 [a0 + 6] = 0\n 33754: u8 [a0 + 5] = 0\n 33757: u8 [a0 + 4] = 0x72\n 33761: u8 [a0 + 3] = 0x65\n 33765: u8 [a0 + 2] = 0x67\n 33769: u8 [a0 + 1] = 0x61\n 33773: a2 = u64 [sp + 0x20]\n 33776: a2 = a2 + 0xfffffffffffffce0\n 33780: a3 = u64 [sp + 0x68]\n 33783: a2 = a3 <u a2\n 33786: a3 = u64 [sp + 0x60]\n 33789: a2 = 0 if a3 != 0\n 33791: a3 = u64 [sp + 0x58]\n 33794: a2 = 0 if a3 != 0\n 33796: u8 [a0 + 0] = 0x65\n 33799: jump @484 if a2 != 0\n      : @483 (gas: 1)\n 33802: jump @961\n      : @484 (gas: 4)\n 33805: a0 = u64 [sp + 0x50]\n 33808: i32 a0 = a0 + 0x320\n 33812: a1 = 0x20\n 33815: ra = 388, jump @0\n      : @485 [@dyn 194] (gas: 77)\n 33822: a1 = u64 [sp + 0x30]\n 33825: a1 = reverse a1\n 33827: a2 = u64 [sp + 0x38]\n 33830: a2 = reverse a2\n 33832: a3 = reverse s1\n 33834: a4 = u64 [sp + 0x10]\n 33837: a4 = reverse a4\n 33839: a5 = a4 >> 0x38\n 33842: u8 [a0 + 0x1f] = a5\n 33845: a5 = a4 >> 0x30\n 33848: u8 [a0 + 0x1e] = a5\n 33851: a5 = a4 >> 0x28\n 33854: u8 [a0 + 0x1d] = a5\n 33857: a5 = a4 >> 0x20\n 33860: u8 [a0 + 0x1c] = a5\n 33863: a5 = a4 >> 0x18\n 33866: u8 [a0 + 0x1b] = a5\n 33869: a5 = a4 >> 0x10\n 33872: u8 [a0 + 0x1a] = a5\n 33875: a5 = a4 >> 0x8\n 33878: u8 [a0 + 0x19] = a5\n 33881: u8 [a0 + 0x18] = a4\n 33884: u8 [a0 + 0x10] = a3\n 33887: a4 = a3 >> 0x38\n 33890: u8 [a0 + 0x17] = a4\n 33893: a4 = a3 >> 0x30\n 33896: u8 [a0 + 0x16] = a4\n 33899: a4 = a3 >> 0x28\n 33902: u8 [a0 + 0x15] = a4\n 33905: a4 = a3 >> 0x20\n 33908: u8 [a0 + 0x14] = a4\n 33911: a4 = a3 >> 0x18\n 33914: u8 [a0 + 0x13] = a4\n 33917: a4 = a3 >> 0x10\n 33920: u8 [a0 + 0x12] = a4\n 33923: a3 = a3 >> 0x8\n 33926: u8 [a0 + 0x11] = a3\n 33929: u8 [a0 + 0x8] = a2\n 33932: a3 = a2 >> 0x38\n 33935: u8 [a0 + 0xf] = a3\n 33938: a3 = a2 >> 0x30\n 33941: u8 [a0 + 0xe] = a3\n 33944: a3 = a2 >> 0x28\n 33947: u8 [a0 + 0xd] = a3\n 33950: a3 = a2 >> 0x20\n 33953: u8 [a0 + 0xc] = a3\n 33956: a3 = a2 >> 0x18\n 33959: u8 [a0 + 0xb] = a3\n 33962: a3 = a2 >> 0x10\n 33965: u8 [a0 + 0xa] = a3\n 33968: a2 = a2 >> 0x8\n 33971: u8 [a0 + 0x9] = a2\n 33974: u8 [a0] = a1\n 33976: a2 = a1 >> 0x38\n 33979: u8 [a0 + 0x7] = a2\n 33982: a2 = a1 >> 0x30\n 33985: u8 [a0 + 0x6] = a2\n 33988: a2 = a1 >> 0x28\n 33991: u8 [a0 + 0x5] = a2\n 33994: a2 = a1 >> 0x20\n 33997: u8 [a0 + 0x4] = a2\n 34000: a2 = a1 >> 0x18\n 34003: u8 [a0 + 0x3] = a2\n 34006: a2 = a1 >> 0x10\n 34009: u8 [a0 + 0x2] = a2\n 34012: a1 = a1 >> 0x8\n 34015: u8 [a0 + 0x1] = a1\n 34018: s1 = sp + 0x7e8\n 34022: u64 [s1 + 1248] = 0\n 34026: u64 [s1 + 1240] = 0\n 34030: u64 [s1 + 1224] = 0x40\n 34035: a0 = sp + 0x7ff\n 34039: a0 = a0 + 0x4d1\n 34043: a1 = sp + 0x7ff\n 34047: a1 = a1 + 0x4b1\n 34051: u64 [s1 + 1232] = 0\n 34055: ra = 390, jump @56\n      : @486 [@dyn 195] (gas: 15)\n 34061: a1 = u64 [s1 + 0x500]\n 34065: a2 = u64 [s1 + 0x4f8]\n 34069: a0 = u64 [s1 + 0x4f0]\n 34073: s1 = u64 [s1 + 0x4e8]\n 34077: u64 [sp + 0x28] = a0\n 34080: u64 [sp + 0x30] = a1\n 34083: a0 = a0 | a1\n 34086: a1 = s1 | a2\n 34089: a1 = a1 | a0\n 34092: a1 = a1 >> 0x20\n 34095: u64 [sp + 0x38] = a2\n 34098: a0 = a0 | a2\n 34101: a0 = a0 << 0x20\n 34104: a0 = a0 | a1\n 34107: jump @488 if a0 == 0\n      : @487 (gas: 1)\n 34110: jump @961\n      : @488 (gas: 4)\n 34113: i32 a0 = s1 + 0\n 34115: a1 = 0x20\n 34118: u64 [sp + 0x18] = a0\n 34121: ra = 392, jump @0\n      : @489 [@dyn 196] (gas: 44)\n 34128: u8 [a0 + 31] = 0x7\n 34132: a1 = u64 [sp + 0x30]\n 34135: a2 = u64 [sp + 0x38]\n 34138: a2 = a2 | a1\n 34141: a1 = 0x100000000\n 34151: u64 [sp + 0x20] = a1\n 34154: a1 = 0xffffffe0\n 34164: u64 [sp + 0x10] = s1\n 34167: a1 = s1 <u a1\n 34170: s1 = u64 [sp + 0x28]\n 34173: a1 = 0 if s1 != 0\n 34175: a1 = 0 if a2 != 0\n 34177: u8 [a0 + 30] = 0\n 34180: u8 [a0 + 29] = 0\n 34183: u8 [a0 + 28] = 0\n 34186: u8 [a0 + 27] = 0\n 34189: u8 [a0 + 26] = 0\n 34192: u8 [a0 + 25] = 0\n 34195: u8 [a0 + 24] = 0\n 34198: u8 [a0 + 23] = 0\n 34201: u8 [a0 + 22] = 0\n 34204: u8 [a0 + 21] = 0\n 34207: u8 [a0 + 20] = 0\n 34210: u8 [a0 + 19] = 0\n 34213: u8 [a0 + 18] = 0\n 34216: u8 [a0 + 17] = 0\n 34219: u8 [a0 + 16] = 0\n 34222: u8 [a0 + 15] = 0\n 34225: u8 [a0 + 14] = 0\n 34228: u8 [a0 + 13] = 0\n 34231: u8 [a0 + 12] = 0\n 34234: u8 [a0 + 11] = 0\n 34237: u8 [a0 + 10] = 0\n 34240: u8 [a0 + 9] = 0\n 34243: u8 [a0 + 8] = 0\n 34246: u8 [a0 + 7] = 0\n 34249: u8 [a0 + 6] = 0\n 34252: u8 [a0 + 5] = 0\n 34255: u8 [a0 + 4] = 0\n 34258: u8 [a0 + 3] = 0\n 34261: u8 [a0 + 2] = 0\n 34264: u8 [a0 + 1] = 0\n 34267: u8 [a0 + 0] = 0\n 34269: jump @491 if a1 != 0\n      : @490 (gas: 1)\n 34272: jump @961\n      : @491 (gas: 4)\n 34275: a0 = u64 [sp + 0x18]\n 34278: i32 a0 = a0 + 0x20\n 34281: a1 = 0x20\n 34284: ra = 394, jump @0\n      : @492 [@dyn 197] (gas: 41)\n 34291: u8 [a0 + 31] = 0\n 34294: u8 [a0 + 30] = 0\n 34297: u8 [a0 + 29] = 0\n 34300: u8 [a0 + 28] = 0\n 34303: u8 [a0 + 27] = 0\n 34306: u8 [a0 + 26] = 0\n 34309: u8 [a0 + 25] = 0\n 34312: u8 [a0 + 24] = 0\n 34315: u8 [a0 + 23] = 0\n 34318: u8 [a0 + 22] = 0\n 34321: u8 [a0 + 21] = 0\n 34324: u8 [a0 + 20] = 0\n 34327: u8 [a0 + 19] = 0\n 34330: u8 [a0 + 18] = 0\n 34333: u8 [a0 + 17] = 0\n 34336: u8 [a0 + 16] = 0\n 34339: u8 [a0 + 15] = 0\n 34342: u8 [a0 + 14] = 0\n 34345: u8 [a0 + 13] = 0\n 34348: u8 [a0 + 12] = 0\n 34351: u8 [a0 + 11] = 0\n 34354: u8 [a0 + 10] = 0\n 34357: u8 [a0 + 9] = 0\n 34360: u8 [a0 + 8] = 0\n 34363: u8 [a0 + 7] = 0\n 34366: u8 [a0 + 6] = 0x74\n 34370: u8 [a0 + 5] = 0x6e\n 34374: u8 [a0 + 4] = 0x61\n 34378: u8 [a0 + 3] = 0x67\n 34382: u8 [a0 + 2] = 0x65\n 34386: u8 [a0 + 1] = 0x6c\n 34390: a2 = u64 [sp + 0x20]\n 34393: a2 = a2 + 0xfffffffffffffcc0\n 34397: a3 = u64 [sp + 0x68]\n 34400: a2 = a3 <u a2\n 34403: a3 = u64 [sp + 0x60]\n 34406: a2 = 0 if a3 != 0\n 34408: a3 = u64 [sp + 0x58]\n 34411: a2 = 0 if a3 != 0\n 34413: u8 [a0 + 0] = 0x65\n 34416: jump @494 if a2 != 0\n      : @493 (gas: 1)\n 34419: jump @961\n      : @494 (gas: 4)\n 34422: a0 = u64 [sp + 0x50]\n 34425: i32 a0 = a0 + 0x340\n 34429: a1 = 0x20\n 34432: ra = 396, jump @0\n      : @495 [@dyn 198] (gas: 77)\n 34439: a1 = u64 [sp + 0x30]\n 34442: a1 = reverse a1\n 34444: a2 = u64 [sp + 0x38]\n 34447: a2 = reverse a2\n 34449: a3 = reverse s1\n 34451: a4 = u64 [sp + 0x10]\n 34454: a4 = reverse a4\n 34456: a5 = a4 >> 0x38\n 34459: u8 [a0 + 0x1f] = a5\n 34462: a5 = a4 >> 0x30\n 34465: u8 [a0 + 0x1e] = a5\n 34468: a5 = a4 >> 0x28\n 34471: u8 [a0 + 0x1d] = a5\n 34474: a5 = a4 >> 0x20\n 34477: u8 [a0 + 0x1c] = a5\n 34480: a5 = a4 >> 0x18\n 34483: u8 [a0 + 0x1b] = a5\n 34486: a5 = a4 >> 0x10\n 34489: u8 [a0 + 0x1a] = a5\n 34492: a5 = a4 >> 0x8\n 34495: u8 [a0 + 0x19] = a5\n 34498: u8 [a0 + 0x18] = a4\n 34501: u8 [a0 + 0x10] = a3\n 34504: a4 = a3 >> 0x38\n 34507: u8 [a0 + 0x17] = a4\n 34510: a4 = a3 >> 0x30\n 34513: u8 [a0 + 0x16] = a4\n 34516: a4 = a3 >> 0x28\n 34519: u8 [a0 + 0x15] = a4\n 34522: a4 = a3 >> 0x20\n 34525: u8 [a0 + 0x14] = a4\n 34528: a4 = a3 >> 0x18\n 34531: u8 [a0 + 0x13] = a4\n 34534: a4 = a3 >> 0x10\n 34537: u8 [a0 + 0x12] = a4\n 34540: a3 = a3 >> 0x8\n 34543: u8 [a0 + 0x11] = a3\n 34546: u8 [a0 + 0x8] = a2\n 34549: a3 = a2 >> 0x38\n 34552: u8 [a0 + 0xf] = a3\n 34555: a3 = a2 >> 0x30\n 34558: u8 [a0 + 0xe] = a3\n 34561: a3 = a2 >> 0x28\n 34564: u8 [a0 + 0xd] = a3\n 34567: a3 = a2 >> 0x20\n 34570: u8 [a0 + 0xc] = a3\n 34573: a3 = a2 >> 0x18\n 34576: u8 [a0 + 0xb] = a3\n 34579: a3 = a2 >> 0x10\n 34582: u8 [a0 + 0xa] = a3\n 34585: a2 = a2 >> 0x8\n 34588: u8 [a0 + 0x9] = a2\n 34591: u8 [a0] = a1\n 34593: a2 = a1 >> 0x38\n 34596: u8 [a0 + 0x7] = a2\n 34599: a2 = a1 >> 0x30\n 34602: u8 [a0 + 0x6] = a2\n 34605: a2 = a1 >> 0x28\n 34608: u8 [a0 + 0x5] = a2\n 34611: a2 = a1 >> 0x20\n 34614: u8 [a0 + 0x4] = a2\n 34617: a2 = a1 >> 0x18\n 34620: u8 [a0 + 0x3] = a2\n 34623: a2 = a1 >> 0x10\n 34626: u8 [a0 + 0x2] = a2\n 34629: a1 = a1 >> 0x8\n 34632: u8 [a0 + 0x1] = a1\n 34635: s1 = sp + 0x7e8\n 34639: u64 [s1 + 1184] = 0\n 34643: u64 [s1 + 1176] = 0\n 34647: u64 [s1 + 1160] = 0x40\n 34652: a0 = sp + 0x7ff\n 34656: a0 = a0 + 0x491\n 34660: a1 = sp + 0x7ff\n 34664: a1 = a1 + 0x471\n 34668: u64 [s1 + 1168] = 0\n 34672: ra = 398, jump @56\n      : @496 [@dyn 199] (gas: 15)\n 34679: a1 = u64 [s1 + 0x4c0]\n 34683: a2 = u64 [s1 + 0x4b8]\n 34687: a0 = u64 [s1 + 0x4b0]\n 34691: s1 = u64 [s1 + 0x4a8]\n 34695: u64 [sp + 0x28] = a0\n 34698: u64 [sp + 0x30] = a1\n 34701: a0 = a0 | a1\n 34704: a1 = s1 | a2\n 34707: a1 = a1 | a0\n 34710: a1 = a1 >> 0x20\n 34713: u64 [sp + 0x38] = a2\n 34716: a0 = a0 | a2\n 34719: a0 = a0 << 0x20\n 34722: a0 = a0 | a1\n 34725: jump @498 if a0 == 0\n      : @497 (gas: 1)\n 34728: jump @961\n      : @498 (gas: 4)\n 34731: i32 a0 = s1 + 0\n 34733: a1 = 0x20\n 34736: u64 [sp + 0x18] = a0\n 34739: ra = 400, jump @0\n      : @499 [@dyn 200] (gas: 44)\n 34746: u8 [a0 + 31] = 0xa\n 34750: a1 = u64 [sp + 0x30]\n 34753: a2 = u64 [sp + 0x38]\n 34756: a2 = a2 | a1\n 34759: a1 = 0x100000000\n 34769: u64 [sp + 0x20] = a1\n 34772: a1 = 0xffffffe0\n 34782: u64 [sp + 0x10] = s1\n 34785: a1 = s1 <u a1\n 34788: s1 = u64 [sp + 0x28]\n 34791: a1 = 0 if s1 != 0\n 34793: a1 = 0 if a2 != 0\n 34795: u8 [a0 + 30] = 0\n 34798: u8 [a0 + 29] = 0\n 34801: u8 [a0 + 28] = 0\n 34804: u8 [a0 + 27] = 0\n 34807: u8 [a0 + 26] = 0\n 34810: u8 [a0 + 25] = 0\n 34813: u8 [a0 + 24] = 0\n 34816: u8 [a0 + 23] = 0\n 34819: u8 [a0 + 22] = 0\n 34822: u8 [a0 + 21] = 0\n 34825: u8 [a0 + 20] = 0\n 34828: u8 [a0 + 19] = 0\n 34831: u8 [a0 + 18] = 0\n 34834: u8 [a0 + 17] = 0\n 34837: u8 [a0 + 16] = 0\n 34840: u8 [a0 + 15] = 0\n 34843: u8 [a0 + 14] = 0\n 34846: u8 [a0 + 13] = 0\n 34849: u8 [a0 + 12] = 0\n 34852: u8 [a0 + 11] = 0\n 34855: u8 [a0 + 10] = 0\n 34858: u8 [a0 + 9] = 0\n 34861: u8 [a0 + 8] = 0\n 34864: u8 [a0 + 7] = 0\n 34867: u8 [a0 + 6] = 0\n 34870: u8 [a0 + 5] = 0\n 34873: u8 [a0 + 4] = 0\n 34876: u8 [a0 + 3] = 0\n 34879: u8 [a0 + 2] = 0\n 34882: u8 [a0 + 1] = 0\n 34885: u8 [a0 + 0] = 0\n 34887: jump @501 if a1 != 0\n      : @500 (gas: 1)\n 34890: jump @961\n      : @501 (gas: 4)\n 34893: a0 = u64 [sp + 0x18]\n 34896: i32 a0 = a0 + 0x20\n 34899: a1 = 0x20\n 34902: ra = 402, jump @0\n      : @502 [@dyn 201] (gas: 41)\n 34909: u8 [a0 + 31] = 0\n 34912: u8 [a0 + 30] = 0\n 34915: u8 [a0 + 29] = 0\n 34918: u8 [a0 + 28] = 0\n 34921: u8 [a0 + 27] = 0\n 34924: u8 [a0 + 26] = 0\n 34927: u8 [a0 + 25] = 0\n 34930: u8 [a0 + 24] = 0\n 34933: u8 [a0 + 23] = 0\n 34936: u8 [a0 + 22] = 0\n 34939: u8 [a0 + 21] = 0\n 34942: u8 [a0 + 20] = 0\n 34945: u8 [a0 + 19] = 0\n 34948: u8 [a0 + 18] = 0\n 34951: u8 [a0 + 17] = 0\n 34954: u8 [a0 + 16] = 0\n 34957: u8 [a0 + 15] = 0\n 34960: u8 [a0 + 14] = 0\n 34963: u8 [a0 + 13] = 0\n 34966: u8 [a0 + 12] = 0\n 34969: u8 [a0 + 11] = 0\n 34972: u8 [a0 + 10] = 0\n 34975: u8 [a0 + 9] = 0x67\n 34979: u8 [a0 + 8] = 0x6e\n 34983: u8 [a0 + 7] = 0x69\n 34987: u8 [a0 + 6] = 0x74\n 34991: u8 [a0 + 5] = 0x6e\n 34995: u8 [a0 + 4] = 0x61\n 34999: u8 [a0 + 3] = 0x68\n 35003: u8 [a0 + 2] = 0x63\n 35007: u8 [a0 + 1] = 0x6e\n 35011: a2 = u64 [sp + 0x20]\n 35014: a2 = a2 + 0xfffffffffffffca0\n 35018: a3 = u64 [sp + 0x68]\n 35021: a2 = a3 <u a2\n 35024: a3 = u64 [sp + 0x60]\n 35027: a2 = 0 if a3 != 0\n 35029: a3 = u64 [sp + 0x58]\n 35032: a2 = 0 if a3 != 0\n 35034: u8 [a0 + 0] = 0x65\n 35037: jump @504 if a2 != 0\n      : @503 (gas: 1)\n 35040: jump @961\n      : @504 (gas: 4)\n 35043: a0 = u64 [sp + 0x50]\n 35046: i32 a0 = a0 + 0x360\n 35050: a1 = 0x20\n 35053: ra = 404, jump @0\n      : @505 [@dyn 202] (gas: 77)\n 35060: a1 = u64 [sp + 0x30]\n 35063: a1 = reverse a1\n 35065: a2 = u64 [sp + 0x38]\n 35068: a2 = reverse a2\n 35070: a3 = reverse s1\n 35072: a4 = u64 [sp + 0x10]\n 35075: a4 = reverse a4\n 35077: a5 = a4 >> 0x38\n 35080: u8 [a0 + 0x1f] = a5\n 35083: a5 = a4 >> 0x30\n 35086: u8 [a0 + 0x1e] = a5\n 35089: a5 = a4 >> 0x28\n 35092: u8 [a0 + 0x1d] = a5\n 35095: a5 = a4 >> 0x20\n 35098: u8 [a0 + 0x1c] = a5\n 35101: a5 = a4 >> 0x18\n 35104: u8 [a0 + 0x1b] = a5\n 35107: a5 = a4 >> 0x10\n 35110: u8 [a0 + 0x1a] = a5\n 35113: a5 = a4 >> 0x8\n 35116: u8 [a0 + 0x19] = a5\n 35119: u8 [a0 + 0x18] = a4\n 35122: u8 [a0 + 0x10] = a3\n 35125: a4 = a3 >> 0x38\n 35128: u8 [a0 + 0x17] = a4\n 35131: a4 = a3 >> 0x30\n 35134: u8 [a0 + 0x16] = a4\n 35137: a4 = a3 >> 0x28\n 35140: u8 [a0 + 0x15] = a4\n 35143: a4 = a3 >> 0x20\n 35146: u8 [a0 + 0x14] = a4\n 35149: a4 = a3 >> 0x18\n 35152: u8 [a0 + 0x13] = a4\n 35155: a4 = a3 >> 0x10\n 35158: u8 [a0 + 0x12] = a4\n 35161: a3 = a3 >> 0x8\n 35164: u8 [a0 + 0x11] = a3\n 35167: u8 [a0 + 0x8] = a2\n 35170: a3 = a2 >> 0x38\n 35173: u8 [a0 + 0xf] = a3\n 35176: a3 = a2 >> 0x30\n 35179: u8 [a0 + 0xe] = a3\n 35182: a3 = a2 >> 0x28\n 35185: u8 [a0 + 0xd] = a3\n 35188: a3 = a2 >> 0x20\n 35191: u8 [a0 + 0xc] = a3\n 35194: a3 = a2 >> 0x18\n 35197: u8 [a0 + 0xb] = a3\n 35200: a3 = a2 >> 0x10\n 35203: u8 [a0 + 0xa] = a3\n 35206: a2 = a2 >> 0x8\n 35209: u8 [a0 + 0x9] = a2\n 35212: u8 [a0] = a1\n 35214: a2 = a1 >> 0x38\n 35217: u8 [a0 + 0x7] = a2\n 35220: a2 = a1 >> 0x30\n 35223: u8 [a0 + 0x6] = a2\n 35226: a2 = a1 >> 0x28\n 35229: u8 [a0 + 0x5] = a2\n 35232: a2 = a1 >> 0x20\n 35235: u8 [a0 + 0x4] = a2\n 35238: a2 = a1 >> 0x18\n 35241: u8 [a0 + 0x3] = a2\n 35244: a2 = a1 >> 0x10\n 35247: u8 [a0 + 0x2] = a2\n 35250: a1 = a1 >> 0x8\n 35253: u8 [a0 + 0x1] = a1\n 35256: s1 = sp + 0x7e8\n 35260: u64 [s1 + 1120] = 0\n 35264: u64 [s1 + 1112] = 0\n 35268: u64 [s1 + 1096] = 0x40\n 35273: a0 = sp + 0x7ff\n 35277: a0 = a0 + 0x451\n 35281: a1 = sp + 0x7ff\n 35285: a1 = a1 + 0x431\n 35289: u64 [s1 + 1104] = 0\n 35293: ra = 406, jump @56\n      : @506 [@dyn 203] (gas: 15)\n 35300: a1 = u64 [s1 + 0x480]\n 35304: a2 = u64 [s1 + 0x478]\n 35308: a0 = u64 [s1 + 0x470]\n 35312: s1 = u64 [s1 + 0x468]\n 35316: u64 [sp + 0x28] = a0\n 35319: u64 [sp + 0x30] = a1\n 35322: a0 = a0 | a1\n 35325: a1 = s1 | a2\n 35328: a1 = a1 | a0\n 35331: a1 = a1 >> 0x20\n 35334: u64 [sp + 0x38] = a2\n 35337: a0 = a0 | a2\n 35340: a0 = a0 << 0x20\n 35343: a0 = a0 | a1\n 35346: jump @508 if a0 == 0\n      : @507 (gas: 1)\n 35349: jump @961\n      : @508 (gas: 4)\n 35352: i32 a0 = s1 + 0\n 35354: a1 = 0x20\n 35357: u64 [sp + 0x18] = a0\n 35360: ra = 408, jump @0\n      : @509 [@dyn 204] (gas: 44)\n 35367: u8 [a0 + 31] = 0x9\n 35371: a1 = u64 [sp + 0x30]\n 35374: a2 = u64 [sp + 0x38]\n 35377: a2 = a2 | a1\n 35380: a1 = 0x100000000\n 35390: u64 [sp + 0x20] = a1\n 35393: a1 = 0xffffffe0\n 35403: u64 [sp + 0x10] = s1\n 35406: a1 = s1 <u a1\n 35409: s1 = u64 [sp + 0x28]\n 35412: a1 = 0 if s1 != 0\n 35414: a1 = 0 if a2 != 0\n 35416: u8 [a0 + 30] = 0\n 35419: u8 [a0 + 29] = 0\n 35422: u8 [a0 + 28] = 0\n 35425: u8 [a0 + 27] = 0\n 35428: u8 [a0 + 26] = 0\n 35431: u8 [a0 + 25] = 0\n 35434: u8 [a0 + 24] = 0\n 35437: u8 [a0 + 23] = 0\n 35440: u8 [a0 + 22] = 0\n 35443: u8 [a0 + 21] = 0\n 35446: u8 [a0 + 20] = 0\n 35449: u8 [a0 + 19] = 0\n 35452: u8 [a0 + 18] = 0\n 35455: u8 [a0 + 17] = 0\n 35458: u8 [a0 + 16] = 0\n 35461: u8 [a0 + 15] = 0\n 35464: u8 [a0 + 14] = 0\n 35467: u8 [a0 + 13] = 0\n 35470: u8 [a0 + 12] = 0\n 35473: u8 [a0 + 11] = 0\n 35476: u8 [a0 + 10] = 0\n 35479: u8 [a0 + 9] = 0\n 35482: u8 [a0 + 8] = 0\n 35485: u8 [a0 + 7] = 0\n 35488: u8 [a0 + 6] = 0\n 35491: u8 [a0 + 5] = 0\n 35494: u8 [a0 + 4] = 0\n 35497: u8 [a0 + 3] = 0\n 35500: u8 [a0 + 2] = 0\n 35503: u8 [a0 + 1] = 0\n 35506: u8 [a0 + 0] = 0\n 35508: jump @511 if a1 != 0\n      : @510 (gas: 1)\n 35511: jump @961\n      : @511 (gas: 4)\n 35514: a0 = u64 [sp + 0x18]\n 35517: i32 a0 = a0 + 0x20\n 35520: a1 = 0x20\n 35523: ra = 410, jump @0\n      : @512 [@dyn 205] (gas: 41)\n 35530: u8 [a0 + 31] = 0\n 35533: u8 [a0 + 30] = 0\n 35536: u8 [a0 + 29] = 0\n 35539: u8 [a0 + 28] = 0\n 35542: u8 [a0 + 27] = 0\n 35545: u8 [a0 + 26] = 0\n 35548: u8 [a0 + 25] = 0\n 35551: u8 [a0 + 24] = 0\n 35554: u8 [a0 + 23] = 0\n 35557: u8 [a0 + 22] = 0\n 35560: u8 [a0 + 21] = 0\n 35563: u8 [a0 + 20] = 0\n 35566: u8 [a0 + 19] = 0\n 35569: u8 [a0 + 18] = 0\n 35572: u8 [a0 + 17] = 0\n 35575: u8 [a0 + 16] = 0\n 35578: u8 [a0 + 15] = 0\n 35581: u8 [a0 + 14] = 0\n 35584: u8 [a0 + 13] = 0\n 35587: u8 [a0 + 12] = 0\n 35590: u8 [a0 + 11] = 0\n 35593: u8 [a0 + 10] = 0\n 35596: u8 [a0 + 9] = 0\n 35599: u8 [a0 + 8] = 0x63\n 35603: u8 [a0 + 7] = 0x69\n 35607: u8 [a0 + 6] = 0x74\n 35611: u8 [a0 + 5] = 0x65\n 35615: u8 [a0 + 4] = 0x67\n 35619: u8 [a0 + 3] = 0x72\n 35623: u8 [a0 + 2] = 0x65\n 35627: u8 [a0 + 1] = 0x6e\n 35631: a2 = u64 [sp + 0x20]\n 35634: a2 = a2 + 0xfffffffffffffc80\n 35638: a3 = u64 [sp + 0x68]\n 35641: a2 = a3 <u a2\n 35644: a3 = u64 [sp + 0x60]\n 35647: a2 = 0 if a3 != 0\n 35649: a3 = u64 [sp + 0x58]\n 35652: a2 = 0 if a3 != 0\n 35654: u8 [a0 + 0] = 0x65\n 35657: jump @514 if a2 != 0\n      : @513 (gas: 1)\n 35660: jump @961\n      : @514 (gas: 4)\n 35663: a0 = u64 [sp + 0x50]\n 35666: i32 a0 = a0 + 0x380\n 35670: a1 = 0x20\n 35673: ra = 412, jump @0\n      : @515 [@dyn 206] (gas: 77)\n 35680: a1 = u64 [sp + 0x30]\n 35683: a1 = reverse a1\n 35685: a2 = u64 [sp + 0x38]\n 35688: a2 = reverse a2\n 35690: a3 = reverse s1\n 35692: a4 = u64 [sp + 0x10]\n 35695: a4 = reverse a4\n 35697: a5 = a4 >> 0x38\n 35700: u8 [a0 + 0x1f] = a5\n 35703: a5 = a4 >> 0x30\n 35706: u8 [a0 + 0x1e] = a5\n 35709: a5 = a4 >> 0x28\n 35712: u8 [a0 + 0x1d] = a5\n 35715: a5 = a4 >> 0x20\n 35718: u8 [a0 + 0x1c] = a5\n 35721: a5 = a4 >> 0x18\n 35724: u8 [a0 + 0x1b] = a5\n 35727: a5 = a4 >> 0x10\n 35730: u8 [a0 + 0x1a] = a5\n 35733: a5 = a4 >> 0x8\n 35736: u8 [a0 + 0x19] = a5\n 35739: u8 [a0 + 0x18] = a4\n 35742: u8 [a0 + 0x10] = a3\n 35745: a4 = a3 >> 0x38\n 35748: u8 [a0 + 0x17] = a4\n 35751: a4 = a3 >> 0x30\n 35754: u8 [a0 + 0x16] = a4\n 35757: a4 = a3 >> 0x28\n 35760: u8 [a0 + 0x15] = a4\n 35763: a4 = a3 >> 0x20\n 35766: u8 [a0 + 0x14] = a4\n 35769: a4 = a3 >> 0x18\n 35772: u8 [a0 + 0x13] = a4\n 35775: a4 = a3 >> 0x10\n 35778: u8 [a0 + 0x12] = a4\n 35781: a3 = a3 >> 0x8\n 35784: u8 [a0 + 0x11] = a3\n 35787: u8 [a0 + 0x8] = a2\n 35790: a3 = a2 >> 0x38\n 35793: u8 [a0 + 0xf] = a3\n 35796: a3 = a2 >> 0x30\n 35799: u8 [a0 + 0xe] = a3\n 35802: a3 = a2 >> 0x28\n 35805: u8 [a0 + 0xd] = a3\n 35808: a3 = a2 >> 0x20\n 35811: u8 [a0 + 0xc] = a3\n 35814: a3 = a2 >> 0x18\n 35817: u8 [a0 + 0xb] = a3\n 35820: a3 = a2 >> 0x10\n 35823: u8 [a0 + 0xa] = a3\n 35826: a2 = a2 >> 0x8\n 35829: u8 [a0 + 0x9] = a2\n 35832: u8 [a0] = a1\n 35834: a2 = a1 >> 0x38\n 35837: u8 [a0 + 0x7] = a2\n 35840: a2 = a1 >> 0x30\n 35843: u8 [a0 + 0x6] = a2\n 35846: a2 = a1 >> 0x28\n 35849: u8 [a0 + 0x5] = a2\n 35852: a2 = a1 >> 0x20\n 35855: u8 [a0 + 0x4] = a2\n 35858: a2 = a1 >> 0x18\n 35861: u8 [a0 + 0x3] = a2\n 35864: a2 = a1 >> 0x10\n 35867: u8 [a0 + 0x2] = a2\n 35870: a1 = a1 >> 0x8\n 35873: u8 [a0 + 0x1] = a1\n 35876: s1 = sp + 0x7e8\n 35880: u64 [s1 + 1056] = 0\n 35884: u64 [s1 + 1048] = 0\n 35888: u64 [s1 + 1032] = 0x40\n 35893: a0 = sp + 0x7ff\n 35897: a0 = a0 + 0x411\n 35901: a1 = sp + 0x7ff\n 35905: a1 = a1 + 0x3f1\n 35909: u64 [s1 + 1040] = 0\n 35913: ra = 414, jump @56\n      : @516 [@dyn 207] (gas: 15)\n 35920: a1 = u64 [s1 + 0x440]\n 35924: a2 = u64 [s1 + 0x438]\n 35928: a0 = u64 [s1 + 0x430]\n 35932: s1 = u64 [s1 + 0x428]\n 35936: u64 [sp + 0x28] = a0\n 35939: u64 [sp + 0x30] = a1\n 35942: a0 = a0 | a1\n 35945: a1 = s1 | a2\n 35948: a1 = a1 | a0\n 35951: a1 = a1 >> 0x20\n 35954: u64 [sp + 0x38] = a2\n 35957: a0 = a0 | a2\n 35960: a0 = a0 << 0x20\n 35963: a0 = a0 | a1\n 35966: jump @518 if a0 == 0\n      : @517 (gas: 1)\n 35969: jump @961\n      : @518 (gas: 4)\n 35972: i32 a0 = s1 + 0\n 35974: a1 = 0x20\n 35977: u64 [sp + 0x18] = a0\n 35980: ra = 416, jump @0\n      : @519 [@dyn 208] (gas: 44)\n 35987: u8 [a0 + 31] = 0xc\n 35991: a1 = u64 [sp + 0x30]\n 35994: a2 = u64 [sp + 0x38]\n 35997: a2 = a2 | a1\n 36000: a1 = 0x100000000\n 36010: u64 [sp + 0x20] = a1\n 36013: a1 = 0xffffffe0\n 36023: u64 [sp + 0x10] = s1\n 36026: a1 = s1 <u a1\n 36029: s1 = u64 [sp + 0x28]\n 36032: a1 = 0 if s1 != 0\n 36034: a1 = 0 if a2 != 0\n 36036: u8 [a0 + 30] = 0\n 36039: u8 [a0 + 29] = 0\n 36042: u8 [a0 + 28] = 0\n 36045: u8 [a0 + 27] = 0\n 36048: u8 [a0 + 26] = 0\n 36051: u8 [a0 + 25] = 0\n 36054: u8 [a0 + 24] = 0\n 36057: u8 [a0 + 23] = 0\n 36060: u8 [a0 + 22] = 0\n 36063: u8 [a0 + 21] = 0\n 36066: u8 [a0 + 20] = 0\n 36069: u8 [a0 + 19] = 0\n 36072: u8 [a0 + 18] = 0\n 36075: u8 [a0 + 17] = 0\n 36078: u8 [a0 + 16] = 0\n 36081: u8 [a0 + 15] = 0\n 36084: u8 [a0 + 14] = 0\n 36087: u8 [a0 + 13] = 0\n 36090: u8 [a0 + 12] = 0\n 36093: u8 [a0 + 11] = 0\n 36096: u8 [a0 + 10] = 0\n 36099: u8 [a0 + 9] = 0\n 36102: u8 [a0 + 8] = 0\n 36105: u8 [a0 + 7] = 0\n 36108: u8 [a0 + 6] = 0\n 36111: u8 [a0 + 5] = 0\n 36114: u8 [a0 + 4] = 0\n 36117: u8 [a0 + 3] = 0\n 36120: u8 [a0 + 2] = 0\n 36123: u8 [a0 + 1] = 0\n 36126: u8 [a0 + 0] = 0\n 36128: jump @521 if a1 != 0\n      : @520 (gas: 1)\n 36131: jump @961\n      : @521 (gas: 4)\n 36134: a0 = u64 [sp + 0x18]\n 36137: i32 a0 = a0 + 0x20\n 36140: a1 = 0x20\n 36143: ra = 418, jump @0\n      : @522 [@dyn 209] (gas: 42)\n 36150: u8 [a0 + 31] = 0\n 36153: u8 [a0 + 30] = 0\n 36156: u8 [a0 + 29] = 0\n 36159: u8 [a0 + 28] = 0\n 36162: u8 [a0 + 27] = 0\n 36165: u8 [a0 + 26] = 0\n 36168: u8 [a0 + 25] = 0\n 36171: u8 [a0 + 24] = 0\n 36174: u8 [a0 + 23] = 0\n 36177: u8 [a0 + 22] = 0\n 36180: u8 [a0 + 21] = 0\n 36183: u8 [a0 + 20] = 0\n 36186: u8 [a0 + 19] = 0\n 36189: u8 [a0 + 18] = 0\n 36192: u8 [a0 + 17] = 0\n 36195: u8 [a0 + 16] = 0\n 36198: u8 [a0 + 15] = 0\n 36201: u8 [a0 + 14] = 0\n 36204: u8 [a0 + 13] = 0\n 36207: u8 [a0 + 12] = 0\n 36210: u8 [a0 + 11] = 0x63\n 36214: u8 [a0 + 10] = 0x69\n 36218: u8 [a0 + 9] = 0x74\n 36222: u8 [a0 + 8] = 0x73\n 36226: a4 = 0x61\n 36229: u8 [a0 + 0x7] = a4\n 36232: u8 [a0 + 6] = 0x69\n 36236: u8 [a0 + 5] = 0x73\n 36240: u8 [a0 + 4] = 0x75\n 36244: u8 [a0 + 3] = 0x68\n 36248: u8 [a0 + 2] = 0x74\n 36252: u8 [a0 + 1] = 0x6e\n 36256: a2 = u64 [sp + 0x20]\n 36259: a2 = a2 + 0xfffffffffffffc60\n 36263: a3 = u64 [sp + 0x68]\n 36266: a2 = a3 <u a2\n 36269: a3 = u64 [sp + 0x60]\n 36272: a2 = 0 if a3 != 0\n 36274: a3 = u64 [sp + 0x58]\n 36277: a2 = 0 if a3 != 0\n 36279: u8 [a0 + 0] = 0x65\n 36282: jump @524 if a2 != 0\n      : @523 (gas: 1)\n 36285: jump @961\n      : @524 (gas: 4)\n 36288: a0 = u64 [sp + 0x50]\n 36291: i32 a0 = a0 + 0x3a0\n 36295: a1 = 0x20\n 36298: ra = 420, jump @0\n      : @525 [@dyn 210] (gas: 77)\n 36305: a1 = u64 [sp + 0x30]\n 36308: a1 = reverse a1\n 36310: a2 = u64 [sp + 0x38]\n 36313: a2 = reverse a2\n 36315: a3 = reverse s1\n 36317: a4 = u64 [sp + 0x10]\n 36320: a4 = reverse a4\n 36322: a5 = a4 >> 0x38\n 36325: u8 [a0 + 0x1f] = a5\n 36328: a5 = a4 >> 0x30\n 36331: u8 [a0 + 0x1e] = a5\n 36334: a5 = a4 >> 0x28\n 36337: u8 [a0 + 0x1d] = a5\n 36340: a5 = a4 >> 0x20\n 36343: u8 [a0 + 0x1c] = a5\n 36346: a5 = a4 >> 0x18\n 36349: u8 [a0 + 0x1b] = a5\n 36352: a5 = a4 >> 0x10\n 36355: u8 [a0 + 0x1a] = a5\n 36358: a5 = a4 >> 0x8\n 36361: u8 [a0 + 0x19] = a5\n 36364: u8 [a0 + 0x18] = a4\n 36367: u8 [a0 + 0x10] = a3\n 36370: a4 = a3 >> 0x38\n 36373: u8 [a0 + 0x17] = a4\n 36376: a4 = a3 >> 0x30\n 36379: u8 [a0 + 0x16] = a4\n 36382: a4 = a3 >> 0x28\n 36385: u8 [a0 + 0x15] = a4\n 36388: a4 = a3 >> 0x20\n 36391: u8 [a0 + 0x14] = a4\n 36394: a4 = a3 >> 0x18\n 36397: u8 [a0 + 0x13] = a4\n 36400: a4 = a3 >> 0x10\n 36403: u8 [a0 + 0x12] = a4\n 36406: a3 = a3 >> 0x8\n 36409: u8 [a0 + 0x11] = a3\n 36412: u8 [a0 + 0x8] = a2\n 36415: a3 = a2 >> 0x38\n 36418: u8 [a0 + 0xf] = a3\n 36421: a3 = a2 >> 0x30\n 36424: u8 [a0 + 0xe] = a3\n 36427: a3 = a2 >> 0x28\n 36430: u8 [a0 + 0xd] = a3\n 36433: a3 = a2 >> 0x20\n 36436: u8 [a0 + 0xc] = a3\n 36439: a3 = a2 >> 0x18\n 36442: u8 [a0 + 0xb] = a3\n 36445: a3 = a2 >> 0x10\n 36448: u8 [a0 + 0xa] = a3\n 36451: a2 = a2 >> 0x8\n 36454: u8 [a0 + 0x9] = a2\n 36457: u8 [a0] = a1\n 36459: a2 = a1 >> 0x38\n 36462: u8 [a0 + 0x7] = a2\n 36465: a2 = a1 >> 0x30\n 36468: u8 [a0 + 0x6] = a2\n 36471: a2 = a1 >> 0x28\n 36474: u8 [a0 + 0x5] = a2\n 36477: a2 = a1 >> 0x20\n 36480: u8 [a0 + 0x4] = a2\n 36483: a2 = a1 >> 0x18\n 36486: u8 [a0 + 0x3] = a2\n 36489: a2 = a1 >> 0x10\n 36492: u8 [a0 + 0x2] = a2\n 36495: a1 = a1 >> 0x8\n 36498: u8 [a0 + 0x1] = a1\n 36501: s1 = sp + 0x7e8\n 36505: u64 [s1 + 992] = 0\n 36509: u64 [s1 + 984] = 0\n 36513: u64 [s1 + 968] = 0x40\n 36518: a0 = sp + 0x7ff\n 36522: a0 = a0 + 0x3d1\n 36526: a1 = sp + 0x7ff\n 36530: a1 = a1 + 0x3b1\n 36534: u64 [s1 + 976] = 0\n 36538: ra = 422, jump @56\n      : @526 [@dyn 211] (gas: 15)\n 36545: a1 = u64 [s1 + 0x400]\n 36549: a2 = u64 [s1 + 0x3f8]\n 36553: a0 = u64 [s1 + 0x3f0]\n 36557: s1 = u64 [s1 + 0x3e8]\n 36561: u64 [sp + 0x28] = a0\n 36564: u64 [sp + 0x30] = a1\n 36567: a0 = a0 | a1\n 36570: a1 = s1 | a2\n 36573: a1 = a1 | a0\n 36576: a1 = a1 >> 0x20\n 36579: u64 [sp + 0x38] = a2\n 36582: a0 = a0 | a2\n 36585: a0 = a0 << 0x20\n 36588: a0 = a0 | a1\n 36591: jump @528 if a0 == 0\n      : @527 (gas: 1)\n 36594: jump @961\n      : @528 (gas: 4)\n 36597: i32 a0 = s1 + 0\n 36599: a1 = 0x20\n 36602: u64 [sp + 0x18] = a0\n 36605: ra = 424, jump @0\n      : @529 [@dyn 212] (gas: 44)\n 36612: u8 [a0 + 31] = 0x9\n 36616: a1 = u64 [sp + 0x30]\n 36619: a2 = u64 [sp + 0x38]\n 36622: a2 = a2 | a1\n 36625: a1 = 0x100000000\n 36635: u64 [sp + 0x20] = a1\n 36638: a1 = 0xffffffe0\n 36648: u64 [sp + 0x10] = s1\n 36651: a1 = s1 <u a1\n 36654: s1 = u64 [sp + 0x28]\n 36657: a1 = 0 if s1 != 0\n 36659: a1 = 0 if a2 != 0\n 36661: u8 [a0 + 30] = 0\n 36664: u8 [a0 + 29] = 0\n 36667: u8 [a0 + 28] = 0\n 36670: u8 [a0 + 27] = 0\n 36673: u8 [a0 + 26] = 0\n 36676: u8 [a0 + 25] = 0\n 36679: u8 [a0 + 24] = 0\n 36682: u8 [a0 + 23] = 0\n 36685: u8 [a0 + 22] = 0\n 36688: u8 [a0 + 21] = 0\n 36691: u8 [a0 + 20] = 0\n 36694: u8 [a0 + 19] = 0\n 36697: u8 [a0 + 18] = 0\n 36700: u8 [a0 + 17] = 0\n 36703: u8 [a0 + 16] = 0\n 36706: u8 [a0 + 15] = 0\n 36709: u8 [a0 + 14] = 0\n 36712: u8 [a0 + 13] = 0\n 36715: u8 [a0 + 12] = 0\n 36718: u8 [a0 + 11] = 0\n 36721: u8 [a0 + 10] = 0\n 36724: u8 [a0 + 9] = 0\n 36727: u8 [a0 + 8] = 0\n 36730: u8 [a0 + 7] = 0\n 36733: u8 [a0 + 6] = 0\n 36736: u8 [a0 + 5] = 0\n 36739: u8 [a0 + 4] = 0\n 36742: u8 [a0 + 3] = 0\n 36745: u8 [a0 + 2] = 0\n 36748: u8 [a0 + 1] = 0\n 36751: u8 [a0 + 0] = 0\n 36753: jump @531 if a1 != 0\n      : @530 (gas: 1)\n 36756: jump @961\n      : @531 (gas: 4)\n 36759: a0 = u64 [sp + 0x18]\n 36762: i32 a0 = a0 + 0x20\n 36765: a1 = 0x20\n 36768: ra = 426, jump @0\n      : @532 [@dyn 213] (gas: 41)\n 36775: u8 [a0 + 31] = 0\n 36778: u8 [a0 + 30] = 0\n 36781: u8 [a0 + 29] = 0\n 36784: u8 [a0 + 28] = 0\n 36787: u8 [a0 + 27] = 0\n 36790: u8 [a0 + 26] = 0\n 36793: u8 [a0 + 25] = 0\n 36796: u8 [a0 + 24] = 0\n 36799: u8 [a0 + 23] = 0\n 36802: u8 [a0 + 22] = 0\n 36805: u8 [a0 + 21] = 0\n 36808: u8 [a0 + 20] = 0\n 36811: u8 [a0 + 19] = 0\n 36814: u8 [a0 + 18] = 0\n 36817: u8 [a0 + 17] = 0\n 36820: u8 [a0 + 16] = 0\n 36823: u8 [a0 + 15] = 0\n 36826: u8 [a0 + 14] = 0\n 36829: u8 [a0 + 13] = 0\n 36832: u8 [a0 + 12] = 0\n 36835: u8 [a0 + 11] = 0\n 36838: u8 [a0 + 10] = 0\n 36841: u8 [a0 + 9] = 0\n 36844: u8 [a0 + 8] = 0x74\n 36848: u8 [a0 + 7] = 0x6e\n 36852: u8 [a0 + 6] = 0x65\n 36856: u8 [a0 + 5] = 0x6c\n 36860: u8 [a0 + 4] = 0x6c\n 36864: u8 [a0 + 3] = 0x65\n 36868: u8 [a0 + 2] = 0x63\n 36872: u8 [a0 + 1] = 0x78\n 36876: a2 = u64 [sp + 0x20]\n 36879: a2 = a2 + 0xfffffffffffffc40\n 36883: a3 = u64 [sp + 0x68]\n 36886: a2 = a3 <u a2\n 36889: a3 = u64 [sp + 0x60]\n 36892: a2 = 0 if a3 != 0\n 36894: a3 = u64 [sp + 0x58]\n 36897: a2 = 0 if a3 != 0\n 36899: u8 [a0 + 0] = 0x65\n 36902: jump @534 if a2 != 0\n      : @533 (gas: 1)\n 36905: jump @961\n      : @534 (gas: 4)\n 36908: a0 = u64 [sp + 0x50]\n 36911: i32 a0 = a0 + 0x3c0\n 36915: a1 = 0x20\n 36918: ra = 428, jump @0\n      : @535 [@dyn 214] (gas: 77)\n 36925: a1 = u64 [sp + 0x30]\n 36928: a1 = reverse a1\n 36930: a2 = u64 [sp + 0x38]\n 36933: a2 = reverse a2\n 36935: a3 = reverse s1\n 36937: a4 = u64 [sp + 0x10]\n 36940: a4 = reverse a4\n 36942: a5 = a4 >> 0x38\n 36945: u8 [a0 + 0x1f] = a5\n 36948: a5 = a4 >> 0x30\n 36951: u8 [a0 + 0x1e] = a5\n 36954: a5 = a4 >> 0x28\n 36957: u8 [a0 + 0x1d] = a5\n 36960: a5 = a4 >> 0x20\n 36963: u8 [a0 + 0x1c] = a5\n 36966: a5 = a4 >> 0x18\n 36969: u8 [a0 + 0x1b] = a5\n 36972: a5 = a4 >> 0x10\n 36975: u8 [a0 + 0x1a] = a5\n 36978: a5 = a4 >> 0x8\n 36981: u8 [a0 + 0x19] = a5\n 36984: u8 [a0 + 0x18] = a4\n 36987: u8 [a0 + 0x10] = a3\n 36990: a4 = a3 >> 0x38\n 36993: u8 [a0 + 0x17] = a4\n 36996: a4 = a3 >> 0x30\n 36999: u8 [a0 + 0x16] = a4\n 37002: a4 = a3 >> 0x28\n 37005: u8 [a0 + 0x15] = a4\n 37008: a4 = a3 >> 0x20\n 37011: u8 [a0 + 0x14] = a4\n 37014: a4 = a3 >> 0x18\n 37017: u8 [a0 + 0x13] = a4\n 37020: a4 = a3 >> 0x10\n 37023: u8 [a0 + 0x12] = a4\n 37026: a3 = a3 >> 0x8\n 37029: u8 [a0 + 0x11] = a3\n 37032: u8 [a0 + 0x8] = a2\n 37035: a3 = a2 >> 0x38\n 37038: u8 [a0 + 0xf] = a3\n 37041: a3 = a2 >> 0x30\n 37044: u8 [a0 + 0xe] = a3\n 37047: a3 = a2 >> 0x28\n 37050: u8 [a0 + 0xd] = a3\n 37053: a3 = a2 >> 0x20\n 37056: u8 [a0 + 0xc] = a3\n 37059: a3 = a2 >> 0x18\n 37062: u8 [a0 + 0xb] = a3\n 37065: a3 = a2 >> 0x10\n 37068: u8 [a0 + 0xa] = a3\n 37071: a2 = a2 >> 0x8\n 37074: u8 [a0 + 0x9] = a2\n 37077: u8 [a0] = a1\n 37079: a2 = a1 >> 0x38\n 37082: u8 [a0 + 0x7] = a2\n 37085: a2 = a1 >> 0x30\n 37088: u8 [a0 + 0x6] = a2\n 37091: a2 = a1 >> 0x28\n 37094: u8 [a0 + 0x5] = a2\n 37097: a2 = a1 >> 0x20\n 37100: u8 [a0 + 0x4] = a2\n 37103: a2 = a1 >> 0x18\n 37106: u8 [a0 + 0x3] = a2\n 37109: a2 = a1 >> 0x10\n 37112: u8 [a0 + 0x2] = a2\n 37115: a1 = a1 >> 0x8\n 37118: u8 [a0 + 0x1] = a1\n 37121: s1 = sp + 0x7e8\n 37125: u64 [s1 + 928] = 0\n 37129: u64 [s1 + 920] = 0\n 37133: u64 [s1 + 904] = 0x40\n 37138: a0 = sp + 0x7ff\n 37142: a0 = a0 + 0x391\n 37146: a1 = sp + 0x7ff\n 37150: a1 = a1 + 0x371\n 37154: u64 [s1 + 912] = 0\n 37158: ra = 430, jump @56\n      : @536 [@dyn 215] (gas: 15)\n 37165: a1 = u64 [s1 + 0x3c0]\n 37169: a2 = u64 [s1 + 0x3b8]\n 37173: a0 = u64 [s1 + 0x3b0]\n 37177: s1 = u64 [s1 + 0x3a8]\n 37181: u64 [sp + 0x28] = a0\n 37184: u64 [sp + 0x30] = a1\n 37187: a0 = a0 | a1\n 37190: a1 = s1 | a2\n 37193: a1 = a1 | a0\n 37196: a1 = a1 >> 0x20\n 37199: u64 [sp + 0x38] = a2\n 37202: a0 = a0 | a2\n 37205: a0 = a0 << 0x20\n 37208: a0 = a0 | a1\n 37211: jump @538 if a0 == 0\n      : @537 (gas: 1)\n 37214: jump @961\n      : @538 (gas: 4)\n 37217: i32 a0 = s1 + 0\n 37219: a1 = 0x20\n 37222: u64 [sp + 0x18] = a0\n 37225: ra = 432, jump @0\n      : @539 [@dyn 216] (gas: 44)\n 37232: u8 [a0 + 31] = 0xb\n 37236: a1 = u64 [sp + 0x30]\n 37239: a2 = u64 [sp + 0x38]\n 37242: a2 = a2 | a1\n 37245: a1 = 0x100000000\n 37255: u64 [sp + 0x20] = a1\n 37258: a1 = 0xffffffe0\n 37268: u64 [sp + 0x10] = s1\n 37271: a1 = s1 <u a1\n 37274: s1 = u64 [sp + 0x28]\n 37277: a1 = 0 if s1 != 0\n 37279: a1 = 0 if a2 != 0\n 37281: u8 [a0 + 30] = 0\n 37284: u8 [a0 + 29] = 0\n 37287: u8 [a0 + 28] = 0\n 37290: u8 [a0 + 27] = 0\n 37293: u8 [a0 + 26] = 0\n 37296: u8 [a0 + 25] = 0\n 37299: u8 [a0 + 24] = 0\n 37302: u8 [a0 + 23] = 0\n 37305: u8 [a0 + 22] = 0\n 37308: u8 [a0 + 21] = 0\n 37311: u8 [a0 + 20] = 0\n 37314: u8 [a0 + 19] = 0\n 37317: u8 [a0 + 18] = 0\n 37320: u8 [a0 + 17] = 0\n 37323: u8 [a0 + 16] = 0\n 37326: u8 [a0 + 15] = 0\n 37329: u8 [a0 + 14] = 0\n 37332: u8 [a0 + 13] = 0\n 37335: u8 [a0 + 12] = 0\n 37338: u8 [a0 + 11] = 0\n 37341: u8 [a0 + 10] = 0\n 37344: u8 [a0 + 9] = 0\n 37347: u8 [a0 + 8] = 0\n 37350: u8 [a0 + 7] = 0\n 37353: u8 [a0 + 6] = 0\n 37356: u8 [a0 + 5] = 0\n 37359: u8 [a0 + 4] = 0\n 37362: u8 [a0 + 3] = 0\n 37365: u8 [a0 + 2] = 0\n 37368: u8 [a0 + 1] = 0\n 37371: u8 [a0 + 0] = 0\n 37373: jump @541 if a1 != 0\n      : @540 (gas: 1)\n 37376: jump @961\n      : @541 (gas: 4)\n 37379: a0 = u64 [sp + 0x18]\n 37382: i32 a0 = a0 + 0x20\n 37385: a1 = 0x20\n 37388: ra = 434, jump @0\n      : @542 [@dyn 217] (gas: 41)\n 37395: u8 [a0 + 31] = 0\n 37398: u8 [a0 + 30] = 0\n 37401: u8 [a0 + 29] = 0\n 37404: u8 [a0 + 28] = 0\n 37407: u8 [a0 + 27] = 0\n 37410: u8 [a0 + 26] = 0\n 37413: u8 [a0 + 25] = 0\n 37416: u8 [a0 + 24] = 0\n 37419: u8 [a0 + 23] = 0\n 37422: u8 [a0 + 22] = 0\n 37425: u8 [a0 + 21] = 0\n 37428: u8 [a0 + 20] = 0\n 37431: u8 [a0 + 19] = 0\n 37434: u8 [a0 + 18] = 0\n 37437: u8 [a0 + 17] = 0\n 37440: u8 [a0 + 16] = 0\n 37443: u8 [a0 + 15] = 0\n 37446: u8 [a0 + 14] = 0\n 37449: u8 [a0 + 13] = 0\n 37452: u8 [a0 + 12] = 0\n 37455: u8 [a0 + 11] = 0\n 37458: u8 [a0 + 10] = 0x6c\n 37462: u8 [a0 + 9] = 0x61\n 37466: u8 [a0 + 8] = 0x6e\n 37470: u8 [a0 + 7] = 0x6f\n 37474: u8 [a0 + 6] = 0x69\n 37478: u8 [a0 + 5] = 0x74\n 37482: u8 [a0 + 4] = 0x70\n 37486: u8 [a0 + 3] = 0x65\n 37490: u8 [a0 + 2] = 0x63\n 37494: u8 [a0 + 1] = 0x78\n 37498: a2 = u64 [sp + 0x20]\n 37501: a2 = a2 + 0xfffffffffffffc20\n 37505: a3 = u64 [sp + 0x68]\n 37508: a2 = a3 <u a2\n 37511: a3 = u64 [sp + 0x60]\n 37514: a2 = 0 if a3 != 0\n 37516: a3 = u64 [sp + 0x58]\n 37519: a2 = 0 if a3 != 0\n 37521: u8 [a0 + 0] = 0x65\n 37524: jump @544 if a2 != 0\n      : @543 (gas: 1)\n 37527: jump @961\n      : @544 (gas: 4)\n 37530: a0 = u64 [sp + 0x50]\n 37533: i32 a0 = a0 + 0x3e0\n 37537: a1 = 0x20\n 37540: ra = 436, jump @0\n      : @545 [@dyn 218] (gas: 77)\n 37547: a1 = u64 [sp + 0x30]\n 37550: a1 = reverse a1\n 37552: a2 = u64 [sp + 0x38]\n 37555: a2 = reverse a2\n 37557: a3 = reverse s1\n 37559: a4 = u64 [sp + 0x10]\n 37562: a4 = reverse a4\n 37564: a5 = a4 >> 0x38\n 37567: u8 [a0 + 0x1f] = a5\n 37570: a5 = a4 >> 0x30\n 37573: u8 [a0 + 0x1e] = a5\n 37576: a5 = a4 >> 0x28\n 37579: u8 [a0 + 0x1d] = a5\n 37582: a5 = a4 >> 0x20\n 37585: u8 [a0 + 0x1c] = a5\n 37588: a5 = a4 >> 0x18\n 37591: u8 [a0 + 0x1b] = a5\n 37594: a5 = a4 >> 0x10\n 37597: u8 [a0 + 0x1a] = a5\n 37600: a5 = a4 >> 0x8\n 37603: u8 [a0 + 0x19] = a5\n 37606: u8 [a0 + 0x18] = a4\n 37609: u8 [a0 + 0x10] = a3\n 37612: a4 = a3 >> 0x38\n 37615: u8 [a0 + 0x17] = a4\n 37618: a4 = a3 >> 0x30\n 37621: u8 [a0 + 0x16] = a4\n 37624: a4 = a3 >> 0x28\n 37627: u8 [a0 + 0x15] = a4\n 37630: a4 = a3 >> 0x20\n 37633: u8 [a0 + 0x14] = a4\n 37636: a4 = a3 >> 0x18\n 37639: u8 [a0 + 0x13] = a4\n 37642: a4 = a3 >> 0x10\n 37645: u8 [a0 + 0x12] = a4\n 37648: a3 = a3 >> 0x8\n 37651: u8 [a0 + 0x11] = a3\n 37654: u8 [a0 + 0x8] = a2\n 37657: a3 = a2 >> 0x38\n 37660: u8 [a0 + 0xf] = a3\n 37663: a3 = a2 >> 0x30\n 37666: u8 [a0 + 0xe] = a3\n 37669: a3 = a2 >> 0x28\n 37672: u8 [a0 + 0xd] = a3\n 37675: a3 = a2 >> 0x20\n 37678: u8 [a0 + 0xc] = a3\n 37681: a3 = a2 >> 0x18\n 37684: u8 [a0 + 0xb] = a3\n 37687: a3 = a2 >> 0x10\n 37690: u8 [a0 + 0xa] = a3\n 37693: a2 = a2 >> 0x8\n 37696: u8 [a0 + 0x9] = a2\n 37699: u8 [a0] = a1\n 37701: a2 = a1 >> 0x38\n 37704: u8 [a0 + 0x7] = a2\n 37707: a2 = a1 >> 0x30\n 37710: u8 [a0 + 0x6] = a2\n 37713: a2 = a1 >> 0x28\n 37716: u8 [a0 + 0x5] = a2\n 37719: a2 = a1 >> 0x20\n 37722: u8 [a0 + 0x4] = a2\n 37725: a2 = a1 >> 0x18\n 37728: u8 [a0 + 0x3] = a2\n 37731: a2 = a1 >> 0x10\n 37734: u8 [a0 + 0x2] = a2\n 37737: a1 = a1 >> 0x8\n 37740: u8 [a0 + 0x1] = a1\n 37743: s1 = sp + 0x7e8\n 37747: u64 [s1 + 864] = 0\n 37751: u64 [s1 + 856] = 0\n 37755: u64 [s1 + 840] = 0x40\n 37760: a0 = sp + 0x7ff\n 37764: a0 = a0 + 0x351\n 37768: a1 = sp + 0x7ff\n 37772: a1 = a1 + 0x331\n 37776: u64 [s1 + 848] = 0\n 37780: ra = 438, jump @56\n      : @546 [@dyn 219] (gas: 15)\n 37787: a1 = u64 [s1 + 0x380]\n 37791: a2 = u64 [s1 + 0x378]\n 37795: a0 = u64 [s1 + 0x370]\n 37799: s1 = u64 [s1 + 0x368]\n 37803: u64 [sp + 0x28] = a0\n 37806: u64 [sp + 0x30] = a1\n 37809: a0 = a0 | a1\n 37812: a1 = s1 | a2\n 37815: a1 = a1 | a0\n 37818: a1 = a1 >> 0x20\n 37821: u64 [sp + 0x38] = a2\n 37824: a0 = a0 | a2\n 37827: a0 = a0 << 0x20\n 37830: a0 = a0 | a1\n 37833: jump @548 if a0 == 0\n      : @547 (gas: 1)\n 37836: jump @961\n      : @548 (gas: 4)\n 37839: i32 a0 = s1 + 0\n 37841: a1 = 0x20\n 37844: u64 [sp + 0x18] = a0\n 37847: ra = 440, jump @0\n      : @549 [@dyn 220] (gas: 44)\n 37854: u8 [a0 + 31] = 0x8\n 37858: a1 = u64 [sp + 0x30]\n 37861: a2 = u64 [sp + 0x38]\n 37864: a2 = a2 | a1\n 37867: a1 = 0x100000000\n 37877: u64 [sp + 0x20] = a1\n 37880: a1 = 0xffffffe0\n 37890: u64 [sp + 0x10] = s1\n 37893: a1 = s1 <u a1\n 37896: s1 = u64 [sp + 0x28]\n 37899: a1 = 0 if s1 != 0\n 37901: a1 = 0 if a2 != 0\n 37903: u8 [a0 + 30] = 0\n 37906: u8 [a0 + 29] = 0\n 37909: u8 [a0 + 28] = 0\n 37912: u8 [a0 + 27] = 0\n 37915: u8 [a0 + 26] = 0\n 37918: u8 [a0 + 25] = 0\n 37921: u8 [a0 + 24] = 0\n 37924: u8 [a0 + 23] = 0\n 37927: u8 [a0 + 22] = 0\n 37930: u8 [a0 + 21] = 0\n 37933: u8 [a0 + 20] = 0\n 37936: u8 [a0 + 19] = 0\n 37939: u8 [a0 + 18] = 0\n 37942: u8 [a0 + 17] = 0\n 37945: u8 [a0 + 16] = 0\n 37948: u8 [a0 + 15] = 0\n 37951: u8 [a0 + 14] = 0\n 37954: u8 [a0 + 13] = 0\n 37957: u8 [a0 + 12] = 0\n 37960: u8 [a0 + 11] = 0\n 37963: u8 [a0 + 10] = 0\n 37966: u8 [a0 + 9] = 0\n 37969: u8 [a0 + 8] = 0\n 37972: u8 [a0 + 7] = 0\n 37975: u8 [a0 + 6] = 0\n 37978: u8 [a0 + 5] = 0\n 37981: u8 [a0 + 4] = 0\n 37984: u8 [a0 + 3] = 0\n 37987: u8 [a0 + 2] = 0\n 37990: u8 [a0 + 1] = 0\n 37993: u8 [a0 + 0] = 0\n 37995: jump @551 if a1 != 0\n      : @550 (gas: 1)\n 37998: jump @961\n      : @551 (gas: 4)\n 38001: a0 = u64 [sp + 0x18]\n 38004: i32 a0 = a0 + 0x20\n 38007: a1 = 0x20\n 38010: ra = 442, jump @0\n      : @552 [@dyn 221] (gas: 41)\n 38017: u8 [a0 + 31] = 0\n 38020: u8 [a0 + 30] = 0\n 38023: u8 [a0 + 29] = 0\n 38026: u8 [a0 + 28] = 0\n 38029: u8 [a0 + 27] = 0\n 38032: u8 [a0 + 26] = 0\n 38035: u8 [a0 + 25] = 0\n 38038: u8 [a0 + 24] = 0\n 38041: u8 [a0 + 23] = 0\n 38044: u8 [a0 + 22] = 0\n 38047: u8 [a0 + 21] = 0\n 38050: u8 [a0 + 20] = 0\n 38053: u8 [a0 + 19] = 0\n 38056: u8 [a0 + 18] = 0\n 38059: u8 [a0 + 17] = 0\n 38062: u8 [a0 + 16] = 0\n 38065: u8 [a0 + 15] = 0\n 38068: u8 [a0 + 14] = 0\n 38071: u8 [a0 + 13] = 0\n 38074: u8 [a0 + 12] = 0\n 38077: u8 [a0 + 11] = 0\n 38080: u8 [a0 + 10] = 0\n 38083: u8 [a0 + 9] = 0\n 38086: u8 [a0 + 8] = 0\n 38089: u8 [a0 + 7] = 0x67\n 38093: u8 [a0 + 6] = 0x6e\n 38097: u8 [a0 + 5] = 0x69\n 38101: u8 [a0 + 4] = 0x74\n 38105: u8 [a0 + 3] = 0x69\n 38109: u8 [a0 + 2] = 0x63\n 38113: u8 [a0 + 1] = 0x78\n 38117: a2 = u64 [sp + 0x20]\n 38120: a2 = a2 + 0xfffffffffffffc00\n 38124: a3 = u64 [sp + 0x68]\n 38127: a2 = a3 <u a2\n 38130: a3 = u64 [sp + 0x60]\n 38133: a2 = 0 if a3 != 0\n 38135: a3 = u64 [sp + 0x58]\n 38138: a2 = 0 if a3 != 0\n 38140: u8 [a0 + 0] = 0x65\n 38143: jump @554 if a2 != 0\n      : @553 (gas: 1)\n 38146: jump @961\n      : @554 (gas: 4)\n 38149: a0 = u64 [sp + 0x50]\n 38152: i32 a0 = a0 + 0x400\n 38156: a1 = 0x20\n 38159: ra = 444, jump @0\n      : @555 [@dyn 222] (gas: 77)\n 38166: a1 = u64 [sp + 0x30]\n 38169: a1 = reverse a1\n 38171: a2 = u64 [sp + 0x38]\n 38174: a2 = reverse a2\n 38176: a3 = reverse s1\n 38178: a4 = u64 [sp + 0x10]\n 38181: a4 = reverse a4\n 38183: a5 = a4 >> 0x38\n 38186: u8 [a0 + 0x1f] = a5\n 38189: a5 = a4 >> 0x30\n 38192: u8 [a0 + 0x1e] = a5\n 38195: a5 = a4 >> 0x28\n 38198: u8 [a0 + 0x1d] = a5\n 38201: a5 = a4 >> 0x20\n 38204: u8 [a0 + 0x1c] = a5\n 38207: a5 = a4 >> 0x18\n 38210: u8 [a0 + 0x1b] = a5\n 38213: a5 = a4 >> 0x10\n 38216: u8 [a0 + 0x1a] = a5\n 38219: a5 = a4 >> 0x8\n 38222: u8 [a0 + 0x19] = a5\n 38225: u8 [a0 + 0x18] = a4\n 38228: u8 [a0 + 0x10] = a3\n 38231: a4 = a3 >> 0x38\n 38234: u8 [a0 + 0x17] = a4\n 38237: a4 = a3 >> 0x30\n 38240: u8 [a0 + 0x16] = a4\n 38243: a4 = a3 >> 0x28\n 38246: u8 [a0 + 0x15] = a4\n 38249: a4 = a3 >> 0x20\n 38252: u8 [a0 + 0x14] = a4\n 38255: a4 = a3 >> 0x18\n 38258: u8 [a0 + 0x13] = a4\n 38261: a4 = a3 >> 0x10\n 38264: u8 [a0 + 0x12] = a4\n 38267: a3 = a3 >> 0x8\n 38270: u8 [a0 + 0x11] = a3\n 38273: u8 [a0 + 0x8] = a2\n 38276: a3 = a2 >> 0x38\n 38279: u8 [a0 + 0xf] = a3\n 38282: a3 = a2 >> 0x30\n 38285: u8 [a0 + 0xe] = a3\n 38288: a3 = a2 >> 0x28\n 38291: u8 [a0 + 0xd] = a3\n 38294: a3 = a2 >> 0x20\n 38297: u8 [a0 + 0xc] = a3\n 38300: a3 = a2 >> 0x18\n 38303: u8 [a0 + 0xb] = a3\n 38306: a3 = a2 >> 0x10\n 38309: u8 [a0 + 0xa] = a3\n 38312: a2 = a2 >> 0x8\n 38315: u8 [a0 + 0x9] = a2\n 38318: u8 [a0] = a1\n 38320: a2 = a1 >> 0x38\n 38323: u8 [a0 + 0x7] = a2\n 38326: a2 = a1 >> 0x30\n 38329: u8 [a0 + 0x6] = a2\n 38332: a2 = a1 >> 0x28\n 38335: u8 [a0 + 0x5] = a2\n 38338: a2 = a1 >> 0x20\n 38341: u8 [a0 + 0x4] = a2\n 38344: a2 = a1 >> 0x18\n 38347: u8 [a0 + 0x3] = a2\n 38350: a2 = a1 >> 0x10\n 38353: u8 [a0 + 0x2] = a2\n 38356: a1 = a1 >> 0x8\n 38359: u8 [a0 + 0x1] = a1\n 38362: s1 = sp + 0x7e8\n 38366: u64 [s1 + 800] = 0\n 38370: u64 [s1 + 792] = 0\n 38374: u64 [s1 + 776] = 0x40\n 38379: a0 = sp + 0x7ff\n 38383: a0 = a0 + 0x311\n 38387: a1 = sp + 0x7ff\n 38391: a1 = a1 + 0x2f1\n 38395: u64 [s1 + 784] = 0\n 38399: ra = 446, jump @56\n      : @556 [@dyn 223] (gas: 15)\n 38406: a1 = u64 [s1 + 0x340]\n 38410: a2 = u64 [s1 + 0x338]\n 38414: a0 = u64 [s1 + 0x330]\n 38418: s1 = u64 [s1 + 0x328]\n 38422: u64 [sp + 0x28] = a0\n 38425: u64 [sp + 0x30] = a1\n 38428: a0 = a0 | a1\n 38431: a1 = s1 | a2\n 38434: a1 = a1 | a0\n 38437: a1 = a1 >> 0x20\n 38440: u64 [sp + 0x38] = a2\n 38443: a0 = a0 | a2\n 38446: a0 = a0 << 0x20\n 38449: a0 = a0 | a1\n 38452: jump @558 if a0 == 0\n      : @557 (gas: 1)\n 38455: jump @961\n      : @558 (gas: 4)\n 38458: i32 a0 = s1 + 0\n 38460: a1 = 0x20\n 38463: u64 [sp + 0x18] = a0\n 38466: ra = 448, jump @0\n      : @559 [@dyn 224] (gas: 44)\n 38473: u8 [a0 + 31] = 0xd\n 38477: a1 = u64 [sp + 0x30]\n 38480: a2 = u64 [sp + 0x38]\n 38483: a2 = a2 | a1\n 38486: a1 = 0x100000000\n 38496: u64 [sp + 0x20] = a1\n 38499: a1 = 0xffffffe0\n 38509: u64 [sp + 0x10] = s1\n 38512: a1 = s1 <u a1\n 38515: s1 = u64 [sp + 0x28]\n 38518: a1 = 0 if s1 != 0\n 38520: a1 = 0 if a2 != 0\n 38522: u8 [a0 + 30] = 0\n 38525: u8 [a0 + 29] = 0\n 38528: u8 [a0 + 28] = 0\n 38531: u8 [a0 + 27] = 0\n 38534: u8 [a0 + 26] = 0\n 38537: u8 [a0 + 25] = 0\n 38540: u8 [a0 + 24] = 0\n 38543: u8 [a0 + 23] = 0\n 38546: u8 [a0 + 22] = 0\n 38549: u8 [a0 + 21] = 0\n 38552: u8 [a0 + 20] = 0\n 38555: u8 [a0 + 19] = 0\n 38558: u8 [a0 + 18] = 0\n 38561: u8 [a0 + 17] = 0\n 38564: u8 [a0 + 16] = 0\n 38567: u8 [a0 + 15] = 0\n 38570: u8 [a0 + 14] = 0\n 38573: u8 [a0 + 13] = 0\n 38576: u8 [a0 + 12] = 0\n 38579: u8 [a0 + 11] = 0\n 38582: u8 [a0 + 10] = 0\n 38585: u8 [a0 + 9] = 0\n 38588: u8 [a0 + 8] = 0\n 38591: u8 [a0 + 7] = 0\n 38594: u8 [a0 + 6] = 0\n 38597: u8 [a0 + 5] = 0\n 38600: u8 [a0 + 4] = 0\n 38603: u8 [a0 + 3] = 0\n 38606: u8 [a0 + 2] = 0\n 38609: u8 [a0 + 1] = 0\n 38612: u8 [a0 + 0] = 0\n 38614: jump @561 if a1 != 0\n      : @560 (gas: 1)\n 38617: jump @961\n      : @561 (gas: 4)\n 38620: a0 = u64 [sp + 0x18]\n 38623: i32 a0 = a0 + 0x20\n 38626: a1 = 0x20\n 38629: ra = 450, jump @0\n      : @562 [@dyn 225] (gas: 41)\n 38636: u8 [a0 + 31] = 0\n 38639: u8 [a0 + 30] = 0\n 38642: u8 [a0 + 29] = 0\n 38645: u8 [a0 + 28] = 0\n 38648: u8 [a0 + 27] = 0\n 38651: u8 [a0 + 26] = 0\n 38654: u8 [a0 + 25] = 0\n 38657: u8 [a0 + 24] = 0\n 38660: u8 [a0 + 23] = 0\n 38663: u8 [a0 + 22] = 0\n 38666: u8 [a0 + 21] = 0\n 38669: u8 [a0 + 20] = 0\n 38672: u8 [a0 + 19] = 0\n 38675: u8 [a0 + 18] = 0\n 38678: u8 [a0 + 17] = 0\n 38681: u8 [a0 + 16] = 0\n 38684: u8 [a0 + 15] = 0\n 38687: u8 [a0 + 14] = 0\n 38690: u8 [a0 + 13] = 0\n 38693: u8 [a0 + 12] = 0x79\n 38697: u8 [a0 + 11] = 0x72\n 38701: u8 [a0 + 10] = 0x61\n 38705: u8 [a0 + 9] = 0x6e\n 38709: u8 [a0 + 8] = 0x69\n 38713: u8 [a0 + 7] = 0x64\n 38717: u8 [a0 + 6] = 0x72\n 38721: u8 [a0 + 5] = 0x6f\n 38725: u8 [a0 + 4] = 0x61\n 38729: u8 [a0 + 3] = 0x72\n 38733: u8 [a0 + 2] = 0x74\n 38737: u8 [a0 + 1] = 0x78\n 38741: a2 = u64 [sp + 0x20]\n 38744: a2 = a2 + 0xfffffffffffffbe0\n 38748: a3 = u64 [sp + 0x68]\n 38751: a2 = a3 <u a2\n 38754: a3 = u64 [sp + 0x60]\n 38757: a2 = 0 if a3 != 0\n 38759: a3 = u64 [sp + 0x58]\n 38762: a2 = 0 if a3 != 0\n 38764: u8 [a0 + 0] = 0x65\n 38767: jump @564 if a2 != 0\n      : @563 (gas: 1)\n 38770: jump @961\n      : @564 (gas: 4)\n 38773: a0 = u64 [sp + 0x50]\n 38776: i32 a0 = a0 + 0x420\n 38780: a1 = 0x20\n 38783: ra = 452, jump @0\n      : @565 [@dyn 226] (gas: 77)\n 38790: a1 = u64 [sp + 0x30]\n 38793: a1 = reverse a1\n 38795: a2 = u64 [sp + 0x38]\n 38798: a2 = reverse a2\n 38800: a3 = reverse s1\n 38802: a4 = u64 [sp + 0x10]\n 38805: a4 = reverse a4\n 38807: a5 = a4 >> 0x38\n 38810: u8 [a0 + 0x1f] = a5\n 38813: a5 = a4 >> 0x30\n 38816: u8 [a0 + 0x1e] = a5\n 38819: a5 = a4 >> 0x28\n 38822: u8 [a0 + 0x1d] = a5\n 38825: a5 = a4 >> 0x20\n 38828: u8 [a0 + 0x1c] = a5\n 38831: a5 = a4 >> 0x18\n 38834: u8 [a0 + 0x1b] = a5\n 38837: a5 = a4 >> 0x10\n 38840: u8 [a0 + 0x1a] = a5\n 38843: a5 = a4 >> 0x8\n 38846: u8 [a0 + 0x19] = a5\n 38849: u8 [a0 + 0x18] = a4\n 38852: u8 [a0 + 0x10] = a3\n 38855: a4 = a3 >> 0x38\n 38858: u8 [a0 + 0x17] = a4\n 38861: a4 = a3 >> 0x30\n 38864: u8 [a0 + 0x16] = a4\n 38867: a4 = a3 >> 0x28\n 38870: u8 [a0 + 0x15] = a4\n 38873: a4 = a3 >> 0x20\n 38876: u8 [a0 + 0x14] = a4\n 38879: a4 = a3 >> 0x18\n 38882: u8 [a0 + 0x13] = a4\n 38885: a4 = a3 >> 0x10\n 38888: u8 [a0 + 0x12] = a4\n 38891: a3 = a3 >> 0x8\n 38894: u8 [a0 + 0x11] = a3\n 38897: u8 [a0 + 0x8] = a2\n 38900: a3 = a2 >> 0x38\n 38903: u8 [a0 + 0xf] = a3\n 38906: a3 = a2 >> 0x30\n 38909: u8 [a0 + 0xe] = a3\n 38912: a3 = a2 >> 0x28\n 38915: u8 [a0 + 0xd] = a3\n 38918: a3 = a2 >> 0x20\n 38921: u8 [a0 + 0xc] = a3\n 38924: a3 = a2 >> 0x18\n 38927: u8 [a0 + 0xb] = a3\n 38930: a3 = a2 >> 0x10\n 38933: u8 [a0 + 0xa] = a3\n 38936: a2 = a2 >> 0x8\n 38939: u8 [a0 + 0x9] = a2\n 38942: u8 [a0] = a1\n 38944: a2 = a1 >> 0x38\n 38947: u8 [a0 + 0x7] = a2\n 38950: a2 = a1 >> 0x30\n 38953: u8 [a0 + 0x6] = a2\n 38956: a2 = a1 >> 0x28\n 38959: u8 [a0 + 0x5] = a2\n 38962: a2 = a1 >> 0x20\n 38965: u8 [a0 + 0x4] = a2\n 38968: a2 = a1 >> 0x18\n 38971: u8 [a0 + 0x3] = a2\n 38974: a2 = a1 >> 0x10\n 38977: u8 [a0 + 0x2] = a2\n 38980: a1 = a1 >> 0x8\n 38983: u8 [a0 + 0x1] = a1\n 38986: s1 = sp + 0x7e8\n 38990: u64 [s1 + 736] = 0\n 38994: u64 [s1 + 728] = 0\n 38998: u64 [s1 + 712] = 0x40\n 39003: a0 = sp + 0x7ff\n 39007: a0 = a0 + 0x2d1\n 39011: a1 = sp + 0x7ff\n 39015: a1 = a1 + 0x2b1\n 39019: u64 [s1 + 720] = 0\n 39023: ra = 454, jump @56\n      : @566 [@dyn 227] (gas: 15)\n 39030: a1 = u64 [s1 + 0x300]\n 39034: a2 = u64 [s1 + 0x2f8]\n 39038: a0 = u64 [s1 + 0x2f0]\n 39042: s1 = u64 [s1 + 0x2e8]\n 39046: u64 [sp + 0x28] = a0\n 39049: u64 [sp + 0x30] = a1\n 39052: a0 = a0 | a1\n 39055: a1 = s1 | a2\n 39058: a1 = a1 | a0\n 39061: a1 = a1 >> 0x20\n 39064: u64 [sp + 0x38] = a2\n 39067: a0 = a0 | a2\n 39070: a0 = a0 << 0x20\n 39073: a0 = a0 | a1\n 39076: jump @568 if a0 == 0\n      : @567 (gas: 1)\n 39079: jump @961\n      : @568 (gas: 4)\n 39082: i32 a0 = s1 + 0\n 39084: a1 = 0x20\n 39087: u64 [sp + 0x18] = a0\n 39090: ra = 456, jump @0\n      : @569 [@dyn 228] (gas: 44)\n 39097: u8 [a0 + 31] = 0x8\n 39101: a1 = u64 [sp + 0x30]\n 39104: a2 = u64 [sp + 0x38]\n 39107: a2 = a2 | a1\n 39110: a1 = 0x100000000\n 39120: u64 [sp + 0x20] = a1\n 39123: a1 = 0xffffffe0\n 39133: u64 [sp + 0x10] = s1\n 39136: a1 = s1 <u a1\n 39139: s1 = u64 [sp + 0x28]\n 39142: a1 = 0 if s1 != 0\n 39144: a1 = 0 if a2 != 0\n 39146: u8 [a0 + 30] = 0\n 39149: u8 [a0 + 29] = 0\n 39152: u8 [a0 + 28] = 0\n 39155: u8 [a0 + 27] = 0\n 39158: u8 [a0 + 26] = 0\n 39161: u8 [a0 + 25] = 0\n 39164: u8 [a0 + 24] = 0\n 39167: u8 [a0 + 23] = 0\n 39170: u8 [a0 + 22] = 0\n 39173: u8 [a0 + 21] = 0\n 39176: u8 [a0 + 20] = 0\n 39179: u8 [a0 + 19] = 0\n 39182: u8 [a0 + 18] = 0\n 39185: u8 [a0 + 17] = 0\n 39188: u8 [a0 + 16] = 0\n 39191: u8 [a0 + 15] = 0\n 39194: u8 [a0 + 14] = 0\n 39197: u8 [a0 + 13] = 0\n 39200: u8 [a0 + 12] = 0\n 39203: u8 [a0 + 11] = 0\n 39206: u8 [a0 + 10] = 0\n 39209: u8 [a0 + 9] = 0\n 39212: u8 [a0 + 8] = 0\n 39215: u8 [a0 + 7] = 0\n 39218: u8 [a0 + 6] = 0\n 39221: u8 [a0 + 5] = 0\n 39224: u8 [a0 + 4] = 0\n 39227: u8 [a0 + 3] = 0\n 39230: u8 [a0 + 2] = 0\n 39233: u8 [a0 + 1] = 0\n 39236: u8 [a0 + 0] = 0\n 39238: jump @571 if a1 != 0\n      : @570 (gas: 1)\n 39241: jump @961\n      : @571 (gas: 4)\n 39244: a0 = u64 [sp + 0x18]\n 39247: i32 a0 = a0 + 0x20\n 39250: a1 = 0x20\n 39253: ra = 458, jump @0\n      : @572 [@dyn 229] (gas: 41)\n 39260: u8 [a0 + 31] = 0\n 39263: u8 [a0 + 30] = 0\n 39266: u8 [a0 + 29] = 0\n 39269: u8 [a0 + 28] = 0\n 39272: u8 [a0 + 27] = 0\n 39275: u8 [a0 + 26] = 0\n 39278: u8 [a0 + 25] = 0\n 39281: u8 [a0 + 24] = 0\n 39284: u8 [a0 + 23] = 0\n 39287: u8 [a0 + 22] = 0\n 39290: u8 [a0 + 21] = 0\n 39293: u8 [a0 + 20] = 0\n 39296: u8 [a0 + 19] = 0\n 39299: u8 [a0 + 18] = 0\n 39302: u8 [a0 + 17] = 0\n 39305: u8 [a0 + 16] = 0\n 39308: u8 [a0 + 15] = 0\n 39311: u8 [a0 + 14] = 0\n 39314: u8 [a0 + 13] = 0\n 39317: u8 [a0 + 12] = 0\n 39320: u8 [a0 + 11] = 0\n 39323: u8 [a0 + 10] = 0\n 39326: u8 [a0 + 9] = 0\n 39329: u8 [a0 + 8] = 0\n 39332: u8 [a0 + 7] = 0x73\n 39336: u8 [a0 + 6] = 0x75\n 39340: u8 [a0 + 5] = 0x6f\n 39344: u8 [a0 + 4] = 0x6c\n 39348: u8 [a0 + 3] = 0x75\n 39352: u8 [a0 + 2] = 0x62\n 39356: u8 [a0 + 1] = 0x61\n 39360: a2 = u64 [sp + 0x20]\n 39363: a2 = a2 + 0xfffffffffffffbc0\n 39367: a3 = u64 [sp + 0x68]\n 39370: a2 = a3 <u a2\n 39373: a3 = u64 [sp + 0x60]\n 39376: a2 = 0 if a3 != 0\n 39378: a3 = u64 [sp + 0x58]\n 39381: a2 = 0 if a3 != 0\n 39383: u8 [a0 + 0] = 0x66\n 39386: jump @574 if a2 != 0\n      : @573 (gas: 1)\n 39389: jump @961\n      : @574 (gas: 4)\n 39392: a0 = u64 [sp + 0x50]\n 39395: i32 a0 = a0 + 0x440\n 39399: a1 = 0x20\n 39402: ra = 460, jump @0\n      : @575 [@dyn 230] (gas: 77)\n 39409: a1 = u64 [sp + 0x30]\n 39412: a1 = reverse a1\n 39414: a2 = u64 [sp + 0x38]\n 39417: a2 = reverse a2\n 39419: a3 = reverse s1\n 39421: a4 = u64 [sp + 0x10]\n 39424: a4 = reverse a4\n 39426: a5 = a4 >> 0x38\n 39429: u8 [a0 + 0x1f] = a5\n 39432: a5 = a4 >> 0x30\n 39435: u8 [a0 + 0x1e] = a5\n 39438: a5 = a4 >> 0x28\n 39441: u8 [a0 + 0x1d] = a5\n 39444: a5 = a4 >> 0x20\n 39447: u8 [a0 + 0x1c] = a5\n 39450: a5 = a4 >> 0x18\n 39453: u8 [a0 + 0x1b] = a5\n 39456: a5 = a4 >> 0x10\n 39459: u8 [a0 + 0x1a] = a5\n 39462: a5 = a4 >> 0x8\n 39465: u8 [a0 + 0x19] = a5\n 39468: u8 [a0 + 0x18] = a4\n 39471: u8 [a0 + 0x10] = a3\n 39474: a4 = a3 >> 0x38\n 39477: u8 [a0 + 0x17] = a4\n 39480: a4 = a3 >> 0x30\n 39483: u8 [a0 + 0x16] = a4\n 39486: a4 = a3 >> 0x28\n 39489: u8 [a0 + 0x15] = a4\n 39492: a4 = a3 >> 0x20\n 39495: u8 [a0 + 0x14] = a4\n 39498: a4 = a3 >> 0x18\n 39501: u8 [a0 + 0x13] = a4\n 39504: a4 = a3 >> 0x10\n 39507: u8 [a0 + 0x12] = a4\n 39510: a3 = a3 >> 0x8\n 39513: u8 [a0 + 0x11] = a3\n 39516: u8 [a0 + 0x8] = a2\n 39519: a3 = a2 >> 0x38\n 39522: u8 [a0 + 0xf] = a3\n 39525: a3 = a2 >> 0x30\n 39528: u8 [a0 + 0xe] = a3\n 39531: a3 = a2 >> 0x28\n 39534: u8 [a0 + 0xd] = a3\n 39537: a3 = a2 >> 0x20\n 39540: u8 [a0 + 0xc] = a3\n 39543: a3 = a2 >> 0x18\n 39546: u8 [a0 + 0xb] = a3\n 39549: a3 = a2 >> 0x10\n 39552: u8 [a0 + 0xa] = a3\n 39555: a2 = a2 >> 0x8\n 39558: u8 [a0 + 0x9] = a2\n 39561: u8 [a0] = a1\n 39563: a2 = a1 >> 0x38\n 39566: u8 [a0 + 0x7] = a2\n 39569: a2 = a1 >> 0x30\n 39572: u8 [a0 + 0x6] = a2\n 39575: a2 = a1 >> 0x28\n 39578: u8 [a0 + 0x5] = a2\n 39581: a2 = a1 >> 0x20\n 39584: u8 [a0 + 0x4] = a2\n 39587: a2 = a1 >> 0x18\n 39590: u8 [a0 + 0x3] = a2\n 39593: a2 = a1 >> 0x10\n 39596: u8 [a0 + 0x2] = a2\n 39599: a1 = a1 >> 0x8\n 39602: u8 [a0 + 0x1] = a1\n 39605: s1 = sp + 0x7e8\n 39609: u64 [s1 + 672] = 0\n 39613: u64 [s1 + 664] = 0\n 39617: u64 [s1 + 648] = 0x40\n 39622: a0 = sp + 0x7ff\n 39626: a0 = a0 + 0x291\n 39630: a1 = sp + 0x7ff\n 39634: a1 = a1 + 0x271\n 39638: u64 [s1 + 656] = 0\n 39642: ra = 462, jump @56\n      : @576 [@dyn 231] (gas: 15)\n 39649: a1 = u64 [s1 + 0x2c0]\n 39653: a2 = u64 [s1 + 0x2b8]\n 39657: a0 = u64 [s1 + 0x2b0]\n 39661: s1 = u64 [s1 + 0x2a8]\n 39665: u64 [sp + 0x28] = a0\n 39668: u64 [sp + 0x30] = a1\n 39671: a0 = a0 | a1\n 39674: a1 = s1 | a2\n 39677: a1 = a1 | a0\n 39680: a1 = a1 >> 0x20\n 39683: u64 [sp + 0x38] = a2\n 39686: a0 = a0 | a2\n 39689: a0 = a0 << 0x20\n 39692: a0 = a0 | a1\n 39695: jump @578 if a0 == 0\n      : @577 (gas: 1)\n 39698: jump @961\n      : @578 (gas: 4)\n 39701: i32 a0 = s1 + 0\n 39703: a1 = 0x20\n 39706: u64 [sp + 0x18] = a0\n 39709: ra = 464, jump @0\n      : @579 [@dyn 232] (gas: 44)\n 39716: u8 [a0 + 31] = 0x9\n 39720: a1 = u64 [sp + 0x30]\n 39723: a2 = u64 [sp + 0x38]\n 39726: a2 = a2 | a1\n 39729: a1 = 0x100000000\n 39739: u64 [sp + 0x20] = a1\n 39742: a1 = 0xffffffe0\n 39752: u64 [sp + 0x10] = s1\n 39755: a1 = s1 <u a1\n 39758: s1 = u64 [sp + 0x28]\n 39761: a1 = 0 if s1 != 0\n 39763: a1 = 0 if a2 != 0\n 39765: u8 [a0 + 30] = 0\n 39768: u8 [a0 + 29] = 0\n 39771: u8 [a0 + 28] = 0\n 39774: u8 [a0 + 27] = 0\n 39777: u8 [a0 + 26] = 0\n 39780: u8 [a0 + 25] = 0\n 39783: u8 [a0 + 24] = 0\n 39786: u8 [a0 + 23] = 0\n 39789: u8 [a0 + 22] = 0\n 39792: u8 [a0 + 21] = 0\n 39795: u8 [a0 + 20] = 0\n 39798: u8 [a0 + 19] = 0\n 39801: u8 [a0 + 18] = 0\n 39804: u8 [a0 + 17] = 0\n 39807: u8 [a0 + 16] = 0\n 39810: u8 [a0 + 15] = 0\n 39813: u8 [a0 + 14] = 0\n 39816: u8 [a0 + 13] = 0\n 39819: u8 [a0 + 12] = 0\n 39822: u8 [a0 + 11] = 0\n 39825: u8 [a0 + 10] = 0\n 39828: u8 [a0 + 9] = 0\n 39831: u8 [a0 + 8] = 0\n 39834: u8 [a0 + 7] = 0\n 39837: u8 [a0 + 6] = 0\n 39840: u8 [a0 + 5] = 0\n 39843: u8 [a0 + 4] = 0\n 39846: u8 [a0 + 3] = 0\n 39849: u8 [a0 + 2] = 0\n 39852: u8 [a0 + 1] = 0\n 39855: u8 [a0 + 0] = 0\n 39857: jump @581 if a1 != 0\n      : @580 (gas: 1)\n 39860: jump @961\n      : @581 (gas: 4)\n 39863: a0 = u64 [sp + 0x18]\n 39866: i32 a0 = a0 + 0x20\n 39869: a1 = 0x20\n 39872: ra = 466, jump @0\n      : @582 [@dyn 233] (gas: 41)\n 39879: u8 [a0 + 31] = 0\n 39882: u8 [a0 + 30] = 0\n 39885: u8 [a0 + 29] = 0\n 39888: u8 [a0 + 28] = 0\n 39891: u8 [a0 + 27] = 0\n 39894: u8 [a0 + 26] = 0\n 39897: u8 [a0 + 25] = 0\n 39900: u8 [a0 + 24] = 0\n 39903: u8 [a0 + 23] = 0\n 39906: u8 [a0 + 22] = 0\n 39909: u8 [a0 + 21] = 0\n 39912: u8 [a0 + 20] = 0\n 39915: u8 [a0 + 19] = 0\n 39918: u8 [a0 + 18] = 0\n 39921: u8 [a0 + 17] = 0\n 39924: u8 [a0 + 16] = 0\n 39927: u8 [a0 + 15] = 0\n 39930: u8 [a0 + 14] = 0\n 39933: u8 [a0 + 13] = 0\n 39936: u8 [a0 + 12] = 0\n 39939: u8 [a0 + 11] = 0\n 39942: u8 [a0 + 10] = 0\n 39945: u8 [a0 + 9] = 0\n 39948: u8 [a0 + 8] = 0x63\n 39952: u8 [a0 + 7] = 0x69\n 39956: u8 [a0 + 6] = 0x74\n 39960: u8 [a0 + 5] = 0x73\n 39964: u8 [a0 + 4] = 0x61\n 39968: u8 [a0 + 3] = 0x74\n 39972: u8 [a0 + 2] = 0x6e\n 39976: u8 [a0 + 1] = 0x61\n 39980: a2 = u64 [sp + 0x20]\n 39983: a2 = a2 + 0xfffffffffffffba0\n 39987: a3 = u64 [sp + 0x68]\n 39990: a2 = a3 <u a2\n 39993: a3 = u64 [sp + 0x60]\n 39996: a2 = 0 if a3 != 0\n 39998: a3 = u64 [sp + 0x58]\n 40001: a2 = 0 if a3 != 0\n 40003: u8 [a0 + 0] = 0x66\n 40006: jump @584 if a2 != 0\n      : @583 (gas: 1)\n 40009: jump @961\n      : @584 (gas: 4)\n 40012: a0 = u64 [sp + 0x50]\n 40015: i32 a0 = a0 + 0x460\n 40019: a1 = 0x20\n 40022: ra = 468, jump @0\n      : @585 [@dyn 234] (gas: 77)\n 40029: a1 = u64 [sp + 0x30]\n 40032: a1 = reverse a1\n 40034: a2 = u64 [sp + 0x38]\n 40037: a2 = reverse a2\n 40039: a3 = reverse s1\n 40041: a4 = u64 [sp + 0x10]\n 40044: a4 = reverse a4\n 40046: a5 = a4 >> 0x38\n 40049: u8 [a0 + 0x1f] = a5\n 40052: a5 = a4 >> 0x30\n 40055: u8 [a0 + 0x1e] = a5\n 40058: a5 = a4 >> 0x28\n 40061: u8 [a0 + 0x1d] = a5\n 40064: a5 = a4 >> 0x20\n 40067: u8 [a0 + 0x1c] = a5\n 40070: a5 = a4 >> 0x18\n 40073: u8 [a0 + 0x1b] = a5\n 40076: a5 = a4 >> 0x10\n 40079: u8 [a0 + 0x1a] = a5\n 40082: a5 = a4 >> 0x8\n 40085: u8 [a0 + 0x19] = a5\n 40088: u8 [a0 + 0x18] = a4\n 40091: u8 [a0 + 0x10] = a3\n 40094: a4 = a3 >> 0x38\n 40097: u8 [a0 + 0x17] = a4\n 40100: a4 = a3 >> 0x30\n 40103: u8 [a0 + 0x16] = a4\n 40106: a4 = a3 >> 0x28\n 40109: u8 [a0 + 0x15] = a4\n 40112: a4 = a3 >> 0x20\n 40115: u8 [a0 + 0x14] = a4\n 40118: a4 = a3 >> 0x18\n 40121: u8 [a0 + 0x13] = a4\n 40124: a4 = a3 >> 0x10\n 40127: u8 [a0 + 0x12] = a4\n 40130: a3 = a3 >> 0x8\n 40133: u8 [a0 + 0x11] = a3\n 40136: u8 [a0 + 0x8] = a2\n 40139: a3 = a2 >> 0x38\n 40142: u8 [a0 + 0xf] = a3\n 40145: a3 = a2 >> 0x30\n 40148: u8 [a0 + 0xe] = a3\n 40151: a3 = a2 >> 0x28\n 40154: u8 [a0 + 0xd] = a3\n 40157: a3 = a2 >> 0x20\n 40160: u8 [a0 + 0xc] = a3\n 40163: a3 = a2 >> 0x18\n 40166: u8 [a0 + 0xb] = a3\n 40169: a3 = a2 >> 0x10\n 40172: u8 [a0 + 0xa] = a3\n 40175: a2 = a2 >> 0x8\n 40178: u8 [a0 + 0x9] = a2\n 40181: u8 [a0] = a1\n 40183: a2 = a1 >> 0x38\n 40186: u8 [a0 + 0x7] = a2\n 40189: a2 = a1 >> 0x30\n 40192: u8 [a0 + 0x6] = a2\n 40195: a2 = a1 >> 0x28\n 40198: u8 [a0 + 0x5] = a2\n 40201: a2 = a1 >> 0x20\n 40204: u8 [a0 + 0x4] = a2\n 40207: a2 = a1 >> 0x18\n 40210: u8 [a0 + 0x3] = a2\n 40213: a2 = a1 >> 0x10\n 40216: u8 [a0 + 0x2] = a2\n 40219: a1 = a1 >> 0x8\n 40222: u8 [a0 + 0x1] = a1\n 40225: s1 = sp + 0x7e8\n 40229: u64 [s1 + 608] = 0\n 40233: u64 [s1 + 600] = 0\n 40237: u64 [s1 + 584] = 0x40\n 40242: a0 = sp + 0x7ff\n 40246: a0 = a0 + 0x251\n 40250: a1 = sp + 0x7ff\n 40254: a1 = a1 + 0x231\n 40258: u64 [s1 + 592] = 0\n 40262: ra = 470, jump @56\n      : @586 [@dyn 235] (gas: 15)\n 40269: a1 = u64 [s1 + 0x280]\n 40273: a2 = u64 [s1 + 0x278]\n 40277: a0 = u64 [s1 + 0x270]\n 40281: s1 = u64 [s1 + 0x268]\n 40285: u64 [sp + 0x28] = a0\n 40288: u64 [sp + 0x30] = a1\n 40291: a0 = a0 | a1\n 40294: a1 = s1 | a2\n 40297: a1 = a1 | a0\n 40300: a1 = a1 >> 0x20\n 40303: u64 [sp + 0x38] = a2\n 40306: a0 = a0 | a2\n 40309: a0 = a0 << 0x20\n 40312: a0 = a0 | a1\n 40315: jump @588 if a0 == 0\n      : @587 (gas: 1)\n 40318: jump @961\n      : @588 (gas: 4)\n 40321: i32 a0 = s1 + 0\n 40323: a1 = 0x20\n 40326: u64 [sp + 0x18] = a0\n 40329: ra = 472, jump @0\n      : @589 [@dyn 236] (gas: 44)\n 40336: u8 [a0 + 31] = 0x8\n 40340: a1 = u64 [sp + 0x30]\n 40343: a2 = u64 [sp + 0x38]\n 40346: a2 = a2 | a1\n 40349: a1 = 0x100000000\n 40359: u64 [sp + 0x20] = a1\n 40362: a1 = 0xffffffe0\n 40372: u64 [sp + 0x10] = s1\n 40375: a1 = s1 <u a1\n 40378: s1 = u64 [sp + 0x28]\n 40381: a1 = 0 if s1 != 0\n 40383: a1 = 0 if a2 != 0\n 40385: u8 [a0 + 30] = 0\n 40388: u8 [a0 + 29] = 0\n 40391: u8 [a0 + 28] = 0\n 40394: u8 [a0 + 27] = 0\n 40397: u8 [a0 + 26] = 0\n 40400: u8 [a0 + 25] = 0\n 40403: u8 [a0 + 24] = 0\n 40406: u8 [a0 + 23] = 0\n 40409: u8 [a0 + 22] = 0\n 40412: u8 [a0 + 21] = 0\n 40415: u8 [a0 + 20] = 0\n 40418: u8 [a0 + 19] = 0\n 40421: u8 [a0 + 18] = 0\n 40424: u8 [a0 + 17] = 0\n 40427: u8 [a0 + 16] = 0\n 40430: u8 [a0 + 15] = 0\n 40433: u8 [a0 + 14] = 0\n 40436: u8 [a0 + 13] = 0\n 40439: u8 [a0 + 12] = 0\n 40442: u8 [a0 + 11] = 0\n 40445: u8 [a0 + 10] = 0\n 40448: u8 [a0 + 9] = 0\n 40451: u8 [a0 + 8] = 0\n 40454: u8 [a0 + 7] = 0\n 40457: u8 [a0 + 6] = 0\n 40460: u8 [a0 + 5] = 0\n 40463: u8 [a0 + 4] = 0\n 40466: u8 [a0 + 3] = 0\n 40469: u8 [a0 + 2] = 0\n 40472: u8 [a0 + 1] = 0\n 40475: u8 [a0 + 0] = 0\n 40477: jump @591 if a1 != 0\n      : @590 (gas: 1)\n 40480: jump @961\n      : @591 (gas: 4)\n 40483: a0 = u64 [sp + 0x18]\n 40486: i32 a0 = a0 + 0x20\n 40489: a1 = 0x20\n 40492: ra = 474, jump @0\n      : @592 [@dyn 237] (gas: 41)\n 40499: u8 [a0 + 31] = 0\n 40502: u8 [a0 + 30] = 0\n 40505: u8 [a0 + 29] = 0\n 40508: u8 [a0 + 28] = 0\n 40511: u8 [a0 + 27] = 0\n 40514: u8 [a0 + 26] = 0\n 40517: u8 [a0 + 25] = 0\n 40520: u8 [a0 + 24] = 0\n 40523: u8 [a0 + 23] = 0\n 40526: u8 [a0 + 22] = 0\n 40529: u8 [a0 + 21] = 0\n 40532: u8 [a0 + 20] = 0\n 40535: u8 [a0 + 19] = 0\n 40538: u8 [a0 + 18] = 0\n 40541: u8 [a0 + 17] = 0\n 40544: u8 [a0 + 16] = 0\n 40547: u8 [a0 + 15] = 0\n 40550: u8 [a0 + 14] = 0\n 40553: u8 [a0 + 13] = 0\n 40556: u8 [a0 + 12] = 0\n 40559: u8 [a0 + 11] = 0\n 40562: u8 [a0 + 10] = 0\n 40565: u8 [a0 + 9] = 0\n 40568: u8 [a0 + 8] = 0\n 40571: u8 [a0 + 7] = 0x73\n 40575: u8 [a0 + 6] = 0x73\n 40579: u8 [a0 + 5] = 0x65\n 40583: u8 [a0 + 4] = 0x6c\n 40587: u8 [a0 + 3] = 0x72\n 40591: u8 [a0 + 2] = 0x61\n 40595: u8 [a0 + 1] = 0x65\n 40599: a2 = u64 [sp + 0x20]\n 40602: a2 = a2 + 0xfffffffffffffb80\n 40606: a3 = u64 [sp + 0x68]\n 40609: a2 = a3 <u a2\n 40612: a3 = u64 [sp + 0x60]\n 40615: a2 = 0 if a3 != 0\n 40617: a3 = u64 [sp + 0x58]\n 40620: a2 = 0 if a3 != 0\n 40622: u8 [a0 + 0] = 0x66\n 40625: jump @594 if a2 != 0\n      : @593 (gas: 1)\n 40628: jump @961\n      : @594 (gas: 4)\n 40631: a0 = u64 [sp + 0x50]\n 40634: i32 a0 = a0 + 0x480\n 40638: a1 = 0x20\n 40641: ra = 476, jump @0\n      : @595 [@dyn 238] (gas: 77)\n 40648: a1 = u64 [sp + 0x30]\n 40651: a1 = reverse a1\n 40653: a2 = u64 [sp + 0x38]\n 40656: a2 = reverse a2\n 40658: a3 = reverse s1\n 40660: a4 = u64 [sp + 0x10]\n 40663: a4 = reverse a4\n 40665: a5 = a4 >> 0x38\n 40668: u8 [a0 + 0x1f] = a5\n 40671: a5 = a4 >> 0x30\n 40674: u8 [a0 + 0x1e] = a5\n 40677: a5 = a4 >> 0x28\n 40680: u8 [a0 + 0x1d] = a5\n 40683: a5 = a4 >> 0x20\n 40686: u8 [a0 + 0x1c] = a5\n 40689: a5 = a4 >> 0x18\n 40692: u8 [a0 + 0x1b] = a5\n 40695: a5 = a4 >> 0x10\n 40698: u8 [a0 + 0x1a] = a5\n 40701: a5 = a4 >> 0x8\n 40704: u8 [a0 + 0x19] = a5\n 40707: u8 [a0 + 0x18] = a4\n 40710: u8 [a0 + 0x10] = a3\n 40713: a4 = a3 >> 0x38\n 40716: u8 [a0 + 0x17] = a4\n 40719: a4 = a3 >> 0x30\n 40722: u8 [a0 + 0x16] = a4\n 40725: a4 = a3 >> 0x28\n 40728: u8 [a0 + 0x15] = a4\n 40731: a4 = a3 >> 0x20\n 40734: u8 [a0 + 0x14] = a4\n 40737: a4 = a3 >> 0x18\n 40740: u8 [a0 + 0x13] = a4\n 40743: a4 = a3 >> 0x10\n 40746: u8 [a0 + 0x12] = a4\n 40749: a3 = a3 >> 0x8\n 40752: u8 [a0 + 0x11] = a3\n 40755: u8 [a0 + 0x8] = a2\n 40758: a3 = a2 >> 0x38\n 40761: u8 [a0 + 0xf] = a3\n 40764: a3 = a2 >> 0x30\n 40767: u8 [a0 + 0xe] = a3\n 40770: a3 = a2 >> 0x28\n 40773: u8 [a0 + 0xd] = a3\n 40776: a3 = a2 >> 0x20\n 40779: u8 [a0 + 0xc] = a3\n 40782: a3 = a2 >> 0x18\n 40785: u8 [a0 + 0xb] = a3\n 40788: a3 = a2 >> 0x10\n 40791: u8 [a0 + 0xa] = a3\n 40794: a2 = a2 >> 0x8\n 40797: u8 [a0 + 0x9] = a2\n 40800: u8 [a0] = a1\n 40802: a2 = a1 >> 0x38\n 40805: u8 [a0 + 0x7] = a2\n 40808: a2 = a1 >> 0x30\n 40811: u8 [a0 + 0x6] = a2\n 40814: a2 = a1 >> 0x28\n 40817: u8 [a0 + 0x5] = a2\n 40820: a2 = a1 >> 0x20\n 40823: u8 [a0 + 0x4] = a2\n 40826: a2 = a1 >> 0x18\n 40829: u8 [a0 + 0x3] = a2\n 40832: a2 = a1 >> 0x10\n 40835: u8 [a0 + 0x2] = a2\n 40838: a1 = a1 >> 0x8\n 40841: u8 [a0 + 0x1] = a1\n 40844: s1 = sp + 0x7e8\n 40848: u64 [s1 + 544] = 0\n 40852: u64 [s1 + 536] = 0\n 40856: u64 [s1 + 520] = 0x40\n 40861: a0 = sp + 0x7ff\n 40865: a0 = a0 + 0x211\n 40869: a1 = sp + 0x7ff\n 40873: a1 = a1 + 0x1f1\n 40877: u64 [s1 + 528] = 0\n 40881: ra = 478, jump @56\n      : @596 [@dyn 239] (gas: 15)\n 40888: a1 = u64 [s1 + 0x240]\n 40892: a2 = u64 [s1 + 0x238]\n 40896: a0 = u64 [s1 + 0x230]\n 40900: s1 = u64 [s1 + 0x228]\n 40904: u64 [sp + 0x28] = a0\n 40907: u64 [sp + 0x30] = a1\n 40910: a0 = a0 | a1\n 40913: a1 = s1 | a2\n 40916: a1 = a1 | a0\n 40919: a1 = a1 >> 0x20\n 40922: u64 [sp + 0x38] = a2\n 40925: a0 = a0 | a2\n 40928: a0 = a0 << 0x20\n 40931: a0 = a0 | a1\n 40934: jump @598 if a0 == 0\n      : @597 (gas: 1)\n 40937: jump @961\n      : @598 (gas: 4)\n 40940: i32 a0 = s1 + 0\n 40942: a1 = 0x20\n 40945: u64 [sp + 0x18] = a0\n 40948: ra = 480, jump @0\n      : @599 [@dyn 240] (gas: 44)\n 40955: u8 [a0 + 31] = 0x8\n 40959: a1 = u64 [sp + 0x30]\n 40962: a2 = u64 [sp + 0x38]\n 40965: a2 = a2 | a1\n 40968: a1 = 0x100000000\n 40978: u64 [sp + 0x20] = a1\n 40981: a1 = 0xffffffe0\n 40991: u64 [sp + 0x10] = s1\n 40994: a1 = s1 <u a1\n 40997: s1 = u64 [sp + 0x28]\n 41000: a1 = 0 if s1 != 0\n 41002: a1 = 0 if a2 != 0\n 41004: u8 [a0 + 30] = 0\n 41007: u8 [a0 + 29] = 0\n 41010: u8 [a0 + 28] = 0\n 41013: u8 [a0 + 27] = 0\n 41016: u8 [a0 + 26] = 0\n 41019: u8 [a0 + 25] = 0\n 41022: u8 [a0 + 24] = 0\n 41025: u8 [a0 + 23] = 0\n 41028: u8 [a0 + 22] = 0\n 41031: u8 [a0 + 21] = 0\n 41034: u8 [a0 + 20] = 0\n 41037: u8 [a0 + 19] = 0\n 41040: u8 [a0 + 18] = 0\n 41043: u8 [a0 + 17] = 0\n 41046: u8 [a0 + 16] = 0\n 41049: u8 [a0 + 15] = 0\n 41052: u8 [a0 + 14] = 0\n 41055: u8 [a0 + 13] = 0\n 41058: u8 [a0 + 12] = 0\n 41061: u8 [a0 + 11] = 0\n 41064: u8 [a0 + 10] = 0\n 41067: u8 [a0 + 9] = 0\n 41070: u8 [a0 + 8] = 0\n 41073: u8 [a0 + 7] = 0\n 41076: u8 [a0 + 6] = 0\n 41079: u8 [a0 + 5] = 0\n 41082: u8 [a0 + 4] = 0\n 41085: u8 [a0 + 3] = 0\n 41088: u8 [a0 + 2] = 0\n 41091: u8 [a0 + 1] = 0\n 41094: u8 [a0 + 0] = 0\n 41096: jump @601 if a1 != 0\n      : @600 (gas: 1)\n 41099: jump @961\n      : @601 (gas: 4)\n 41102: a0 = u64 [sp + 0x18]\n 41105: i32 a0 = a0 + 0x20\n 41108: a1 = 0x20\n 41111: ra = 482, jump @0\n      : @602 [@dyn 241] (gas: 41)\n 41118: u8 [a0 + 31] = 0\n 41121: u8 [a0 + 30] = 0\n 41124: u8 [a0 + 29] = 0\n 41127: u8 [a0 + 28] = 0\n 41130: u8 [a0 + 27] = 0\n 41133: u8 [a0 + 26] = 0\n 41136: u8 [a0 + 25] = 0\n 41139: u8 [a0 + 24] = 0\n 41142: u8 [a0 + 23] = 0\n 41145: u8 [a0 + 22] = 0\n 41148: u8 [a0 + 21] = 0\n 41151: u8 [a0 + 20] = 0\n 41154: u8 [a0 + 19] = 0\n 41157: u8 [a0 + 18] = 0\n 41160: u8 [a0 + 17] = 0\n 41163: u8 [a0 + 16] = 0\n 41166: u8 [a0 + 15] = 0\n 41169: u8 [a0 + 14] = 0\n 41172: u8 [a0 + 13] = 0\n 41175: u8 [a0 + 12] = 0\n 41178: u8 [a0 + 11] = 0\n 41181: u8 [a0 + 10] = 0\n 41184: u8 [a0 + 9] = 0\n 41187: u8 [a0 + 8] = 0\n 41190: u8 [a0 + 7] = 0x79\n 41194: u8 [a0 + 6] = 0x6c\n 41198: u8 [a0 + 5] = 0x64\n 41202: u8 [a0 + 4] = 0x6e\n 41206: u8 [a0 + 3] = 0x65\n 41210: u8 [a0 + 2] = 0x69\n 41214: u8 [a0 + 1] = 0x72\n 41218: a2 = u64 [sp + 0x20]\n 41221: a2 = a2 + 0xfffffffffffffb60\n 41225: a3 = u64 [sp + 0x68]\n 41228: a2 = a3 <u a2\n 41231: a3 = u64 [sp + 0x60]\n 41234: a2 = 0 if a3 != 0\n 41236: a3 = u64 [sp + 0x58]\n 41239: a2 = 0 if a3 != 0\n 41241: u8 [a0 + 0] = 0x66\n 41244: jump @604 if a2 != 0\n      : @603 (gas: 1)\n 41247: jump @961\n      : @604 (gas: 4)\n 41250: a0 = u64 [sp + 0x50]\n 41253: i32 a0 = a0 + 0x4a0\n 41257: a1 = 0x20\n 41260: ra = 484, jump @0\n      : @605 [@dyn 242] (gas: 77)\n 41267: a1 = u64 [sp + 0x30]\n 41270: a1 = reverse a1\n 41272: a2 = u64 [sp + 0x38]\n 41275: a2 = reverse a2\n 41277: a3 = reverse s1\n 41279: a4 = u64 [sp + 0x10]\n 41282: a4 = reverse a4\n 41284: a5 = a4 >> 0x38\n 41287: u8 [a0 + 0x1f] = a5\n 41290: a5 = a4 >> 0x30\n 41293: u8 [a0 + 0x1e] = a5\n 41296: a5 = a4 >> 0x28\n 41299: u8 [a0 + 0x1d] = a5\n 41302: a5 = a4 >> 0x20\n 41305: u8 [a0 + 0x1c] = a5\n 41308: a5 = a4 >> 0x18\n 41311: u8 [a0 + 0x1b] = a5\n 41314: a5 = a4 >> 0x10\n 41317: u8 [a0 + 0x1a] = a5\n 41320: a5 = a4 >> 0x8\n 41323: u8 [a0 + 0x19] = a5\n 41326: u8 [a0 + 0x18] = a4\n 41329: u8 [a0 + 0x10] = a3\n 41332: a4 = a3 >> 0x38\n 41335: u8 [a0 + 0x17] = a4\n 41338: a4 = a3 >> 0x30\n 41341: u8 [a0 + 0x16] = a4\n 41344: a4 = a3 >> 0x28\n 41347: u8 [a0 + 0x15] = a4\n 41350: a4 = a3 >> 0x20\n 41353: u8 [a0 + 0x14] = a4\n 41356: a4 = a3 >> 0x18\n 41359: u8 [a0 + 0x13] = a4\n 41362: a4 = a3 >> 0x10\n 41365: u8 [a0 + 0x12] = a4\n 41368: a3 = a3 >> 0x8\n 41371: u8 [a0 + 0x11] = a3\n 41374: u8 [a0 + 0x8] = a2\n 41377: a3 = a2 >> 0x38\n 41380: u8 [a0 + 0xf] = a3\n 41383: a3 = a2 >> 0x30\n 41386: u8 [a0 + 0xe] = a3\n 41389: a3 = a2 >> 0x28\n 41392: u8 [a0 + 0xd] = a3\n 41395: a3 = a2 >> 0x20\n 41398: u8 [a0 + 0xc] = a3\n 41401: a3 = a2 >> 0x18\n 41404: u8 [a0 + 0xb] = a3\n 41407: a3 = a2 >> 0x10\n 41410: u8 [a0 + 0xa] = a3\n 41413: a2 = a2 >> 0x8\n 41416: u8 [a0 + 0x9] = a2\n 41419: u8 [a0] = a1\n 41421: a2 = a1 >> 0x38\n 41424: u8 [a0 + 0x7] = a2\n 41427: a2 = a1 >> 0x30\n 41430: u8 [a0 + 0x6] = a2\n 41433: a2 = a1 >> 0x28\n 41436: u8 [a0 + 0x5] = a2\n 41439: a2 = a1 >> 0x20\n 41442: u8 [a0 + 0x4] = a2\n 41445: a2 = a1 >> 0x18\n 41448: u8 [a0 + 0x3] = a2\n 41451: a2 = a1 >> 0x10\n 41454: u8 [a0 + 0x2] = a2\n 41457: a1 = a1 >> 0x8\n 41460: u8 [a0 + 0x1] = a1\n 41463: s1 = sp + 0x7e8\n 41467: u64 [s1 + 480] = 0\n 41471: u64 [s1 + 472] = 0\n 41475: u64 [s1 + 456] = 0x40\n 41480: a0 = sp + 0x7ff\n 41484: a0 = a0 + 0x1d1\n 41488: a1 = sp + 0x7ff\n 41492: a1 = a1 + 0x1b1\n 41496: u64 [s1 + 464] = 0\n 41500: ra = 486, jump @56\n      : @606 [@dyn 243] (gas: 15)\n 41507: a1 = u64 [s1 + 0x200]\n 41511: a2 = u64 [s1 + 0x1f8]\n 41515: a0 = u64 [s1 + 0x1f0]\n 41519: s1 = u64 [s1 + 0x1e8]\n 41523: u64 [sp + 0x28] = a0\n 41526: u64 [sp + 0x30] = a1\n 41529: a0 = a0 | a1\n 41532: a1 = s1 | a2\n 41535: a1 = a1 | a0\n 41538: a1 = a1 >> 0x20\n 41541: u64 [sp + 0x38] = a2\n 41544: a0 = a0 | a2\n 41547: a0 = a0 << 0x20\n 41550: a0 = a0 | a1\n 41553: jump @608 if a0 == 0\n      : @607 (gas: 1)\n 41556: jump @961\n      : @608 (gas: 4)\n 41559: i32 a0 = s1 + 0\n 41561: a1 = 0x20\n 41564: u64 [sp + 0x20] = a0\n 41567: ra = 488, jump @0\n      : @609 [@dyn 244] (gas: 44)\n 41574: u8 [a0 + 31] = 0x3\n 41578: a1 = u64 [sp + 0x30]\n 41581: a2 = u64 [sp + 0x38]\n 41584: a2 = a2 | a1\n 41587: a1 = 0x100000000\n 41597: u64 [sp + 0x18] = a1\n 41600: a1 = 0xffffffe0\n 41610: u64 [sp + 0x10] = s1\n 41613: a1 = s1 <u a1\n 41616: s1 = u64 [sp + 0x28]\n 41619: a1 = 0 if s1 != 0\n 41621: a1 = 0 if a2 != 0\n 41623: u8 [a0 + 30] = 0\n 41626: u8 [a0 + 29] = 0\n 41629: u8 [a0 + 28] = 0\n 41632: u8 [a0 + 27] = 0\n 41635: u8 [a0 + 26] = 0\n 41638: u8 [a0 + 25] = 0\n 41641: u8 [a0 + 24] = 0\n 41644: u8 [a0 + 23] = 0\n 41647: u8 [a0 + 22] = 0\n 41650: u8 [a0 + 21] = 0\n 41653: u8 [a0 + 20] = 0\n 41656: u8 [a0 + 19] = 0\n 41659: u8 [a0 + 18] = 0\n 41662: u8 [a0 + 17] = 0\n 41665: u8 [a0 + 16] = 0\n 41668: u8 [a0 + 15] = 0\n 41671: u8 [a0 + 14] = 0\n 41674: u8 [a0 + 13] = 0\n 41677: u8 [a0 + 12] = 0\n 41680: u8 [a0 + 11] = 0\n 41683: u8 [a0 + 10] = 0\n 41686: u8 [a0 + 9] = 0\n 41689: u8 [a0 + 8] = 0\n 41692: u8 [a0 + 7] = 0\n 41695: u8 [a0 + 6] = 0\n 41698: u8 [a0 + 5] = 0\n 41701: u8 [a0 + 4] = 0\n 41704: u8 [a0 + 3] = 0\n 41707: u8 [a0 + 2] = 0\n 41710: u8 [a0 + 1] = 0\n 41713: u8 [a0 + 0] = 0\n 41715: jump @611 if a1 != 0\n      : @610 (gas: 1)\n 41718: jump @961\n      : @611 (gas: 4)\n 41721: a0 = u64 [sp + 0x20]\n 41724: i32 a0 = a0 + 0x20\n 41727: a1 = 0x20\n 41730: ra = 490, jump @0\n      : @612 [@dyn 245] (gas: 41)\n 41737: u8 [a0 + 31] = 0\n 41740: u8 [a0 + 30] = 0\n 41743: u8 [a0 + 29] = 0\n 41746: u8 [a0 + 28] = 0\n 41749: u8 [a0 + 27] = 0\n 41752: u8 [a0 + 26] = 0\n 41755: u8 [a0 + 25] = 0\n 41758: u8 [a0 + 24] = 0\n 41761: u8 [a0 + 23] = 0\n 41764: u8 [a0 + 22] = 0\n 41767: u8 [a0 + 21] = 0\n 41770: u8 [a0 + 20] = 0\n 41773: u8 [a0 + 19] = 0\n 41776: u8 [a0 + 18] = 0\n 41779: u8 [a0 + 17] = 0\n 41782: u8 [a0 + 16] = 0\n 41785: u8 [a0 + 15] = 0\n 41788: u8 [a0 + 14] = 0\n 41791: u8 [a0 + 13] = 0\n 41794: u8 [a0 + 12] = 0\n 41797: u8 [a0 + 11] = 0\n 41800: u8 [a0 + 10] = 0\n 41803: u8 [a0 + 9] = 0\n 41806: u8 [a0 + 8] = 0\n 41809: u8 [a0 + 7] = 0\n 41812: u8 [a0 + 6] = 0\n 41815: u8 [a0 + 5] = 0\n 41818: u8 [a0 + 4] = 0\n 41821: u8 [a0 + 3] = 0\n 41824: u8 [a0 + 2] = 0x6e\n 41828: u8 [a0 + 1] = 0x75\n 41832: a2 = u64 [sp + 0x18]\n 41835: a2 = a2 + 0xfffffffffffffb40\n 41839: a3 = u64 [sp + 0x68]\n 41842: a2 = a3 <u a2\n 41845: a3 = u64 [sp + 0x60]\n 41848: a2 = 0 if a3 != 0\n 41850: a3 = u64 [sp + 0x58]\n 41853: a2 = 0 if a3 != 0\n 41855: u8 [a0 + 0] = 0x66\n 41858: jump @614 if a2 != 0\n      : @613 (gas: 1)\n 41861: jump @961\n      : @614 (gas: 4)\n 41864: a0 = u64 [sp + 0x50]\n 41867: i32 a0 = a0 + 0x4c0\n 41871: a1 = 0x20\n 41874: ra = 492, jump @0\n      : @615 [@dyn 246] (gas: 77)\n 41881: a1 = u64 [sp + 0x30]\n 41884: a1 = reverse a1\n 41886: a2 = u64 [sp + 0x38]\n 41889: a2 = reverse a2\n 41891: a3 = reverse s1\n 41893: a4 = u64 [sp + 0x10]\n 41896: a4 = reverse a4\n 41898: a5 = a4 >> 0x38\n 41901: u8 [a0 + 0x1f] = a5\n 41904: a5 = a4 >> 0x30\n 41907: u8 [a0 + 0x1e] = a5\n 41910: a5 = a4 >> 0x28\n 41913: u8 [a0 + 0x1d] = a5\n 41916: a5 = a4 >> 0x20\n 41919: u8 [a0 + 0x1c] = a5\n 41922: a5 = a4 >> 0x18\n 41925: u8 [a0 + 0x1b] = a5\n 41928: a5 = a4 >> 0x10\n 41931: u8 [a0 + 0x1a] = a5\n 41934: a5 = a4 >> 0x8\n 41937: u8 [a0 + 0x19] = a5\n 41940: u8 [a0 + 0x18] = a4\n 41943: u8 [a0 + 0x10] = a3\n 41946: a4 = a3 >> 0x38\n 41949: u8 [a0 + 0x17] = a4\n 41952: a4 = a3 >> 0x30\n 41955: u8 [a0 + 0x16] = a4\n 41958: a4 = a3 >> 0x28\n 41961: u8 [a0 + 0x15] = a4\n 41964: a4 = a3 >> 0x20\n 41967: u8 [a0 + 0x14] = a4\n 41970: a4 = a3 >> 0x18\n 41973: u8 [a0 + 0x13] = a4\n 41976: a4 = a3 >> 0x10\n 41979: u8 [a0 + 0x12] = a4\n 41982: a3 = a3 >> 0x8\n 41985: u8 [a0 + 0x11] = a3\n 41988: u8 [a0 + 0x8] = a2\n 41991: a3 = a2 >> 0x38\n 41994: u8 [a0 + 0xf] = a3\n 41997: a3 = a2 >> 0x30\n 42000: u8 [a0 + 0xe] = a3\n 42003: a3 = a2 >> 0x28\n 42006: u8 [a0 + 0xd] = a3\n 42009: a3 = a2 >> 0x20\n 42012: u8 [a0 + 0xc] = a3\n 42015: a3 = a2 >> 0x18\n 42018: u8 [a0 + 0xb] = a3\n 42021: a3 = a2 >> 0x10\n 42024: u8 [a0 + 0xa] = a3\n 42027: a2 = a2 >> 0x8\n 42030: u8 [a0 + 0x9] = a2\n 42033: u8 [a0] = a1\n 42035: a2 = a1 >> 0x38\n 42038: u8 [a0 + 0x7] = a2\n 42041: a2 = a1 >> 0x30\n 42044: u8 [a0 + 0x6] = a2\n 42047: a2 = a1 >> 0x28\n 42050: u8 [a0 + 0x5] = a2\n 42053: a2 = a1 >> 0x20\n 42056: u8 [a0 + 0x4] = a2\n 42059: a2 = a1 >> 0x18\n 42062: u8 [a0 + 0x3] = a2\n 42065: a2 = a1 >> 0x10\n 42068: u8 [a0 + 0x2] = a2\n 42071: a1 = a1 >> 0x8\n 42074: u8 [a0 + 0x1] = a1\n 42077: s1 = sp + 0x7e8\n 42081: u64 [s1 + 416] = 0\n 42085: u64 [s1 + 408] = 0\n 42089: u64 [s1 + 392] = 0x40\n 42094: a0 = sp + 0x7ff\n 42098: a0 = a0 + 0x191\n 42102: a1 = sp + 0x7ff\n 42106: a1 = a1 + 0x171\n 42110: u64 [s1 + 400] = 0\n 42114: ra = 494, jump @56\n      : @616 [@dyn 247] (gas: 15)\n 42121: a1 = u64 [s1 + 0x1c0]\n 42125: a2 = u64 [s1 + 0x1b8]\n 42129: a0 = u64 [s1 + 0x1b0]\n 42133: s1 = u64 [s1 + 0x1a8]\n 42137: u64 [sp + 0x28] = a0\n 42140: u64 [sp + 0x30] = a1\n 42143: a0 = a0 | a1\n 42146: a1 = s1 | a2\n 42149: a1 = a1 | a0\n 42152: a1 = a1 >> 0x20\n 42155: u64 [sp + 0x38] = a2\n 42158: a0 = a0 | a2\n 42161: a0 = a0 << 0x20\n 42164: a0 = a0 | a1\n 42167: jump @618 if a0 == 0\n      : @617 (gas: 1)\n 42170: jump @961\n      : @618 (gas: 4)\n 42173: i32 a0 = s1 + 0\n 42175: a1 = 0x20\n 42178: u64 [sp + 0x18] = a0\n 42181: ra = 496, jump @0\n      : @619 [@dyn 248] (gas: 44)\n 42188: u8 [a0 + 31] = 0x5\n 42192: a1 = u64 [sp + 0x30]\n 42195: a2 = u64 [sp + 0x38]\n 42198: a2 = a2 | a1\n 42201: a1 = 0x100000000\n 42211: u64 [sp + 0x20] = a1\n 42214: a1 = 0xffffffe0\n 42224: u64 [sp + 0x10] = s1\n 42227: a1 = s1 <u a1\n 42230: s1 = u64 [sp + 0x28]\n 42233: a1 = 0 if s1 != 0\n 42235: a1 = 0 if a2 != 0\n 42237: u8 [a0 + 30] = 0\n 42240: u8 [a0 + 29] = 0\n 42243: u8 [a0 + 28] = 0\n 42246: u8 [a0 + 27] = 0\n 42249: u8 [a0 + 26] = 0\n 42252: u8 [a0 + 25] = 0\n 42255: u8 [a0 + 24] = 0\n 42258: u8 [a0 + 23] = 0\n 42261: u8 [a0 + 22] = 0\n 42264: u8 [a0 + 21] = 0\n 42267: u8 [a0 + 20] = 0\n 42270: u8 [a0 + 19] = 0\n 42273: u8 [a0 + 18] = 0\n 42276: u8 [a0 + 17] = 0\n 42279: u8 [a0 + 16] = 0\n 42282: u8 [a0 + 15] = 0\n 42285: u8 [a0 + 14] = 0\n 42288: u8 [a0 + 13] = 0\n 42291: u8 [a0 + 12] = 0\n 42294: u8 [a0 + 11] = 0\n 42297: u8 [a0 + 10] = 0\n 42300: u8 [a0 + 9] = 0\n 42303: u8 [a0 + 8] = 0\n 42306: u8 [a0 + 7] = 0\n 42309: u8 [a0 + 6] = 0\n 42312: u8 [a0 + 5] = 0\n 42315: u8 [a0 + 4] = 0\n 42318: u8 [a0 + 3] = 0\n 42321: u8 [a0 + 2] = 0\n 42324: u8 [a0 + 1] = 0\n 42327: u8 [a0 + 0] = 0\n 42329: jump @621 if a1 != 0\n      : @620 (gas: 1)\n 42332: jump @961\n      : @621 (gas: 4)\n 42335: a0 = u64 [sp + 0x18]\n 42338: i32 a0 = a0 + 0x20\n 42341: a1 = 0x20\n 42344: ra = 498, jump @0\n      : @622 [@dyn 249] (gas: 41)\n 42351: u8 [a0 + 31] = 0\n 42354: u8 [a0 + 30] = 0\n 42357: u8 [a0 + 29] = 0\n 42360: u8 [a0 + 28] = 0\n 42363: u8 [a0 + 27] = 0\n 42366: u8 [a0 + 26] = 0\n 42369: u8 [a0 + 25] = 0\n 42372: u8 [a0 + 24] = 0\n 42375: u8 [a0 + 23] = 0\n 42378: u8 [a0 + 22] = 0\n 42381: u8 [a0 + 21] = 0\n 42384: u8 [a0 + 20] = 0\n 42387: u8 [a0 + 19] = 0\n 42390: u8 [a0 + 18] = 0\n 42393: u8 [a0 + 17] = 0\n 42396: u8 [a0 + 16] = 0\n 42399: u8 [a0 + 15] = 0\n 42402: u8 [a0 + 14] = 0\n 42405: u8 [a0 + 13] = 0\n 42408: u8 [a0 + 12] = 0\n 42411: u8 [a0 + 11] = 0\n 42414: u8 [a0 + 10] = 0\n 42417: u8 [a0 + 9] = 0\n 42420: u8 [a0 + 8] = 0\n 42423: u8 [a0 + 7] = 0\n 42426: u8 [a0 + 6] = 0\n 42429: u8 [a0 + 5] = 0\n 42432: u8 [a0 + 4] = 0x79\n 42436: u8 [a0 + 3] = 0x6e\n 42440: u8 [a0 + 2] = 0x6e\n 42444: u8 [a0 + 1] = 0x75\n 42448: a2 = u64 [sp + 0x20]\n 42451: a2 = a2 + 0xfffffffffffffb20\n 42455: a3 = u64 [sp + 0x68]\n 42458: a2 = a3 <u a2\n 42461: a3 = u64 [sp + 0x60]\n 42464: a2 = 0 if a3 != 0\n 42466: a3 = u64 [sp + 0x58]\n 42469: a2 = 0 if a3 != 0\n 42471: u8 [a0 + 0] = 0x66\n 42474: jump @624 if a2 != 0\n      : @623 (gas: 1)\n 42477: jump @961\n      : @624 (gas: 4)\n 42480: a0 = u64 [sp + 0x50]\n 42483: i32 a0 = a0 + 0x4e0\n 42487: a1 = 0x20\n 42490: ra = 500, jump @0\n      : @625 [@dyn 250] (gas: 77)\n 42497: a1 = u64 [sp + 0x30]\n 42500: a1 = reverse a1\n 42502: a2 = u64 [sp + 0x38]\n 42505: a2 = reverse a2\n 42507: a3 = reverse s1\n 42509: a4 = u64 [sp + 0x10]\n 42512: a4 = reverse a4\n 42514: a5 = a4 >> 0x38\n 42517: u8 [a0 + 0x1f] = a5\n 42520: a5 = a4 >> 0x30\n 42523: u8 [a0 + 0x1e] = a5\n 42526: a5 = a4 >> 0x28\n 42529: u8 [a0 + 0x1d] = a5\n 42532: a5 = a4 >> 0x20\n 42535: u8 [a0 + 0x1c] = a5\n 42538: a5 = a4 >> 0x18\n 42541: u8 [a0 + 0x1b] = a5\n 42544: a5 = a4 >> 0x10\n 42547: u8 [a0 + 0x1a] = a5\n 42550: a5 = a4 >> 0x8\n 42553: u8 [a0 + 0x19] = a5\n 42556: u8 [a0 + 0x18] = a4\n 42559: u8 [a0 + 0x10] = a3\n 42562: a4 = a3 >> 0x38\n 42565: u8 [a0 + 0x17] = a4\n 42568: a4 = a3 >> 0x30\n 42571: u8 [a0 + 0x16] = a4\n 42574: a4 = a3 >> 0x28\n 42577: u8 [a0 + 0x15] = a4\n 42580: a4 = a3 >> 0x20\n 42583: u8 [a0 + 0x14] = a4\n 42586: a4 = a3 >> 0x18\n 42589: u8 [a0 + 0x13] = a4\n 42592: a4 = a3 >> 0x10\n 42595: u8 [a0 + 0x12] = a4\n 42598: a3 = a3 >> 0x8\n 42601: u8 [a0 + 0x11] = a3\n 42604: u8 [a0 + 0x8] = a2\n 42607: a3 = a2 >> 0x38\n 42610: u8 [a0 + 0xf] = a3\n 42613: a3 = a2 >> 0x30\n 42616: u8 [a0 + 0xe] = a3\n 42619: a3 = a2 >> 0x28\n 42622: u8 [a0 + 0xd] = a3\n 42625: a3 = a2 >> 0x20\n 42628: u8 [a0 + 0xc] = a3\n 42631: a3 = a2 >> 0x18\n 42634: u8 [a0 + 0xb] = a3\n 42637: a3 = a2 >> 0x10\n 42640: u8 [a0 + 0xa] = a3\n 42643: a2 = a2 >> 0x8\n 42646: u8 [a0 + 0x9] = a2\n 42649: u8 [a0] = a1\n 42651: a2 = a1 >> 0x38\n 42654: u8 [a0 + 0x7] = a2\n 42657: a2 = a1 >> 0x30\n 42660: u8 [a0 + 0x6] = a2\n 42663: a2 = a1 >> 0x28\n 42666: u8 [a0 + 0x5] = a2\n 42669: a2 = a1 >> 0x20\n 42672: u8 [a0 + 0x4] = a2\n 42675: a2 = a1 >> 0x18\n 42678: u8 [a0 + 0x3] = a2\n 42681: a2 = a1 >> 0x10\n 42684: u8 [a0 + 0x2] = a2\n 42687: a1 = a1 >> 0x8\n 42690: u8 [a0 + 0x1] = a1\n 42693: s1 = sp + 0x7e8\n 42697: u64 [s1 + 352] = 0\n 42701: u64 [s1 + 344] = 0\n 42705: u64 [s1 + 328] = 0x40\n 42710: a0 = sp + 0x7ff\n 42714: a0 = a0 + 0x151\n 42718: a1 = sp + 0x7ff\n 42722: a1 = a1 + 0x131\n 42726: u64 [s1 + 336] = 0\n 42730: ra = 502, jump @56\n      : @626 [@dyn 251] (gas: 15)\n 42737: a1 = u64 [s1 + 0x180]\n 42741: a2 = u64 [s1 + 0x178]\n 42745: a0 = u64 [s1 + 0x170]\n 42749: s1 = u64 [s1 + 0x168]\n 42753: u64 [sp + 0x28] = a0\n 42756: u64 [sp + 0x30] = a1\n 42759: a0 = a0 | a1\n 42762: a1 = s1 | a2\n 42765: a1 = a1 | a0\n 42768: a1 = a1 >> 0x20\n 42771: u64 [sp + 0x38] = a2\n 42774: a0 = a0 | a2\n 42777: a0 = a0 << 0x20\n 42780: a0 = a0 | a1\n 42783: jump @628 if a0 == 0\n      : @627 (gas: 1)\n 42786: jump @961\n      : @628 (gas: 4)\n 42789: i32 a0 = s1 + 0\n 42791: a1 = 0x20\n 42794: u64 [sp + 0x18] = a0\n 42797: ra = 504, jump @0\n      : @629 [@dyn 252] (gas: 44)\n 42804: u8 [a0 + 31] = 0x8\n 42808: a1 = u64 [sp + 0x30]\n 42811: a2 = u64 [sp + 0x38]\n 42814: a2 = a2 | a1\n 42817: a1 = 0x100000000\n 42827: u64 [sp + 0x20] = a1\n 42830: a1 = 0xffffffe0\n 42840: u64 [sp + 0x10] = s1\n 42843: a1 = s1 <u a1\n 42846: s1 = u64 [sp + 0x28]\n 42849: a1 = 0 if s1 != 0\n 42851: a1 = 0 if a2 != 0\n 42853: u8 [a0 + 30] = 0\n 42856: u8 [a0 + 29] = 0\n 42859: u8 [a0 + 28] = 0\n 42862: u8 [a0 + 27] = 0\n 42865: u8 [a0 + 26] = 0\n 42868: u8 [a0 + 25] = 0\n 42871: u8 [a0 + 24] = 0\n 42874: u8 [a0 + 23] = 0\n 42877: u8 [a0 + 22] = 0\n 42880: u8 [a0 + 21] = 0\n 42883: u8 [a0 + 20] = 0\n 42886: u8 [a0 + 19] = 0\n 42889: u8 [a0 + 18] = 0\n 42892: u8 [a0 + 17] = 0\n 42895: u8 [a0 + 16] = 0\n 42898: u8 [a0 + 15] = 0\n 42901: u8 [a0 + 14] = 0\n 42904: u8 [a0 + 13] = 0\n 42907: u8 [a0 + 12] = 0\n 42910: u8 [a0 + 11] = 0\n 42913: u8 [a0 + 10] = 0\n 42916: u8 [a0 + 9] = 0\n 42919: u8 [a0 + 8] = 0\n 42922: u8 [a0 + 7] = 0\n 42925: u8 [a0 + 6] = 0\n 42928: u8 [a0 + 5] = 0\n 42931: u8 [a0 + 4] = 0\n 42934: u8 [a0 + 3] = 0\n 42937: u8 [a0 + 2] = 0\n 42940: u8 [a0 + 1] = 0\n 42943: u8 [a0 + 0] = 0\n 42945: jump @631 if a1 != 0\n      : @630 (gas: 1)\n 42948: jump @961\n      : @631 (gas: 4)\n 42951: a0 = u64 [sp + 0x18]\n 42954: i32 a0 = a0 + 0x20\n 42957: a1 = 0x20\n 42960: ra = 506, jump @0\n      : @632 [@dyn 253] (gas: 41)\n 42967: u8 [a0 + 31] = 0\n 42970: u8 [a0 + 30] = 0\n 42973: u8 [a0 + 29] = 0\n 42976: u8 [a0 + 28] = 0\n 42979: u8 [a0 + 27] = 0\n 42982: u8 [a0 + 26] = 0\n 42985: u8 [a0 + 25] = 0\n 42988: u8 [a0 + 24] = 0\n 42991: u8 [a0 + 23] = 0\n 42994: u8 [a0 + 22] = 0\n 42997: u8 [a0 + 21] = 0\n 43000: u8 [a0 + 20] = 0\n 43003: u8 [a0 + 19] = 0\n 43006: u8 [a0 + 18] = 0\n 43009: u8 [a0 + 17] = 0\n 43012: u8 [a0 + 16] = 0\n 43015: u8 [a0 + 15] = 0\n 43018: u8 [a0 + 14] = 0\n 43021: u8 [a0 + 13] = 0\n 43024: u8 [a0 + 12] = 0\n 43027: u8 [a0 + 11] = 0\n 43030: u8 [a0 + 10] = 0\n 43033: u8 [a0 + 9] = 0\n 43036: u8 [a0 + 8] = 0\n 43039: u8 [a0 + 7] = 0x73\n 43043: u8 [a0 + 6] = 0x75\n 43047: u8 [a0 + 5] = 0x6f\n 43051: u8 [a0 + 4] = 0x72\n 43055: u8 [a0 + 3] = 0x65\n 43059: u8 [a0 + 2] = 0x6e\n 43063: u8 [a0 + 1] = 0x65\n 43067: a2 = u64 [sp + 0x20]\n 43070: a2 = a2 + 0xfffffffffffffb00\n 43074: a3 = u64 [sp + 0x68]\n 43077: a2 = a3 <u a2\n 43080: a3 = u64 [sp + 0x60]\n 43083: a2 = 0 if a3 != 0\n 43085: a3 = u64 [sp + 0x58]\n 43088: a2 = 0 if a3 != 0\n 43090: u8 [a0 + 0] = 0x67\n 43093: jump @634 if a2 != 0\n      : @633 (gas: 1)\n 43096: jump @961\n      : @634 (gas: 4)\n 43099: a0 = u64 [sp + 0x50]\n 43102: i32 a0 = a0 + 0x500\n 43106: a1 = 0x20\n 43109: ra = 508, jump @0\n      : @635 [@dyn 254] (gas: 77)\n 43116: a1 = u64 [sp + 0x30]\n 43119: a1 = reverse a1\n 43121: a2 = u64 [sp + 0x38]\n 43124: a2 = reverse a2\n 43126: a3 = reverse s1\n 43128: a4 = u64 [sp + 0x10]\n 43131: a4 = reverse a4\n 43133: a5 = a4 >> 0x38\n 43136: u8 [a0 + 0x1f] = a5\n 43139: a5 = a4 >> 0x30\n 43142: u8 [a0 + 0x1e] = a5\n 43145: a5 = a4 >> 0x28\n 43148: u8 [a0 + 0x1d] = a5\n 43151: a5 = a4 >> 0x20\n 43154: u8 [a0 + 0x1c] = a5\n 43157: a5 = a4 >> 0x18\n 43160: u8 [a0 + 0x1b] = a5\n 43163: a5 = a4 >> 0x10\n 43166: u8 [a0 + 0x1a] = a5\n 43169: a5 = a4 >> 0x8\n 43172: u8 [a0 + 0x19] = a5\n 43175: u8 [a0 + 0x18] = a4\n 43178: u8 [a0 + 0x10] = a3\n 43181: a4 = a3 >> 0x38\n 43184: u8 [a0 + 0x17] = a4\n 43187: a4 = a3 >> 0x30\n 43190: u8 [a0 + 0x16] = a4\n 43193: a4 = a3 >> 0x28\n 43196: u8 [a0 + 0x15] = a4\n 43199: a4 = a3 >> 0x20\n 43202: u8 [a0 + 0x14] = a4\n 43205: a4 = a3 >> 0x18\n 43208: u8 [a0 + 0x13] = a4\n 43211: a4 = a3 >> 0x10\n 43214: u8 [a0 + 0x12] = a4\n 43217: a3 = a3 >> 0x8\n 43220: u8 [a0 + 0x11] = a3\n 43223: u8 [a0 + 0x8] = a2\n 43226: a3 = a2 >> 0x38\n 43229: u8 [a0 + 0xf] = a3\n 43232: a3 = a2 >> 0x30\n 43235: u8 [a0 + 0xe] = a3\n 43238: a3 = a2 >> 0x28\n 43241: u8 [a0 + 0xd] = a3\n 43244: a3 = a2 >> 0x20\n 43247: u8 [a0 + 0xc] = a3\n 43250: a3 = a2 >> 0x18\n 43253: u8 [a0 + 0xb] = a3\n 43256: a3 = a2 >> 0x10\n 43259: u8 [a0 + 0xa] = a3\n 43262: a2 = a2 >> 0x8\n 43265: u8 [a0 + 0x9] = a2\n 43268: u8 [a0] = a1\n 43270: a2 = a1 >> 0x38\n 43273: u8 [a0 + 0x7] = a2\n 43276: a2 = a1 >> 0x30\n 43279: u8 [a0 + 0x6] = a2\n 43282: a2 = a1 >> 0x28\n 43285: u8 [a0 + 0x5] = a2\n 43288: a2 = a1 >> 0x20\n 43291: u8 [a0 + 0x4] = a2\n 43294: a2 = a1 >> 0x18\n 43297: u8 [a0 + 0x3] = a2\n 43300: a2 = a1 >> 0x10\n 43303: u8 [a0 + 0x2] = a2\n 43306: a1 = a1 >> 0x8\n 43309: u8 [a0 + 0x1] = a1\n 43312: s1 = sp + 0x7e8\n 43316: u64 [s1 + 288] = 0\n 43320: u64 [s1 + 280] = 0\n 43324: u64 [s1 + 264] = 0x40\n 43329: a0 = sp + 0x7ff\n 43333: a0 = a0 + 0x111\n 43337: a1 = sp + 0x7ff\n 43341: a1 = a1 + 0xf1\n 43345: u64 [s1 + 272] = 0\n 43349: ra = 510, jump @56\n      : @636 [@dyn 255] (gas: 15)\n 43356: a1 = u64 [s1 + 0x140]\n 43360: a2 = u64 [s1 + 0x138]\n 43364: a0 = u64 [s1 + 0x130]\n 43368: s1 = u64 [s1 + 0x128]\n 43372: u64 [sp + 0x28] = a0\n 43375: u64 [sp + 0x30] = a1\n 43378: a0 = a0 | a1\n 43381: a1 = s1 | a2\n 43384: a1 = a1 | a0\n 43387: a1 = a1 >> 0x20\n 43390: u64 [sp + 0x38] = a2\n 43393: a0 = a0 | a2\n 43396: a0 = a0 << 0x20\n 43399: a0 = a0 | a1\n 43402: jump @638 if a0 == 0\n      : @637 (gas: 1)\n 43405: jump @961\n      : @638 (gas: 4)\n 43408: i32 a0 = s1 + 0\n 43410: a1 = 0x20\n 43413: u64 [sp + 0x18] = a0\n 43416: ra = 512, jump @0\n      : @639 [@dyn 256] (gas: 44)\n 43423: u8 [a0 + 31] = 0x6\n 43427: a1 = u64 [sp + 0x30]\n 43430: a2 = u64 [sp + 0x38]\n 43433: a2 = a2 | a1\n 43436: a1 = 0x100000000\n 43446: u64 [sp + 0x20] = a1\n 43449: a1 = 0xffffffe0\n 43459: u64 [sp + 0x10] = s1\n 43462: a1 = s1 <u a1\n 43465: s1 = u64 [sp + 0x28]\n 43468: a1 = 0 if s1 != 0\n 43470: a1 = 0 if a2 != 0\n 43472: u8 [a0 + 30] = 0\n 43475: u8 [a0 + 29] = 0\n 43478: u8 [a0 + 28] = 0\n 43481: u8 [a0 + 27] = 0\n 43484: u8 [a0 + 26] = 0\n 43487: u8 [a0 + 25] = 0\n 43490: u8 [a0 + 24] = 0\n 43493: u8 [a0 + 23] = 0\n 43496: u8 [a0 + 22] = 0\n 43499: u8 [a0 + 21] = 0\n 43502: u8 [a0 + 20] = 0\n 43505: u8 [a0 + 19] = 0\n 43508: u8 [a0 + 18] = 0\n 43511: u8 [a0 + 17] = 0\n 43514: u8 [a0 + 16] = 0\n 43517: u8 [a0 + 15] = 0\n 43520: u8 [a0 + 14] = 0\n 43523: u8 [a0 + 13] = 0\n 43526: u8 [a0 + 12] = 0\n 43529: u8 [a0 + 11] = 0\n 43532: u8 [a0 + 10] = 0\n 43535: u8 [a0 + 9] = 0\n 43538: u8 [a0 + 8] = 0\n 43541: u8 [a0 + 7] = 0\n 43544: u8 [a0 + 6] = 0\n 43547: u8 [a0 + 5] = 0\n 43550: u8 [a0 + 4] = 0\n 43553: u8 [a0 + 3] = 0\n 43556: u8 [a0 + 2] = 0\n 43559: u8 [a0 + 1] = 0\n 43562: u8 [a0 + 0] = 0\n 43564: jump @641 if a1 != 0\n      : @640 (gas: 1)\n 43567: jump @961\n      : @641 (gas: 4)\n 43570: a0 = u64 [sp + 0x18]\n 43573: i32 a0 = a0 + 0x20\n 43576: a1 = 0x20\n 43579: ra = 514, jump @0\n      : @642 [@dyn 257] (gas: 41)\n 43586: u8 [a0 + 31] = 0\n 43589: u8 [a0 + 30] = 0\n 43592: u8 [a0 + 29] = 0\n 43595: u8 [a0 + 28] = 0\n 43598: u8 [a0 + 27] = 0\n 43601: u8 [a0 + 26] = 0\n 43604: u8 [a0 + 25] = 0\n 43607: u8 [a0 + 24] = 0\n 43610: u8 [a0 + 23] = 0\n 43613: u8 [a0 + 22] = 0\n 43616: u8 [a0 + 21] = 0\n 43619: u8 [a0 + 20] = 0\n 43622: u8 [a0 + 19] = 0\n 43625: u8 [a0 + 18] = 0\n 43628: u8 [a0 + 17] = 0\n 43631: u8 [a0 + 16] = 0\n 43634: u8 [a0 + 15] = 0\n 43637: u8 [a0 + 14] = 0\n 43640: u8 [a0 + 13] = 0\n 43643: u8 [a0 + 12] = 0\n 43646: u8 [a0 + 11] = 0\n 43649: u8 [a0 + 10] = 0\n 43652: u8 [a0 + 9] = 0\n 43655: u8 [a0 + 8] = 0\n 43658: u8 [a0 + 7] = 0\n 43661: u8 [a0 + 6] = 0\n 43664: u8 [a0 + 5] = 0x65\n 43668: u8 [a0 + 4] = 0x6c\n 43672: u8 [a0 + 3] = 0x74\n 43676: u8 [a0 + 2] = 0x6e\n 43680: u8 [a0 + 1] = 0x65\n 43684: a2 = u64 [sp + 0x20]\n 43687: a2 = a2 + 0xfffffffffffffae0\n 43691: a3 = u64 [sp + 0x68]\n 43694: a2 = a3 <u a2\n 43697: a3 = u64 [sp + 0x60]\n 43700: a2 = 0 if a3 != 0\n 43702: a3 = u64 [sp + 0x58]\n 43705: a2 = 0 if a3 != 0\n 43707: u8 [a0 + 0] = 0x67\n 43710: jump @644 if a2 != 0\n      : @643 (gas: 1)\n 43713: jump @961\n      : @644 (gas: 4)\n 43716: a0 = u64 [sp + 0x50]\n 43719: i32 a0 = a0 + 0x520\n 43723: a1 = 0x20\n 43726: ra = 516, jump @0\n      : @645 [@dyn 258] (gas: 77)\n 43733: a1 = u64 [sp + 0x30]\n 43736: a1 = reverse a1\n 43738: a2 = u64 [sp + 0x38]\n 43741: a2 = reverse a2\n 43743: a3 = reverse s1\n 43745: a4 = u64 [sp + 0x10]\n 43748: a4 = reverse a4\n 43750: a5 = a4 >> 0x38\n 43753: u8 [a0 + 0x1f] = a5\n 43756: a5 = a4 >> 0x30\n 43759: u8 [a0 + 0x1e] = a5\n 43762: a5 = a4 >> 0x28\n 43765: u8 [a0 + 0x1d] = a5\n 43768: a5 = a4 >> 0x20\n 43771: u8 [a0 + 0x1c] = a5\n 43774: a5 = a4 >> 0x18\n 43777: u8 [a0 + 0x1b] = a5\n 43780: a5 = a4 >> 0x10\n 43783: u8 [a0 + 0x1a] = a5\n 43786: a5 = a4 >> 0x8\n 43789: u8 [a0 + 0x19] = a5\n 43792: u8 [a0 + 0x18] = a4\n 43795: u8 [a0 + 0x10] = a3\n 43798: a4 = a3 >> 0x38\n 43801: u8 [a0 + 0x17] = a4\n 43804: a4 = a3 >> 0x30\n 43807: u8 [a0 + 0x16] = a4\n 43810: a4 = a3 >> 0x28\n 43813: u8 [a0 + 0x15] = a4\n 43816: a4 = a3 >> 0x20\n 43819: u8 [a0 + 0x14] = a4\n 43822: a4 = a3 >> 0x18\n 43825: u8 [a0 + 0x13] = a4\n 43828: a4 = a3 >> 0x10\n 43831: u8 [a0 + 0x12] = a4\n 43834: a3 = a3 >> 0x8\n 43837: u8 [a0 + 0x11] = a3\n 43840: u8 [a0 + 0x8] = a2\n 43843: a3 = a2 >> 0x38\n 43846: u8 [a0 + 0xf] = a3\n 43849: a3 = a2 >> 0x30\n 43852: u8 [a0 + 0xe] = a3\n 43855: a3 = a2 >> 0x28\n 43858: u8 [a0 + 0xd] = a3\n 43861: a3 = a2 >> 0x20\n 43864: u8 [a0 + 0xc] = a3\n 43867: a3 = a2 >> 0x18\n 43870: u8 [a0 + 0xb] = a3\n 43873: a3 = a2 >> 0x10\n 43876: u8 [a0 + 0xa] = a3\n 43879: a2 = a2 >> 0x8\n 43882: u8 [a0 + 0x9] = a2\n 43885: u8 [a0] = a1\n 43887: a2 = a1 >> 0x38\n 43890: u8 [a0 + 0x7] = a2\n 43893: a2 = a1 >> 0x30\n 43896: u8 [a0 + 0x6] = a2\n 43899: a2 = a1 >> 0x28\n 43902: u8 [a0 + 0x5] = a2\n 43905: a2 = a1 >> 0x20\n 43908: u8 [a0 + 0x4] = a2\n 43911: a2 = a1 >> 0x18\n 43914: u8 [a0 + 0x3] = a2\n 43917: a2 = a1 >> 0x10\n 43920: u8 [a0 + 0x2] = a2\n 43923: a1 = a1 >> 0x8\n 43926: u8 [a0 + 0x1] = a1\n 43929: s1 = sp + 0x7e8\n 43933: u64 [s1 + 224] = 0\n 43937: u64 [s1 + 216] = 0\n 43941: u64 [s1 + 200] = 0x40\n 43946: a0 = sp + 0x7ff\n 43950: a0 = a0 + 0xd1\n 43954: a1 = sp + 0x7ff\n 43958: a1 = a1 + 0xb1\n 43962: u64 [s1 + 208] = 0\n 43966: ra = 518, jump @56\n      : @646 [@dyn 259] (gas: 15)\n 43973: a1 = u64 [s1 + 0x100]\n 43977: a2 = u64 [s1 + 0xf8]\n 43981: a0 = u64 [s1 + 0xf0]\n 43985: s1 = u64 [s1 + 0xe8]\n 43989: u64 [sp + 0x28] = a0\n 43992: u64 [sp + 0x30] = a1\n 43995: a0 = a0 | a1\n 43998: a1 = s1 | a2\n 44001: a1 = a1 | a0\n 44004: a1 = a1 >> 0x20\n 44007: u64 [sp + 0x38] = a2\n 44010: a0 = a0 | a2\n 44013: a0 = a0 << 0x20\n 44016: a0 = a0 | a1\n 44019: jump @648 if a0 == 0\n      : @647 (gas: 1)\n 44022: jump @961\n      : @648 (gas: 4)\n 44025: i32 a0 = s1 + 0\n 44027: a1 = 0x20\n 44030: u64 [sp + 0x18] = a0\n 44033: ra = 520, jump @0\n      : @649 [@dyn 260] (gas: 44)\n 44040: u8 [a0 + 31] = 0x8\n 44044: a1 = u64 [sp + 0x30]\n 44047: a2 = u64 [sp + 0x38]\n 44050: a2 = a2 | a1\n 44053: a1 = 0x100000000\n 44063: u64 [sp + 0x20] = a1\n 44066: a1 = 0xffffffe0\n 44076: u64 [sp + 0x10] = s1\n 44079: a1 = s1 <u a1\n 44082: s1 = u64 [sp + 0x28]\n 44085: a1 = 0 if s1 != 0\n 44087: a1 = 0 if a2 != 0\n 44089: u8 [a0 + 30] = 0\n 44092: u8 [a0 + 29] = 0\n 44095: u8 [a0 + 28] = 0\n 44098: u8 [a0 + 27] = 0\n 44101: u8 [a0 + 26] = 0\n 44104: u8 [a0 + 25] = 0\n 44107: u8 [a0 + 24] = 0\n 44110: u8 [a0 + 23] = 0\n 44113: u8 [a0 + 22] = 0\n 44116: u8 [a0 + 21] = 0\n 44119: u8 [a0 + 20] = 0\n 44122: u8 [a0 + 19] = 0\n 44125: u8 [a0 + 18] = 0\n 44128: u8 [a0 + 17] = 0\n 44131: u8 [a0 + 16] = 0\n 44134: u8 [a0 + 15] = 0\n 44137: u8 [a0 + 14] = 0\n 44140: u8 [a0 + 13] = 0\n 44143: u8 [a0 + 12] = 0\n 44146: u8 [a0 + 11] = 0\n 44149: u8 [a0 + 10] = 0\n 44152: u8 [a0 + 9] = 0\n 44155: u8 [a0 + 8] = 0\n 44158: u8 [a0 + 7] = 0\n 44161: u8 [a0 + 6] = 0\n 44164: u8 [a0 + 5] = 0\n 44167: u8 [a0 + 4] = 0\n 44170: u8 [a0 + 3] = 0\n 44173: u8 [a0 + 2] = 0\n 44176: u8 [a0 + 1] = 0\n 44179: u8 [a0 + 0] = 0\n 44181: jump @651 if a1 != 0\n      : @650 (gas: 1)\n 44184: jump @961\n      : @651 (gas: 4)\n 44187: a0 = u64 [sp + 0x18]\n 44190: i32 a0 = a0 + 0x20\n 44193: a1 = 0x20\n 44196: ra = 522, jump @0\n      : @652 [@dyn 261] (gas: 41)\n 44203: u8 [a0 + 31] = 0\n 44206: u8 [a0 + 30] = 0\n 44209: u8 [a0 + 29] = 0\n 44212: u8 [a0 + 28] = 0\n 44215: u8 [a0 + 27] = 0\n 44218: u8 [a0 + 26] = 0\n 44221: u8 [a0 + 25] = 0\n 44224: u8 [a0 + 24] = 0\n 44227: u8 [a0 + 23] = 0\n 44230: u8 [a0 + 22] = 0\n 44233: u8 [a0 + 21] = 0\n 44236: u8 [a0 + 20] = 0\n 44239: u8 [a0 + 19] = 0\n 44242: u8 [a0 + 18] = 0\n 44245: u8 [a0 + 17] = 0\n 44248: u8 [a0 + 16] = 0\n 44251: u8 [a0 + 15] = 0\n 44254: u8 [a0 + 14] = 0\n 44257: u8 [a0 + 13] = 0\n 44260: u8 [a0 + 12] = 0\n 44263: u8 [a0 + 11] = 0\n 44266: u8 [a0 + 10] = 0\n 44269: u8 [a0 + 9] = 0\n 44272: u8 [a0 + 8] = 0\n 44275: u8 [a0 + 7] = 0x73\n 44279: u8 [a0 + 6] = 0x75\n 44283: u8 [a0 + 5] = 0x6f\n 44287: u8 [a0 + 4] = 0x69\n 44291: u8 [a0 + 3] = 0x72\n 44295: u8 [a0 + 2] = 0x6f\n 44299: u8 [a0 + 1] = 0x6c\n 44303: a2 = u64 [sp + 0x20]\n 44306: a2 = a2 + 0xfffffffffffffac0\n 44310: a3 = u64 [sp + 0x68]\n 44313: a2 = a3 <u a2\n 44316: a3 = u64 [sp + 0x60]\n 44319: a2 = 0 if a3 != 0\n 44321: a3 = u64 [sp + 0x58]\n 44324: a2 = 0 if a3 != 0\n 44326: u8 [a0 + 0] = 0x67\n 44329: jump @654 if a2 != 0\n      : @653 (gas: 1)\n 44332: jump @961\n      : @654 (gas: 4)\n 44335: a0 = u64 [sp + 0x50]\n 44338: i32 a0 = a0 + 0x540\n 44342: a1 = 0x20\n 44345: ra = 524, jump @0\n      : @655 [@dyn 262] (gas: 77)\n 44352: a1 = u64 [sp + 0x30]\n 44355: a1 = reverse a1\n 44357: a2 = u64 [sp + 0x38]\n 44360: a2 = reverse a2\n 44362: a3 = reverse s1\n 44364: a4 = u64 [sp + 0x10]\n 44367: a4 = reverse a4\n 44369: a5 = a4 >> 0x38\n 44372: u8 [a0 + 0x1f] = a5\n 44375: a5 = a4 >> 0x30\n 44378: u8 [a0 + 0x1e] = a5\n 44381: a5 = a4 >> 0x28\n 44384: u8 [a0 + 0x1d] = a5\n 44387: a5 = a4 >> 0x20\n 44390: u8 [a0 + 0x1c] = a5\n 44393: a5 = a4 >> 0x18\n 44396: u8 [a0 + 0x1b] = a5\n 44399: a5 = a4 >> 0x10\n 44402: u8 [a0 + 0x1a] = a5\n 44405: a5 = a4 >> 0x8\n 44408: u8 [a0 + 0x19] = a5\n 44411: u8 [a0 + 0x18] = a4\n 44414: u8 [a0 + 0x10] = a3\n 44417: a4 = a3 >> 0x38\n 44420: u8 [a0 + 0x17] = a4\n 44423: a4 = a3 >> 0x30\n 44426: u8 [a0 + 0x16] = a4\n 44429: a4 = a3 >> 0x28\n 44432: u8 [a0 + 0x15] = a4\n 44435: a4 = a3 >> 0x20\n 44438: u8 [a0 + 0x14] = a4\n 44441: a4 = a3 >> 0x18\n 44444: u8 [a0 + 0x13] = a4\n 44447: a4 = a3 >> 0x10\n 44450: u8 [a0 + 0x12] = a4\n 44453: a3 = a3 >> 0x8\n 44456: u8 [a0 + 0x11] = a3\n 44459: u8 [a0 + 0x8] = a2\n 44462: a3 = a2 >> 0x38\n 44465: u8 [a0 + 0xf] = a3\n 44468: a3 = a2 >> 0x30\n 44471: u8 [a0 + 0xe] = a3\n 44474: a3 = a2 >> 0x28\n 44477: u8 [a0 + 0xd] = a3\n 44480: a3 = a2 >> 0x20\n 44483: u8 [a0 + 0xc] = a3\n 44486: a3 = a2 >> 0x18\n 44489: u8 [a0 + 0xb] = a3\n 44492: a3 = a2 >> 0x10\n 44495: u8 [a0 + 0xa] = a3\n 44498: a2 = a2 >> 0x8\n 44501: u8 [a0 + 0x9] = a2\n 44504: u8 [a0] = a1\n 44506: a2 = a1 >> 0x38\n 44509: u8 [a0 + 0x7] = a2\n 44512: a2 = a1 >> 0x30\n 44515: u8 [a0 + 0x6] = a2\n 44518: a2 = a1 >> 0x28\n 44521: u8 [a0 + 0x5] = a2\n 44524: a2 = a1 >> 0x20\n 44527: u8 [a0 + 0x4] = a2\n 44530: a2 = a1 >> 0x18\n 44533: u8 [a0 + 0x3] = a2\n 44536: a2 = a1 >> 0x10\n 44539: u8 [a0 + 0x2] = a2\n 44542: a1 = a1 >> 0x8\n 44545: u8 [a0 + 0x1] = a1\n 44548: s1 = sp + 0x7e8\n 44552: u64 [s1 + 160] = 0\n 44556: u64 [s1 + 152] = 0\n 44560: u64 [s1 + 136] = 0x40\n 44565: a0 = sp + 0x7ff\n 44569: a0 = a0 + 0x91\n 44573: a1 = sp + 0x7ff\n 44577: a1 = a1 + 0x71\n 44580: u64 [s1 + 144] = 0\n 44584: ra = 526, jump @56\n      : @656 [@dyn 263] (gas: 15)\n 44591: a1 = u64 [s1 + 0xc0]\n 44595: a2 = u64 [s1 + 0xb8]\n 44599: a0 = u64 [s1 + 0xb0]\n 44603: s1 = u64 [s1 + 0xa8]\n 44607: u64 [sp + 0x28] = a0\n 44610: u64 [sp + 0x30] = a1\n 44613: a0 = a0 | a1\n 44616: a1 = s1 | a2\n 44619: a1 = a1 | a0\n 44622: a1 = a1 >> 0x20\n 44625: u64 [sp + 0x38] = a2\n 44628: a0 = a0 | a2\n 44631: a0 = a0 << 0x20\n 44634: a0 = a0 | a1\n 44637: jump @658 if a0 == 0\n      : @657 (gas: 1)\n 44640: jump @961\n      : @658 (gas: 4)\n 44643: i32 a0 = s1 + 0\n 44645: a1 = 0x20\n 44648: u64 [sp + 0x20] = a0\n 44651: ra = 528, jump @0\n      : @659 [@dyn 264] (gas: 44)\n 44658: u8 [a0 + 31] = 0x4\n 44662: a1 = u64 [sp + 0x30]\n 44665: a2 = u64 [sp + 0x38]\n 44668: a2 = a2 | a1\n 44671: a1 = 0x100000000\n 44681: u64 [sp + 0x18] = a1\n 44684: a1 = 0xffffffe0\n 44694: u64 [sp + 0x10] = s1\n 44697: a1 = s1 <u a1\n 44700: s1 = u64 [sp + 0x28]\n 44703: a1 = 0 if s1 != 0\n 44705: a1 = 0 if a2 != 0\n 44707: u8 [a0 + 30] = 0\n 44710: u8 [a0 + 29] = 0\n 44713: u8 [a0 + 28] = 0\n 44716: u8 [a0 + 27] = 0\n 44719: u8 [a0 + 26] = 0\n 44722: u8 [a0 + 25] = 0\n 44725: u8 [a0 + 24] = 0\n 44728: u8 [a0 + 23] = 0\n 44731: u8 [a0 + 22] = 0\n 44734: u8 [a0 + 21] = 0\n 44737: u8 [a0 + 20] = 0\n 44740: u8 [a0 + 19] = 0\n 44743: u8 [a0 + 18] = 0\n 44746: u8 [a0 + 17] = 0\n 44749: u8 [a0 + 16] = 0\n 44752: u8 [a0 + 15] = 0\n 44755: u8 [a0 + 14] = 0\n 44758: u8 [a0 + 13] = 0\n 44761: u8 [a0 + 12] = 0\n 44764: u8 [a0 + 11] = 0\n 44767: u8 [a0 + 10] = 0\n 44770: u8 [a0 + 9] = 0\n 44773: u8 [a0 + 8] = 0\n 44776: u8 [a0 + 7] = 0\n 44779: u8 [a0 + 6] = 0\n 44782: u8 [a0 + 5] = 0\n 44785: u8 [a0 + 4] = 0\n 44788: u8 [a0 + 3] = 0\n 44791: u8 [a0 + 2] = 0\n 44794: u8 [a0 + 1] = 0\n 44797: u8 [a0 + 0] = 0\n 44799: jump @661 if a1 != 0\n      : @660 (gas: 1)\n 44802: jump @961\n      : @661 (gas: 4)\n 44805: a0 = u64 [sp + 0x20]\n 44808: i32 a0 = a0 + 0x20\n 44811: a1 = 0x20\n 44814: ra = 530, jump @0\n      : @662 [@dyn 265] (gas: 41)\n 44821: u8 [a0 + 31] = 0\n 44824: u8 [a0 + 30] = 0\n 44827: u8 [a0 + 29] = 0\n 44830: u8 [a0 + 28] = 0\n 44833: u8 [a0 + 27] = 0\n 44836: u8 [a0 + 26] = 0\n 44839: u8 [a0 + 25] = 0\n 44842: u8 [a0 + 24] = 0\n 44845: u8 [a0 + 23] = 0\n 44848: u8 [a0 + 22] = 0\n 44851: u8 [a0 + 21] = 0\n 44854: u8 [a0 + 20] = 0\n 44857: u8 [a0 + 19] = 0\n 44860: u8 [a0 + 18] = 0\n 44863: u8 [a0 + 17] = 0\n 44866: u8 [a0 + 16] = 0\n 44869: u8 [a0 + 15] = 0\n 44872: u8 [a0 + 14] = 0\n 44875: u8 [a0 + 13] = 0\n 44878: u8 [a0 + 12] = 0\n 44881: u8 [a0 + 11] = 0\n 44884: u8 [a0 + 10] = 0\n 44887: u8 [a0 + 9] = 0\n 44890: u8 [a0 + 8] = 0\n 44893: u8 [a0 + 7] = 0\n 44896: u8 [a0 + 6] = 0\n 44899: u8 [a0 + 5] = 0\n 44902: u8 [a0 + 4] = 0\n 44905: u8 [a0 + 3] = 0x64\n 44909: u8 [a0 + 2] = 0x6f\n 44913: u8 [a0 + 1] = 0x6f\n 44917: a2 = u64 [sp + 0x18]\n 44920: a2 = a2 + 0xfffffffffffffaa0\n 44924: a3 = u64 [sp + 0x68]\n 44927: a2 = a3 <u a2\n 44930: a3 = u64 [sp + 0x60]\n 44933: a2 = 0 if a3 != 0\n 44935: a3 = u64 [sp + 0x58]\n 44938: a2 = 0 if a3 != 0\n 44940: u8 [a0 + 0] = 0x67\n 44943: jump @664 if a2 != 0\n      : @663 (gas: 1)\n 44946: jump @961\n      : @664 (gas: 4)\n 44949: a0 = u64 [sp + 0x50]\n 44952: i32 a0 = a0 + 0x560\n 44956: a1 = 0x20\n 44959: ra = 532, jump @0\n      : @665 [@dyn 266] (gas: 77)\n 44966: a1 = u64 [sp + 0x30]\n 44969: a1 = reverse a1\n 44971: a2 = u64 [sp + 0x38]\n 44974: a2 = reverse a2\n 44976: a3 = reverse s1\n 44978: a4 = u64 [sp + 0x10]\n 44981: a4 = reverse a4\n 44983: a5 = a4 >> 0x38\n 44986: u8 [a0 + 0x1f] = a5\n 44989: a5 = a4 >> 0x30\n 44992: u8 [a0 + 0x1e] = a5\n 44995: a5 = a4 >> 0x28\n 44998: u8 [a0 + 0x1d] = a5\n 45001: a5 = a4 >> 0x20\n 45004: u8 [a0 + 0x1c] = a5\n 45007: a5 = a4 >> 0x18\n 45010: u8 [a0 + 0x1b] = a5\n 45013: a5 = a4 >> 0x10\n 45016: u8 [a0 + 0x1a] = a5\n 45019: a5 = a4 >> 0x8\n 45022: u8 [a0 + 0x19] = a5\n 45025: u8 [a0 + 0x18] = a4\n 45028: u8 [a0 + 0x10] = a3\n 45031: a4 = a3 >> 0x38\n 45034: u8 [a0 + 0x17] = a4\n 45037: a4 = a3 >> 0x30\n 45040: u8 [a0 + 0x16] = a4\n 45043: a4 = a3 >> 0x28\n 45046: u8 [a0 + 0x15] = a4\n 45049: a4 = a3 >> 0x20\n 45052: u8 [a0 + 0x14] = a4\n 45055: a4 = a3 >> 0x18\n 45058: u8 [a0 + 0x13] = a4\n 45061: a4 = a3 >> 0x10\n 45064: u8 [a0 + 0x12] = a4\n 45067: a3 = a3 >> 0x8\n 45070: u8 [a0 + 0x11] = a3\n 45073: u8 [a0 + 0x8] = a2\n 45076: a3 = a2 >> 0x38\n 45079: u8 [a0 + 0xf] = a3\n 45082: a3 = a2 >> 0x30\n 45085: u8 [a0 + 0xe] = a3\n 45088: a3 = a2 >> 0x28\n 45091: u8 [a0 + 0xd] = a3\n 45094: a3 = a2 >> 0x20\n 45097: u8 [a0 + 0xc] = a3\n 45100: a3 = a2 >> 0x18\n 45103: u8 [a0 + 0xb] = a3\n 45106: a3 = a2 >> 0x10\n 45109: u8 [a0 + 0xa] = a3\n 45112: a2 = a2 >> 0x8\n 45115: u8 [a0 + 0x9] = a2\n 45118: u8 [a0] = a1\n 45120: a2 = a1 >> 0x38\n 45123: u8 [a0 + 0x7] = a2\n 45126: a2 = a1 >> 0x30\n 45129: u8 [a0 + 0x6] = a2\n 45132: a2 = a1 >> 0x28\n 45135: u8 [a0 + 0x5] = a2\n 45138: a2 = a1 >> 0x20\n 45141: u8 [a0 + 0x4] = a2\n 45144: a2 = a1 >> 0x18\n 45147: u8 [a0 + 0x3] = a2\n 45150: a2 = a1 >> 0x10\n 45153: u8 [a0 + 0x2] = a2\n 45156: a1 = a1 >> 0x8\n 45159: u8 [a0 + 0x1] = a1\n 45162: s1 = sp + 0x7e8\n 45166: u64 [s1 + 96] = 0\n 45169: u64 [s1 + 88] = 0\n 45172: u64 [s1 + 72] = 0x40\n 45176: a0 = sp + 0x7ff\n 45180: a0 = a0 + 0x51\n 45183: a1 = sp + 0x7ff\n 45187: a1 = a1 + 0x31\n 45190: u64 [s1 + 80] = 0\n 45193: ra = 534, jump @56\n      : @666 [@dyn 267] (gas: 15)\n 45200: a1 = u64 [s1 + 0x80]\n 45204: a2 = u64 [s1 + 0x78]\n 45207: a0 = u64 [s1 + 0x70]\n 45210: s1 = u64 [s1 + 0x68]\n 45213: u64 [sp + 0x28] = a0\n 45216: u64 [sp + 0x30] = a1\n 45219: a0 = a0 | a1\n 45222: a1 = s1 | a2\n 45225: a1 = a1 | a0\n 45228: a1 = a1 >> 0x20\n 45231: u64 [sp + 0x38] = a2\n 45234: a0 = a0 | a2\n 45237: a0 = a0 << 0x20\n 45240: a0 = a0 | a1\n 45243: jump @668 if a0 == 0\n      : @667 (gas: 1)\n 45246: jump @961\n      : @668 (gas: 4)\n 45249: i32 a0 = s1 + 0\n 45251: a1 = 0x20\n 45254: u64 [sp + 0x18] = a0\n 45257: ra = 536, jump @0\n      : @669 [@dyn 268] (gas: 44)\n 45264: u8 [a0 + 31] = 0x8\n 45268: a1 = u64 [sp + 0x30]\n 45271: a2 = u64 [sp + 0x38]\n 45274: a2 = a2 | a1\n 45277: a1 = 0x100000000\n 45287: u64 [sp + 0x20] = a1\n 45290: a1 = 0xffffffe0\n 45300: u64 [sp + 0x10] = s1\n 45303: a1 = s1 <u a1\n 45306: s1 = u64 [sp + 0x28]\n 45309: a1 = 0 if s1 != 0\n 45311: a1 = 0 if a2 != 0\n 45313: u8 [a0 + 30] = 0\n 45316: u8 [a0 + 29] = 0\n 45319: u8 [a0 + 28] = 0\n 45322: u8 [a0 + 27] = 0\n 45325: u8 [a0 + 26] = 0\n 45328: u8 [a0 + 25] = 0\n 45331: u8 [a0 + 24] = 0\n 45334: u8 [a0 + 23] = 0\n 45337: u8 [a0 + 22] = 0\n 45340: u8 [a0 + 21] = 0\n 45343: u8 [a0 + 20] = 0\n 45346: u8 [a0 + 19] = 0\n 45349: u8 [a0 + 18] = 0\n 45352: u8 [a0 + 17] = 0\n 45355: u8 [a0 + 16] = 0\n 45358: u8 [a0 + 15] = 0\n 45361: u8 [a0 + 14] = 0\n 45364: u8 [a0 + 13] = 0\n 45367: u8 [a0 + 12] = 0\n 45370: u8 [a0 + 11] = 0\n 45373: u8 [a0 + 10] = 0\n 45376: u8 [a0 + 9] = 0\n 45379: u8 [a0 + 8] = 0\n 45382: u8 [a0 + 7] = 0\n 45385: u8 [a0 + 6] = 0\n 45388: u8 [a0 + 5] = 0\n 45391: u8 [a0 + 4] = 0\n 45394: u8 [a0 + 3] = 0\n 45397: u8 [a0 + 2] = 0\n 45400: u8 [a0 + 1] = 0\n 45403: u8 [a0 + 0] = 0\n 45405: jump @671 if a1 != 0\n      : @670 (gas: 1)\n 45408: jump @961\n      : @671 (gas: 4)\n 45411: a0 = u64 [sp + 0x18]\n 45414: i32 a0 = a0 + 0x20\n 45417: a1 = 0x20\n 45420: ra = 538, jump @0\n      : @672 [@dyn 269] (gas: 41)\n 45427: u8 [a0 + 31] = 0\n 45430: u8 [a0 + 30] = 0\n 45433: u8 [a0 + 29] = 0\n 45436: u8 [a0 + 28] = 0\n 45439: u8 [a0 + 27] = 0\n 45442: u8 [a0 + 26] = 0\n 45445: u8 [a0 + 25] = 0\n 45448: u8 [a0 + 24] = 0\n 45451: u8 [a0 + 23] = 0\n 45454: u8 [a0 + 22] = 0\n 45457: u8 [a0 + 21] = 0\n 45460: u8 [a0 + 20] = 0\n 45463: u8 [a0 + 19] = 0\n 45466: u8 [a0 + 18] = 0\n 45469: u8 [a0 + 17] = 0\n 45472: u8 [a0 + 16] = 0\n 45475: u8 [a0 + 15] = 0\n 45478: u8 [a0 + 14] = 0\n 45481: u8 [a0 + 13] = 0\n 45484: u8 [a0 + 12] = 0\n 45487: u8 [a0 + 11] = 0\n 45490: u8 [a0 + 10] = 0\n 45493: u8 [a0 + 9] = 0\n 45496: u8 [a0 + 8] = 0\n 45499: u8 [a0 + 7] = 0x73\n 45503: u8 [a0 + 6] = 0x75\n 45507: u8 [a0 + 5] = 0x6f\n 45511: u8 [a0 + 4] = 0x65\n 45515: u8 [a0 + 3] = 0x67\n 45519: u8 [a0 + 2] = 0x72\n 45523: u8 [a0 + 1] = 0x6f\n 45527: a1 = u64 [sp + 0x20]\n 45530: a1 = a1 + 0xfffffffffffffa80\n 45534: a3 = u64 [sp + 0x68]\n 45537: a1 = a3 <u a1\n 45540: a3 = u64 [sp + 0x60]\n 45543: a1 = 0 if a3 != 0\n 45545: a3 = u64 [sp + 0x58]\n 45548: a1 = 0 if a3 != 0\n 45550: u8 [a0 + 0] = 0x67\n 45553: jump @674 if a1 != 0\n      : @673 (gas: 1)\n 45556: jump @961\n      : @674 (gas: 4)\n 45559: a0 = u64 [sp + 0x50]\n 45562: i32 a0 = a0 + 0x580\n 45566: a1 = 0x20\n 45569: ra = 540, jump @0\n      : @675 [@dyn 270] (gas: 76)\n 45576: a1 = u64 [sp + 0x30]\n 45579: a1 = reverse a1\n 45581: a2 = u64 [sp + 0x38]\n 45584: a2 = reverse a2\n 45586: a3 = reverse s1\n 45588: a4 = u64 [sp + 0x10]\n 45591: a4 = reverse a4\n 45593: a5 = a4 >> 0x38\n 45596: u8 [a0 + 0x1f] = a5\n 45599: a5 = a4 >> 0x30\n 45602: u8 [a0 + 0x1e] = a5\n 45605: a5 = a4 >> 0x28\n 45608: u8 [a0 + 0x1d] = a5\n 45611: a5 = a4 >> 0x20\n 45614: u8 [a0 + 0x1c] = a5\n 45617: a5 = a4 >> 0x18\n 45620: u8 [a0 + 0x1b] = a5\n 45623: a5 = a4 >> 0x10\n 45626: u8 [a0 + 0x1a] = a5\n 45629: a5 = a4 >> 0x8\n 45632: u8 [a0 + 0x19] = a5\n 45635: u8 [a0 + 0x18] = a4\n 45638: u8 [a0 + 0x10] = a3\n 45641: a4 = a3 >> 0x38\n 45644: u8 [a0 + 0x17] = a4\n 45647: a4 = a3 >> 0x30\n 45650: u8 [a0 + 0x16] = a4\n 45653: a4 = a3 >> 0x28\n 45656: u8 [a0 + 0x15] = a4\n 45659: a4 = a3 >> 0x20\n 45662: u8 [a0 + 0x14] = a4\n 45665: a4 = a3 >> 0x18\n 45668: u8 [a0 + 0x13] = a4\n 45671: a4 = a3 >> 0x10\n 45674: u8 [a0 + 0x12] = a4\n 45677: a3 = a3 >> 0x8\n 45680: u8 [a0 + 0x11] = a3\n 45683: u8 [a0 + 0x8] = a2\n 45686: a3 = a2 >> 0x38\n 45689: u8 [a0 + 0xf] = a3\n 45692: a3 = a2 >> 0x30\n 45695: u8 [a0 + 0xe] = a3\n 45698: a3 = a2 >> 0x28\n 45701: u8 [a0 + 0xd] = a3\n 45704: a3 = a2 >> 0x20\n 45707: u8 [a0 + 0xc] = a3\n 45710: a3 = a2 >> 0x18\n 45713: u8 [a0 + 0xb] = a3\n 45716: a3 = a2 >> 0x10\n 45719: u8 [a0 + 0xa] = a3\n 45722: a2 = a2 >> 0x8\n 45725: u8 [a0 + 0x9] = a2\n 45728: u8 [a0] = a1\n 45730: a2 = a1 >> 0x38\n 45733: u8 [a0 + 0x7] = a2\n 45736: a2 = a1 >> 0x30\n 45739: u8 [a0 + 0x6] = a2\n 45742: a2 = a1 >> 0x28\n 45745: u8 [a0 + 0x5] = a2\n 45748: a2 = a1 >> 0x20\n 45751: u8 [a0 + 0x4] = a2\n 45754: a2 = a1 >> 0x18\n 45757: u8 [a0 + 0x3] = a2\n 45760: a2 = a1 >> 0x10\n 45763: u8 [a0 + 0x2] = a2\n 45766: a1 = a1 >> 0x8\n 45769: u8 [a0 + 0x1] = a1\n 45772: s1 = sp + 0x7e8\n 45776: u64 [s1 + 32] = 0\n 45779: u64 [s1 + 24] = 0\n 45782: u64 [s1 + 8] = 0x40\n 45786: a0 = sp + 0x7ff\n 45790: a0 = a0 + 0x11\n 45793: a1 = sp + 0x7f0\n 45797: u64 [s1 + 16] = 0\n 45800: ra = 542, jump @56\n      : @676 [@dyn 271] (gas: 15)\n 45807: a1 = u64 [s1 + 0x40]\n 45810: a2 = u64 [s1 + 0x38]\n 45813: a0 = u64 [s1 + 0x30]\n 45816: s1 = u64 [s1 + 0x28]\n 45819: u64 [sp + 0x28] = a0\n 45822: u64 [sp + 0x30] = a1\n 45825: a0 = a0 | a1\n 45828: a1 = s1 | a2\n 45831: a1 = a1 | a0\n 45834: a1 = a1 >> 0x20\n 45837: u64 [sp + 0x38] = a2\n 45840: a0 = a0 | a2\n 45843: a0 = a0 << 0x20\n 45846: a0 = a0 | a1\n 45849: jump @678 if a0 == 0\n      : @677 (gas: 1)\n 45852: jump @961\n      : @678 (gas: 4)\n 45855: i32 a0 = s1 + 0\n 45857: a1 = 0x20\n 45860: u64 [sp + 0x18] = a0\n 45863: ra = 544, jump @0\n      : @679 [@dyn 272] (gas: 44)\n 45870: u8 [a0 + 31] = 0x8\n 45874: a1 = u64 [sp + 0x30]\n 45877: a2 = u64 [sp + 0x38]\n 45880: a2 = a2 | a1\n 45883: a1 = 0x100000000\n 45893: u64 [sp + 0x20] = a1\n 45896: a1 = 0xffffffe0\n 45906: u64 [sp + 0x10] = s1\n 45909: a1 = s1 <u a1\n 45912: s1 = u64 [sp + 0x28]\n 45915: a1 = 0 if s1 != 0\n 45917: a1 = 0 if a2 != 0\n 45919: u8 [a0 + 30] = 0\n 45922: u8 [a0 + 29] = 0\n 45925: u8 [a0 + 28] = 0\n 45928: u8 [a0 + 27] = 0\n 45931: u8 [a0 + 26] = 0\n 45934: u8 [a0 + 25] = 0\n 45937: u8 [a0 + 24] = 0\n 45940: u8 [a0 + 23] = 0\n 45943: u8 [a0 + 22] = 0\n 45946: u8 [a0 + 21] = 0\n 45949: u8 [a0 + 20] = 0\n 45952: u8 [a0 + 19] = 0\n 45955: u8 [a0 + 18] = 0\n 45958: u8 [a0 + 17] = 0\n 45961: u8 [a0 + 16] = 0\n 45964: u8 [a0 + 15] = 0\n 45967: u8 [a0 + 14] = 0\n 45970: u8 [a0 + 13] = 0\n 45973: u8 [a0 + 12] = 0\n 45976: u8 [a0 + 11] = 0\n 45979: u8 [a0 + 10] = 0\n 45982: u8 [a0 + 9] = 0\n 45985: u8 [a0 + 8] = 0\n 45988: u8 [a0 + 7] = 0\n 45991: u8 [a0 + 6] = 0\n 45994: u8 [a0 + 5] = 0\n 45997: u8 [a0 + 4] = 0\n 46000: u8 [a0 + 3] = 0\n 46003: u8 [a0 + 2] = 0\n 46006: u8 [a0 + 1] = 0\n 46009: u8 [a0 + 0] = 0\n 46011: jump @681 if a1 != 0\n      : @680 (gas: 1)\n 46014: jump @961\n      : @681 (gas: 4)\n 46017: a0 = u64 [sp + 0x18]\n 46020: i32 a0 = a0 + 0x20\n 46023: a1 = 0x20\n 46026: ra = 546, jump @0\n      : @682 [@dyn 273] (gas: 41)\n 46033: u8 [a0 + 31] = 0\n 46036: u8 [a0 + 30] = 0\n 46039: u8 [a0 + 29] = 0\n 46042: u8 [a0 + 28] = 0\n 46045: u8 [a0 + 27] = 0\n 46048: u8 [a0 + 26] = 0\n 46051: u8 [a0 + 25] = 0\n 46054: u8 [a0 + 24] = 0\n 46057: u8 [a0 + 23] = 0\n 46060: u8 [a0 + 22] = 0\n 46063: u8 [a0 + 21] = 0\n 46066: u8 [a0 + 20] = 0\n 46069: u8 [a0 + 19] = 0\n 46072: u8 [a0 + 18] = 0\n 46075: u8 [a0 + 17] = 0\n 46078: u8 [a0 + 16] = 0\n 46081: u8 [a0 + 15] = 0\n 46084: u8 [a0 + 14] = 0\n 46087: u8 [a0 + 13] = 0\n 46090: u8 [a0 + 12] = 0\n 46093: u8 [a0 + 11] = 0\n 46096: u8 [a0 + 10] = 0\n 46099: u8 [a0 + 9] = 0\n 46102: u8 [a0 + 8] = 0\n 46105: u8 [a0 + 7] = 0x6c\n 46109: u8 [a0 + 6] = 0x75\n 46113: u8 [a0 + 5] = 0x66\n 46117: u8 [a0 + 4] = 0x65\n 46121: u8 [a0 + 3] = 0x63\n 46125: u8 [a0 + 2] = 0x61\n 46129: u8 [a0 + 1] = 0x72\n 46133: a2 = u64 [sp + 0x20]\n 46136: a2 = a2 + 0xfffffffffffffa60\n 46140: a3 = u64 [sp + 0x68]\n 46143: a2 = a3 <u a2\n 46146: a3 = u64 [sp + 0x60]\n 46149: a2 = 0 if a3 != 0\n 46151: a3 = u64 [sp + 0x58]\n 46154: a2 = 0 if a3 != 0\n 46156: u8 [a0 + 0] = 0x67\n 46159: jump @684 if a2 != 0\n      : @683 (gas: 1)\n 46162: jump @961\n      : @684 (gas: 4)\n 46165: a0 = u64 [sp + 0x50]\n 46168: i32 a0 = a0 + 0x5a0\n 46172: a1 = 0x20\n 46175: ra = 548, jump @0\n      : @685 [@dyn 274] (gas: 74)\n 46182: a1 = u64 [sp + 0x30]\n 46185: a1 = reverse a1\n 46187: a2 = u64 [sp + 0x38]\n 46190: a2 = reverse a2\n 46192: a3 = reverse s1\n 46194: a4 = u64 [sp + 0x10]\n 46197: a4 = reverse a4\n 46199: a5 = a4 >> 0x38\n 46202: u8 [a0 + 0x1f] = a5\n 46205: a5 = a4 >> 0x30\n 46208: u8 [a0 + 0x1e] = a5\n 46211: a5 = a4 >> 0x28\n 46214: u8 [a0 + 0x1d] = a5\n 46217: a5 = a4 >> 0x20\n 46220: u8 [a0 + 0x1c] = a5\n 46223: a5 = a4 >> 0x18\n 46226: u8 [a0 + 0x1b] = a5\n 46229: a5 = a4 >> 0x10\n 46232: u8 [a0 + 0x1a] = a5\n 46235: a5 = a4 >> 0x8\n 46238: u8 [a0 + 0x19] = a5\n 46241: u8 [a0 + 0x18] = a4\n 46244: u8 [a0 + 0x10] = a3\n 46247: a4 = a3 >> 0x38\n 46250: u8 [a0 + 0x17] = a4\n 46253: a4 = a3 >> 0x30\n 46256: u8 [a0 + 0x16] = a4\n 46259: a4 = a3 >> 0x28\n 46262: u8 [a0 + 0x15] = a4\n 46265: a4 = a3 >> 0x20\n 46268: u8 [a0 + 0x14] = a4\n 46271: a4 = a3 >> 0x18\n 46274: u8 [a0 + 0x13] = a4\n 46277: a4 = a3 >> 0x10\n 46280: u8 [a0 + 0x12] = a4\n 46283: a3 = a3 >> 0x8\n 46286: u8 [a0 + 0x11] = a3\n 46289: u8 [a0 + 0x8] = a2\n 46292: a3 = a2 >> 0x38\n 46295: u8 [a0 + 0xf] = a3\n 46298: a3 = a2 >> 0x30\n 46301: u8 [a0 + 0xe] = a3\n 46304: a3 = a2 >> 0x28\n 46307: u8 [a0 + 0xd] = a3\n 46310: a3 = a2 >> 0x20\n 46313: u8 [a0 + 0xc] = a3\n 46316: a3 = a2 >> 0x18\n 46319: u8 [a0 + 0xb] = a3\n 46322: a3 = a2 >> 0x10\n 46325: u8 [a0 + 0xa] = a3\n 46328: a2 = a2 >> 0x8\n 46331: u8 [a0 + 0x9] = a2\n 46334: u8 [a0] = a1\n 46336: a2 = a1 >> 0x38\n 46339: u8 [a0 + 0x7] = a2\n 46342: a2 = a1 >> 0x30\n 46345: u8 [a0 + 0x6] = a2\n 46348: a2 = a1 >> 0x28\n 46351: u8 [a0 + 0x5] = a2\n 46354: a2 = a1 >> 0x20\n 46357: u8 [a0 + 0x4] = a2\n 46360: a2 = a1 >> 0x18\n 46363: u8 [a0 + 0x3] = a2\n 46366: a2 = a1 >> 0x10\n 46369: u8 [a0 + 0x2] = a2\n 46372: a1 = a1 >> 0x8\n 46375: u8 [a0 + 0x1] = a1\n 46378: u64 [sp + 1992] = 0\n 46382: u64 [sp + 1984] = 0\n 46386: u64 [sp + 1968] = 0x40\n 46391: a0 = sp + 0x7d0\n 46395: a1 = sp + 0x7b0\n 46399: u64 [sp + 1976] = 0\n 46403: ra = 550, jump @56\n      : @686 [@dyn 275] (gas: 16)\n 46410: a0 = sp + 0x7e8\n 46414: a1 = u64 [a0]\n 46416: a2 = u64 [a0 + 0xfffffffffffffff8]\n 46419: a0 = u64 [sp + 0x7d8]\n 46423: s1 = u64 [sp + 0x7d0]\n 46427: u64 [sp + 0x28] = a0\n 46430: u64 [sp + 0x30] = a1\n 46433: a0 = a0 | a1\n 46436: a1 = s1 | a2\n 46439: a1 = a1 | a0\n 46442: a1 = a1 >> 0x20\n 46445: u64 [sp + 0x38] = a2\n 46448: a0 = a0 | a2\n 46451: a0 = a0 << 0x20\n 46454: a0 = a0 | a1\n 46457: jump @688 if a0 == 0\n      : @687 (gas: 1)\n 46460: jump @961\n      : @688 (gas: 4)\n 46463: i32 a0 = s1 + 0\n 46465: a1 = 0x20\n 46468: u64 [sp + 0x18] = a0\n 46471: ra = 552, jump @0\n      : @689 [@dyn 276] (gas: 44)\n 46478: u8 [a0 + 31] = 0x5\n 46482: a1 = u64 [sp + 0x30]\n 46485: a2 = u64 [sp + 0x38]\n 46488: a2 = a2 | a1\n 46491: a1 = 0x100000000\n 46501: u64 [sp + 0x20] = a1\n 46504: a1 = 0xffffffe0\n 46514: u64 [sp + 0x10] = s1\n 46517: a1 = s1 <u a1\n 46520: s1 = u64 [sp + 0x28]\n 46523: a1 = 0 if s1 != 0\n 46525: a1 = 0 if a2 != 0\n 46527: u8 [a0 + 30] = 0\n 46530: u8 [a0 + 29] = 0\n 46533: u8 [a0 + 28] = 0\n 46536: u8 [a0 + 27] = 0\n 46539: u8 [a0 + 26] = 0\n 46542: u8 [a0 + 25] = 0\n 46545: u8 [a0 + 24] = 0\n 46548: u8 [a0 + 23] = 0\n 46551: u8 [a0 + 22] = 0\n 46554: u8 [a0 + 21] = 0\n 46557: u8 [a0 + 20] = 0\n 46560: u8 [a0 + 19] = 0\n 46563: u8 [a0 + 18] = 0\n 46566: u8 [a0 + 17] = 0\n 46569: u8 [a0 + 16] = 0\n 46572: u8 [a0 + 15] = 0\n 46575: u8 [a0 + 14] = 0\n 46578: u8 [a0 + 13] = 0\n 46581: u8 [a0 + 12] = 0\n 46584: u8 [a0 + 11] = 0\n 46587: u8 [a0 + 10] = 0\n 46590: u8 [a0 + 9] = 0\n 46593: u8 [a0 + 8] = 0\n 46596: u8 [a0 + 7] = 0\n 46599: u8 [a0 + 6] = 0\n 46602: u8 [a0 + 5] = 0\n 46605: u8 [a0 + 4] = 0\n 46608: u8 [a0 + 3] = 0\n 46611: u8 [a0 + 2] = 0\n 46614: u8 [a0 + 1] = 0\n 46617: u8 [a0 + 0] = 0\n 46619: jump @691 if a1 != 0\n      : @690 (gas: 1)\n 46622: jump @961\n      : @691 (gas: 4)\n 46625: a0 = u64 [sp + 0x18]\n 46628: i32 a0 = a0 + 0x20\n 46631: a1 = 0x20\n 46634: ra = 554, jump @0\n      : @692 [@dyn 277] (gas: 41)\n 46641: u8 [a0 + 31] = 0\n 46644: u8 [a0 + 30] = 0\n 46647: u8 [a0 + 29] = 0\n 46650: u8 [a0 + 28] = 0\n 46653: u8 [a0 + 27] = 0\n 46656: u8 [a0 + 26] = 0\n 46659: u8 [a0 + 25] = 0\n 46662: u8 [a0 + 24] = 0\n 46665: u8 [a0 + 23] = 0\n 46668: u8 [a0 + 22] = 0\n 46671: u8 [a0 + 21] = 0\n 46674: u8 [a0 + 20] = 0\n 46677: u8 [a0 + 19] = 0\n 46680: u8 [a0 + 18] = 0\n 46683: u8 [a0 + 17] = 0\n 46686: u8 [a0 + 16] = 0\n 46689: u8 [a0 + 15] = 0\n 46692: u8 [a0 + 14] = 0\n 46695: u8 [a0 + 13] = 0\n 46698: u8 [a0 + 12] = 0\n 46701: u8 [a0 + 11] = 0\n 46704: u8 [a0 + 10] = 0\n 46707: u8 [a0 + 9] = 0\n 46710: u8 [a0 + 8] = 0\n 46713: u8 [a0 + 7] = 0\n 46716: u8 [a0 + 6] = 0\n 46719: u8 [a0 + 5] = 0\n 46722: u8 [a0 + 4] = 0x74\n 46726: u8 [a0 + 3] = 0x61\n 46730: u8 [a0 + 2] = 0x65\n 46734: u8 [a0 + 1] = 0x72\n 46738: a2 = u64 [sp + 0x20]\n 46741: a2 = a2 + 0xfffffffffffffa40\n 46745: a3 = u64 [sp + 0x68]\n 46748: a2 = a3 <u a2\n 46751: a3 = u64 [sp + 0x60]\n 46754: a2 = 0 if a3 != 0\n 46756: a3 = u64 [sp + 0x58]\n 46759: a2 = 0 if a3 != 0\n 46761: u8 [a0 + 0] = 0x67\n 46764: jump @694 if a2 != 0\n      : @693 (gas: 1)\n 46767: jump @961\n      : @694 (gas: 4)\n 46770: a0 = u64 [sp + 0x50]\n 46773: i32 a0 = a0 + 0x5c0\n 46777: a1 = 0x20\n 46780: ra = 556, jump @0\n      : @695 [@dyn 278] (gas: 74)\n 46787: a1 = u64 [sp + 0x30]\n 46790: a1 = reverse a1\n 46792: a2 = u64 [sp + 0x38]\n 46795: a2 = reverse a2\n 46797: a3 = reverse s1\n 46799: a4 = u64 [sp + 0x10]\n 46802: a4 = reverse a4\n 46804: a5 = a4 >> 0x38\n 46807: u8 [a0 + 0x1f] = a5\n 46810: a5 = a4 >> 0x30\n 46813: u8 [a0 + 0x1e] = a5\n 46816: a5 = a4 >> 0x28\n 46819: u8 [a0 + 0x1d] = a5\n 46822: a5 = a4 >> 0x20\n 46825: u8 [a0 + 0x1c] = a5\n 46828: a5 = a4 >> 0x18\n 46831: u8 [a0 + 0x1b] = a5\n 46834: a5 = a4 >> 0x10\n 46837: u8 [a0 + 0x1a] = a5\n 46840: a5 = a4 >> 0x8\n 46843: u8 [a0 + 0x19] = a5\n 46846: u8 [a0 + 0x18] = a4\n 46849: u8 [a0 + 0x10] = a3\n 46852: a4 = a3 >> 0x38\n 46855: u8 [a0 + 0x17] = a4\n 46858: a4 = a3 >> 0x30\n 46861: u8 [a0 + 0x16] = a4\n 46864: a4 = a3 >> 0x28\n 46867: u8 [a0 + 0x15] = a4\n 46870: a4 = a3 >> 0x20\n 46873: u8 [a0 + 0x14] = a4\n 46876: a4 = a3 >> 0x18\n 46879: u8 [a0 + 0x13] = a4\n 46882: a4 = a3 >> 0x10\n 46885: u8 [a0 + 0x12] = a4\n 46888: a3 = a3 >> 0x8\n 46891: u8 [a0 + 0x11] = a3\n 46894: u8 [a0 + 0x8] = a2\n 46897: a3 = a2 >> 0x38\n 46900: u8 [a0 + 0xf] = a3\n 46903: a3 = a2 >> 0x30\n 46906: u8 [a0 + 0xe] = a3\n 46909: a3 = a2 >> 0x28\n 46912: u8 [a0 + 0xd] = a3\n 46915: a3 = a2 >> 0x20\n 46918: u8 [a0 + 0xc] = a3\n 46921: a3 = a2 >> 0x18\n 46924: u8 [a0 + 0xb] = a3\n 46927: a3 = a2 >> 0x10\n 46930: u8 [a0 + 0xa] = a3\n 46933: a2 = a2 >> 0x8\n 46936: u8 [a0 + 0x9] = a2\n 46939: u8 [a0] = a1\n 46941: a2 = a1 >> 0x38\n 46944: u8 [a0 + 0x7] = a2\n 46947: a2 = a1 >> 0x30\n 46950: u8 [a0 + 0x6] = a2\n 46953: a2 = a1 >> 0x28\n 46956: u8 [a0 + 0x5] = a2\n 46959: a2 = a1 >> 0x20\n 46962: u8 [a0 + 0x4] = a2\n 46965: a2 = a1 >> 0x18\n 46968: u8 [a0 + 0x3] = a2\n 46971: a2 = a1 >> 0x10\n 46974: u8 [a0 + 0x2] = a2\n 46977: a1 = a1 >> 0x8\n 46980: u8 [a0 + 0x1] = a1\n 46983: u64 [sp + 1928] = 0\n 46987: u64 [sp + 1920] = 0\n 46991: u64 [sp + 1904] = 0x40\n 46996: a0 = sp + 0x790\n 47000: a1 = sp + 0x770\n 47004: u64 [sp + 1912] = 0\n 47008: ra = 558, jump @56\n      : @696 [@dyn 279] (gas: 15)\n 47015: a1 = u64 [sp + 0x7a8]\n 47019: a2 = u64 [sp + 0x7a0]\n 47023: a0 = u64 [sp + 0x798]\n 47027: s1 = u64 [sp + 0x790]\n 47031: u64 [sp + 0x28] = a0\n 47034: u64 [sp + 0x30] = a1\n 47037: a0 = a0 | a1\n 47040: a1 = s1 | a2\n 47043: a1 = a1 | a0\n 47046: a1 = a1 >> 0x20\n 47049: u64 [sp + 0x38] = a2\n 47052: a0 = a0 | a2\n 47055: a0 = a0 << 0x20\n 47058: a0 = a0 | a1\n 47061: jump @698 if a0 == 0\n      : @697 (gas: 1)\n 47064: jump @961\n      : @698 (gas: 4)\n 47067: i32 a0 = s1 + 0\n 47069: a1 = 0x20\n 47072: u64 [sp + 0x18] = a0\n 47075: ra = 560, jump @0\n      : @699 [@dyn 280] (gas: 44)\n 47082: u8 [a0 + 31] = 0x5\n 47086: a1 = u64 [sp + 0x30]\n 47089: a2 = u64 [sp + 0x38]\n 47092: a2 = a2 | a1\n 47095: a1 = 0x100000000\n 47105: u64 [sp + 0x20] = a1\n 47108: a1 = 0xffffffe0\n 47118: u64 [sp + 0x10] = s1\n 47121: a1 = s1 <u a1\n 47124: s1 = u64 [sp + 0x28]\n 47127: a1 = 0 if s1 != 0\n 47129: a1 = 0 if a2 != 0\n 47131: u8 [a0 + 30] = 0\n 47134: u8 [a0 + 29] = 0\n 47137: u8 [a0 + 28] = 0\n 47140: u8 [a0 + 27] = 0\n 47143: u8 [a0 + 26] = 0\n 47146: u8 [a0 + 25] = 0\n 47149: u8 [a0 + 24] = 0\n 47152: u8 [a0 + 23] = 0\n 47155: u8 [a0 + 22] = 0\n 47158: u8 [a0 + 21] = 0\n 47161: u8 [a0 + 20] = 0\n 47164: u8 [a0 + 19] = 0\n 47167: u8 [a0 + 18] = 0\n 47170: u8 [a0 + 17] = 0\n 47173: u8 [a0 + 16] = 0\n 47176: u8 [a0 + 15] = 0\n 47179: u8 [a0 + 14] = 0\n 47182: u8 [a0 + 13] = 0\n 47185: u8 [a0 + 12] = 0\n 47188: u8 [a0 + 11] = 0\n 47191: u8 [a0 + 10] = 0\n 47194: u8 [a0 + 9] = 0\n 47197: u8 [a0 + 8] = 0\n 47200: u8 [a0 + 7] = 0\n 47203: u8 [a0 + 6] = 0\n 47206: u8 [a0 + 5] = 0\n 47209: u8 [a0 + 4] = 0\n 47212: u8 [a0 + 3] = 0\n 47215: u8 [a0 + 2] = 0\n 47218: u8 [a0 + 1] = 0\n 47221: u8 [a0 + 0] = 0\n 47223: jump @701 if a1 != 0\n      : @700 (gas: 1)\n 47226: jump @961\n      : @701 (gas: 4)\n 47229: a0 = u64 [sp + 0x18]\n 47232: i32 a0 = a0 + 0x20\n 47235: a1 = 0x20\n 47238: ra = 562, jump @0\n      : @702 [@dyn 281] (gas: 41)\n 47245: u8 [a0 + 31] = 0\n 47248: u8 [a0 + 30] = 0\n 47251: u8 [a0 + 29] = 0\n 47254: u8 [a0 + 28] = 0\n 47257: u8 [a0 + 27] = 0\n 47260: u8 [a0 + 26] = 0\n 47263: u8 [a0 + 25] = 0\n 47266: u8 [a0 + 24] = 0\n 47269: u8 [a0 + 23] = 0\n 47272: u8 [a0 + 22] = 0\n 47275: u8 [a0 + 21] = 0\n 47278: u8 [a0 + 20] = 0\n 47281: u8 [a0 + 19] = 0\n 47284: u8 [a0 + 18] = 0\n 47287: u8 [a0 + 17] = 0\n 47290: u8 [a0 + 16] = 0\n 47293: u8 [a0 + 15] = 0\n 47296: u8 [a0 + 14] = 0\n 47299: u8 [a0 + 13] = 0\n 47302: u8 [a0 + 12] = 0\n 47305: u8 [a0 + 11] = 0\n 47308: u8 [a0 + 10] = 0\n 47311: u8 [a0 + 9] = 0\n 47314: u8 [a0 + 8] = 0\n 47317: u8 [a0 + 7] = 0\n 47320: u8 [a0 + 6] = 0\n 47323: u8 [a0 + 5] = 0\n 47326: u8 [a0 + 4] = 0x79\n 47330: u8 [a0 + 3] = 0x70\n 47334: u8 [a0 + 2] = 0x70\n 47338: u8 [a0 + 1] = 0x61\n 47342: a2 = u64 [sp + 0x20]\n 47345: a2 = a2 + 0xfffffffffffffa20\n 47349: a3 = u64 [sp + 0x68]\n 47352: a2 = a3 <u a2\n 47355: a3 = u64 [sp + 0x60]\n 47358: a2 = 0 if a3 != 0\n 47360: a3 = u64 [sp + 0x58]\n 47363: a2 = 0 if a3 != 0\n 47365: u8 [a0 + 0] = 0x68\n 47368: jump @704 if a2 != 0\n      : @703 (gas: 1)\n 47371: jump @961\n      : @704 (gas: 4)\n 47374: a0 = u64 [sp + 0x50]\n 47377: i32 a0 = a0 + 0x5e0\n 47381: a1 = 0x20\n 47384: ra = 564, jump @0\n      : @705 [@dyn 282] (gas: 74)\n 47391: a1 = u64 [sp + 0x30]\n 47394: a1 = reverse a1\n 47396: a2 = u64 [sp + 0x38]\n 47399: a2 = reverse a2\n 47401: a3 = reverse s1\n 47403: a4 = u64 [sp + 0x10]\n 47406: a4 = reverse a4\n 47408: a5 = a4 >> 0x38\n 47411: u8 [a0 + 0x1f] = a5\n 47414: a5 = a4 >> 0x30\n 47417: u8 [a0 + 0x1e] = a5\n 47420: a5 = a4 >> 0x28\n 47423: u8 [a0 + 0x1d] = a5\n 47426: a5 = a4 >> 0x20\n 47429: u8 [a0 + 0x1c] = a5\n 47432: a5 = a4 >> 0x18\n 47435: u8 [a0 + 0x1b] = a5\n 47438: a5 = a4 >> 0x10\n 47441: u8 [a0 + 0x1a] = a5\n 47444: a5 = a4 >> 0x8\n 47447: u8 [a0 + 0x19] = a5\n 47450: u8 [a0 + 0x18] = a4\n 47453: u8 [a0 + 0x10] = a3\n 47456: a4 = a3 >> 0x38\n 47459: u8 [a0 + 0x17] = a4\n 47462: a4 = a3 >> 0x30\n 47465: u8 [a0 + 0x16] = a4\n 47468: a4 = a3 >> 0x28\n 47471: u8 [a0 + 0x15] = a4\n 47474: a4 = a3 >> 0x20\n 47477: u8 [a0 + 0x14] = a4\n 47480: a4 = a3 >> 0x18\n 47483: u8 [a0 + 0x13] = a4\n 47486: a4 = a3 >> 0x10\n 47489: u8 [a0 + 0x12] = a4\n 47492: a3 = a3 >> 0x8\n 47495: u8 [a0 + 0x11] = a3\n 47498: u8 [a0 + 0x8] = a2\n 47501: a3 = a2 >> 0x38\n 47504: u8 [a0 + 0xf] = a3\n 47507: a3 = a2 >> 0x30\n 47510: u8 [a0 + 0xe] = a3\n 47513: a3 = a2 >> 0x28\n 47516: u8 [a0 + 0xd] = a3\n 47519: a3 = a2 >> 0x20\n 47522: u8 [a0 + 0xc] = a3\n 47525: a3 = a2 >> 0x18\n 47528: u8 [a0 + 0xb] = a3\n 47531: a3 = a2 >> 0x10\n 47534: u8 [a0 + 0xa] = a3\n 47537: a2 = a2 >> 0x8\n 47540: u8 [a0 + 0x9] = a2\n 47543: u8 [a0] = a1\n 47545: a2 = a1 >> 0x38\n 47548: u8 [a0 + 0x7] = a2\n 47551: a2 = a1 >> 0x30\n 47554: u8 [a0 + 0x6] = a2\n 47557: a2 = a1 >> 0x28\n 47560: u8 [a0 + 0x5] = a2\n 47563: a2 = a1 >> 0x20\n 47566: u8 [a0 + 0x4] = a2\n 47569: a2 = a1 >> 0x18\n 47572: u8 [a0 + 0x3] = a2\n 47575: a2 = a1 >> 0x10\n 47578: u8 [a0 + 0x2] = a2\n 47581: a1 = a1 >> 0x8\n 47584: u8 [a0 + 0x1] = a1\n 47587: u64 [sp + 1864] = 0\n 47591: u64 [sp + 1856] = 0\n 47595: u64 [sp + 1840] = 0x40\n 47600: a0 = sp + 0x750\n 47604: a1 = sp + 0x730\n 47608: u64 [sp + 1848] = 0\n 47612: ra = 566, jump @56\n      : @706 [@dyn 283] (gas: 15)\n 47619: a1 = u64 [sp + 0x768]\n 47623: a2 = u64 [sp + 0x760]\n 47627: a0 = u64 [sp + 0x758]\n 47631: s1 = u64 [sp + 0x750]\n 47635: u64 [sp + 0x28] = a0\n 47638: u64 [sp + 0x30] = a1\n 47641: a0 = a0 | a1\n 47644: a1 = s1 | a2\n 47647: a1 = a1 | a0\n 47650: a1 = a1 >> 0x20\n 47653: u64 [sp + 0x38] = a2\n 47656: a0 = a0 | a2\n 47659: a0 = a0 << 0x20\n 47662: a0 = a0 | a1\n 47665: jump @708 if a0 == 0\n      : @707 (gas: 1)\n 47668: jump @961\n      : @708 (gas: 4)\n 47671: i32 a0 = s1 + 0\n 47673: a1 = 0x20\n 47676: u64 [sp + 0x18] = a0\n 47679: ra = 568, jump @0\n      : @709 [@dyn 284] (gas: 44)\n 47686: u8 [a0 + 31] = 0xa\n 47690: a1 = u64 [sp + 0x30]\n 47693: a2 = u64 [sp + 0x38]\n 47696: a2 = a2 | a1\n 47699: a1 = 0x100000000\n 47709: u64 [sp + 0x20] = a1\n 47712: a1 = 0xffffffe0\n 47722: u64 [sp + 0x10] = s1\n 47725: a1 = s1 <u a1\n 47728: s1 = u64 [sp + 0x28]\n 47731: a1 = 0 if s1 != 0\n 47733: a1 = 0 if a2 != 0\n 47735: u8 [a0 + 30] = 0\n 47738: u8 [a0 + 29] = 0\n 47741: u8 [a0 + 28] = 0\n 47744: u8 [a0 + 27] = 0\n 47747: u8 [a0 + 26] = 0\n 47750: u8 [a0 + 25] = 0\n 47753: u8 [a0 + 24] = 0\n 47756: u8 [a0 + 23] = 0\n 47759: u8 [a0 + 22] = 0\n 47762: u8 [a0 + 21] = 0\n 47765: u8 [a0 + 20] = 0\n 47768: u8 [a0 + 19] = 0\n 47771: u8 [a0 + 18] = 0\n 47774: u8 [a0 + 17] = 0\n 47777: u8 [a0 + 16] = 0\n 47780: u8 [a0 + 15] = 0\n 47783: u8 [a0 + 14] = 0\n 47786: u8 [a0 + 13] = 0\n 47789: u8 [a0 + 12] = 0\n 47792: u8 [a0 + 11] = 0\n 47795: u8 [a0 + 10] = 0\n 47798: u8 [a0 + 9] = 0\n 47801: u8 [a0 + 8] = 0\n 47804: u8 [a0 + 7] = 0\n 47807: u8 [a0 + 6] = 0\n 47810: u8 [a0 + 5] = 0\n 47813: u8 [a0 + 4] = 0\n 47816: u8 [a0 + 3] = 0\n 47819: u8 [a0 + 2] = 0\n 47822: u8 [a0 + 1] = 0\n 47825: u8 [a0 + 0] = 0\n 47827: jump @711 if a1 != 0\n      : @710 (gas: 1)\n 47830: jump @961\n      : @711 (gas: 4)\n 47833: a0 = u64 [sp + 0x18]\n 47836: i32 a0 = a0 + 0x20\n 47839: a1 = 0x20\n 47842: ra = 570, jump @0\n      : @712 [@dyn 285] (gas: 41)\n 47849: u8 [a0 + 31] = 0\n 47852: u8 [a0 + 30] = 0\n 47855: u8 [a0 + 29] = 0\n 47858: u8 [a0 + 28] = 0\n 47861: u8 [a0 + 27] = 0\n 47864: u8 [a0 + 26] = 0\n 47867: u8 [a0 + 25] = 0\n 47870: u8 [a0 + 24] = 0\n 47873: u8 [a0 + 23] = 0\n 47876: u8 [a0 + 22] = 0\n 47879: u8 [a0 + 21] = 0\n 47882: u8 [a0 + 20] = 0\n 47885: u8 [a0 + 19] = 0\n 47888: u8 [a0 + 18] = 0\n 47891: u8 [a0 + 17] = 0\n 47894: u8 [a0 + 16] = 0\n 47897: u8 [a0 + 15] = 0\n 47900: u8 [a0 + 14] = 0\n 47903: u8 [a0 + 13] = 0\n 47906: u8 [a0 + 12] = 0\n 47909: u8 [a0 + 11] = 0\n 47912: u8 [a0 + 10] = 0\n 47915: u8 [a0 + 9] = 0x73\n 47919: u8 [a0 + 8] = 0x75\n 47923: u8 [a0 + 7] = 0x6f\n 47927: u8 [a0 + 6] = 0x69\n 47931: u8 [a0 + 5] = 0x6e\n 47935: u8 [a0 + 4] = 0x6f\n 47939: u8 [a0 + 3] = 0x6d\n 47943: u8 [a0 + 2] = 0x72\n 47947: u8 [a0 + 1] = 0x61\n 47951: a2 = u64 [sp + 0x20]\n 47954: a2 = a2 + 0xfffffffffffffa00\n 47958: a3 = u64 [sp + 0x68]\n 47961: a2 = a3 <u a2\n 47964: a3 = u64 [sp + 0x60]\n 47967: a2 = 0 if a3 != 0\n 47969: a3 = u64 [sp + 0x58]\n 47972: a2 = 0 if a3 != 0\n 47974: u8 [a0 + 0] = 0x68\n 47977: jump @714 if a2 != 0\n      : @713 (gas: 1)\n 47980: jump @961\n      : @714 (gas: 4)\n 47983: a0 = u64 [sp + 0x50]\n 47986: i32 a0 = a0 + 0x600\n 47990: a1 = 0x20\n 47993: ra = 572, jump @0\n      : @715 [@dyn 286] (gas: 74)\n 48000: a1 = u64 [sp + 0x30]\n 48003: a1 = reverse a1\n 48005: a2 = u64 [sp + 0x38]\n 48008: a2 = reverse a2\n 48010: a3 = reverse s1\n 48012: a4 = u64 [sp + 0x10]\n 48015: a4 = reverse a4\n 48017: a5 = a4 >> 0x38\n 48020: u8 [a0 + 0x1f] = a5\n 48023: a5 = a4 >> 0x30\n 48026: u8 [a0 + 0x1e] = a5\n 48029: a5 = a4 >> 0x28\n 48032: u8 [a0 + 0x1d] = a5\n 48035: a5 = a4 >> 0x20\n 48038: u8 [a0 + 0x1c] = a5\n 48041: a5 = a4 >> 0x18\n 48044: u8 [a0 + 0x1b] = a5\n 48047: a5 = a4 >> 0x10\n 48050: u8 [a0 + 0x1a] = a5\n 48053: a5 = a4 >> 0x8\n 48056: u8 [a0 + 0x19] = a5\n 48059: u8 [a0 + 0x18] = a4\n 48062: u8 [a0 + 0x10] = a3\n 48065: a4 = a3 >> 0x38\n 48068: u8 [a0 + 0x17] = a4\n 48071: a4 = a3 >> 0x30\n 48074: u8 [a0 + 0x16] = a4\n 48077: a4 = a3 >> 0x28\n 48080: u8 [a0 + 0x15] = a4\n 48083: a4 = a3 >> 0x20\n 48086: u8 [a0 + 0x14] = a4\n 48089: a4 = a3 >> 0x18\n 48092: u8 [a0 + 0x13] = a4\n 48095: a4 = a3 >> 0x10\n 48098: u8 [a0 + 0x12] = a4\n 48101: a3 = a3 >> 0x8\n 48104: u8 [a0 + 0x11] = a3\n 48107: u8 [a0 + 0x8] = a2\n 48110: a3 = a2 >> 0x38\n 48113: u8 [a0 + 0xf] = a3\n 48116: a3 = a2 >> 0x30\n 48119: u8 [a0 + 0xe] = a3\n 48122: a3 = a2 >> 0x28\n 48125: u8 [a0 + 0xd] = a3\n 48128: a3 = a2 >> 0x20\n 48131: u8 [a0 + 0xc] = a3\n 48134: a3 = a2 >> 0x18\n 48137: u8 [a0 + 0xb] = a3\n 48140: a3 = a2 >> 0x10\n 48143: u8 [a0 + 0xa] = a3\n 48146: a2 = a2 >> 0x8\n 48149: u8 [a0 + 0x9] = a2\n 48152: u8 [a0] = a1\n 48154: a2 = a1 >> 0x38\n 48157: u8 [a0 + 0x7] = a2\n 48160: a2 = a1 >> 0x30\n 48163: u8 [a0 + 0x6] = a2\n 48166: a2 = a1 >> 0x28\n 48169: u8 [a0 + 0x5] = a2\n 48172: a2 = a1 >> 0x20\n 48175: u8 [a0 + 0x4] = a2\n 48178: a2 = a1 >> 0x18\n 48181: u8 [a0 + 0x3] = a2\n 48184: a2 = a1 >> 0x10\n 48187: u8 [a0 + 0x2] = a2\n 48190: a1 = a1 >> 0x8\n 48193: u8 [a0 + 0x1] = a1\n 48196: u64 [sp + 1800] = 0\n 48200: u64 [sp + 1792] = 0\n 48204: u64 [sp + 1776] = 0x40\n 48209: a0 = sp + 0x710\n 48213: a1 = sp + 0x6f0\n 48217: u64 [sp + 1784] = 0\n 48221: ra = 574, jump @56\n      : @716 [@dyn 287] (gas: 15)\n 48228: a1 = u64 [sp + 0x728]\n 48232: a2 = u64 [sp + 0x720]\n 48236: a0 = u64 [sp + 0x718]\n 48240: s1 = u64 [sp + 0x710]\n 48244: u64 [sp + 0x28] = a0\n 48247: u64 [sp + 0x30] = a1\n 48250: a0 = a0 | a1\n 48253: a1 = s1 | a2\n 48256: a1 = a1 | a0\n 48259: a1 = a1 >> 0x20\n 48262: u64 [sp + 0x38] = a2\n 48265: a0 = a0 | a2\n 48268: a0 = a0 << 0x20\n 48271: a0 = a0 | a1\n 48274: jump @718 if a0 == 0\n      : @717 (gas: 1)\n 48277: jump @961\n      : @718 (gas: 4)\n 48280: i32 a0 = s1 + 0\n 48282: a1 = 0x20\n 48285: u64 [sp + 0x18] = a0\n 48288: ra = 576, jump @0\n      : @719 [@dyn 288] (gas: 44)\n 48295: u8 [a0 + 31] = 0x7\n 48299: a1 = u64 [sp + 0x30]\n 48302: a2 = u64 [sp + 0x38]\n 48305: a2 = a2 | a1\n 48308: a1 = 0x100000000\n 48318: u64 [sp + 0x20] = a1\n 48321: a1 = 0xffffffe0\n 48331: u64 [sp + 0x10] = s1\n 48334: a1 = s1 <u a1\n 48337: s1 = u64 [sp + 0x28]\n 48340: a1 = 0 if s1 != 0\n 48342: a1 = 0 if a2 != 0\n 48344: u8 [a0 + 30] = 0\n 48347: u8 [a0 + 29] = 0\n 48350: u8 [a0 + 28] = 0\n 48353: u8 [a0 + 27] = 0\n 48356: u8 [a0 + 26] = 0\n 48359: u8 [a0 + 25] = 0\n 48362: u8 [a0 + 24] = 0\n 48365: u8 [a0 + 23] = 0\n 48368: u8 [a0 + 22] = 0\n 48371: u8 [a0 + 21] = 0\n 48374: u8 [a0 + 20] = 0\n 48377: u8 [a0 + 19] = 0\n 48380: u8 [a0 + 18] = 0\n 48383: u8 [a0 + 17] = 0\n 48386: u8 [a0 + 16] = 0\n 48389: u8 [a0 + 15] = 0\n 48392: u8 [a0 + 14] = 0\n 48395: u8 [a0 + 13] = 0\n 48398: u8 [a0 + 12] = 0\n 48401: u8 [a0 + 11] = 0\n 48404: u8 [a0 + 10] = 0\n 48407: u8 [a0 + 9] = 0\n 48410: u8 [a0 + 8] = 0\n 48413: u8 [a0 + 7] = 0\n 48416: u8 [a0 + 6] = 0\n 48419: u8 [a0 + 5] = 0\n 48422: u8 [a0 + 4] = 0\n 48425: u8 [a0 + 3] = 0\n 48428: u8 [a0 + 2] = 0\n 48431: u8 [a0 + 1] = 0\n 48434: u8 [a0 + 0] = 0\n 48436: jump @721 if a1 != 0\n      : @720 (gas: 1)\n 48439: jump @961\n      : @721 (gas: 4)\n 48442: a0 = u64 [sp + 0x18]\n 48445: i32 a0 = a0 + 0x20\n 48448: a1 = 0x20\n 48451: ra = 578, jump @0\n      : @722 [@dyn 289] (gas: 41)\n 48458: u8 [a0 + 31] = 0\n 48461: u8 [a0 + 30] = 0\n 48464: u8 [a0 + 29] = 0\n 48467: u8 [a0 + 28] = 0\n 48470: u8 [a0 + 27] = 0\n 48473: u8 [a0 + 26] = 0\n 48476: u8 [a0 + 25] = 0\n 48479: u8 [a0 + 24] = 0\n 48482: u8 [a0 + 23] = 0\n 48485: u8 [a0 + 22] = 0\n 48488: u8 [a0 + 21] = 0\n 48491: u8 [a0 + 20] = 0\n 48494: u8 [a0 + 19] = 0\n 48497: u8 [a0 + 18] = 0\n 48500: u8 [a0 + 17] = 0\n 48503: u8 [a0 + 16] = 0\n 48506: u8 [a0 + 15] = 0\n 48509: u8 [a0 + 14] = 0\n 48512: u8 [a0 + 13] = 0\n 48515: u8 [a0 + 12] = 0\n 48518: u8 [a0 + 11] = 0\n 48521: u8 [a0 + 10] = 0\n 48524: u8 [a0 + 9] = 0\n 48527: u8 [a0 + 8] = 0\n 48530: u8 [a0 + 7] = 0\n 48533: u8 [a0 + 6] = 0x6c\n 48537: u8 [a0 + 5] = 0x75\n 48541: u8 [a0 + 4] = 0x66\n 48545: u8 [a0 + 3] = 0x70\n 48549: u8 [a0 + 2] = 0x6c\n 48553: u8 [a0 + 1] = 0x65\n 48557: a2 = u64 [sp + 0x20]\n 48560: a2 = a2 + 0xfffffffffffff9e0\n 48564: a3 = u64 [sp + 0x68]\n 48567: a2 = a3 <u a2\n 48570: a3 = u64 [sp + 0x60]\n 48573: a2 = 0 if a3 != 0\n 48575: a3 = u64 [sp + 0x58]\n 48578: a2 = 0 if a3 != 0\n 48580: u8 [a0 + 0] = 0x68\n 48583: jump @724 if a2 != 0\n      : @723 (gas: 1)\n 48586: jump @961\n      : @724 (gas: 4)\n 48589: a0 = u64 [sp + 0x50]\n 48592: i32 a0 = a0 + 0x620\n 48596: a1 = 0x20\n 48599: ra = 580, jump @0\n      : @725 [@dyn 290] (gas: 74)\n 48606: a1 = u64 [sp + 0x30]\n 48609: a1 = reverse a1\n 48611: a2 = u64 [sp + 0x38]\n 48614: a2 = reverse a2\n 48616: a3 = reverse s1\n 48618: a4 = u64 [sp + 0x10]\n 48621: a4 = reverse a4\n 48623: a5 = a4 >> 0x38\n 48626: u8 [a0 + 0x1f] = a5\n 48629: a5 = a4 >> 0x30\n 48632: u8 [a0 + 0x1e] = a5\n 48635: a5 = a4 >> 0x28\n 48638: u8 [a0 + 0x1d] = a5\n 48641: a5 = a4 >> 0x20\n 48644: u8 [a0 + 0x1c] = a5\n 48647: a5 = a4 >> 0x18\n 48650: u8 [a0 + 0x1b] = a5\n 48653: a5 = a4 >> 0x10\n 48656: u8 [a0 + 0x1a] = a5\n 48659: a5 = a4 >> 0x8\n 48662: u8 [a0 + 0x19] = a5\n 48665: u8 [a0 + 0x18] = a4\n 48668: u8 [a0 + 0x10] = a3\n 48671: a4 = a3 >> 0x38\n 48674: u8 [a0 + 0x17] = a4\n 48677: a4 = a3 >> 0x30\n 48680: u8 [a0 + 0x16] = a4\n 48683: a4 = a3 >> 0x28\n 48686: u8 [a0 + 0x15] = a4\n 48689: a4 = a3 >> 0x20\n 48692: u8 [a0 + 0x14] = a4\n 48695: a4 = a3 >> 0x18\n 48698: u8 [a0 + 0x13] = a4\n 48701: a4 = a3 >> 0x10\n 48704: u8 [a0 + 0x12] = a4\n 48707: a3 = a3 >> 0x8\n 48710: u8 [a0 + 0x11] = a3\n 48713: u8 [a0 + 0x8] = a2\n 48716: a3 = a2 >> 0x38\n 48719: u8 [a0 + 0xf] = a3\n 48722: a3 = a2 >> 0x30\n 48725: u8 [a0 + 0xe] = a3\n 48728: a3 = a2 >> 0x28\n 48731: u8 [a0 + 0xd] = a3\n 48734: a3 = a2 >> 0x20\n 48737: u8 [a0 + 0xc] = a3\n 48740: a3 = a2 >> 0x18\n 48743: u8 [a0 + 0xb] = a3\n 48746: a3 = a2 >> 0x10\n 48749: u8 [a0 + 0xa] = a3\n 48752: a2 = a2 >> 0x8\n 48755: u8 [a0 + 0x9] = a2\n 48758: u8 [a0] = a1\n 48760: a2 = a1 >> 0x38\n 48763: u8 [a0 + 0x7] = a2\n 48766: a2 = a1 >> 0x30\n 48769: u8 [a0 + 0x6] = a2\n 48772: a2 = a1 >> 0x28\n 48775: u8 [a0 + 0x5] = a2\n 48778: a2 = a1 >> 0x20\n 48781: u8 [a0 + 0x4] = a2\n 48784: a2 = a1 >> 0x18\n 48787: u8 [a0 + 0x3] = a2\n 48790: a2 = a1 >> 0x10\n 48793: u8 [a0 + 0x2] = a2\n 48796: a1 = a1 >> 0x8\n 48799: u8 [a0 + 0x1] = a1\n 48802: u64 [sp + 1736] = 0\n 48806: u64 [sp + 1728] = 0\n 48810: u64 [sp + 1712] = 0x40\n 48815: a0 = sp + 0x6d0\n 48819: a1 = sp + 0x6b0\n 48823: u64 [sp + 1720] = 0\n 48827: ra = 582, jump @56\n      : @726 [@dyn 291] (gas: 15)\n 48834: a1 = u64 [sp + 0x6e8]\n 48838: a2 = u64 [sp + 0x6e0]\n 48842: a0 = u64 [sp + 0x6d8]\n 48846: s1 = u64 [sp + 0x6d0]\n 48850: u64 [sp + 0x28] = a0\n 48853: u64 [sp + 0x30] = a1\n 48856: a0 = a0 | a1\n 48859: a1 = s1 | a2\n 48862: a1 = a1 | a0\n 48865: a1 = a1 >> 0x20\n 48868: u64 [sp + 0x38] = a2\n 48871: a0 = a0 | a2\n 48874: a0 = a0 << 0x20\n 48877: a0 = a0 | a1\n 48880: jump @728 if a0 == 0\n      : @727 (gas: 1)\n 48883: jump @961\n      : @728 (gas: 4)\n 48886: i32 a0 = s1 + 0\n 48888: a1 = 0x20\n 48891: u64 [sp + 0x18] = a0\n 48894: ra = 584, jump @0\n      : @729 [@dyn 292] (gas: 44)\n 48901: u8 [a0 + 31] = 0x6\n 48905: a1 = u64 [sp + 0x30]\n 48908: a2 = u64 [sp + 0x38]\n 48911: a2 = a2 | a1\n 48914: a1 = 0x100000000\n 48924: u64 [sp + 0x20] = a1\n 48927: a1 = 0xffffffe0\n 48937: u64 [sp + 0x10] = s1\n 48940: a1 = s1 <u a1\n 48943: s1 = u64 [sp + 0x28]\n 48946: a1 = 0 if s1 != 0\n 48948: a1 = 0 if a2 != 0\n 48950: u8 [a0 + 30] = 0\n 48953: u8 [a0 + 29] = 0\n 48956: u8 [a0 + 28] = 0\n 48959: u8 [a0 + 27] = 0\n 48962: u8 [a0 + 26] = 0\n 48965: u8 [a0 + 25] = 0\n 48968: u8 [a0 + 24] = 0\n 48971: u8 [a0 + 23] = 0\n 48974: u8 [a0 + 22] = 0\n 48977: u8 [a0 + 21] = 0\n 48980: u8 [a0 + 20] = 0\n 48983: u8 [a0 + 19] = 0\n 48986: u8 [a0 + 18] = 0\n 48989: u8 [a0 + 17] = 0\n 48992: u8 [a0 + 16] = 0\n 48995: u8 [a0 + 15] = 0\n 48998: u8 [a0 + 14] = 0\n 49001: u8 [a0 + 13] = 0\n 49004: u8 [a0 + 12] = 0\n 49007: u8 [a0 + 11] = 0\n 49010: u8 [a0 + 10] = 0\n 49013: u8 [a0 + 9] = 0\n 49016: u8 [a0 + 8] = 0\n 49019: u8 [a0 + 7] = 0\n 49022: u8 [a0 + 6] = 0\n 49025: u8 [a0 + 5] = 0\n 49028: u8 [a0 + 4] = 0\n 49031: u8 [a0 + 3] = 0\n 49034: u8 [a0 + 2] = 0\n 49037: u8 [a0 + 1] = 0\n 49040: u8 [a0 + 0] = 0\n 49042: jump @731 if a1 != 0\n      : @730 (gas: 1)\n 49045: jump @961\n      : @731 (gas: 4)\n 49048: a0 = u64 [sp + 0x18]\n 49051: i32 a0 = a0 + 0x20\n 49054: a1 = 0x20\n 49057: ra = 586, jump @0\n      : @732 [@dyn 293] (gas: 41)\n 49064: u8 [a0 + 31] = 0\n 49067: u8 [a0 + 30] = 0\n 49070: u8 [a0 + 29] = 0\n 49073: u8 [a0 + 28] = 0\n 49076: u8 [a0 + 27] = 0\n 49079: u8 [a0 + 26] = 0\n 49082: u8 [a0 + 25] = 0\n 49085: u8 [a0 + 24] = 0\n 49088: u8 [a0 + 23] = 0\n 49091: u8 [a0 + 22] = 0\n 49094: u8 [a0 + 21] = 0\n 49097: u8 [a0 + 20] = 0\n 49100: u8 [a0 + 19] = 0\n 49103: u8 [a0 + 18] = 0\n 49106: u8 [a0 + 17] = 0\n 49109: u8 [a0 + 16] = 0\n 49112: u8 [a0 + 15] = 0\n 49115: u8 [a0 + 14] = 0\n 49118: u8 [a0 + 13] = 0\n 49121: u8 [a0 + 12] = 0\n 49124: u8 [a0 + 11] = 0\n 49127: u8 [a0 + 10] = 0\n 49130: u8 [a0 + 9] = 0\n 49133: u8 [a0 + 8] = 0\n 49136: u8 [a0 + 7] = 0\n 49139: u8 [a0 + 6] = 0\n 49142: u8 [a0 + 5] = 0x74\n 49146: u8 [a0 + 4] = 0x73\n 49150: u8 [a0 + 3] = 0x65\n 49154: u8 [a0 + 2] = 0x6e\n 49158: u8 [a0 + 1] = 0x6f\n 49162: a2 = u64 [sp + 0x20]\n 49165: a2 = a2 + 0xfffffffffffff9c0\n 49169: a3 = u64 [sp + 0x68]\n 49172: a2 = a3 <u a2\n 49175: a3 = u64 [sp + 0x60]\n 49178: a2 = 0 if a3 != 0\n 49180: a3 = u64 [sp + 0x58]\n 49183: a2 = 0 if a3 != 0\n 49185: u8 [a0 + 0] = 0x68\n 49188: jump @734 if a2 != 0\n      : @733 (gas: 1)\n 49191: jump @961\n      : @734 (gas: 4)\n 49194: a0 = u64 [sp + 0x50]\n 49197: i32 a0 = a0 + 0x640\n 49201: a1 = 0x20\n 49204: ra = 588, jump @0\n      : @735 [@dyn 294] (gas: 74)\n 49211: a1 = u64 [sp + 0x30]\n 49214: a1 = reverse a1\n 49216: a2 = u64 [sp + 0x38]\n 49219: a2 = reverse a2\n 49221: a3 = reverse s1\n 49223: a4 = u64 [sp + 0x10]\n 49226: a4 = reverse a4\n 49228: a5 = a4 >> 0x38\n 49231: u8 [a0 + 0x1f] = a5\n 49234: a5 = a4 >> 0x30\n 49237: u8 [a0 + 0x1e] = a5\n 49240: a5 = a4 >> 0x28\n 49243: u8 [a0 + 0x1d] = a5\n 49246: a5 = a4 >> 0x20\n 49249: u8 [a0 + 0x1c] = a5\n 49252: a5 = a4 >> 0x18\n 49255: u8 [a0 + 0x1b] = a5\n 49258: a5 = a4 >> 0x10\n 49261: u8 [a0 + 0x1a] = a5\n 49264: a5 = a4 >> 0x8\n 49267: u8 [a0 + 0x19] = a5\n 49270: u8 [a0 + 0x18] = a4\n 49273: u8 [a0 + 0x10] = a3\n 49276: a4 = a3 >> 0x38\n 49279: u8 [a0 + 0x17] = a4\n 49282: a4 = a3 >> 0x30\n 49285: u8 [a0 + 0x16] = a4\n 49288: a4 = a3 >> 0x28\n 49291: u8 [a0 + 0x15] = a4\n 49294: a4 = a3 >> 0x20\n 49297: u8 [a0 + 0x14] = a4\n 49300: a4 = a3 >> 0x18\n 49303: u8 [a0 + 0x13] = a4\n 49306: a4 = a3 >> 0x10\n 49309: u8 [a0 + 0x12] = a4\n 49312: a3 = a3 >> 0x8\n 49315: u8 [a0 + 0x11] = a3\n 49318: u8 [a0 + 0x8] = a2\n 49321: a3 = a2 >> 0x38\n 49324: u8 [a0 + 0xf] = a3\n 49327: a3 = a2 >> 0x30\n 49330: u8 [a0 + 0xe] = a3\n 49333: a3 = a2 >> 0x28\n 49336: u8 [a0 + 0xd] = a3\n 49339: a3 = a2 >> 0x20\n 49342: u8 [a0 + 0xc] = a3\n 49345: a3 = a2 >> 0x18\n 49348: u8 [a0 + 0xb] = a3\n 49351: a3 = a2 >> 0x10\n 49354: u8 [a0 + 0xa] = a3\n 49357: a2 = a2 >> 0x8\n 49360: u8 [a0 + 0x9] = a2\n 49363: u8 [a0] = a1\n 49365: a2 = a1 >> 0x38\n 49368: u8 [a0 + 0x7] = a2\n 49371: a2 = a1 >> 0x30\n 49374: u8 [a0 + 0x6] = a2\n 49377: a2 = a1 >> 0x28\n 49380: u8 [a0 + 0x5] = a2\n 49383: a2 = a1 >> 0x20\n 49386: u8 [a0 + 0x4] = a2\n 49389: a2 = a1 >> 0x18\n 49392: u8 [a0 + 0x3] = a2\n 49395: a2 = a1 >> 0x10\n 49398: u8 [a0 + 0x2] = a2\n 49401: a1 = a1 >> 0x8\n 49404: u8 [a0 + 0x1] = a1\n 49407: u64 [sp + 1672] = 0\n 49411: u64 [sp + 1664] = 0\n 49415: u64 [sp + 1648] = 0x40\n 49420: a0 = sp + 0x690\n 49424: a1 = sp + 0x670\n 49428: u64 [sp + 1656] = 0\n 49432: ra = 590, jump @56\n      : @736 [@dyn 295] (gas: 15)\n 49439: a1 = u64 [sp + 0x6a8]\n 49443: a2 = u64 [sp + 0x6a0]\n 49447: a0 = u64 [sp + 0x698]\n 49451: s1 = u64 [sp + 0x690]\n 49455: u64 [sp + 0x28] = a0\n 49458: u64 [sp + 0x30] = a1\n 49461: a0 = a0 | a1\n 49464: a1 = s1 | a2\n 49467: a1 = a1 | a0\n 49470: a1 = a1 >> 0x20\n 49473: u64 [sp + 0x38] = a2\n 49476: a0 = a0 | a2\n 49479: a0 = a0 << 0x20\n 49482: a0 = a0 | a1\n 49485: jump @738 if a0 == 0\n      : @737 (gas: 1)\n 49488: jump @961\n      : @738 (gas: 4)\n 49491: i32 a0 = s1 + 0\n 49493: a1 = 0x20\n 49496: u64 [sp + 0x18] = a0\n 49499: ra = 592, jump @0\n      : @739 [@dyn 296] (gas: 44)\n 49506: u8 [a0 + 31] = 0x9\n 49510: a1 = u64 [sp + 0x30]\n 49513: a2 = u64 [sp + 0x38]\n 49516: a2 = a2 | a1\n 49519: a1 = 0x100000000\n 49529: u64 [sp + 0x20] = a1\n 49532: a1 = 0xffffffe0\n 49542: u64 [sp + 0x10] = s1\n 49545: a1 = s1 <u a1\n 49548: s1 = u64 [sp + 0x28]\n 49551: a1 = 0 if s1 != 0\n 49553: a1 = 0 if a2 != 0\n 49555: u8 [a0 + 30] = 0\n 49558: u8 [a0 + 29] = 0\n 49561: u8 [a0 + 28] = 0\n 49564: u8 [a0 + 27] = 0\n 49567: u8 [a0 + 26] = 0\n 49570: u8 [a0 + 25] = 0\n 49573: u8 [a0 + 24] = 0\n 49576: u8 [a0 + 23] = 0\n 49579: u8 [a0 + 22] = 0\n 49582: u8 [a0 + 21] = 0\n 49585: u8 [a0 + 20] = 0\n 49588: u8 [a0 + 19] = 0\n 49591: u8 [a0 + 18] = 0\n 49594: u8 [a0 + 17] = 0\n 49597: u8 [a0 + 16] = 0\n 49600: u8 [a0 + 15] = 0\n 49603: u8 [a0 + 14] = 0\n 49606: u8 [a0 + 13] = 0\n 49609: u8 [a0 + 12] = 0\n 49612: u8 [a0 + 11] = 0\n 49615: u8 [a0 + 10] = 0\n 49618: u8 [a0 + 9] = 0\n 49621: u8 [a0 + 8] = 0\n 49624: u8 [a0 + 7] = 0\n 49627: u8 [a0 + 6] = 0\n 49630: u8 [a0 + 5] = 0\n 49633: u8 [a0 + 4] = 0\n 49636: u8 [a0 + 3] = 0\n 49639: u8 [a0 + 2] = 0\n 49642: u8 [a0 + 1] = 0\n 49645: u8 [a0 + 0] = 0\n 49647: jump @741 if a1 != 0\n      : @740 (gas: 1)\n 49650: jump @961\n      : @741 (gas: 4)\n 49653: a0 = u64 [sp + 0x18]\n 49656: i32 a0 = a0 + 0x20\n 49659: a1 = 0x20\n 49662: ra = 594, jump @0\n      : @742 [@dyn 297] (gas: 41)\n 49669: u8 [a0 + 31] = 0\n 49672: u8 [a0 + 30] = 0\n 49675: u8 [a0 + 29] = 0\n 49678: u8 [a0 + 28] = 0\n 49681: u8 [a0 + 27] = 0\n 49684: u8 [a0 + 26] = 0\n 49687: u8 [a0 + 25] = 0\n 49690: u8 [a0 + 24] = 0\n 49693: u8 [a0 + 23] = 0\n 49696: u8 [a0 + 22] = 0\n 49699: u8 [a0 + 21] = 0\n 49702: u8 [a0 + 20] = 0\n 49705: u8 [a0 + 19] = 0\n 49708: u8 [a0 + 18] = 0\n 49711: u8 [a0 + 17] = 0\n 49714: u8 [a0 + 16] = 0\n 49717: u8 [a0 + 15] = 0\n 49720: u8 [a0 + 14] = 0\n 49723: u8 [a0 + 13] = 0\n 49726: u8 [a0 + 12] = 0\n 49729: u8 [a0 + 11] = 0\n 49732: u8 [a0 + 10] = 0\n 49735: u8 [a0 + 9] = 0\n 49738: u8 [a0 + 8] = 0x65\n 49742: u8 [a0 + 7] = 0x6c\n 49746: u8 [a0 + 6] = 0x62\n 49750: u8 [a0 + 5] = 0x61\n 49754: u8 [a0 + 4] = 0x72\n 49758: u8 [a0 + 3] = 0x6f\n 49762: u8 [a0 + 2] = 0x6e\n 49766: u8 [a0 + 1] = 0x6f\n 49770: a2 = u64 [sp + 0x20]\n 49773: a2 = a2 + 0xfffffffffffff9a0\n 49777: a3 = u64 [sp + 0x68]\n 49780: a2 = a3 <u a2\n 49783: a3 = u64 [sp + 0x60]\n 49786: a2 = 0 if a3 != 0\n 49788: a3 = u64 [sp + 0x58]\n 49791: a2 = 0 if a3 != 0\n 49793: u8 [a0 + 0] = 0x68\n 49796: jump @744 if a2 != 0\n      : @743 (gas: 1)\n 49799: jump @961\n      : @744 (gas: 4)\n 49802: a0 = u64 [sp + 0x50]\n 49805: i32 a0 = a0 + 0x660\n 49809: a1 = 0x20\n 49812: ra = 596, jump @0\n      : @745 [@dyn 298] (gas: 74)\n 49819: a1 = u64 [sp + 0x30]\n 49822: a1 = reverse a1\n 49824: a2 = u64 [sp + 0x38]\n 49827: a2 = reverse a2\n 49829: a3 = reverse s1\n 49831: a4 = u64 [sp + 0x10]\n 49834: a4 = reverse a4\n 49836: a5 = a4 >> 0x38\n 49839: u8 [a0 + 0x1f] = a5\n 49842: a5 = a4 >> 0x30\n 49845: u8 [a0 + 0x1e] = a5\n 49848: a5 = a4 >> 0x28\n 49851: u8 [a0 + 0x1d] = a5\n 49854: a5 = a4 >> 0x20\n 49857: u8 [a0 + 0x1c] = a5\n 49860: a5 = a4 >> 0x18\n 49863: u8 [a0 + 0x1b] = a5\n 49866: a5 = a4 >> 0x10\n 49869: u8 [a0 + 0x1a] = a5\n 49872: a5 = a4 >> 0x8\n 49875: u8 [a0 + 0x19] = a5\n 49878: u8 [a0 + 0x18] = a4\n 49881: u8 [a0 + 0x10] = a3\n 49884: a4 = a3 >> 0x38\n 49887: u8 [a0 + 0x17] = a4\n 49890: a4 = a3 >> 0x30\n 49893: u8 [a0 + 0x16] = a4\n 49896: a4 = a3 >> 0x28\n 49899: u8 [a0 + 0x15] = a4\n 49902: a4 = a3 >> 0x20\n 49905: u8 [a0 + 0x14] = a4\n 49908: a4 = a3 >> 0x18\n 49911: u8 [a0 + 0x13] = a4\n 49914: a4 = a3 >> 0x10\n 49917: u8 [a0 + 0x12] = a4\n 49920: a3 = a3 >> 0x8\n 49923: u8 [a0 + 0x11] = a3\n 49926: u8 [a0 + 0x8] = a2\n 49929: a3 = a2 >> 0x38\n 49932: u8 [a0 + 0xf] = a3\n 49935: a3 = a2 >> 0x30\n 49938: u8 [a0 + 0xe] = a3\n 49941: a3 = a2 >> 0x28\n 49944: u8 [a0 + 0xd] = a3\n 49947: a3 = a2 >> 0x20\n 49950: u8 [a0 + 0xc] = a3\n 49953: a3 = a2 >> 0x18\n 49956: u8 [a0 + 0xb] = a3\n 49959: a3 = a2 >> 0x10\n 49962: u8 [a0 + 0xa] = a3\n 49965: a2 = a2 >> 0x8\n 49968: u8 [a0 + 0x9] = a2\n 49971: u8 [a0] = a1\n 49973: a2 = a1 >> 0x38\n 49976: u8 [a0 + 0x7] = a2\n 49979: a2 = a1 >> 0x30\n 49982: u8 [a0 + 0x6] = a2\n 49985: a2 = a1 >> 0x28\n 49988: u8 [a0 + 0x5] = a2\n 49991: a2 = a1 >> 0x20\n 49994: u8 [a0 + 0x4] = a2\n 49997: a2 = a1 >> 0x18\n 50000: u8 [a0 + 0x3] = a2\n 50003: a2 = a1 >> 0x10\n 50006: u8 [a0 + 0x2] = a2\n 50009: a1 = a1 >> 0x8\n 50012: u8 [a0 + 0x1] = a1\n 50015: u64 [sp + 1608] = 0\n 50019: u64 [sp + 1600] = 0\n 50023: u64 [sp + 1584] = 0x40\n 50028: a0 = sp + 0x650\n 50032: a1 = sp + 0x630\n 50036: u64 [sp + 1592] = 0\n 50040: ra = 598, jump @56\n      : @746 [@dyn 299] (gas: 15)\n 50047: a1 = u64 [sp + 0x668]\n 50051: a2 = u64 [sp + 0x660]\n 50055: a0 = u64 [sp + 0x658]\n 50059: s1 = u64 [sp + 0x650]\n 50063: u64 [sp + 0x28] = a0\n 50066: u64 [sp + 0x30] = a1\n 50069: a0 = a0 | a1\n 50072: a1 = s1 | a2\n 50075: a1 = a1 | a0\n 50078: a1 = a1 >> 0x20\n 50081: u64 [sp + 0x38] = a2\n 50084: a0 = a0 | a2\n 50087: a0 = a0 << 0x20\n 50090: a0 = a0 | a1\n 50093: jump @748 if a0 == 0\n      : @747 (gas: 1)\n 50096: jump @961\n      : @748 (gas: 4)\n 50099: i32 a0 = s1 + 0\n 50101: a1 = 0x20\n 50104: u64 [sp + 0x18] = a0\n 50107: ra = 600, jump @0\n      : @749 [@dyn 300] (gas: 44)\n 50114: u8 [a0 + 31] = 0x8\n 50118: a1 = u64 [sp + 0x30]\n 50121: a2 = u64 [sp + 0x38]\n 50124: a2 = a2 | a1\n 50127: a1 = 0x100000000\n 50137: u64 [sp + 0x20] = a1\n 50140: a1 = 0xffffffe0\n 50150: u64 [sp + 0x10] = s1\n 50153: a1 = s1 <u a1\n 50156: s1 = u64 [sp + 0x28]\n 50159: a1 = 0 if s1 != 0\n 50161: a1 = 0 if a2 != 0\n 50163: u8 [a0 + 30] = 0\n 50166: u8 [a0 + 29] = 0\n 50169: u8 [a0 + 28] = 0\n 50172: u8 [a0 + 27] = 0\n 50175: u8 [a0 + 26] = 0\n 50178: u8 [a0 + 25] = 0\n 50181: u8 [a0 + 24] = 0\n 50184: u8 [a0 + 23] = 0\n 50187: u8 [a0 + 22] = 0\n 50190: u8 [a0 + 21] = 0\n 50193: u8 [a0 + 20] = 0\n 50196: u8 [a0 + 19] = 0\n 50199: u8 [a0 + 18] = 0\n 50202: u8 [a0 + 17] = 0\n 50205: u8 [a0 + 16] = 0\n 50208: u8 [a0 + 15] = 0\n 50211: u8 [a0 + 14] = 0\n 50214: u8 [a0 + 13] = 0\n 50217: u8 [a0 + 12] = 0\n 50220: u8 [a0 + 11] = 0\n 50223: u8 [a0 + 10] = 0\n 50226: u8 [a0 + 9] = 0\n 50229: u8 [a0 + 8] = 0\n 50232: u8 [a0 + 7] = 0\n 50235: u8 [a0 + 6] = 0\n 50238: u8 [a0 + 5] = 0\n 50241: u8 [a0 + 4] = 0\n 50244: u8 [a0 + 3] = 0\n 50247: u8 [a0 + 2] = 0\n 50250: u8 [a0 + 1] = 0\n 50253: u8 [a0 + 0] = 0\n 50255: jump @751 if a1 != 0\n      : @750 (gas: 1)\n 50258: jump @961\n      : @751 (gas: 4)\n 50261: a0 = u64 [sp + 0x18]\n 50264: i32 a0 = a0 + 0x20\n 50267: a1 = 0x20\n 50270: ra = 602, jump @0\n      : @752 [@dyn 301] (gas: 41)\n 50277: u8 [a0 + 31] = 0\n 50280: u8 [a0 + 30] = 0\n 50283: u8 [a0 + 29] = 0\n 50286: u8 [a0 + 28] = 0\n 50289: u8 [a0 + 27] = 0\n 50292: u8 [a0 + 26] = 0\n 50295: u8 [a0 + 25] = 0\n 50298: u8 [a0 + 24] = 0\n 50301: u8 [a0 + 23] = 0\n 50304: u8 [a0 + 22] = 0\n 50307: u8 [a0 + 21] = 0\n 50310: u8 [a0 + 20] = 0\n 50313: u8 [a0 + 19] = 0\n 50316: u8 [a0 + 18] = 0\n 50319: u8 [a0 + 17] = 0\n 50322: u8 [a0 + 16] = 0\n 50325: u8 [a0 + 15] = 0\n 50328: u8 [a0 + 14] = 0\n 50331: u8 [a0 + 13] = 0\n 50334: u8 [a0 + 12] = 0\n 50337: u8 [a0 + 11] = 0\n 50340: u8 [a0 + 10] = 0\n 50343: u8 [a0 + 9] = 0\n 50346: u8 [a0 + 8] = 0\n 50349: u8 [a0 + 7] = 0x73\n 50353: u8 [a0 + 6] = 0x75\n 50357: u8 [a0 + 5] = 0x6f\n 50361: u8 [a0 + 4] = 0x72\n 50365: u8 [a0 + 3] = 0x6f\n 50369: u8 [a0 + 2] = 0x6d\n 50373: u8 [a0 + 1] = 0x75\n 50377: a2 = u64 [sp + 0x20]\n 50380: a2 = a2 + 0xfffffffffffff980\n 50384: a3 = u64 [sp + 0x68]\n 50387: a2 = a3 <u a2\n 50390: a3 = u64 [sp + 0x60]\n 50393: a2 = 0 if a3 != 0\n 50395: a3 = u64 [sp + 0x58]\n 50398: a2 = 0 if a3 != 0\n 50400: u8 [a0 + 0] = 0x68\n 50403: jump @754 if a2 != 0\n      : @753 (gas: 1)\n 50406: jump @961\n      : @754 (gas: 4)\n 50409: a0 = u64 [sp + 0x50]\n 50412: i32 a0 = a0 + 0x680\n 50416: a1 = 0x20\n 50419: ra = 604, jump @0\n      : @755 [@dyn 302] (gas: 74)\n 50426: a1 = u64 [sp + 0x30]\n 50429: a1 = reverse a1\n 50431: a2 = u64 [sp + 0x38]\n 50434: a2 = reverse a2\n 50436: a3 = reverse s1\n 50438: a4 = u64 [sp + 0x10]\n 50441: a4 = reverse a4\n 50443: a5 = a4 >> 0x38\n 50446: u8 [a0 + 0x1f] = a5\n 50449: a5 = a4 >> 0x30\n 50452: u8 [a0 + 0x1e] = a5\n 50455: a5 = a4 >> 0x28\n 50458: u8 [a0 + 0x1d] = a5\n 50461: a5 = a4 >> 0x20\n 50464: u8 [a0 + 0x1c] = a5\n 50467: a5 = a4 >> 0x18\n 50470: u8 [a0 + 0x1b] = a5\n 50473: a5 = a4 >> 0x10\n 50476: u8 [a0 + 0x1a] = a5\n 50479: a5 = a4 >> 0x8\n 50482: u8 [a0 + 0x19] = a5\n 50485: u8 [a0 + 0x18] = a4\n 50488: u8 [a0 + 0x10] = a3\n 50491: a4 = a3 >> 0x38\n 50494: u8 [a0 + 0x17] = a4\n 50497: a4 = a3 >> 0x30\n 50500: u8 [a0 + 0x16] = a4\n 50503: a4 = a3 >> 0x28\n 50506: u8 [a0 + 0x15] = a4\n 50509: a4 = a3 >> 0x20\n 50512: u8 [a0 + 0x14] = a4\n 50515: a4 = a3 >> 0x18\n 50518: u8 [a0 + 0x13] = a4\n 50521: a4 = a3 >> 0x10\n 50524: u8 [a0 + 0x12] = a4\n 50527: a3 = a3 >> 0x8\n 50530: u8 [a0 + 0x11] = a3\n 50533: u8 [a0 + 0x8] = a2\n 50536: a3 = a2 >> 0x38\n 50539: u8 [a0 + 0xf] = a3\n 50542: a3 = a2 >> 0x30\n 50545: u8 [a0 + 0xe] = a3\n 50548: a3 = a2 >> 0x28\n 50551: u8 [a0 + 0xd] = a3\n 50554: a3 = a2 >> 0x20\n 50557: u8 [a0 + 0xc] = a3\n 50560: a3 = a2 >> 0x18\n 50563: u8 [a0 + 0xb] = a3\n 50566: a3 = a2 >> 0x10\n 50569: u8 [a0 + 0xa] = a3\n 50572: a2 = a2 >> 0x8\n 50575: u8 [a0 + 0x9] = a2\n 50578: u8 [a0] = a1\n 50580: a2 = a1 >> 0x38\n 50583: u8 [a0 + 0x7] = a2\n 50586: a2 = a1 >> 0x30\n 50589: u8 [a0 + 0x6] = a2\n 50592: a2 = a1 >> 0x28\n 50595: u8 [a0 + 0x5] = a2\n 50598: a2 = a1 >> 0x20\n 50601: u8 [a0 + 0x4] = a2\n 50604: a2 = a1 >> 0x18\n 50607: u8 [a0 + 0x3] = a2\n 50610: a2 = a1 >> 0x10\n 50613: u8 [a0 + 0x2] = a2\n 50616: a1 = a1 >> 0x8\n 50619: u8 [a0 + 0x1] = a1\n 50622: u64 [sp + 1544] = 0\n 50626: u64 [sp + 1536] = 0\n 50630: u64 [sp + 1520] = 0x40\n 50635: a0 = sp + 0x610\n 50639: a1 = sp + 0x5f0\n 50643: u64 [sp + 1528] = 0\n 50647: ra = 606, jump @56\n      : @756 [@dyn 303] (gas: 15)\n 50654: a1 = u64 [sp + 0x628]\n 50658: a2 = u64 [sp + 0x620]\n 50662: a0 = u64 [sp + 0x618]\n 50666: s1 = u64 [sp + 0x610]\n 50670: u64 [sp + 0x28] = a0\n 50673: u64 [sp + 0x30] = a1\n 50676: a0 = a0 | a1\n 50679: a1 = s1 | a2\n 50682: a1 = a1 | a0\n 50685: a1 = a1 >> 0x20\n 50688: u64 [sp + 0x38] = a2\n 50691: a0 = a0 | a2\n 50694: a0 = a0 << 0x20\n 50697: a0 = a0 | a1\n 50700: jump @758 if a0 == 0\n      : @757 (gas: 1)\n 50703: jump @961\n      : @758 (gas: 4)\n 50706: i32 a0 = s1 + 0\n 50708: a1 = 0x20\n 50711: u64 [sp + 0x18] = a0\n 50714: ra = 608, jump @0\n      : @759 [@dyn 304] (gas: 44)\n 50721: u8 [a0 + 31] = 0xb\n 50725: a1 = u64 [sp + 0x30]\n 50728: a2 = u64 [sp + 0x38]\n 50731: a2 = a2 | a1\n 50734: a1 = 0x100000000\n 50744: u64 [sp + 0x20] = a1\n 50747: a1 = 0xffffffe0\n 50757: u64 [sp + 0x10] = s1\n 50760: a1 = s1 <u a1\n 50763: s1 = u64 [sp + 0x28]\n 50766: a1 = 0 if s1 != 0\n 50768: a1 = 0 if a2 != 0\n 50770: u8 [a0 + 30] = 0\n 50773: u8 [a0 + 29] = 0\n 50776: u8 [a0 + 28] = 0\n 50779: u8 [a0 + 27] = 0\n 50782: u8 [a0 + 26] = 0\n 50785: u8 [a0 + 25] = 0\n 50788: u8 [a0 + 24] = 0\n 50791: u8 [a0 + 23] = 0\n 50794: u8 [a0 + 22] = 0\n 50797: u8 [a0 + 21] = 0\n 50800: u8 [a0 + 20] = 0\n 50803: u8 [a0 + 19] = 0\n 50806: u8 [a0 + 18] = 0\n 50809: u8 [a0 + 17] = 0\n 50812: u8 [a0 + 16] = 0\n 50815: u8 [a0 + 15] = 0\n 50818: u8 [a0 + 14] = 0\n 50821: u8 [a0 + 13] = 0\n 50824: u8 [a0 + 12] = 0\n 50827: u8 [a0 + 11] = 0\n 50830: u8 [a0 + 10] = 0\n 50833: u8 [a0 + 9] = 0\n 50836: u8 [a0 + 8] = 0\n 50839: u8 [a0 + 7] = 0\n 50842: u8 [a0 + 6] = 0\n 50845: u8 [a0 + 5] = 0\n 50848: u8 [a0 + 4] = 0\n 50851: u8 [a0 + 3] = 0\n 50854: u8 [a0 + 2] = 0\n 50857: u8 [a0 + 1] = 0\n 50860: u8 [a0 + 0] = 0\n 50862: jump @761 if a1 != 0\n      : @760 (gas: 1)\n 50865: jump @961\n      : @761 (gas: 4)\n 50868: a0 = u64 [sp + 0x18]\n 50871: i32 a0 = a0 + 0x20\n 50874: a1 = 0x20\n 50877: ra = 610, jump @0\n      : @762 [@dyn 305] (gas: 41)\n 50884: u8 [a0 + 31] = 0\n 50887: u8 [a0 + 30] = 0\n 50890: u8 [a0 + 29] = 0\n 50893: u8 [a0 + 28] = 0\n 50896: u8 [a0 + 27] = 0\n 50899: u8 [a0 + 26] = 0\n 50902: u8 [a0 + 25] = 0\n 50905: u8 [a0 + 24] = 0\n 50908: u8 [a0 + 23] = 0\n 50911: u8 [a0 + 22] = 0\n 50914: u8 [a0 + 21] = 0\n 50917: u8 [a0 + 20] = 0\n 50920: u8 [a0 + 19] = 0\n 50923: u8 [a0 + 18] = 0\n 50926: u8 [a0 + 17] = 0\n 50929: u8 [a0 + 16] = 0\n 50932: u8 [a0 + 15] = 0\n 50935: u8 [a0 + 14] = 0\n 50938: u8 [a0 + 13] = 0\n 50941: u8 [a0 + 12] = 0\n 50944: u8 [a0 + 11] = 0\n 50947: u8 [a0 + 10] = 0x65\n 50951: u8 [a0 + 9] = 0x76\n 50955: u8 [a0 + 8] = 0x69\n 50959: u8 [a0 + 7] = 0x74\n 50963: u8 [a0 + 6] = 0x61\n 50967: u8 [a0 + 5] = 0x6e\n 50971: u8 [a0 + 4] = 0x69\n 50975: u8 [a0 + 3] = 0x67\n 50979: u8 [a0 + 2] = 0x61\n 50983: u8 [a0 + 1] = 0x6d\n 50987: a2 = u64 [sp + 0x20]\n 50990: a2 = a2 + 0xfffffffffffff960\n 50994: a3 = u64 [sp + 0x68]\n 50997: a2 = a3 <u a2\n 51000: a3 = u64 [sp + 0x60]\n 51003: a2 = 0 if a3 != 0\n 51005: a3 = u64 [sp + 0x58]\n 51008: a2 = 0 if a3 != 0\n 51010: u8 [a0 + 0] = 0x69\n 51013: jump @764 if a2 != 0\n      : @763 (gas: 1)\n 51016: jump @961\n      : @764 (gas: 4)\n 51019: a0 = u64 [sp + 0x50]\n 51022: i32 a0 = a0 + 0x6a0\n 51026: a1 = 0x20\n 51029: ra = 612, jump @0\n      : @765 [@dyn 306] (gas: 74)\n 51036: a1 = u64 [sp + 0x30]\n 51039: a1 = reverse a1\n 51041: a2 = u64 [sp + 0x38]\n 51044: a2 = reverse a2\n 51046: a3 = reverse s1\n 51048: a4 = u64 [sp + 0x10]\n 51051: a4 = reverse a4\n 51053: a5 = a4 >> 0x38\n 51056: u8 [a0 + 0x1f] = a5\n 51059: a5 = a4 >> 0x30\n 51062: u8 [a0 + 0x1e] = a5\n 51065: a5 = a4 >> 0x28\n 51068: u8 [a0 + 0x1d] = a5\n 51071: a5 = a4 >> 0x20\n 51074: u8 [a0 + 0x1c] = a5\n 51077: a5 = a4 >> 0x18\n 51080: u8 [a0 + 0x1b] = a5\n 51083: a5 = a4 >> 0x10\n 51086: u8 [a0 + 0x1a] = a5\n 51089: a5 = a4 >> 0x8\n 51092: u8 [a0 + 0x19] = a5\n 51095: u8 [a0 + 0x18] = a4\n 51098: u8 [a0 + 0x10] = a3\n 51101: a4 = a3 >> 0x38\n 51104: u8 [a0 + 0x17] = a4\n 51107: a4 = a3 >> 0x30\n 51110: u8 [a0 + 0x16] = a4\n 51113: a4 = a3 >> 0x28\n 51116: u8 [a0 + 0x15] = a4\n 51119: a4 = a3 >> 0x20\n 51122: u8 [a0 + 0x14] = a4\n 51125: a4 = a3 >> 0x18\n 51128: u8 [a0 + 0x13] = a4\n 51131: a4 = a3 >> 0x10\n 51134: u8 [a0 + 0x12] = a4\n 51137: a3 = a3 >> 0x8\n 51140: u8 [a0 + 0x11] = a3\n 51143: u8 [a0 + 0x8] = a2\n 51146: a3 = a2 >> 0x38\n 51149: u8 [a0 + 0xf] = a3\n 51152: a3 = a2 >> 0x30\n 51155: u8 [a0 + 0xe] = a3\n 51158: a3 = a2 >> 0x28\n 51161: u8 [a0 + 0xd] = a3\n 51164: a3 = a2 >> 0x20\n 51167: u8 [a0 + 0xc] = a3\n 51170: a3 = a2 >> 0x18\n 51173: u8 [a0 + 0xb] = a3\n 51176: a3 = a2 >> 0x10\n 51179: u8 [a0 + 0xa] = a3\n 51182: a2 = a2 >> 0x8\n 51185: u8 [a0 + 0x9] = a2\n 51188: u8 [a0] = a1\n 51190: a2 = a1 >> 0x38\n 51193: u8 [a0 + 0x7] = a2\n 51196: a2 = a1 >> 0x30\n 51199: u8 [a0 + 0x6] = a2\n 51202: a2 = a1 >> 0x28\n 51205: u8 [a0 + 0x5] = a2\n 51208: a2 = a1 >> 0x20\n 51211: u8 [a0 + 0x4] = a2\n 51214: a2 = a1 >> 0x18\n 51217: u8 [a0 + 0x3] = a2\n 51220: a2 = a1 >> 0x10\n 51223: u8 [a0 + 0x2] = a2\n 51226: a1 = a1 >> 0x8\n 51229: u8 [a0 + 0x1] = a1\n 51232: u64 [sp + 1480] = 0\n 51236: u64 [sp + 1472] = 0\n 51240: u64 [sp + 1456] = 0x40\n 51245: a0 = sp + 0x5d0\n 51249: a1 = sp + 0x5b0\n 51253: u64 [sp + 1464] = 0\n 51257: ra = 614, jump @56\n      : @766 [@dyn 307] (gas: 15)\n 51264: a1 = u64 [sp + 0x5e8]\n 51268: a2 = u64 [sp + 0x5e0]\n 51272: a0 = u64 [sp + 0x5d8]\n 51276: s1 = u64 [sp + 0x5d0]\n 51280: u64 [sp + 0x28] = a0\n 51283: u64 [sp + 0x30] = a1\n 51286: a0 = a0 | a1\n 51289: a1 = s1 | a2\n 51292: a1 = a1 | a0\n 51295: a1 = a1 >> 0x20\n 51298: u64 [sp + 0x38] = a2\n 51301: a0 = a0 | a2\n 51304: a0 = a0 << 0x20\n 51307: a0 = a0 | a1\n 51310: jump @768 if a0 == 0\n      : @767 (gas: 1)\n 51313: jump @961\n      : @768 (gas: 4)\n 51316: i32 a0 = s1 + 0\n 51318: a1 = 0x20\n 51321: u64 [sp + 0x18] = a0\n 51324: ra = 616, jump @0\n      : @769 [@dyn 308] (gas: 44)\n 51331: u8 [a0 + 31] = 0xa\n 51335: a1 = u64 [sp + 0x30]\n 51338: a2 = u64 [sp + 0x38]\n 51341: a2 = a2 | a1\n 51344: a1 = 0x100000000\n 51354: u64 [sp + 0x20] = a1\n 51357: a1 = 0xffffffe0\n 51367: u64 [sp + 0x10] = s1\n 51370: a1 = s1 <u a1\n 51373: s1 = u64 [sp + 0x28]\n 51376: a1 = 0 if s1 != 0\n 51378: a1 = 0 if a2 != 0\n 51380: u8 [a0 + 30] = 0\n 51383: u8 [a0 + 29] = 0\n 51386: u8 [a0 + 28] = 0\n 51389: u8 [a0 + 27] = 0\n 51392: u8 [a0 + 26] = 0\n 51395: u8 [a0 + 25] = 0\n 51398: u8 [a0 + 24] = 0\n 51401: u8 [a0 + 23] = 0\n 51404: u8 [a0 + 22] = 0\n 51407: u8 [a0 + 21] = 0\n 51410: u8 [a0 + 20] = 0\n 51413: u8 [a0 + 19] = 0\n 51416: u8 [a0 + 18] = 0\n 51419: u8 [a0 + 17] = 0\n 51422: u8 [a0 + 16] = 0\n 51425: u8 [a0 + 15] = 0\n 51428: u8 [a0 + 14] = 0\n 51431: u8 [a0 + 13] = 0\n 51434: u8 [a0 + 12] = 0\n 51437: u8 [a0 + 11] = 0\n 51440: u8 [a0 + 10] = 0\n 51443: u8 [a0 + 9] = 0\n 51446: u8 [a0 + 8] = 0\n 51449: u8 [a0 + 7] = 0\n 51452: u8 [a0 + 6] = 0\n 51455: u8 [a0 + 5] = 0\n 51458: u8 [a0 + 4] = 0\n 51461: u8 [a0 + 3] = 0\n 51464: u8 [a0 + 2] = 0\n 51467: u8 [a0 + 1] = 0\n 51470: u8 [a0 + 0] = 0\n 51472: jump @771 if a1 != 0\n      : @770 (gas: 1)\n 51475: jump @961\n      : @771 (gas: 4)\n 51478: a0 = u64 [sp + 0x18]\n 51481: i32 a0 = a0 + 0x20\n 51484: a1 = 0x20\n 51487: ra = 618, jump @0\n      : @772 [@dyn 309] (gas: 41)\n 51494: u8 [a0 + 31] = 0\n 51497: u8 [a0 + 30] = 0\n 51500: u8 [a0 + 29] = 0\n 51503: u8 [a0 + 28] = 0\n 51506: u8 [a0 + 27] = 0\n 51509: u8 [a0 + 26] = 0\n 51512: u8 [a0 + 25] = 0\n 51515: u8 [a0 + 24] = 0\n 51518: u8 [a0 + 23] = 0\n 51521: u8 [a0 + 22] = 0\n 51524: u8 [a0 + 21] = 0\n 51527: u8 [a0 + 20] = 0\n 51530: u8 [a0 + 19] = 0\n 51533: u8 [a0 + 18] = 0\n 51536: u8 [a0 + 17] = 0\n 51539: u8 [a0 + 16] = 0\n 51542: u8 [a0 + 15] = 0\n 51545: u8 [a0 + 14] = 0\n 51548: u8 [a0 + 13] = 0\n 51551: u8 [a0 + 12] = 0\n 51554: u8 [a0 + 11] = 0\n 51557: u8 [a0 + 10] = 0\n 51560: u8 [a0 + 9] = 0x65\n 51564: u8 [a0 + 8] = 0x76\n 51568: u8 [a0 + 7] = 0x69\n 51572: u8 [a0 + 6] = 0x73\n 51576: u8 [a0 + 5] = 0x73\n 51580: u8 [a0 + 4] = 0x65\n 51584: u8 [a0 + 3] = 0x72\n 51588: u8 [a0 + 2] = 0x70\n 51592: u8 [a0 + 1] = 0x6d\n 51596: a1 = u64 [sp + 0x20]\n 51599: a1 = a1 + 0xfffffffffffff940\n 51603: a3 = u64 [sp + 0x68]\n 51606: a1 = a3 <u a1\n 51609: a3 = u64 [sp + 0x60]\n 51612: a1 = 0 if a3 != 0\n 51614: a3 = u64 [sp + 0x58]\n 51617: a1 = 0 if a3 != 0\n 51619: u8 [a0 + 0] = 0x69\n 51622: jump @774 if a1 != 0\n      : @773 (gas: 1)\n 51625: jump @961\n      : @774 (gas: 4)\n 51628: a0 = u64 [sp + 0x50]\n 51631: i32 a0 = a0 + 0x6c0\n 51635: a1 = 0x20\n 51638: ra = 620, jump @0\n      : @775 [@dyn 310] (gas: 74)\n 51645: a1 = u64 [sp + 0x30]\n 51648: a1 = reverse a1\n 51650: a2 = u64 [sp + 0x38]\n 51653: a2 = reverse a2\n 51655: a3 = reverse s1\n 51657: a4 = u64 [sp + 0x10]\n 51660: a4 = reverse a4\n 51662: a5 = a4 >> 0x38\n 51665: u8 [a0 + 0x1f] = a5\n 51668: a5 = a4 >> 0x30\n 51671: u8 [a0 + 0x1e] = a5\n 51674: a5 = a4 >> 0x28\n 51677: u8 [a0 + 0x1d] = a5\n 51680: a5 = a4 >> 0x20\n 51683: u8 [a0 + 0x1c] = a5\n 51686: a5 = a4 >> 0x18\n 51689: u8 [a0 + 0x1b] = a5\n 51692: a5 = a4 >> 0x10\n 51695: u8 [a0 + 0x1a] = a5\n 51698: a5 = a4 >> 0x8\n 51701: u8 [a0 + 0x19] = a5\n 51704: u8 [a0 + 0x18] = a4\n 51707: u8 [a0 + 0x10] = a3\n 51710: a4 = a3 >> 0x38\n 51713: u8 [a0 + 0x17] = a4\n 51716: a4 = a3 >> 0x30\n 51719: u8 [a0 + 0x16] = a4\n 51722: a4 = a3 >> 0x28\n 51725: u8 [a0 + 0x15] = a4\n 51728: a4 = a3 >> 0x20\n 51731: u8 [a0 + 0x14] = a4\n 51734: a4 = a3 >> 0x18\n 51737: u8 [a0 + 0x13] = a4\n 51740: a4 = a3 >> 0x10\n 51743: u8 [a0 + 0x12] = a4\n 51746: a3 = a3 >> 0x8\n 51749: u8 [a0 + 0x11] = a3\n 51752: u8 [a0 + 0x8] = a2\n 51755: a3 = a2 >> 0x38\n 51758: u8 [a0 + 0xf] = a3\n 51761: a3 = a2 >> 0x30\n 51764: u8 [a0 + 0xe] = a3\n 51767: a3 = a2 >> 0x28\n 51770: u8 [a0 + 0xd] = a3\n 51773: a3 = a2 >> 0x20\n 51776: u8 [a0 + 0xc] = a3\n 51779: a3 = a2 >> 0x18\n 51782: u8 [a0 + 0xb] = a3\n 51785: a3 = a2 >> 0x10\n 51788: u8 [a0 + 0xa] = a3\n 51791: a2 = a2 >> 0x8\n 51794: u8 [a0 + 0x9] = a2\n 51797: u8 [a0] = a1\n 51799: a2 = a1 >> 0x38\n 51802: u8 [a0 + 0x7] = a2\n 51805: a2 = a1 >> 0x30\n 51808: u8 [a0 + 0x6] = a2\n 51811: a2 = a1 >> 0x28\n 51814: u8 [a0 + 0x5] = a2\n 51817: a2 = a1 >> 0x20\n 51820: u8 [a0 + 0x4] = a2\n 51823: a2 = a1 >> 0x18\n 51826: u8 [a0 + 0x3] = a2\n 51829: a2 = a1 >> 0x10\n 51832: u8 [a0 + 0x2] = a2\n 51835: a1 = a1 >> 0x8\n 51838: u8 [a0 + 0x1] = a1\n 51841: u64 [sp + 1416] = 0\n 51845: u64 [sp + 1408] = 0\n 51849: u64 [sp + 1392] = 0x40\n 51854: a0 = sp + 0x590\n 51858: a1 = sp + 0x570\n 51862: u64 [sp + 1400] = 0\n 51866: ra = 622, jump @56\n      : @776 [@dyn 311] (gas: 15)\n 51873: a1 = u64 [sp + 0x5a8]\n 51877: a2 = u64 [sp + 0x5a0]\n 51881: a0 = u64 [sp + 0x598]\n 51885: s1 = u64 [sp + 0x590]\n 51889: u64 [sp + 0x28] = a0\n 51892: u64 [sp + 0x30] = a1\n 51895: a0 = a0 | a1\n 51898: a1 = s1 | a2\n 51901: a1 = a1 | a0\n 51904: a1 = a1 >> 0x20\n 51907: u64 [sp + 0x38] = a2\n 51910: a0 = a0 | a2\n 51913: a0 = a0 << 0x20\n 51916: a0 = a0 | a1\n 51919: jump @778 if a0 == 0\n      : @777 (gas: 1)\n 51922: jump @961\n      : @778 (gas: 4)\n 51925: i32 a0 = s1 + 0\n 51927: a1 = 0x20\n 51930: u64 [sp + 0x18] = a0\n 51933: ra = 624, jump @0\n      : @779 [@dyn 312] (gas: 44)\n 51940: u8 [a0 + 31] = 0xb\n 51944: a1 = u64 [sp + 0x30]\n 51947: a2 = u64 [sp + 0x38]\n 51950: a2 = a2 | a1\n 51953: a1 = 0x100000000\n 51963: u64 [sp + 0x20] = a1\n 51966: a1 = 0xffffffe0\n 51976: u64 [sp + 0x10] = s1\n 51979: a1 = s1 <u a1\n 51982: s1 = u64 [sp + 0x28]\n 51985: a1 = 0 if s1 != 0\n 51987: a1 = 0 if a2 != 0\n 51989: u8 [a0 + 30] = 0\n 51992: u8 [a0 + 29] = 0\n 51995: u8 [a0 + 28] = 0\n 51998: u8 [a0 + 27] = 0\n 52001: u8 [a0 + 26] = 0\n 52004: u8 [a0 + 25] = 0\n 52007: u8 [a0 + 24] = 0\n 52010: u8 [a0 + 23] = 0\n 52013: u8 [a0 + 22] = 0\n 52016: u8 [a0 + 21] = 0\n 52019: u8 [a0 + 20] = 0\n 52022: u8 [a0 + 19] = 0\n 52025: u8 [a0 + 18] = 0\n 52028: u8 [a0 + 17] = 0\n 52031: u8 [a0 + 16] = 0\n 52034: u8 [a0 + 15] = 0\n 52037: u8 [a0 + 14] = 0\n 52040: u8 [a0 + 13] = 0\n 52043: u8 [a0 + 12] = 0\n 52046: u8 [a0 + 11] = 0\n 52049: u8 [a0 + 10] = 0\n 52052: u8 [a0 + 9] = 0\n 52055: u8 [a0 + 8] = 0\n 52058: u8 [a0 + 7] = 0\n 52061: u8 [a0 + 6] = 0\n 52064: u8 [a0 + 5] = 0\n 52067: u8 [a0 + 4] = 0\n 52070: u8 [a0 + 3] = 0\n 52073: u8 [a0 + 2] = 0\n 52076: u8 [a0 + 1] = 0\n 52079: u8 [a0 + 0] = 0\n 52081: jump @781 if a1 != 0\n      : @780 (gas: 1)\n 52084: jump @961\n      : @781 (gas: 4)\n 52087: a0 = u64 [sp + 0x18]\n 52090: i32 a0 = a0 + 0x20\n 52093: a1 = 0x20\n 52096: ra = 626, jump @0\n      : @782 [@dyn 313] (gas: 42)\n 52103: u8 [a0 + 31] = 0\n 52106: u8 [a0 + 30] = 0\n 52109: u8 [a0 + 29] = 0\n 52112: u8 [a0 + 28] = 0\n 52115: u8 [a0 + 27] = 0\n 52118: u8 [a0 + 26] = 0\n 52121: u8 [a0 + 25] = 0\n 52124: u8 [a0 + 24] = 0\n 52127: u8 [a0 + 23] = 0\n 52130: u8 [a0 + 22] = 0\n 52133: u8 [a0 + 21] = 0\n 52136: u8 [a0 + 20] = 0\n 52139: u8 [a0 + 19] = 0\n 52142: u8 [a0 + 18] = 0\n 52145: u8 [a0 + 17] = 0\n 52148: u8 [a0 + 16] = 0\n 52151: u8 [a0 + 15] = 0\n 52154: u8 [a0 + 14] = 0\n 52157: u8 [a0 + 13] = 0\n 52160: u8 [a0 + 12] = 0\n 52163: u8 [a0 + 11] = 0\n 52166: u8 [a0 + 10] = 0x74\n 52170: u8 [a0 + 9] = 0x6e\n 52174: u8 [a0 + 8] = 0x65\n 52178: u8 [a0 + 7] = 0x64\n 52182: u8 [a0 + 6] = 0x6e\n 52186: u8 [a0 + 5] = 0x65\n 52190: a4 = 0x70\n 52193: u8 [a0 + 0x4] = a4\n 52196: u8 [a0 + 3] = 0x65\n 52200: u8 [a0 + 2] = 0x64\n 52204: u8 [a0 + 1] = 0x6e\n 52208: a2 = u64 [sp + 0x20]\n 52211: a2 = a2 + 0xfffffffffffff920\n 52215: a3 = u64 [sp + 0x68]\n 52218: a2 = a3 <u a2\n 52221: a3 = u64 [sp + 0x60]\n 52224: a2 = 0 if a3 != 0\n 52226: a3 = u64 [sp + 0x58]\n 52229: a2 = 0 if a3 != 0\n 52231: u8 [a0 + 0] = 0x69\n 52234: jump @784 if a2 != 0\n      : @783 (gas: 1)\n 52237: jump @961\n      : @784 (gas: 4)\n 52240: a0 = u64 [sp + 0x50]\n 52243: i32 a0 = a0 + 0x6e0\n 52247: a1 = 0x20\n 52250: ra = 628, jump @0\n      : @785 [@dyn 314] (gas: 74)\n 52257: a1 = u64 [sp + 0x30]\n 52260: a1 = reverse a1\n 52262: a2 = u64 [sp + 0x38]\n 52265: a2 = reverse a2\n 52267: a3 = reverse s1\n 52269: a4 = u64 [sp + 0x10]\n 52272: a4 = reverse a4\n 52274: a5 = a4 >> 0x38\n 52277: u8 [a0 + 0x1f] = a5\n 52280: a5 = a4 >> 0x30\n 52283: u8 [a0 + 0x1e] = a5\n 52286: a5 = a4 >> 0x28\n 52289: u8 [a0 + 0x1d] = a5\n 52292: a5 = a4 >> 0x20\n 52295: u8 [a0 + 0x1c] = a5\n 52298: a5 = a4 >> 0x18\n 52301: u8 [a0 + 0x1b] = a5\n 52304: a5 = a4 >> 0x10\n 52307: u8 [a0 + 0x1a] = a5\n 52310: a5 = a4 >> 0x8\n 52313: u8 [a0 + 0x19] = a5\n 52316: u8 [a0 + 0x18] = a4\n 52319: u8 [a0 + 0x10] = a3\n 52322: a4 = a3 >> 0x38\n 52325: u8 [a0 + 0x17] = a4\n 52328: a4 = a3 >> 0x30\n 52331: u8 [a0 + 0x16] = a4\n 52334: a4 = a3 >> 0x28\n 52337: u8 [a0 + 0x15] = a4\n 52340: a4 = a3 >> 0x20\n 52343: u8 [a0 + 0x14] = a4\n 52346: a4 = a3 >> 0x18\n 52349: u8 [a0 + 0x13] = a4\n 52352: a4 = a3 >> 0x10\n 52355: u8 [a0 + 0x12] = a4\n 52358: a3 = a3 >> 0x8\n 52361: u8 [a0 + 0x11] = a3\n 52364: u8 [a0 + 0x8] = a2\n 52367: a3 = a2 >> 0x38\n 52370: u8 [a0 + 0xf] = a3\n 52373: a3 = a2 >> 0x30\n 52376: u8 [a0 + 0xe] = a3\n 52379: a3 = a2 >> 0x28\n 52382: u8 [a0 + 0xd] = a3\n 52385: a3 = a2 >> 0x20\n 52388: u8 [a0 + 0xc] = a3\n 52391: a3 = a2 >> 0x18\n 52394: u8 [a0 + 0xb] = a3\n 52397: a3 = a2 >> 0x10\n 52400: u8 [a0 + 0xa] = a3\n 52403: a2 = a2 >> 0x8\n 52406: u8 [a0 + 0x9] = a2\n 52409: u8 [a0] = a1\n 52411: a2 = a1 >> 0x38\n 52414: u8 [a0 + 0x7] = a2\n 52417: a2 = a1 >> 0x30\n 52420: u8 [a0 + 0x6] = a2\n 52423: a2 = a1 >> 0x28\n 52426: u8 [a0 + 0x5] = a2\n 52429: a2 = a1 >> 0x20\n 52432: u8 [a0 + 0x4] = a2\n 52435: a2 = a1 >> 0x18\n 52438: u8 [a0 + 0x3] = a2\n 52441: a2 = a1 >> 0x10\n 52444: u8 [a0 + 0x2] = a2\n 52447: a1 = a1 >> 0x8\n 52450: u8 [a0 + 0x1] = a1\n 52453: u64 [sp + 1352] = 0\n 52457: u64 [sp + 1344] = 0\n 52461: u64 [sp + 1328] = 0x40\n 52466: a0 = sp + 0x550\n 52470: a1 = sp + 0x530\n 52474: u64 [sp + 1336] = 0\n 52478: ra = 630, jump @56\n      : @786 [@dyn 315] (gas: 15)\n 52485: a1 = u64 [sp + 0x568]\n 52489: a2 = u64 [sp + 0x560]\n 52493: a0 = u64 [sp + 0x558]\n 52497: s1 = u64 [sp + 0x550]\n 52501: u64 [sp + 0x28] = a0\n 52504: u64 [sp + 0x30] = a1\n 52507: a0 = a0 | a1\n 52510: a1 = s1 | a2\n 52513: a1 = a1 | a0\n 52516: a1 = a1 >> 0x20\n 52519: u64 [sp + 0x38] = a2\n 52522: a0 = a0 | a2\n 52525: a0 = a0 << 0x20\n 52528: a0 = a0 | a1\n 52531: jump @788 if a0 == 0\n      : @787 (gas: 1)\n 52534: jump @961\n      : @788 (gas: 4)\n 52537: i32 a0 = s1 + 0\n 52539: a1 = 0x20\n 52542: u64 [sp + 0x18] = a0\n 52545: ra = 632, jump @0\n      : @789 [@dyn 316] (gas: 44)\n 52552: u8 [a0 + 31] = 0xa\n 52556: a1 = u64 [sp + 0x30]\n 52559: a2 = u64 [sp + 0x38]\n 52562: a2 = a2 | a1\n 52565: a1 = 0x100000000\n 52575: u64 [sp + 0x20] = a1\n 52578: a1 = 0xffffffe0\n 52588: u64 [sp + 0x10] = s1\n 52591: a1 = s1 <u a1\n 52594: s1 = u64 [sp + 0x28]\n 52597: a1 = 0 if s1 != 0\n 52599: a1 = 0 if a2 != 0\n 52601: u8 [a0 + 30] = 0\n 52604: u8 [a0 + 29] = 0\n 52607: u8 [a0 + 28] = 0\n 52610: u8 [a0 + 27] = 0\n 52613: u8 [a0 + 26] = 0\n 52616: u8 [a0 + 25] = 0\n 52619: u8 [a0 + 24] = 0\n 52622: u8 [a0 + 23] = 0\n 52625: u8 [a0 + 22] = 0\n 52628: u8 [a0 + 21] = 0\n 52631: u8 [a0 + 20] = 0\n 52634: u8 [a0 + 19] = 0\n 52637: u8 [a0 + 18] = 0\n 52640: u8 [a0 + 17] = 0\n 52643: u8 [a0 + 16] = 0\n 52646: u8 [a0 + 15] = 0\n 52649: u8 [a0 + 14] = 0\n 52652: u8 [a0 + 13] = 0\n 52655: u8 [a0 + 12] = 0\n 52658: u8 [a0 + 11] = 0\n 52661: u8 [a0 + 10] = 0\n 52664: u8 [a0 + 9] = 0\n 52667: u8 [a0 + 8] = 0\n 52670: u8 [a0 + 7] = 0\n 52673: u8 [a0 + 6] = 0\n 52676: u8 [a0 + 5] = 0\n 52679: u8 [a0 + 4] = 0\n 52682: u8 [a0 + 3] = 0\n 52685: u8 [a0 + 2] = 0\n 52688: u8 [a0 + 1] = 0\n 52691: u8 [a0 + 0] = 0\n 52693: jump @791 if a1 != 0\n      : @790 (gas: 1)\n 52696: jump @961\n      : @791 (gas: 4)\n 52699: a0 = u64 [sp + 0x18]\n 52702: i32 a0 = a0 + 0x20\n 52705: a1 = 0x20\n 52708: ra = 634, jump @0\n      : @792 [@dyn 317] (gas: 41)\n 52715: u8 [a0 + 31] = 0\n 52718: u8 [a0 + 30] = 0\n 52721: u8 [a0 + 29] = 0\n 52724: u8 [a0 + 28] = 0\n 52727: u8 [a0 + 27] = 0\n 52730: u8 [a0 + 26] = 0\n 52733: u8 [a0 + 25] = 0\n 52736: u8 [a0 + 24] = 0\n 52739: u8 [a0 + 23] = 0\n 52742: u8 [a0 + 22] = 0\n 52745: u8 [a0 + 21] = 0\n 52748: u8 [a0 + 20] = 0\n 52751: u8 [a0 + 19] = 0\n 52754: u8 [a0 + 18] = 0\n 52757: u8 [a0 + 17] = 0\n 52760: u8 [a0 + 16] = 0\n 52763: u8 [a0 + 15] = 0\n 52766: u8 [a0 + 14] = 0\n 52769: u8 [a0 + 13] = 0\n 52772: u8 [a0 + 12] = 0\n 52775: u8 [a0 + 11] = 0\n 52778: u8 [a0 + 10] = 0\n 52781: u8 [a0 + 9] = 0x65\n 52785: u8 [a0 + 8] = 0x76\n 52789: u8 [a0 + 7] = 0x69\n 52793: u8 [a0 + 6] = 0x74\n 52797: u8 [a0 + 5] = 0x61\n 52801: u8 [a0 + 4] = 0x76\n 52805: u8 [a0 + 3] = 0x6f\n 52809: u8 [a0 + 2] = 0x6e\n 52813: u8 [a0 + 1] = 0x6e\n 52817: a1 = u64 [sp + 0x20]\n 52820: a1 = a1 + 0xfffffffffffff900\n 52824: a3 = u64 [sp + 0x68]\n 52827: a1 = a3 <u a1\n 52830: a3 = u64 [sp + 0x60]\n 52833: a1 = 0 if a3 != 0\n 52835: a3 = u64 [sp + 0x58]\n 52838: a1 = 0 if a3 != 0\n 52840: u8 [a0 + 0] = 0x69\n 52843: jump @794 if a1 != 0\n      : @793 (gas: 1)\n 52846: jump @961\n      : @794 (gas: 4)\n 52849: a0 = u64 [sp + 0x50]\n 52852: i32 a0 = a0 + 0x700\n 52856: a1 = 0x20\n 52859: ra = 636, jump @0\n      : @795 [@dyn 318] (gas: 74)\n 52866: a1 = u64 [sp + 0x30]\n 52869: a1 = reverse a1\n 52871: a2 = u64 [sp + 0x38]\n 52874: a2 = reverse a2\n 52876: a3 = reverse s1\n 52878: a4 = u64 [sp + 0x10]\n 52881: a4 = reverse a4\n 52883: a5 = a4 >> 0x38\n 52886: u8 [a0 + 0x1f] = a5\n 52889: a5 = a4 >> 0x30\n 52892: u8 [a0 + 0x1e] = a5\n 52895: a5 = a4 >> 0x28\n 52898: u8 [a0 + 0x1d] = a5\n 52901: a5 = a4 >> 0x20\n 52904: u8 [a0 + 0x1c] = a5\n 52907: a5 = a4 >> 0x18\n 52910: u8 [a0 + 0x1b] = a5\n 52913: a5 = a4 >> 0x10\n 52916: u8 [a0 + 0x1a] = a5\n 52919: a5 = a4 >> 0x8\n 52922: u8 [a0 + 0x19] = a5\n 52925: u8 [a0 + 0x18] = a4\n 52928: u8 [a0 + 0x10] = a3\n 52931: a4 = a3 >> 0x38\n 52934: u8 [a0 + 0x17] = a4\n 52937: a4 = a3 >> 0x30\n 52940: u8 [a0 + 0x16] = a4\n 52943: a4 = a3 >> 0x28\n 52946: u8 [a0 + 0x15] = a4\n 52949: a4 = a3 >> 0x20\n 52952: u8 [a0 + 0x14] = a4\n 52955: a4 = a3 >> 0x18\n 52958: u8 [a0 + 0x13] = a4\n 52961: a4 = a3 >> 0x10\n 52964: u8 [a0 + 0x12] = a4\n 52967: a3 = a3 >> 0x8\n 52970: u8 [a0 + 0x11] = a3\n 52973: u8 [a0 + 0x8] = a2\n 52976: a3 = a2 >> 0x38\n 52979: u8 [a0 + 0xf] = a3\n 52982: a3 = a2 >> 0x30\n 52985: u8 [a0 + 0xe] = a3\n 52988: a3 = a2 >> 0x28\n 52991: u8 [a0 + 0xd] = a3\n 52994: a3 = a2 >> 0x20\n 52997: u8 [a0 + 0xc] = a3\n 53000: a3 = a2 >> 0x18\n 53003: u8 [a0 + 0xb] = a3\n 53006: a3 = a2 >> 0x10\n 53009: u8 [a0 + 0xa] = a3\n 53012: a2 = a2 >> 0x8\n 53015: u8 [a0 + 0x9] = a2\n 53018: u8 [a0] = a1\n 53020: a2 = a1 >> 0x38\n 53023: u8 [a0 + 0x7] = a2\n 53026: a2 = a1 >> 0x30\n 53029: u8 [a0 + 0x6] = a2\n 53032: a2 = a1 >> 0x28\n 53035: u8 [a0 + 0x5] = a2\n 53038: a2 = a1 >> 0x20\n 53041: u8 [a0 + 0x4] = a2\n 53044: a2 = a1 >> 0x18\n 53047: u8 [a0 + 0x3] = a2\n 53050: a2 = a1 >> 0x10\n 53053: u8 [a0 + 0x2] = a2\n 53056: a1 = a1 >> 0x8\n 53059: u8 [a0 + 0x1] = a1\n 53062: u64 [sp + 1288] = 0\n 53066: u64 [sp + 1280] = 0\n 53070: u64 [sp + 1264] = 0x40\n 53075: a0 = sp + 0x510\n 53079: a1 = sp + 0x4f0\n 53083: u64 [sp + 1272] = 0\n 53087: ra = 638, jump @56\n      : @796 [@dyn 319] (gas: 15)\n 53094: a1 = u64 [sp + 0x528]\n 53098: a2 = u64 [sp + 0x520]\n 53102: a0 = u64 [sp + 0x518]\n 53106: s1 = u64 [sp + 0x510]\n 53110: u64 [sp + 0x28] = a0\n 53113: u64 [sp + 0x30] = a1\n 53116: a0 = a0 | a1\n 53119: a1 = s1 | a2\n 53122: a1 = a1 | a0\n 53125: a1 = a1 >> 0x20\n 53128: u64 [sp + 0x38] = a2\n 53131: a0 = a0 | a2\n 53134: a0 = a0 << 0x20\n 53137: a0 = a0 | a1\n 53140: jump @798 if a0 == 0\n      : @797 (gas: 1)\n 53143: jump @961\n      : @798 (gas: 4)\n 53146: i32 a0 = s1 + 0\n 53148: a1 = 0x20\n 53151: u64 [sp + 0x18] = a0\n 53154: ra = 640, jump @0\n      : @799 [@dyn 320] (gas: 44)\n 53161: u8 [a0 + 31] = 0xb\n 53165: a1 = u64 [sp + 0x30]\n 53168: a2 = u64 [sp + 0x38]\n 53171: a2 = a2 | a1\n 53174: a1 = 0x100000000\n 53184: u64 [sp + 0x20] = a1\n 53187: a1 = 0xffffffe0\n 53197: u64 [sp + 0x10] = s1\n 53200: a1 = s1 <u a1\n 53203: s1 = u64 [sp + 0x28]\n 53206: a1 = 0 if s1 != 0\n 53208: a1 = 0 if a2 != 0\n 53210: u8 [a0 + 30] = 0\n 53213: u8 [a0 + 29] = 0\n 53216: u8 [a0 + 28] = 0\n 53219: u8 [a0 + 27] = 0\n 53222: u8 [a0 + 26] = 0\n 53225: u8 [a0 + 25] = 0\n 53228: u8 [a0 + 24] = 0\n 53231: u8 [a0 + 23] = 0\n 53234: u8 [a0 + 22] = 0\n 53237: u8 [a0 + 21] = 0\n 53240: u8 [a0 + 20] = 0\n 53243: u8 [a0 + 19] = 0\n 53246: u8 [a0 + 18] = 0\n 53249: u8 [a0 + 17] = 0\n 53252: u8 [a0 + 16] = 0\n 53255: u8 [a0 + 15] = 0\n 53258: u8 [a0 + 14] = 0\n 53261: u8 [a0 + 13] = 0\n 53264: u8 [a0 + 12] = 0\n 53267: u8 [a0 + 11] = 0\n 53270: u8 [a0 + 10] = 0\n 53273: u8 [a0 + 9] = 0\n 53276: u8 [a0 + 8] = 0\n 53279: u8 [a0 + 7] = 0\n 53282: u8 [a0 + 6] = 0\n 53285: u8 [a0 + 5] = 0\n 53288: u8 [a0 + 4] = 0\n 53291: u8 [a0 + 3] = 0\n 53294: u8 [a0 + 2] = 0\n 53297: u8 [a0 + 1] = 0\n 53300: u8 [a0 + 0] = 0\n 53302: jump @801 if a1 != 0\n      : @800 (gas: 1)\n 53305: jump @961\n      : @801 (gas: 4)\n 53308: a0 = u64 [sp + 0x18]\n 53311: i32 a0 = a0 + 0x20\n 53314: a1 = 0x20\n 53317: ra = 642, jump @0\n      : @802 [@dyn 321] (gas: 43)\n 53324: u8 [a0 + 31] = 0\n 53327: u8 [a0 + 30] = 0\n 53330: u8 [a0 + 29] = 0\n 53333: u8 [a0 + 28] = 0\n 53336: u8 [a0 + 27] = 0\n 53339: u8 [a0 + 26] = 0\n 53342: u8 [a0 + 25] = 0\n 53345: u8 [a0 + 24] = 0\n 53348: u8 [a0 + 23] = 0\n 53351: u8 [a0 + 22] = 0\n 53354: u8 [a0 + 21] = 0\n 53357: u8 [a0 + 20] = 0\n 53360: u8 [a0 + 19] = 0\n 53363: u8 [a0 + 18] = 0\n 53366: u8 [a0 + 17] = 0\n 53369: u8 [a0 + 16] = 0\n 53372: u8 [a0 + 15] = 0\n 53375: u8 [a0 + 14] = 0\n 53378: u8 [a0 + 13] = 0\n 53381: u8 [a0 + 12] = 0\n 53384: u8 [a0 + 11] = 0\n 53387: u8 [a0 + 10] = 0x74\n 53391: u8 [a0 + 9] = 0x6e\n 53395: u8 [a0 + 8] = 0x65\n 53399: u8 [a0 + 7] = 0x67\n 53403: a4 = 0x69\n 53406: u8 [a0 + 0x6] = a4\n 53409: a5 = 0x6c\n 53412: u8 [a0 + 0x5] = a5\n 53415: u8 [a0 + 0x4] = a5\n 53418: u8 [a0 + 3] = 0x65\n 53422: u8 [a0 + 2] = 0x74\n 53426: u8 [a0 + 1] = 0x6e\n 53430: a1 = u64 [sp + 0x20]\n 53433: a1 = a1 + 0xfffffffffffff8e0\n 53437: a2 = u64 [sp + 0x68]\n 53440: a1 = a2 <u a1\n 53443: a2 = u64 [sp + 0x60]\n 53446: a1 = 0 if a2 != 0\n 53448: a2 = u64 [sp + 0x58]\n 53451: a1 = 0 if a2 != 0\n 53453: u8 [a0] = a4\n 53455: jump @804 if a1 != 0\n      : @803 (gas: 1)\n 53458: jump @961\n      : @804 (gas: 4)\n 53461: a0 = u64 [sp + 0x50]\n 53464: i32 a0 = a0 + 0x720\n 53468: a1 = 0x20\n 53471: ra = 644, jump @0\n      : @805 [@dyn 322] (gas: 74)\n 53478: a1 = u64 [sp + 0x30]\n 53481: a1 = reverse a1\n 53483: a2 = u64 [sp + 0x38]\n 53486: a2 = reverse a2\n 53488: a3 = reverse s1\n 53490: a4 = u64 [sp + 0x10]\n 53493: a4 = reverse a4\n 53495: a5 = a4 >> 0x38\n 53498: u8 [a0 + 0x1f] = a5\n 53501: a5 = a4 >> 0x30\n 53504: u8 [a0 + 0x1e] = a5\n 53507: a5 = a4 >> 0x28\n 53510: u8 [a0 + 0x1d] = a5\n 53513: a5 = a4 >> 0x20\n 53516: u8 [a0 + 0x1c] = a5\n 53519: a5 = a4 >> 0x18\n 53522: u8 [a0 + 0x1b] = a5\n 53525: a5 = a4 >> 0x10\n 53528: u8 [a0 + 0x1a] = a5\n 53531: a5 = a4 >> 0x8\n 53534: u8 [a0 + 0x19] = a5\n 53537: u8 [a0 + 0x18] = a4\n 53540: u8 [a0 + 0x10] = a3\n 53543: a4 = a3 >> 0x38\n 53546: u8 [a0 + 0x17] = a4\n 53549: a4 = a3 >> 0x30\n 53552: u8 [a0 + 0x16] = a4\n 53555: a4 = a3 >> 0x28\n 53558: u8 [a0 + 0x15] = a4\n 53561: a4 = a3 >> 0x20\n 53564: u8 [a0 + 0x14] = a4\n 53567: a4 = a3 >> 0x18\n 53570: u8 [a0 + 0x13] = a4\n 53573: a4 = a3 >> 0x10\n 53576: u8 [a0 + 0x12] = a4\n 53579: a3 = a3 >> 0x8\n 53582: u8 [a0 + 0x11] = a3\n 53585: u8 [a0 + 0x8] = a2\n 53588: a3 = a2 >> 0x38\n 53591: u8 [a0 + 0xf] = a3\n 53594: a3 = a2 >> 0x30\n 53597: u8 [a0 + 0xe] = a3\n 53600: a3 = a2 >> 0x28\n 53603: u8 [a0 + 0xd] = a3\n 53606: a3 = a2 >> 0x20\n 53609: u8 [a0 + 0xc] = a3\n 53612: a3 = a2 >> 0x18\n 53615: u8 [a0 + 0xb] = a3\n 53618: a3 = a2 >> 0x10\n 53621: u8 [a0 + 0xa] = a3\n 53624: a2 = a2 >> 0x8\n 53627: u8 [a0 + 0x9] = a2\n 53630: u8 [a0] = a1\n 53632: a2 = a1 >> 0x38\n 53635: u8 [a0 + 0x7] = a2\n 53638: a2 = a1 >> 0x30\n 53641: u8 [a0 + 0x6] = a2\n 53644: a2 = a1 >> 0x28\n 53647: u8 [a0 + 0x5] = a2\n 53650: a2 = a1 >> 0x20\n 53653: u8 [a0 + 0x4] = a2\n 53656: a2 = a1 >> 0x18\n 53659: u8 [a0 + 0x3] = a2\n 53662: a2 = a1 >> 0x10\n 53665: u8 [a0 + 0x2] = a2\n 53668: a1 = a1 >> 0x8\n 53671: u8 [a0 + 0x1] = a1\n 53674: u64 [sp + 1224] = 0\n 53678: u64 [sp + 1216] = 0\n 53682: u64 [sp + 1200] = 0x40\n 53687: a0 = sp + 0x4d0\n 53691: a1 = sp + 0x4b0\n 53695: u64 [sp + 1208] = 0\n 53699: ra = 646, jump @56\n      : @806 [@dyn 323] (gas: 15)\n 53706: a1 = u64 [sp + 0x4e8]\n 53710: a2 = u64 [sp + 0x4e0]\n 53714: a0 = u64 [sp + 0x4d8]\n 53718: s1 = u64 [sp + 0x4d0]\n 53722: u64 [sp + 0x28] = a0\n 53725: u64 [sp + 0x30] = a1\n 53728: a0 = a0 | a1\n 53731: a1 = s1 | a2\n 53734: a1 = a1 | a0\n 53737: a1 = a1 >> 0x20\n 53740: u64 [sp + 0x38] = a2\n 53743: a0 = a0 | a2\n 53746: a0 = a0 << 0x20\n 53749: a0 = a0 | a1\n 53752: jump @808 if a0 == 0\n      : @807 (gas: 1)\n 53755: jump @961\n      : @808 (gas: 4)\n 53758: i32 a0 = s1 + 0\n 53760: a1 = 0x20\n 53763: u64 [sp + 0x18] = a0\n 53766: ra = 648, jump @0\n      : @809 [@dyn 324] (gas: 44)\n 53773: u8 [a0 + 31] = 0xb\n 53777: a1 = u64 [sp + 0x30]\n 53780: a2 = u64 [sp + 0x38]\n 53783: a2 = a2 | a1\n 53786: a1 = 0x100000000\n 53796: u64 [sp + 0x20] = a1\n 53799: a1 = 0xffffffe0\n 53809: u64 [sp + 0x10] = s1\n 53812: a1 = s1 <u a1\n 53815: s1 = u64 [sp + 0x28]\n 53818: a1 = 0 if s1 != 0\n 53820: a1 = 0 if a2 != 0\n 53822: u8 [a0 + 30] = 0\n 53825: u8 [a0 + 29] = 0\n 53828: u8 [a0 + 28] = 0\n 53831: u8 [a0 + 27] = 0\n 53834: u8 [a0 + 26] = 0\n 53837: u8 [a0 + 25] = 0\n 53840: u8 [a0 + 24] = 0\n 53843: u8 [a0 + 23] = 0\n 53846: u8 [a0 + 22] = 0\n 53849: u8 [a0 + 21] = 0\n 53852: u8 [a0 + 20] = 0\n 53855: u8 [a0 + 19] = 0\n 53858: u8 [a0 + 18] = 0\n 53861: u8 [a0 + 17] = 0\n 53864: u8 [a0 + 16] = 0\n 53867: u8 [a0 + 15] = 0\n 53870: u8 [a0 + 14] = 0\n 53873: u8 [a0 + 13] = 0\n 53876: u8 [a0 + 12] = 0\n 53879: u8 [a0 + 11] = 0\n 53882: u8 [a0 + 10] = 0\n 53885: u8 [a0 + 9] = 0\n 53888: u8 [a0 + 8] = 0\n 53891: u8 [a0 + 7] = 0\n 53894: u8 [a0 + 6] = 0\n 53897: u8 [a0 + 5] = 0\n 53900: u8 [a0 + 4] = 0\n 53903: u8 [a0 + 3] = 0\n 53906: u8 [a0 + 2] = 0\n 53909: u8 [a0 + 1] = 0\n 53912: u8 [a0 + 0] = 0\n 53914: jump @811 if a1 != 0\n      : @810 (gas: 1)\n 53917: jump @961\n      : @811 (gas: 4)\n 53920: a0 = u64 [sp + 0x18]\n 53923: i32 a0 = a0 + 0x20\n 53926: a1 = 0x20\n 53929: ra = 650, jump @0\n      : @812 [@dyn 325] (gas: 43)\n 53936: u8 [a0 + 31] = 0\n 53939: u8 [a0 + 30] = 0\n 53942: u8 [a0 + 29] = 0\n 53945: u8 [a0 + 28] = 0\n 53948: u8 [a0 + 27] = 0\n 53951: u8 [a0 + 26] = 0\n 53954: u8 [a0 + 25] = 0\n 53957: u8 [a0 + 24] = 0\n 53960: u8 [a0 + 23] = 0\n 53963: u8 [a0 + 22] = 0\n 53966: u8 [a0 + 21] = 0\n 53969: u8 [a0 + 20] = 0\n 53972: u8 [a0 + 19] = 0\n 53975: u8 [a0 + 18] = 0\n 53978: u8 [a0 + 17] = 0\n 53981: u8 [a0 + 16] = 0\n 53984: u8 [a0 + 15] = 0\n 53987: u8 [a0 + 14] = 0\n 53990: u8 [a0 + 13] = 0\n 53993: u8 [a0 + 12] = 0\n 53996: u8 [a0 + 11] = 0\n 53999: u8 [a0 + 10] = 0x67\n 54003: u8 [a0 + 9] = 0x6e\n 54007: u8 [a0 + 8] = 0x69\n 54011: u8 [a0 + 7] = 0x74\n 54015: u8 [a0 + 6] = 0x73\n 54019: a4 = 0x65\n 54022: u8 [a0 + 0x5] = a4\n 54025: a5 = 0x72\n 54028: u8 [a0 + 0x4] = a5\n 54031: u8 [a0 + 0x3] = a4\n 54034: u8 [a0 + 2] = 0x74\n 54038: u8 [a0 + 1] = 0x6e\n 54042: a1 = u64 [sp + 0x20]\n 54045: a1 = a1 + 0xfffffffffffff8c0\n 54049: a3 = u64 [sp + 0x68]\n 54052: a1 = a3 <u a1\n 54055: a3 = u64 [sp + 0x60]\n 54058: a1 = 0 if a3 != 0\n 54060: a3 = u64 [sp + 0x58]\n 54063: a1 = 0 if a3 != 0\n 54065: u8 [a0 + 0] = 0x69\n 54068: jump @814 if a1 != 0\n      : @813 (gas: 1)\n 54071: jump @961\n      : @814 (gas: 4)\n 54074: a0 = u64 [sp + 0x50]\n 54077: i32 a0 = a0 + 0x740\n 54081: a1 = 0x20\n 54084: ra = 652, jump @0\n      : @815 [@dyn 326] (gas: 74)\n 54091: a1 = u64 [sp + 0x30]\n 54094: a1 = reverse a1\n 54096: a2 = u64 [sp + 0x38]\n 54099: a2 = reverse a2\n 54101: a3 = reverse s1\n 54103: a4 = u64 [sp + 0x10]\n 54106: a4 = reverse a4\n 54108: a5 = a4 >> 0x38\n 54111: u8 [a0 + 0x1f] = a5\n 54114: a5 = a4 >> 0x30\n 54117: u8 [a0 + 0x1e] = a5\n 54120: a5 = a4 >> 0x28\n 54123: u8 [a0 + 0x1d] = a5\n 54126: a5 = a4 >> 0x20\n 54129: u8 [a0 + 0x1c] = a5\n 54132: a5 = a4 >> 0x18\n 54135: u8 [a0 + 0x1b] = a5\n 54138: a5 = a4 >> 0x10\n 54141: u8 [a0 + 0x1a] = a5\n 54144: a5 = a4 >> 0x8\n 54147: u8 [a0 + 0x19] = a5\n 54150: u8 [a0 + 0x18] = a4\n 54153: u8 [a0 + 0x10] = a3\n 54156: a4 = a3 >> 0x38\n 54159: u8 [a0 + 0x17] = a4\n 54162: a4 = a3 >> 0x30\n 54165: u8 [a0 + 0x16] = a4\n 54168: a4 = a3 >> 0x28\n 54171: u8 [a0 + 0x15] = a4\n 54174: a4 = a3 >> 0x20\n 54177: u8 [a0 + 0x14] = a4\n 54180: a4 = a3 >> 0x18\n 54183: u8 [a0 + 0x13] = a4\n 54186: a4 = a3 >> 0x10\n 54189: u8 [a0 + 0x12] = a4\n 54192: a3 = a3 >> 0x8\n 54195: u8 [a0 + 0x11] = a3\n 54198: u8 [a0 + 0x8] = a2\n 54201: a3 = a2 >> 0x38\n 54204: u8 [a0 + 0xf] = a3\n 54207: a3 = a2 >> 0x30\n 54210: u8 [a0 + 0xe] = a3\n 54213: a3 = a2 >> 0x28\n 54216: u8 [a0 + 0xd] = a3\n 54219: a3 = a2 >> 0x20\n 54222: u8 [a0 + 0xc] = a3\n 54225: a3 = a2 >> 0x18\n 54228: u8 [a0 + 0xb] = a3\n 54231: a3 = a2 >> 0x10\n 54234: u8 [a0 + 0xa] = a3\n 54237: a2 = a2 >> 0x8\n 54240: u8 [a0 + 0x9] = a2\n 54243: u8 [a0] = a1\n 54245: a2 = a1 >> 0x38\n 54248: u8 [a0 + 0x7] = a2\n 54251: a2 = a1 >> 0x30\n 54254: u8 [a0 + 0x6] = a2\n 54257: a2 = a1 >> 0x28\n 54260: u8 [a0 + 0x5] = a2\n 54263: a2 = a1 >> 0x20\n 54266: u8 [a0 + 0x4] = a2\n 54269: a2 = a1 >> 0x18\n 54272: u8 [a0 + 0x3] = a2\n 54275: a2 = a1 >> 0x10\n 54278: u8 [a0 + 0x2] = a2\n 54281: a1 = a1 >> 0x8\n 54284: u8 [a0 + 0x1] = a1\n 54287: u64 [sp + 1160] = 0\n 54291: u64 [sp + 1152] = 0\n 54295: u64 [sp + 1136] = 0x40\n 54300: a0 = sp + 0x490\n 54304: a1 = sp + 0x470\n 54308: u64 [sp + 1144] = 0\n 54312: ra = 654, jump @56\n      : @816 [@dyn 327] (gas: 15)\n 54319: a1 = u64 [sp + 0x4a8]\n 54323: a2 = u64 [sp + 0x4a0]\n 54327: a0 = u64 [sp + 0x498]\n 54331: s1 = u64 [sp + 0x490]\n 54335: u64 [sp + 0x28] = a0\n 54338: u64 [sp + 0x30] = a1\n 54341: a0 = a0 | a1\n 54344: a1 = s1 | a2\n 54347: a1 = a1 | a0\n 54350: a1 = a1 >> 0x20\n 54353: u64 [sp + 0x38] = a2\n 54356: a0 = a0 | a2\n 54359: a0 = a0 << 0x20\n 54362: a0 = a0 | a1\n 54365: jump @818 if a0 == 0\n      : @817 (gas: 1)\n 54368: jump @961\n      : @818 (gas: 4)\n 54371: i32 a0 = s1 + 0\n 54373: a1 = 0x20\n 54376: u64 [sp + 0x18] = a0\n 54379: ra = 656, jump @0\n      : @819 [@dyn 328] (gas: 44)\n 54386: u8 [a0 + 31] = 0x6\n 54390: a1 = u64 [sp + 0x30]\n 54393: a2 = u64 [sp + 0x38]\n 54396: a2 = a2 | a1\n 54399: a1 = 0x100000000\n 54409: u64 [sp + 0x20] = a1\n 54412: a1 = 0xffffffe0\n 54422: u64 [sp + 0x10] = s1\n 54425: a1 = s1 <u a1\n 54428: s1 = u64 [sp + 0x28]\n 54431: a1 = 0 if s1 != 0\n 54433: a1 = 0 if a2 != 0\n 54435: u8 [a0 + 30] = 0\n 54438: u8 [a0 + 29] = 0\n 54441: u8 [a0 + 28] = 0\n 54444: u8 [a0 + 27] = 0\n 54447: u8 [a0 + 26] = 0\n 54450: u8 [a0 + 25] = 0\n 54453: u8 [a0 + 24] = 0\n 54456: u8 [a0 + 23] = 0\n 54459: u8 [a0 + 22] = 0\n 54462: u8 [a0 + 21] = 0\n 54465: u8 [a0 + 20] = 0\n 54468: u8 [a0 + 19] = 0\n 54471: u8 [a0 + 18] = 0\n 54474: u8 [a0 + 17] = 0\n 54477: u8 [a0 + 16] = 0\n 54480: u8 [a0 + 15] = 0\n 54483: u8 [a0 + 14] = 0\n 54486: u8 [a0 + 13] = 0\n 54489: u8 [a0 + 12] = 0\n 54492: u8 [a0 + 11] = 0\n 54495: u8 [a0 + 10] = 0\n 54498: u8 [a0 + 9] = 0\n 54501: u8 [a0 + 8] = 0\n 54504: u8 [a0 + 7] = 0\n 54507: u8 [a0 + 6] = 0\n 54510: u8 [a0 + 5] = 0\n 54513: u8 [a0 + 4] = 0\n 54516: u8 [a0 + 3] = 0\n 54519: u8 [a0 + 2] = 0\n 54522: u8 [a0 + 1] = 0\n 54525: u8 [a0 + 0] = 0\n 54527: jump @821 if a1 != 0\n      : @820 (gas: 1)\n 54530: jump @961\n      : @821 (gas: 4)\n 54533: a0 = u64 [sp + 0x18]\n 54536: i32 a0 = a0 + 0x20\n 54539: a1 = 0x20\n 54542: ra = 658, jump @0\n      : @822 [@dyn 329] (gas: 41)\n 54549: u8 [a0 + 31] = 0\n 54552: u8 [a0 + 30] = 0\n 54555: u8 [a0 + 29] = 0\n 54558: u8 [a0 + 28] = 0\n 54561: u8 [a0 + 27] = 0\n 54564: u8 [a0 + 26] = 0\n 54567: u8 [a0 + 25] = 0\n 54570: u8 [a0 + 24] = 0\n 54573: u8 [a0 + 23] = 0\n 54576: u8 [a0 + 22] = 0\n 54579: u8 [a0 + 21] = 0\n 54582: u8 [a0 + 20] = 0\n 54585: u8 [a0 + 19] = 0\n 54588: u8 [a0 + 18] = 0\n 54591: u8 [a0 + 17] = 0\n 54594: u8 [a0 + 16] = 0\n 54597: u8 [a0 + 15] = 0\n 54600: u8 [a0 + 14] = 0\n 54603: u8 [a0 + 13] = 0\n 54606: u8 [a0 + 12] = 0\n 54609: u8 [a0 + 11] = 0\n 54612: u8 [a0 + 10] = 0\n 54615: u8 [a0 + 9] = 0\n 54618: u8 [a0 + 8] = 0\n 54621: u8 [a0 + 7] = 0\n 54624: u8 [a0 + 6] = 0\n 54627: u8 [a0 + 5] = 0x6c\n 54631: u8 [a0 + 4] = 0x75\n 54635: u8 [a0 + 3] = 0x66\n 54639: u8 [a0 + 2] = 0x79\n 54643: u8 [a0 + 1] = 0x6f\n 54647: a2 = u64 [sp + 0x20]\n 54650: a2 = a2 + 0xfffffffffffff8a0\n 54654: a3 = u64 [sp + 0x68]\n 54657: a2 = a3 <u a2\n 54660: a3 = u64 [sp + 0x60]\n 54663: a2 = 0 if a3 != 0\n 54665: a3 = u64 [sp + 0x58]\n 54668: a2 = 0 if a3 != 0\n 54670: u8 [a0 + 0] = 0x6a\n 54673: jump @824 if a2 != 0\n      : @823 (gas: 1)\n 54676: jump @961\n      : @824 (gas: 4)\n 54679: a0 = u64 [sp + 0x50]\n 54682: i32 a0 = a0 + 0x760\n 54686: a1 = 0x20\n 54689: ra = 660, jump @0\n      : @825 [@dyn 330] (gas: 74)\n 54696: a1 = u64 [sp + 0x30]\n 54699: a1 = reverse a1\n 54701: a2 = u64 [sp + 0x38]\n 54704: a2 = reverse a2\n 54706: a3 = reverse s1\n 54708: a4 = u64 [sp + 0x10]\n 54711: a4 = reverse a4\n 54713: a5 = a4 >> 0x38\n 54716: u8 [a0 + 0x1f] = a5\n 54719: a5 = a4 >> 0x30\n 54722: u8 [a0 + 0x1e] = a5\n 54725: a5 = a4 >> 0x28\n 54728: u8 [a0 + 0x1d] = a5\n 54731: a5 = a4 >> 0x20\n 54734: u8 [a0 + 0x1c] = a5\n 54737: a5 = a4 >> 0x18\n 54740: u8 [a0 + 0x1b] = a5\n 54743: a5 = a4 >> 0x10\n 54746: u8 [a0 + 0x1a] = a5\n 54749: a5 = a4 >> 0x8\n 54752: u8 [a0 + 0x19] = a5\n 54755: u8 [a0 + 0x18] = a4\n 54758: u8 [a0 + 0x10] = a3\n 54761: a4 = a3 >> 0x38\n 54764: u8 [a0 + 0x17] = a4\n 54767: a4 = a3 >> 0x30\n 54770: u8 [a0 + 0x16] = a4\n 54773: a4 = a3 >> 0x28\n 54776: u8 [a0 + 0x15] = a4\n 54779: a4 = a3 >> 0x20\n 54782: u8 [a0 + 0x14] = a4\n 54785: a4 = a3 >> 0x18\n 54788: u8 [a0 + 0x13] = a4\n 54791: a4 = a3 >> 0x10\n 54794: u8 [a0 + 0x12] = a4\n 54797: a3 = a3 >> 0x8\n 54800: u8 [a0 + 0x11] = a3\n 54803: u8 [a0 + 0x8] = a2\n 54806: a3 = a2 >> 0x38\n 54809: u8 [a0 + 0xf] = a3\n 54812: a3 = a2 >> 0x30\n 54815: u8 [a0 + 0xe] = a3\n 54818: a3 = a2 >> 0x28\n 54821: u8 [a0 + 0xd] = a3\n 54824: a3 = a2 >> 0x20\n 54827: u8 [a0 + 0xc] = a3\n 54830: a3 = a2 >> 0x18\n 54833: u8 [a0 + 0xb] = a3\n 54836: a3 = a2 >> 0x10\n 54839: u8 [a0 + 0xa] = a3\n 54842: a2 = a2 >> 0x8\n 54845: u8 [a0 + 0x9] = a2\n 54848: u8 [a0] = a1\n 54850: a2 = a1 >> 0x38\n 54853: u8 [a0 + 0x7] = a2\n 54856: a2 = a1 >> 0x30\n 54859: u8 [a0 + 0x6] = a2\n 54862: a2 = a1 >> 0x28\n 54865: u8 [a0 + 0x5] = a2\n 54868: a2 = a1 >> 0x20\n 54871: u8 [a0 + 0x4] = a2\n 54874: a2 = a1 >> 0x18\n 54877: u8 [a0 + 0x3] = a2\n 54880: a2 = a1 >> 0x10\n 54883: u8 [a0 + 0x2] = a2\n 54886: a1 = a1 >> 0x8\n 54889: u8 [a0 + 0x1] = a1\n 54892: u64 [sp + 1096] = 0\n 54896: u64 [sp + 1088] = 0\n 54900: u64 [sp + 1072] = 0x40\n 54905: a0 = sp + 0x450\n 54909: a1 = sp + 0x430\n 54913: u64 [sp + 1080] = 0\n 54917: ra = 662, jump @56\n      : @826 [@dyn 331] (gas: 15)\n 54924: a1 = u64 [sp + 0x468]\n 54928: a2 = u64 [sp + 0x460]\n 54932: a0 = u64 [sp + 0x458]\n 54936: s1 = u64 [sp + 0x450]\n 54940: u64 [sp + 0x28] = a0\n 54943: u64 [sp + 0x30] = a1\n 54946: a0 = a0 | a1\n 54949: a1 = s1 | a2\n 54952: a1 = a1 | a0\n 54955: a1 = a1 >> 0x20\n 54958: u64 [sp + 0x38] = a2\n 54961: a0 = a0 | a2\n 54964: a0 = a0 << 0x20\n 54967: a0 = a0 | a1\n 54970: jump @828 if a0 == 0\n      : @827 (gas: 1)\n 54973: jump @961\n      : @828 (gas: 4)\n 54976: i32 a0 = s1 + 0\n 54978: a1 = 0x20\n 54981: u64 [sp + 0x18] = a0\n 54984: ra = 664, jump @0\n      : @829 [@dyn 332] (gas: 44)\n 54991: u8 [a0 + 31] = 0x4\n 54995: a1 = u64 [sp + 0x30]\n 54998: a2 = u64 [sp + 0x38]\n 55001: a2 = a2 | a1\n 55004: a1 = 0x100000000\n 55014: u64 [sp + 0x20] = a1\n 55017: a1 = 0xffffffe0\n 55027: u64 [sp + 0x10] = s1\n 55030: a1 = s1 <u a1\n 55033: s1 = u64 [sp + 0x28]\n 55036: a1 = 0 if s1 != 0\n 55038: a1 = 0 if a2 != 0\n 55040: u8 [a0 + 30] = 0\n 55043: u8 [a0 + 29] = 0\n 55046: u8 [a0 + 28] = 0\n 55049: u8 [a0 + 27] = 0\n 55052: u8 [a0 + 26] = 0\n 55055: u8 [a0 + 25] = 0\n 55058: u8 [a0 + 24] = 0\n 55061: u8 [a0 + 23] = 0\n 55064: u8 [a0 + 22] = 0\n 55067: u8 [a0 + 21] = 0\n 55070: u8 [a0 + 20] = 0\n 55073: u8 [a0 + 19] = 0\n 55076: u8 [a0 + 18] = 0\n 55079: u8 [a0 + 17] = 0\n 55082: u8 [a0 + 16] = 0\n 55085: u8 [a0 + 15] = 0\n 55088: u8 [a0 + 14] = 0\n 55091: u8 [a0 + 13] = 0\n 55094: u8 [a0 + 12] = 0\n 55097: u8 [a0 + 11] = 0\n 55100: u8 [a0 + 10] = 0\n 55103: u8 [a0 + 9] = 0\n 55106: u8 [a0 + 8] = 0\n 55109: u8 [a0 + 7] = 0\n 55112: u8 [a0 + 6] = 0\n 55115: u8 [a0 + 5] = 0\n 55118: u8 [a0 + 4] = 0\n 55121: u8 [a0 + 3] = 0\n 55124: u8 [a0 + 2] = 0\n 55127: u8 [a0 + 1] = 0\n 55130: u8 [a0 + 0] = 0\n 55132: jump @831 if a1 != 0\n      : @830 (gas: 1)\n 55135: jump @961\n      : @831 (gas: 4)\n 55138: a0 = u64 [sp + 0x18]\n 55141: i32 a0 = a0 + 0x20\n 55144: a1 = 0x20\n 55147: ra = 666, jump @0\n      : @832 [@dyn 333] (gas: 41)\n 55154: u8 [a0 + 31] = 0\n 55157: u8 [a0 + 30] = 0\n 55160: u8 [a0 + 29] = 0\n 55163: u8 [a0 + 28] = 0\n 55166: u8 [a0 + 27] = 0\n 55169: u8 [a0 + 26] = 0\n 55172: u8 [a0 + 25] = 0\n 55175: u8 [a0 + 24] = 0\n 55178: u8 [a0 + 23] = 0\n 55181: u8 [a0 + 22] = 0\n 55184: u8 [a0 + 21] = 0\n 55187: u8 [a0 + 20] = 0\n 55190: u8 [a0 + 19] = 0\n 55193: u8 [a0 + 18] = 0\n 55196: u8 [a0 + 17] = 0\n 55199: u8 [a0 + 16] = 0\n 55202: u8 [a0 + 15] = 0\n 55205: u8 [a0 + 14] = 0\n 55208: u8 [a0 + 13] = 0\n 55211: u8 [a0 + 12] = 0\n 55214: u8 [a0 + 11] = 0\n 55217: u8 [a0 + 10] = 0\n 55220: u8 [a0 + 9] = 0\n 55223: u8 [a0 + 8] = 0\n 55226: u8 [a0 + 7] = 0\n 55229: u8 [a0 + 6] = 0\n 55232: u8 [a0 + 5] = 0\n 55235: u8 [a0 + 4] = 0\n 55238: u8 [a0 + 3] = 0x64\n 55242: u8 [a0 + 2] = 0x6e\n 55246: u8 [a0 + 1] = 0x69\n 55250: a2 = u64 [sp + 0x20]\n 55253: a2 = a2 + 0xfffffffffffff880\n 55257: a3 = u64 [sp + 0x68]\n 55260: a2 = a3 <u a2\n 55263: a3 = u64 [sp + 0x60]\n 55266: a2 = 0 if a3 != 0\n 55268: a3 = u64 [sp + 0x58]\n 55271: a2 = 0 if a3 != 0\n 55273: u8 [a0 + 0] = 0x6b\n 55276: jump @834 if a2 != 0\n      : @833 (gas: 1)\n 55279: jump @961\n      : @834 (gas: 4)\n 55282: a0 = u64 [sp + 0x50]\n 55285: i32 a0 = a0 + 0x780\n 55289: a1 = 0x20\n 55292: ra = 668, jump @0\n      : @835 [@dyn 334] (gas: 74)\n 55299: a1 = u64 [sp + 0x30]\n 55302: a1 = reverse a1\n 55304: a2 = u64 [sp + 0x38]\n 55307: a2 = reverse a2\n 55309: a3 = reverse s1\n 55311: a4 = u64 [sp + 0x10]\n 55314: a4 = reverse a4\n 55316: a5 = a4 >> 0x38\n 55319: u8 [a0 + 0x1f] = a5\n 55322: a5 = a4 >> 0x30\n 55325: u8 [a0 + 0x1e] = a5\n 55328: a5 = a4 >> 0x28\n 55331: u8 [a0 + 0x1d] = a5\n 55334: a5 = a4 >> 0x20\n 55337: u8 [a0 + 0x1c] = a5\n 55340: a5 = a4 >> 0x18\n 55343: u8 [a0 + 0x1b] = a5\n 55346: a5 = a4 >> 0x10\n 55349: u8 [a0 + 0x1a] = a5\n 55352: a5 = a4 >> 0x8\n 55355: u8 [a0 + 0x19] = a5\n 55358: u8 [a0 + 0x18] = a4\n 55361: u8 [a0 + 0x10] = a3\n 55364: a4 = a3 >> 0x38\n 55367: u8 [a0 + 0x17] = a4\n 55370: a4 = a3 >> 0x30\n 55373: u8 [a0 + 0x16] = a4\n 55376: a4 = a3 >> 0x28\n 55379: u8 [a0 + 0x15] = a4\n 55382: a4 = a3 >> 0x20\n 55385: u8 [a0 + 0x14] = a4\n 55388: a4 = a3 >> 0x18\n 55391: u8 [a0 + 0x13] = a4\n 55394: a4 = a3 >> 0x10\n 55397: u8 [a0 + 0x12] = a4\n 55400: a3 = a3 >> 0x8\n 55403: u8 [a0 + 0x11] = a3\n 55406: u8 [a0 + 0x8] = a2\n 55409: a3 = a2 >> 0x38\n 55412: u8 [a0 + 0xf] = a3\n 55415: a3 = a2 >> 0x30\n 55418: u8 [a0 + 0xe] = a3\n 55421: a3 = a2 >> 0x28\n 55424: u8 [a0 + 0xd] = a3\n 55427: a3 = a2 >> 0x20\n 55430: u8 [a0 + 0xc] = a3\n 55433: a3 = a2 >> 0x18\n 55436: u8 [a0 + 0xb] = a3\n 55439: a3 = a2 >> 0x10\n 55442: u8 [a0 + 0xa] = a3\n 55445: a2 = a2 >> 0x8\n 55448: u8 [a0 + 0x9] = a2\n 55451: u8 [a0] = a1\n 55453: a2 = a1 >> 0x38\n 55456: u8 [a0 + 0x7] = a2\n 55459: a2 = a1 >> 0x30\n 55462: u8 [a0 + 0x6] = a2\n 55465: a2 = a1 >> 0x28\n 55468: u8 [a0 + 0x5] = a2\n 55471: a2 = a1 >> 0x20\n 55474: u8 [a0 + 0x4] = a2\n 55477: a2 = a1 >> 0x18\n 55480: u8 [a0 + 0x3] = a2\n 55483: a2 = a1 >> 0x10\n 55486: u8 [a0 + 0x2] = a2\n 55489: a1 = a1 >> 0x8\n 55492: u8 [a0 + 0x1] = a1\n 55495: u64 [sp + 1032] = 0\n 55499: u64 [sp + 1024] = 0\n 55503: u64 [sp + 1008] = 0x40\n 55508: a0 = sp + 0x410\n 55512: a1 = sp + 0x3f0\n 55516: u64 [sp + 1016] = 0\n 55520: ra = 670, jump @56\n      : @836 [@dyn 335] (gas: 15)\n 55527: a1 = u64 [sp + 0x428]\n 55531: a2 = u64 [sp + 0x420]\n 55535: a0 = u64 [sp + 0x418]\n 55539: s1 = u64 [sp + 0x410]\n 55543: u64 [sp + 0x28] = a0\n 55546: u64 [sp + 0x30] = a1\n 55549: a0 = a0 | a1\n 55552: a1 = s1 | a2\n 55555: a1 = a1 | a0\n 55558: a1 = a1 >> 0x20\n 55561: u64 [sp + 0x38] = a2\n 55564: a0 = a0 | a2\n 55567: a0 = a0 << 0x20\n 55570: a0 = a0 | a1\n 55573: jump @838 if a0 == 0\n      : @837 (gas: 1)\n 55576: jump @961\n      : @838 (gas: 4)\n 55579: i32 a0 = s1 + 0\n 55581: a1 = 0x20\n 55584: u64 [sp + 0x18] = a0\n 55587: ra = 672, jump @0\n      : @839 [@dyn 336] (gas: 44)\n 55594: u8 [a0 + 31] = 0xd\n 55598: a1 = u64 [sp + 0x30]\n 55601: a2 = u64 [sp + 0x38]\n 55604: a2 = a2 | a1\n 55607: a1 = 0x100000000\n 55617: u64 [sp + 0x20] = a1\n 55620: a1 = 0xffffffe0\n 55630: u64 [sp + 0x10] = s1\n 55633: a1 = s1 <u a1\n 55636: s1 = u64 [sp + 0x28]\n 55639: a1 = 0 if s1 != 0\n 55641: a1 = 0 if a2 != 0\n 55643: u8 [a0 + 30] = 0\n 55646: u8 [a0 + 29] = 0\n 55649: u8 [a0 + 28] = 0\n 55652: u8 [a0 + 27] = 0\n 55655: u8 [a0 + 26] = 0\n 55658: u8 [a0 + 25] = 0\n 55661: u8 [a0 + 24] = 0\n 55664: u8 [a0 + 23] = 0\n 55667: u8 [a0 + 22] = 0\n 55670: u8 [a0 + 21] = 0\n 55673: u8 [a0 + 20] = 0\n 55676: u8 [a0 + 19] = 0\n 55679: u8 [a0 + 18] = 0\n 55682: u8 [a0 + 17] = 0\n 55685: u8 [a0 + 16] = 0\n 55688: u8 [a0 + 15] = 0\n 55691: u8 [a0 + 14] = 0\n 55694: u8 [a0 + 13] = 0\n 55697: u8 [a0 + 12] = 0\n 55700: u8 [a0 + 11] = 0\n 55703: u8 [a0 + 10] = 0\n 55706: u8 [a0 + 9] = 0\n 55709: u8 [a0 + 8] = 0\n 55712: u8 [a0 + 7] = 0\n 55715: u8 [a0 + 6] = 0\n 55718: u8 [a0 + 5] = 0\n 55721: u8 [a0 + 4] = 0\n 55724: u8 [a0 + 3] = 0\n 55727: u8 [a0 + 2] = 0\n 55730: u8 [a0 + 1] = 0\n 55733: u8 [a0 + 0] = 0\n 55735: jump @841 if a1 != 0\n      : @840 (gas: 1)\n 55738: jump @961\n      : @841 (gas: 4)\n 55741: a0 = u64 [sp + 0x18]\n 55744: i32 a0 = a0 + 0x20\n 55747: a1 = 0x20\n 55750: ra = 674, jump @0\n      : @842 [@dyn 337] (gas: 41)\n 55757: u8 [a0 + 31] = 0\n 55760: u8 [a0 + 30] = 0\n 55763: u8 [a0 + 29] = 0\n 55766: u8 [a0 + 28] = 0\n 55769: u8 [a0 + 27] = 0\n 55772: u8 [a0 + 26] = 0\n 55775: u8 [a0 + 25] = 0\n 55778: u8 [a0 + 24] = 0\n 55781: u8 [a0 + 23] = 0\n 55784: u8 [a0 + 22] = 0\n 55787: u8 [a0 + 21] = 0\n 55790: u8 [a0 + 20] = 0\n 55793: u8 [a0 + 19] = 0\n 55796: u8 [a0 + 18] = 0\n 55799: u8 [a0 + 17] = 0\n 55802: u8 [a0 + 16] = 0\n 55805: u8 [a0 + 15] = 0\n 55808: u8 [a0 + 14] = 0\n 55811: u8 [a0 + 13] = 0\n 55814: u8 [a0 + 12] = 0x65\n 55818: u8 [a0 + 11] = 0x6c\n 55822: u8 [a0 + 10] = 0x62\n 55826: u8 [a0 + 9] = 0x61\n 55830: u8 [a0 + 8] = 0x65\n 55834: u8 [a0 + 7] = 0x67\n 55838: u8 [a0 + 6] = 0x64\n 55842: u8 [a0 + 5] = 0x65\n 55846: u8 [a0 + 4] = 0x6c\n 55850: u8 [a0 + 3] = 0x77\n 55854: u8 [a0 + 2] = 0x6f\n 55858: u8 [a0 + 1] = 0x6e\n 55862: a2 = u64 [sp + 0x20]\n 55865: a2 = a2 + 0xfffffffffffff860\n 55869: a3 = u64 [sp + 0x68]\n 55872: a2 = a3 <u a2\n 55875: a3 = u64 [sp + 0x60]\n 55878: a2 = 0 if a3 != 0\n 55880: a3 = u64 [sp + 0x58]\n 55883: a2 = 0 if a3 != 0\n 55885: u8 [a0 + 0] = 0x6b\n 55888: jump @844 if a2 != 0\n      : @843 (gas: 1)\n 55891: jump @961\n      : @844 (gas: 4)\n 55894: a0 = u64 [sp + 0x50]\n 55897: i32 a0 = a0 + 0x7a0\n 55901: a1 = 0x20\n 55904: ra = 676, jump @0\n      : @845 [@dyn 338] (gas: 74)\n 55911: a1 = u64 [sp + 0x30]\n 55914: a1 = reverse a1\n 55916: a2 = u64 [sp + 0x38]\n 55919: a2 = reverse a2\n 55921: a3 = reverse s1\n 55923: a4 = u64 [sp + 0x10]\n 55926: a4 = reverse a4\n 55928: a5 = a4 >> 0x38\n 55931: u8 [a0 + 0x1f] = a5\n 55934: a5 = a4 >> 0x30\n 55937: u8 [a0 + 0x1e] = a5\n 55940: a5 = a4 >> 0x28\n 55943: u8 [a0 + 0x1d] = a5\n 55946: a5 = a4 >> 0x20\n 55949: u8 [a0 + 0x1c] = a5\n 55952: a5 = a4 >> 0x18\n 55955: u8 [a0 + 0x1b] = a5\n 55958: a5 = a4 >> 0x10\n 55961: u8 [a0 + 0x1a] = a5\n 55964: a5 = a4 >> 0x8\n 55967: u8 [a0 + 0x19] = a5\n 55970: u8 [a0 + 0x18] = a4\n 55973: u8 [a0 + 0x10] = a3\n 55976: a4 = a3 >> 0x38\n 55979: u8 [a0 + 0x17] = a4\n 55982: a4 = a3 >> 0x30\n 55985: u8 [a0 + 0x16] = a4\n 55988: a4 = a3 >> 0x28\n 55991: u8 [a0 + 0x15] = a4\n 55994: a4 = a3 >> 0x20\n 55997: u8 [a0 + 0x14] = a4\n 56000: a4 = a3 >> 0x18\n 56003: u8 [a0 + 0x13] = a4\n 56006: a4 = a3 >> 0x10\n 56009: u8 [a0 + 0x12] = a4\n 56012: a3 = a3 >> 0x8\n 56015: u8 [a0 + 0x11] = a3\n 56018: u8 [a0 + 0x8] = a2\n 56021: a3 = a2 >> 0x38\n 56024: u8 [a0 + 0xf] = a3\n 56027: a3 = a2 >> 0x30\n 56030: u8 [a0 + 0xe] = a3\n 56033: a3 = a2 >> 0x28\n 56036: u8 [a0 + 0xd] = a3\n 56039: a3 = a2 >> 0x20\n 56042: u8 [a0 + 0xc] = a3\n 56045: a3 = a2 >> 0x18\n 56048: u8 [a0 + 0xb] = a3\n 56051: a3 = a2 >> 0x10\n 56054: u8 [a0 + 0xa] = a3\n 56057: a2 = a2 >> 0x8\n 56060: u8 [a0 + 0x9] = a2\n 56063: u8 [a0] = a1\n 56065: a2 = a1 >> 0x38\n 56068: u8 [a0 + 0x7] = a2\n 56071: a2 = a1 >> 0x30\n 56074: u8 [a0 + 0x6] = a2\n 56077: a2 = a1 >> 0x28\n 56080: u8 [a0 + 0x5] = a2\n 56083: a2 = a1 >> 0x20\n 56086: u8 [a0 + 0x4] = a2\n 56089: a2 = a1 >> 0x18\n 56092: u8 [a0 + 0x3] = a2\n 56095: a2 = a1 >> 0x10\n 56098: u8 [a0 + 0x2] = a2\n 56101: a1 = a1 >> 0x8\n 56104: u8 [a0 + 0x1] = a1\n 56107: u64 [sp + 968] = 0\n 56111: u64 [sp + 960] = 0\n 56115: u64 [sp + 944] = 0x40\n 56120: a0 = sp + 0x3d0\n 56124: a1 = sp + 0x3b0\n 56128: u64 [sp + 952] = 0\n 56132: ra = 678, jump @56\n      : @846 [@dyn 339] (gas: 15)\n 56139: a1 = u64 [sp + 0x3e8]\n 56143: a2 = u64 [sp + 0x3e0]\n 56147: a0 = u64 [sp + 0x3d8]\n 56151: s1 = u64 [sp + 0x3d0]\n 56155: u64 [sp + 0x28] = a0\n 56158: u64 [sp + 0x30] = a1\n 56161: a0 = a0 | a1\n 56164: a1 = s1 | a2\n 56167: a1 = a1 | a0\n 56170: a1 = a1 >> 0x20\n 56173: u64 [sp + 0x38] = a2\n 56176: a0 = a0 | a2\n 56179: a0 = a0 << 0x20\n 56182: a0 = a0 | a1\n 56185: jump @848 if a0 == 0\n      : @847 (gas: 1)\n 56188: jump @961\n      : @848 (gas: 4)\n 56191: i32 a0 = s1 + 0\n 56193: a1 = 0x20\n 56196: u64 [sp + 0x18] = a0\n 56199: ra = 680, jump @0\n      : @849 [@dyn 340] (gas: 44)\n 56206: u8 [a0 + 31] = 0x6\n 56210: a1 = u64 [sp + 0x30]\n 56213: a2 = u64 [sp + 0x38]\n 56216: a2 = a2 | a1\n 56219: a1 = 0x100000000\n 56229: u64 [sp + 0x20] = a1\n 56232: a1 = 0xffffffe0\n 56242: u64 [sp + 0x10] = s1\n 56245: a1 = s1 <u a1\n 56248: s1 = u64 [sp + 0x28]\n 56251: a1 = 0 if s1 != 0\n 56253: a1 = 0 if a2 != 0\n 56255: u8 [a0 + 30] = 0\n 56258: u8 [a0 + 29] = 0\n 56261: u8 [a0 + 28] = 0\n 56264: u8 [a0 + 27] = 0\n 56267: u8 [a0 + 26] = 0\n 56270: u8 [a0 + 25] = 0\n 56273: u8 [a0 + 24] = 0\n 56276: u8 [a0 + 23] = 0\n 56279: u8 [a0 + 22] = 0\n 56282: u8 [a0 + 21] = 0\n 56285: u8 [a0 + 20] = 0\n 56288: u8 [a0 + 19] = 0\n 56291: u8 [a0 + 18] = 0\n 56294: u8 [a0 + 17] = 0\n 56297: u8 [a0 + 16] = 0\n 56300: u8 [a0 + 15] = 0\n 56303: u8 [a0 + 14] = 0\n 56306: u8 [a0 + 13] = 0\n 56309: u8 [a0 + 12] = 0\n 56312: u8 [a0 + 11] = 0\n 56315: u8 [a0 + 10] = 0\n 56318: u8 [a0 + 9] = 0\n 56321: u8 [a0 + 8] = 0\n 56324: u8 [a0 + 7] = 0\n 56327: u8 [a0 + 6] = 0\n 56330: u8 [a0 + 5] = 0\n 56333: u8 [a0 + 4] = 0\n 56336: u8 [a0 + 3] = 0\n 56339: u8 [a0 + 2] = 0\n 56342: u8 [a0 + 1] = 0\n 56345: u8 [a0 + 0] = 0\n 56347: jump @851 if a1 != 0\n      : @850 (gas: 1)\n 56350: jump @961\n      : @851 (gas: 4)\n 56353: a0 = u64 [sp + 0x18]\n 56356: i32 a0 = a0 + 0x20\n 56359: a1 = 0x20\n 56362: ra = 682, jump @0\n      : @852 [@dyn 341] (gas: 41)\n 56369: u8 [a0 + 31] = 0\n 56372: u8 [a0 + 30] = 0\n 56375: u8 [a0 + 29] = 0\n 56378: u8 [a0 + 28] = 0\n 56381: u8 [a0 + 27] = 0\n 56384: u8 [a0 + 26] = 0\n 56387: u8 [a0 + 25] = 0\n 56390: u8 [a0 + 24] = 0\n 56393: u8 [a0 + 23] = 0\n 56396: u8 [a0 + 22] = 0\n 56399: u8 [a0 + 21] = 0\n 56402: u8 [a0 + 20] = 0\n 56405: u8 [a0 + 19] = 0\n 56408: u8 [a0 + 18] = 0\n 56411: u8 [a0 + 17] = 0\n 56414: u8 [a0 + 16] = 0\n 56417: u8 [a0 + 15] = 0\n 56420: u8 [a0 + 14] = 0\n 56423: u8 [a0 + 13] = 0\n 56426: u8 [a0 + 12] = 0\n 56429: u8 [a0 + 11] = 0\n 56432: u8 [a0 + 10] = 0\n 56435: u8 [a0 + 9] = 0\n 56438: u8 [a0 + 8] = 0\n 56441: u8 [a0 + 7] = 0\n 56444: u8 [a0 + 6] = 0\n 56447: u8 [a0 + 5] = 0x79\n 56451: u8 [a0 + 4] = 0x6c\n 56455: u8 [a0 + 3] = 0x65\n 56459: u8 [a0 + 2] = 0x76\n 56463: u8 [a0 + 1] = 0x69\n 56467: a2 = u64 [sp + 0x20]\n 56470: a2 = a2 + 0xfffffffffffff840\n 56474: a3 = u64 [sp + 0x68]\n 56477: a2 = a3 <u a2\n 56480: a3 = u64 [sp + 0x60]\n 56483: a2 = 0 if a3 != 0\n 56485: a3 = u64 [sp + 0x58]\n 56488: a2 = 0 if a3 != 0\n 56490: u8 [a0 + 0] = 0x6c\n 56493: jump @854 if a2 != 0\n      : @853 (gas: 1)\n 56496: jump @961\n      : @854 (gas: 4)\n 56499: a0 = u64 [sp + 0x50]\n 56502: i32 a0 = a0 + 0x7c0\n 56506: a1 = 0x20\n 56509: ra = 684, jump @0\n      : @855 [@dyn 342] (gas: 74)\n 56516: a1 = u64 [sp + 0x30]\n 56519: a1 = reverse a1\n 56521: a2 = u64 [sp + 0x38]\n 56524: a2 = reverse a2\n 56526: a3 = reverse s1\n 56528: a4 = u64 [sp + 0x10]\n 56531: a4 = reverse a4\n 56533: a5 = a4 >> 0x38\n 56536: u8 [a0 + 0x1f] = a5\n 56539: a5 = a4 >> 0x30\n 56542: u8 [a0 + 0x1e] = a5\n 56545: a5 = a4 >> 0x28\n 56548: u8 [a0 + 0x1d] = a5\n 56551: a5 = a4 >> 0x20\n 56554: u8 [a0 + 0x1c] = a5\n 56557: a5 = a4 >> 0x18\n 56560: u8 [a0 + 0x1b] = a5\n 56563: a5 = a4 >> 0x10\n 56566: u8 [a0 + 0x1a] = a5\n 56569: a5 = a4 >> 0x8\n 56572: u8 [a0 + 0x19] = a5\n 56575: u8 [a0 + 0x18] = a4\n 56578: u8 [a0 + 0x10] = a3\n 56581: a4 = a3 >> 0x38\n 56584: u8 [a0 + 0x17] = a4\n 56587: a4 = a3 >> 0x30\n 56590: u8 [a0 + 0x16] = a4\n 56593: a4 = a3 >> 0x28\n 56596: u8 [a0 + 0x15] = a4\n 56599: a4 = a3 >> 0x20\n 56602: u8 [a0 + 0x14] = a4\n 56605: a4 = a3 >> 0x18\n 56608: u8 [a0 + 0x13] = a4\n 56611: a4 = a3 >> 0x10\n 56614: u8 [a0 + 0x12] = a4\n 56617: a3 = a3 >> 0x8\n 56620: u8 [a0 + 0x11] = a3\n 56623: u8 [a0 + 0x8] = a2\n 56626: a3 = a2 >> 0x38\n 56629: u8 [a0 + 0xf] = a3\n 56632: a3 = a2 >> 0x30\n 56635: u8 [a0 + 0xe] = a3\n 56638: a3 = a2 >> 0x28\n 56641: u8 [a0 + 0xd] = a3\n 56644: a3 = a2 >> 0x20\n 56647: u8 [a0 + 0xc] = a3\n 56650: a3 = a2 >> 0x18\n 56653: u8 [a0 + 0xb] = a3\n 56656: a3 = a2 >> 0x10\n 56659: u8 [a0 + 0xa] = a3\n 56662: a2 = a2 >> 0x8\n 56665: u8 [a0 + 0x9] = a2\n 56668: u8 [a0] = a1\n 56670: a2 = a1 >> 0x38\n 56673: u8 [a0 + 0x7] = a2\n 56676: a2 = a1 >> 0x30\n 56679: u8 [a0 + 0x6] = a2\n 56682: a2 = a1 >> 0x28\n 56685: u8 [a0 + 0x5] = a2\n 56688: a2 = a1 >> 0x20\n 56691: u8 [a0 + 0x4] = a2\n 56694: a2 = a1 >> 0x18\n 56697: u8 [a0 + 0x3] = a2\n 56700: a2 = a1 >> 0x10\n 56703: u8 [a0 + 0x2] = a2\n 56706: a1 = a1 >> 0x8\n 56709: u8 [a0 + 0x1] = a1\n 56712: u64 [sp + 904] = 0\n 56716: u64 [sp + 896] = 0\n 56720: u64 [sp + 880] = 0x40\n 56725: a0 = sp + 0x390\n 56729: a1 = sp + 0x370\n 56733: u64 [sp + 888] = 0\n 56737: ra = 686, jump @56\n      : @856 [@dyn 343] (gas: 15)\n 56744: a1 = u64 [sp + 0x3a8]\n 56748: a2 = u64 [sp + 0x3a0]\n 56752: a0 = u64 [sp + 0x398]\n 56756: s1 = u64 [sp + 0x390]\n 56760: u64 [sp + 0x28] = a0\n 56763: u64 [sp + 0x30] = a1\n 56766: a0 = a0 | a1\n 56769: a1 = s1 | a2\n 56772: a1 = a1 | a0\n 56775: a1 = a1 >> 0x20\n 56778: u64 [sp + 0x38] = a2\n 56781: a0 = a0 | a2\n 56784: a0 = a0 << 0x20\n 56787: a0 = a0 | a1\n 56790: jump @858 if a0 == 0\n      : @857 (gas: 1)\n 56793: jump @961\n      : @858 (gas: 4)\n 56796: i32 a0 = s1 + 0\n 56798: a1 = 0x20\n 56801: u64 [sp + 0x18] = a0\n 56804: ra = 688, jump @0\n      : @859 [@dyn 344] (gas: 44)\n 56811: u8 [a0 + 31] = 0x6\n 56815: a1 = u64 [sp + 0x30]\n 56818: a2 = u64 [sp + 0x38]\n 56821: a2 = a2 | a1\n 56824: a1 = 0x100000000\n 56834: u64 [sp + 0x20] = a1\n 56837: a1 = 0xffffffe0\n 56847: u64 [sp + 0x10] = s1\n 56850: a1 = s1 <u a1\n 56853: s1 = u64 [sp + 0x28]\n 56856: a1 = 0 if s1 != 0\n 56858: a1 = 0 if a2 != 0\n 56860: u8 [a0 + 30] = 0\n 56863: u8 [a0 + 29] = 0\n 56866: u8 [a0 + 28] = 0\n 56869: u8 [a0 + 27] = 0\n 56872: u8 [a0 + 26] = 0\n 56875: u8 [a0 + 25] = 0\n 56878: u8 [a0 + 24] = 0\n 56881: u8 [a0 + 23] = 0\n 56884: u8 [a0 + 22] = 0\n 56887: u8 [a0 + 21] = 0\n 56890: u8 [a0 + 20] = 0\n 56893: u8 [a0 + 19] = 0\n 56896: u8 [a0 + 18] = 0\n 56899: u8 [a0 + 17] = 0\n 56902: u8 [a0 + 16] = 0\n 56905: u8 [a0 + 15] = 0\n 56908: u8 [a0 + 14] = 0\n 56911: u8 [a0 + 13] = 0\n 56914: u8 [a0 + 12] = 0\n 56917: u8 [a0 + 11] = 0\n 56920: u8 [a0 + 10] = 0\n 56923: u8 [a0 + 9] = 0\n 56926: u8 [a0 + 8] = 0\n 56929: u8 [a0 + 7] = 0\n 56932: u8 [a0 + 6] = 0\n 56935: u8 [a0 + 5] = 0\n 56938: u8 [a0 + 4] = 0\n 56941: u8 [a0 + 3] = 0\n 56944: u8 [a0 + 2] = 0\n 56947: u8 [a0 + 1] = 0\n 56950: u8 [a0 + 0] = 0\n 56952: jump @861 if a1 != 0\n      : @860 (gas: 1)\n 56955: jump @961\n      : @861 (gas: 4)\n 56958: a0 = u64 [sp + 0x18]\n 56961: i32 a0 = a0 + 0x20\n 56964: a1 = 0x20\n 56967: ra = 690, jump @0\n      : @862 [@dyn 345] (gas: 41)\n 56974: u8 [a0 + 31] = 0\n 56977: u8 [a0 + 30] = 0\n 56980: u8 [a0 + 29] = 0\n 56983: u8 [a0 + 28] = 0\n 56986: u8 [a0 + 27] = 0\n 56989: u8 [a0 + 26] = 0\n 56992: u8 [a0 + 25] = 0\n 56995: u8 [a0 + 24] = 0\n 56998: u8 [a0 + 23] = 0\n 57001: u8 [a0 + 22] = 0\n 57004: u8 [a0 + 21] = 0\n 57007: u8 [a0 + 20] = 0\n 57010: u8 [a0 + 19] = 0\n 57013: u8 [a0 + 18] = 0\n 57016: u8 [a0 + 17] = 0\n 57019: u8 [a0 + 16] = 0\n 57022: u8 [a0 + 15] = 0\n 57025: u8 [a0 + 14] = 0\n 57028: u8 [a0 + 13] = 0\n 57031: u8 [a0 + 12] = 0\n 57034: u8 [a0 + 11] = 0\n 57037: u8 [a0 + 10] = 0\n 57040: u8 [a0 + 9] = 0\n 57043: u8 [a0 + 8] = 0\n 57046: u8 [a0 + 7] = 0\n 57049: u8 [a0 + 6] = 0\n 57052: u8 [a0 + 5] = 0x79\n 57056: u8 [a0 + 4] = 0x6c\n 57060: u8 [a0 + 3] = 0x65\n 57064: u8 [a0 + 2] = 0x76\n 57068: u8 [a0 + 1] = 0x6f\n 57072: a2 = u64 [sp + 0x20]\n 57075: a2 = a2 + 0xfffffffffffff820\n 57079: a3 = u64 [sp + 0x68]\n 57082: a2 = a3 <u a2\n 57085: a3 = u64 [sp + 0x60]\n 57088: a2 = 0 if a3 != 0\n 57090: a3 = u64 [sp + 0x58]\n 57093: a2 = 0 if a3 != 0\n 57095: u8 [a0 + 0] = 0x6c\n 57098: jump @864 if a2 != 0\n      : @863 (gas: 1)\n 57101: jump @961\n      : @864 (gas: 4)\n 57104: a0 = u64 [sp + 0x50]\n 57107: i32 a0 = a0 + 0x7e0\n 57111: a1 = 0x20\n 57114: ra = 692, jump @0\n      : @865 [@dyn 346] (gas: 74)\n 57121: a1 = u64 [sp + 0x30]\n 57124: a1 = reverse a1\n 57126: a2 = u64 [sp + 0x38]\n 57129: a2 = reverse a2\n 57131: a3 = reverse s1\n 57133: a4 = u64 [sp + 0x10]\n 57136: a4 = reverse a4\n 57138: a5 = a4 >> 0x38\n 57141: u8 [a0 + 0x1f] = a5\n 57144: a5 = a4 >> 0x30\n 57147: u8 [a0 + 0x1e] = a5\n 57150: a5 = a4 >> 0x28\n 57153: u8 [a0 + 0x1d] = a5\n 57156: a5 = a4 >> 0x20\n 57159: u8 [a0 + 0x1c] = a5\n 57162: a5 = a4 >> 0x18\n 57165: u8 [a0 + 0x1b] = a5\n 57168: a5 = a4 >> 0x10\n 57171: u8 [a0 + 0x1a] = a5\n 57174: a5 = a4 >> 0x8\n 57177: u8 [a0 + 0x19] = a5\n 57180: u8 [a0 + 0x18] = a4\n 57183: u8 [a0 + 0x10] = a3\n 57186: a4 = a3 >> 0x38\n 57189: u8 [a0 + 0x17] = a4\n 57192: a4 = a3 >> 0x30\n 57195: u8 [a0 + 0x16] = a4\n 57198: a4 = a3 >> 0x28\n 57201: u8 [a0 + 0x15] = a4\n 57204: a4 = a3 >> 0x20\n 57207: u8 [a0 + 0x14] = a4\n 57210: a4 = a3 >> 0x18\n 57213: u8 [a0 + 0x13] = a4\n 57216: a4 = a3 >> 0x10\n 57219: u8 [a0 + 0x12] = a4\n 57222: a3 = a3 >> 0x8\n 57225: u8 [a0 + 0x11] = a3\n 57228: u8 [a0 + 0x8] = a2\n 57231: a3 = a2 >> 0x38\n 57234: u8 [a0 + 0xf] = a3\n 57237: a3 = a2 >> 0x30\n 57240: u8 [a0 + 0xe] = a3\n 57243: a3 = a2 >> 0x28\n 57246: u8 [a0 + 0xd] = a3\n 57249: a3 = a2 >> 0x20\n 57252: u8 [a0 + 0xc] = a3\n 57255: a3 = a2 >> 0x18\n 57258: u8 [a0 + 0xb] = a3\n 57261: a3 = a2 >> 0x10\n 57264: u8 [a0 + 0xa] = a3\n 57267: a2 = a2 >> 0x8\n 57270: u8 [a0 + 0x9] = a2\n 57273: u8 [a0] = a1\n 57275: a2 = a1 >> 0x38\n 57278: u8 [a0 + 0x7] = a2\n 57281: a2 = a1 >> 0x30\n 57284: u8 [a0 + 0x6] = a2\n 57287: a2 = a1 >> 0x28\n 57290: u8 [a0 + 0x5] = a2\n 57293: a2 = a1 >> 0x20\n 57296: u8 [a0 + 0x4] = a2\n 57299: a2 = a1 >> 0x18\n 57302: u8 [a0 + 0x3] = a2\n 57305: a2 = a1 >> 0x10\n 57308: u8 [a0 + 0x2] = a2\n 57311: a1 = a1 >> 0x8\n 57314: u8 [a0 + 0x1] = a1\n 57317: u64 [sp + 840] = 0\n 57321: u64 [sp + 832] = 0\n 57325: u64 [sp + 816] = 0x40\n 57330: a0 = sp + 0x350\n 57334: a1 = sp + 0x330\n 57338: u64 [sp + 824] = 0\n 57342: ra = 694, jump @56\n      : @866 [@dyn 347] (gas: 15)\n 57349: a1 = u64 [sp + 0x368]\n 57353: a2 = u64 [sp + 0x360]\n 57357: a0 = u64 [sp + 0x358]\n 57361: s1 = u64 [sp + 0x350]\n 57365: u64 [sp + 0x28] = a0\n 57368: u64 [sp + 0x30] = a1\n 57371: a0 = a0 | a1\n 57374: a1 = s1 | a2\n 57377: a1 = a1 | a0\n 57380: a1 = a1 >> 0x20\n 57383: u64 [sp + 0x38] = a2\n 57386: a0 = a0 | a2\n 57389: a0 = a0 << 0x20\n 57392: a0 = a0 | a1\n 57395: jump @868 if a0 == 0\n      : @867 (gas: 1)\n 57398: jump @961\n      : @868 (gas: 4)\n 57401: i32 a0 = s1 + 0\n 57403: a1 = 0x20\n 57406: u64 [sp + 0x18] = a0\n 57409: ra = 696, jump @0\n      : @869 [@dyn 348] (gas: 44)\n 57416: u8 [a0 + 31] = 0x5\n 57420: a1 = u64 [sp + 0x30]\n 57423: a2 = u64 [sp + 0x38]\n 57426: a2 = a2 | a1\n 57429: a1 = 0x100000000\n 57439: u64 [sp + 0x20] = a1\n 57442: a1 = 0xffffffe0\n 57452: u64 [sp + 0x10] = s1\n 57455: a1 = s1 <u a1\n 57458: s1 = u64 [sp + 0x28]\n 57461: a1 = 0 if s1 != 0\n 57463: a1 = 0 if a2 != 0\n 57465: u8 [a0 + 30] = 0\n 57468: u8 [a0 + 29] = 0\n 57471: u8 [a0 + 28] = 0\n 57474: u8 [a0 + 27] = 0\n 57477: u8 [a0 + 26] = 0\n 57480: u8 [a0 + 25] = 0\n 57483: u8 [a0 + 24] = 0\n 57486: u8 [a0 + 23] = 0\n 57489: u8 [a0 + 22] = 0\n 57492: u8 [a0 + 21] = 0\n 57495: u8 [a0 + 20] = 0\n 57498: u8 [a0 + 19] = 0\n 57501: u8 [a0 + 18] = 0\n 57504: u8 [a0 + 17] = 0\n 57507: u8 [a0 + 16] = 0\n 57510: u8 [a0 + 15] = 0\n 57513: u8 [a0 + 14] = 0\n 57516: u8 [a0 + 13] = 0\n 57519: u8 [a0 + 12] = 0\n 57522: u8 [a0 + 11] = 0\n 57525: u8 [a0 + 10] = 0\n 57528: u8 [a0 + 9] = 0\n 57531: u8 [a0 + 8] = 0\n 57534: u8 [a0 + 7] = 0\n 57537: u8 [a0 + 6] = 0\n 57540: u8 [a0 + 5] = 0\n 57543: u8 [a0 + 4] = 0\n 57546: u8 [a0 + 3] = 0\n 57549: u8 [a0 + 2] = 0\n 57552: u8 [a0 + 1] = 0\n 57555: u8 [a0 + 0] = 0\n 57557: jump @871 if a1 != 0\n      : @870 (gas: 1)\n 57560: jump @961\n      : @871 (gas: 4)\n 57563: a0 = u64 [sp + 0x18]\n 57566: i32 a0 = a0 + 0x20\n 57569: a1 = 0x20\n 57572: ra = 698, jump @0\n      : @872 [@dyn 349] (gas: 41)\n 57579: u8 [a0 + 31] = 0\n 57582: u8 [a0 + 30] = 0\n 57585: u8 [a0 + 29] = 0\n 57588: u8 [a0 + 28] = 0\n 57591: u8 [a0 + 27] = 0\n 57594: u8 [a0 + 26] = 0\n 57597: u8 [a0 + 25] = 0\n 57600: u8 [a0 + 24] = 0\n 57603: u8 [a0 + 23] = 0\n 57606: u8 [a0 + 22] = 0\n 57609: u8 [a0 + 21] = 0\n 57612: u8 [a0 + 20] = 0\n 57615: u8 [a0 + 19] = 0\n 57618: u8 [a0 + 18] = 0\n 57621: u8 [a0 + 17] = 0\n 57624: u8 [a0 + 16] = 0\n 57627: u8 [a0 + 15] = 0\n 57630: u8 [a0 + 14] = 0\n 57633: u8 [a0 + 13] = 0\n 57636: u8 [a0 + 12] = 0\n 57639: u8 [a0 + 11] = 0\n 57642: u8 [a0 + 10] = 0\n 57645: u8 [a0 + 9] = 0\n 57648: u8 [a0 + 8] = 0\n 57651: u8 [a0 + 7] = 0\n 57654: u8 [a0 + 6] = 0\n 57657: u8 [a0 + 5] = 0\n 57660: u8 [a0 + 4] = 0x6c\n 57664: u8 [a0 + 3] = 0x61\n 57668: u8 [a0 + 2] = 0x79\n 57672: u8 [a0 + 1] = 0x6f\n 57676: a2 = u64 [sp + 0x20]\n 57679: a2 = a2 + 0xfffffffffffff800\n 57683: a3 = u64 [sp + 0x68]\n 57686: a2 = a3 <u a2\n 57689: a3 = u64 [sp + 0x60]\n 57692: a2 = 0 if a3 != 0\n 57694: a3 = u64 [sp + 0x58]\n 57697: a2 = 0 if a3 != 0\n 57699: u8 [a0 + 0] = 0x6c\n 57702: jump @874 if a2 != 0\n      : @873 (gas: 1)\n 57705: jump @961\n      : @874 (gas: 5)\n 57708: a1 = u64 [sp + 0x50]\n 57711: i32 a0 = a1 + 0x800\n 57715: a1 = 0x20\n 57718: u64 [sp + 0x50] = a0\n 57721: ra = 700, jump @0\n      : @875 [@dyn 350] (gas: 74)\n 57728: a1 = u64 [sp + 0x30]\n 57731: a1 = reverse a1\n 57733: a2 = u64 [sp + 0x38]\n 57736: a2 = reverse a2\n 57738: a3 = reverse s1\n 57740: a4 = u64 [sp + 0x10]\n 57743: a4 = reverse a4\n 57745: a5 = a4 >> 0x38\n 57748: u8 [a0 + 0x1f] = a5\n 57751: a5 = a4 >> 0x30\n 57754: u8 [a0 + 0x1e] = a5\n 57757: a5 = a4 >> 0x28\n 57760: u8 [a0 + 0x1d] = a5\n 57763: a5 = a4 >> 0x20\n 57766: u8 [a0 + 0x1c] = a5\n 57769: a5 = a4 >> 0x18\n 57772: u8 [a0 + 0x1b] = a5\n 57775: a5 = a4 >> 0x10\n 57778: u8 [a0 + 0x1a] = a5\n 57781: a5 = a4 >> 0x8\n 57784: u8 [a0 + 0x19] = a5\n 57787: u8 [a0 + 0x18] = a4\n 57790: a4 = a3 >> 0x38\n 57793: u8 [a0 + 0x17] = a4\n 57796: a4 = a3 >> 0x30\n 57799: u8 [a0 + 0x16] = a4\n 57802: a4 = a3 >> 0x28\n 57805: u8 [a0 + 0x15] = a4\n 57808: a4 = a3 >> 0x20\n 57811: u8 [a0 + 0x14] = a4\n 57814: a4 = a3 >> 0x18\n 57817: u8 [a0 + 0x13] = a4\n 57820: a4 = a3 >> 0x10\n 57823: u8 [a0 + 0x12] = a4\n 57826: a4 = a3 >> 0x8\n 57829: u8 [a0 + 0x11] = a4\n 57832: u8 [a0 + 0x10] = a3\n 57835: u8 [a0 + 0x8] = a2\n 57838: a3 = a2 >> 0x38\n 57841: u8 [a0 + 0xf] = a3\n 57844: a3 = a2 >> 0x30\n 57847: u8 [a0 + 0xe] = a3\n 57850: a3 = a2 >> 0x28\n 57853: u8 [a0 + 0xd] = a3\n 57856: a3 = a2 >> 0x20\n 57859: u8 [a0 + 0xc] = a3\n 57862: a3 = a2 >> 0x18\n 57865: u8 [a0 + 0xb] = a3\n 57868: a3 = a2 >> 0x10\n 57871: u8 [a0 + 0xa] = a3\n 57874: a2 = a2 >> 0x8\n 57877: u8 [a0 + 0x9] = a2\n 57880: u8 [a0] = a1\n 57882: a2 = a1 >> 0x38\n 57885: u8 [a0 + 0x7] = a2\n 57888: a2 = a1 >> 0x30\n 57891: u8 [a0 + 0x6] = a2\n 57894: a2 = a1 >> 0x28\n 57897: u8 [a0 + 0x5] = a2\n 57900: a2 = a1 >> 0x20\n 57903: u8 [a0 + 0x4] = a2\n 57906: a2 = a1 >> 0x18\n 57909: u8 [a0 + 0x3] = a2\n 57912: a2 = a1 >> 0x10\n 57915: u8 [a0 + 0x2] = a2\n 57918: a1 = a1 >> 0x8\n 57921: u8 [a0 + 0x1] = a1\n 57924: u64 [sp + 776] = 0\n 57928: u64 [sp + 768] = 0\n 57932: u64 [sp + 752] = 0x40\n 57937: a0 = sp + 0x310\n 57941: a1 = sp + 0x2f0\n 57945: u64 [sp + 760] = 0\n 57949: ra = 702, jump @56\n      : @876 [@dyn 351] (gas: 15)\n 57956: a1 = u64 [sp + 0x328]\n 57960: a2 = u64 [sp + 0x320]\n 57964: a0 = u64 [sp + 0x318]\n 57968: s1 = u64 [sp + 0x310]\n 57972: u64 [sp + 0x28] = a0\n 57975: u64 [sp + 0x30] = a1\n 57978: a0 = a0 | a1\n 57981: a1 = s1 | a2\n 57984: a1 = a1 | a0\n 57987: a1 = a1 >> 0x20\n 57990: u64 [sp + 0x38] = a2\n 57993: a0 = a0 | a2\n 57996: a0 = a0 << 0x20\n 57999: a0 = a0 | a1\n 58002: jump @878 if a0 == 0\n      : @877 (gas: 1)\n 58005: jump @961\n      : @878 (gas: 4)\n 58008: i32 a0 = s1 + 0\n 58010: a1 = 0x20\n 58013: u64 [sp + 0x20] = a0\n 58016: ra = 704, jump @0\n      : @879 [@dyn 352] (gas: 42)\n 58023: u8 [a0 + 31] = 0x5\n 58027: a1 = u64 [sp + 0x30]\n 58030: a2 = u64 [sp + 0x38]\n 58033: a2 = a2 | a1\n 58036: a1 = 0xffffffe0\n 58046: u64 [sp + 0x18] = s1\n 58049: a1 = s1 <u a1\n 58052: s1 = u64 [sp + 0x28]\n 58055: a1 = 0 if s1 != 0\n 58057: a1 = 0 if a2 != 0\n 58059: u8 [a0 + 30] = 0\n 58062: u8 [a0 + 29] = 0\n 58065: u8 [a0 + 28] = 0\n 58068: u8 [a0 + 27] = 0\n 58071: u8 [a0 + 26] = 0\n 58074: u8 [a0 + 25] = 0\n 58077: u8 [a0 + 24] = 0\n 58080: u8 [a0 + 23] = 0\n 58083: u8 [a0 + 22] = 0\n 58086: u8 [a0 + 21] = 0\n 58089: u8 [a0 + 20] = 0\n 58092: u8 [a0 + 19] = 0\n 58095: u8 [a0 + 18] = 0\n 58098: u8 [a0 + 17] = 0\n 58101: u8 [a0 + 16] = 0\n 58104: u8 [a0 + 15] = 0\n 58107: u8 [a0 + 14] = 0\n 58110: u8 [a0 + 13] = 0\n 58113: u8 [a0 + 12] = 0\n 58116: u8 [a0 + 11] = 0\n 58119: u8 [a0 + 10] = 0\n 58122: u8 [a0 + 9] = 0\n 58125: u8 [a0 + 8] = 0\n 58128: u8 [a0 + 7] = 0\n 58131: u8 [a0 + 6] = 0\n 58134: u8 [a0 + 5] = 0\n 58137: u8 [a0 + 4] = 0\n 58140: u8 [a0 + 3] = 0\n 58143: u8 [a0 + 2] = 0\n 58146: u8 [a0 + 1] = 0\n 58149: u8 [a0 + 0] = 0\n 58151: jump @881 if a1 != 0\n      : @880 (gas: 1)\n 58154: jump @961\n      : @881 (gas: 4)\n 58157: a0 = u64 [sp + 0x20]\n 58160: i32 a0 = a0 + 0x20\n 58163: a1 = 0x20\n 58166: ra = 706, jump @0\n      : @882 [@dyn 353] (gas: 40)\n 58173: u8 [a0 + 31] = 0\n 58176: u8 [a0 + 30] = 0\n 58179: u8 [a0 + 29] = 0\n 58182: u8 [a0 + 28] = 0\n 58185: u8 [a0 + 27] = 0\n 58188: u8 [a0 + 26] = 0\n 58191: u8 [a0 + 25] = 0\n 58194: u8 [a0 + 24] = 0\n 58197: u8 [a0 + 23] = 0\n 58200: u8 [a0 + 22] = 0\n 58203: u8 [a0 + 21] = 0\n 58206: u8 [a0 + 20] = 0\n 58209: u8 [a0 + 19] = 0\n 58212: u8 [a0 + 18] = 0\n 58215: u8 [a0 + 17] = 0\n 58218: u8 [a0 + 16] = 0\n 58221: u8 [a0 + 15] = 0\n 58224: u8 [a0 + 14] = 0\n 58227: u8 [a0 + 13] = 0\n 58230: u8 [a0 + 12] = 0\n 58233: u8 [a0 + 11] = 0\n 58236: u8 [a0 + 10] = 0\n 58239: u8 [a0 + 9] = 0\n 58242: u8 [a0 + 8] = 0\n 58245: u8 [a0 + 7] = 0\n 58248: u8 [a0 + 6] = 0\n 58251: u8 [a0 + 4] = 0x79\n 58255: u8 [a0 + 3] = 0x6b\n 58259: u8 [a0 + 2] = 0x63\n 58263: u8 [a0 + 1] = 0x75\n 58267: u8 [a0 + 0] = 0x6c\n 58270: a1 = 0xfffff7e0\n 58280: a2 = u64 [sp + 0x68]\n 58283: a1 = a2 <u a1\n 58286: a2 = u64 [sp + 0x60]\n 58289: a1 = 0 if a2 != 0\n 58291: a2 = u64 [sp + 0x58]\n 58294: a1 = 0 if a2 != 0\n 58296: u8 [a0 + 5] = 0\n 58299: jump @884 if a1 != 0\n      : @883 (gas: 1)\n 58302: jump @961\n      : @884 (gas: 4)\n 58305: a0 = u64 [sp + 0x50]\n 58308: i32 a0 = a0 + 0x20\n 58311: a1 = 0x20\n 58314: ra = 708, jump @0\n      : @885 [@dyn 354] (gas: 74)\n 58321: a1 = u64 [sp + 0x30]\n 58324: a1 = reverse a1\n 58326: a2 = u64 [sp + 0x38]\n 58329: a2 = reverse a2\n 58331: a3 = reverse s1\n 58333: a4 = u64 [sp + 0x18]\n 58336: a4 = reverse a4\n 58338: a5 = a4 >> 0x38\n 58341: u8 [a0 + 0x1f] = a5\n 58344: a5 = a4 >> 0x30\n 58347: u8 [a0 + 0x1e] = a5\n 58350: a5 = a4 >> 0x28\n 58353: u8 [a0 + 0x1d] = a5\n 58356: a5 = a4 >> 0x20\n 58359: u8 [a0 + 0x1c] = a5\n 58362: a5 = a4 >> 0x18\n 58365: u8 [a0 + 0x1b] = a5\n 58368: a5 = a4 >> 0x10\n 58371: u8 [a0 + 0x1a] = a5\n 58374: a5 = a4 >> 0x8\n 58377: u8 [a0 + 0x19] = a5\n 58380: u8 [a0 + 0x18] = a4\n 58383: a4 = a3 >> 0x38\n 58386: u8 [a0 + 0x17] = a4\n 58389: a4 = a3 >> 0x30\n 58392: u8 [a0 + 0x16] = a4\n 58395: a4 = a3 >> 0x28\n 58398: u8 [a0 + 0x15] = a4\n 58401: a4 = a3 >> 0x20\n 58404: u8 [a0 + 0x14] = a4\n 58407: a4 = a3 >> 0x18\n 58410: u8 [a0 + 0x13] = a4\n 58413: a4 = a3 >> 0x10\n 58416: u8 [a0 + 0x12] = a4\n 58419: a4 = a3 >> 0x8\n 58422: u8 [a0 + 0x11] = a4\n 58425: u8 [a0 + 0x10] = a3\n 58428: u8 [a0 + 0x8] = a2\n 58431: a3 = a2 >> 0x38\n 58434: u8 [a0 + 0xf] = a3\n 58437: a3 = a2 >> 0x30\n 58440: u8 [a0 + 0xe] = a3\n 58443: a3 = a2 >> 0x28\n 58446: u8 [a0 + 0xd] = a3\n 58449: a3 = a2 >> 0x20\n 58452: u8 [a0 + 0xc] = a3\n 58455: a3 = a2 >> 0x18\n 58458: u8 [a0 + 0xb] = a3\n 58461: a3 = a2 >> 0x10\n 58464: u8 [a0 + 0xa] = a3\n 58467: a2 = a2 >> 0x8\n 58470: u8 [a0 + 0x9] = a2\n 58473: u8 [a0] = a1\n 58475: a2 = a1 >> 0x38\n 58478: u8 [a0 + 0x7] = a2\n 58481: a2 = a1 >> 0x30\n 58484: u8 [a0 + 0x6] = a2\n 58487: a2 = a1 >> 0x28\n 58490: u8 [a0 + 0x5] = a2\n 58493: a2 = a1 >> 0x20\n 58496: u8 [a0 + 0x4] = a2\n 58499: a2 = a1 >> 0x18\n 58502: u8 [a0 + 0x3] = a2\n 58505: a2 = a1 >> 0x10\n 58508: u8 [a0 + 0x2] = a2\n 58511: a1 = a1 >> 0x8\n 58514: u8 [a0 + 0x1] = a1\n 58517: u64 [sp + 712] = 0\n 58521: u64 [sp + 704] = 0\n 58525: u64 [sp + 688] = 0x40\n 58530: a0 = sp + 0x2d0\n 58534: a1 = sp + 0x2b0\n 58538: u64 [sp + 696] = 0\n 58542: ra = 710, jump @56\n      : @886 [@dyn 355] (gas: 15)\n 58549: a1 = u64 [sp + 0x2e8]\n 58553: a2 = u64 [sp + 0x2e0]\n 58557: a0 = u64 [sp + 0x2d8]\n 58561: s1 = u64 [sp + 0x2d0]\n 58565: u64 [sp + 0x28] = a0\n 58568: u64 [sp + 0x30] = a1\n 58571: a0 = a0 | a1\n 58574: a1 = s1 | a2\n 58577: a1 = a1 | a0\n 58580: a1 = a1 >> 0x20\n 58583: u64 [sp + 0x38] = a2\n 58586: a0 = a0 | a2\n 58589: a0 = a0 << 0x20\n 58592: a0 = a0 | a1\n 58595: jump @888 if a0 == 0\n      : @887 (gas: 1)\n 58598: jump @961\n      : @888 (gas: 4)\n 58601: i32 a0 = s1 + 0\n 58603: a1 = 0x20\n 58606: u64 [sp + 0x20] = a0\n 58609: ra = 712, jump @0\n      : @889 [@dyn 356] (gas: 42)\n 58616: u8 [a0 + 31] = 0xb\n 58620: a1 = u64 [sp + 0x30]\n 58623: a2 = u64 [sp + 0x38]\n 58626: a2 = a2 | a1\n 58629: a1 = 0xffffffe0\n 58639: u64 [sp + 0x18] = s1\n 58642: a1 = s1 <u a1\n 58645: s1 = u64 [sp + 0x28]\n 58648: a1 = 0 if s1 != 0\n 58650: a1 = 0 if a2 != 0\n 58652: u8 [a0 + 30] = 0\n 58655: u8 [a0 + 29] = 0\n 58658: u8 [a0 + 28] = 0\n 58661: u8 [a0 + 27] = 0\n 58664: u8 [a0 + 26] = 0\n 58667: u8 [a0 + 25] = 0\n 58670: u8 [a0 + 24] = 0\n 58673: u8 [a0 + 23] = 0\n 58676: u8 [a0 + 22] = 0\n 58679: u8 [a0 + 21] = 0\n 58682: u8 [a0 + 20] = 0\n 58685: u8 [a0 + 19] = 0\n 58688: u8 [a0 + 18] = 0\n 58691: u8 [a0 + 17] = 0\n 58694: u8 [a0 + 16] = 0\n 58697: u8 [a0 + 15] = 0\n 58700: u8 [a0 + 14] = 0\n 58703: u8 [a0 + 13] = 0\n 58706: u8 [a0 + 12] = 0\n 58709: u8 [a0 + 11] = 0\n 58712: u8 [a0 + 10] = 0\n 58715: u8 [a0 + 9] = 0\n 58718: u8 [a0 + 8] = 0\n 58721: u8 [a0 + 7] = 0\n 58724: u8 [a0 + 6] = 0\n 58727: u8 [a0 + 5] = 0\n 58730: u8 [a0 + 4] = 0\n 58733: u8 [a0 + 3] = 0\n 58736: u8 [a0 + 2] = 0\n 58739: u8 [a0 + 1] = 0\n 58742: u8 [a0 + 0] = 0\n 58744: jump @891 if a1 != 0\n      : @890 (gas: 1)\n 58747: jump @961\n      : @891 (gas: 4)\n 58750: a0 = u64 [sp + 0x20]\n 58753: i32 a0 = a0 + 0x20\n 58756: a1 = 0x20\n 58759: ra = 714, jump @0\n      : @892 [@dyn 357] (gas: 40)\n 58766: u8 [a0 + 31] = 0\n 58769: u8 [a0 + 30] = 0\n 58772: u8 [a0 + 29] = 0\n 58775: u8 [a0 + 28] = 0\n 58778: u8 [a0 + 27] = 0\n 58781: u8 [a0 + 26] = 0\n 58784: u8 [a0 + 25] = 0\n 58787: u8 [a0 + 24] = 0\n 58790: u8 [a0 + 23] = 0\n 58793: u8 [a0 + 22] = 0\n 58796: u8 [a0 + 21] = 0\n 58799: u8 [a0 + 20] = 0\n 58802: u8 [a0 + 19] = 0\n 58805: u8 [a0 + 18] = 0\n 58808: u8 [a0 + 17] = 0\n 58811: u8 [a0 + 16] = 0\n 58814: u8 [a0 + 15] = 0\n 58817: u8 [a0 + 14] = 0\n 58820: u8 [a0 + 13] = 0\n 58823: u8 [a0 + 12] = 0\n 58826: u8 [a0 + 11] = 0\n 58829: u8 [a0 + 10] = 0x74\n 58833: u8 [a0 + 9] = 0x6e\n 58837: u8 [a0 + 8] = 0x65\n 58841: u8 [a0 + 7] = 0x63\n 58845: u8 [a0 + 6] = 0x69\n 58849: u8 [a0 + 5] = 0x66\n 58853: u8 [a0 + 4] = 0x69\n 58857: u8 [a0 + 3] = 0x6e\n 58861: u8 [a0 + 2] = 0x67\n 58865: u8 [a0 + 1] = 0x61\n 58869: a2 = 0xfffff7c0\n 58879: a3 = u64 [sp + 0x68]\n 58882: a2 = a3 <u a2\n 58885: a3 = u64 [sp + 0x60]\n 58888: a2 = 0 if a3 != 0\n 58890: a3 = u64 [sp + 0x58]\n 58893: a2 = 0 if a3 != 0\n 58895: u8 [a0 + 0] = 0x6d\n 58898: jump @894 if a2 != 0\n      : @893 (gas: 1)\n 58901: jump @961\n      : @894 (gas: 4)\n 58904: a0 = u64 [sp + 0x50]\n 58907: i32 a0 = a0 + 0x40\n 58910: a1 = 0x20\n 58913: ra = 716, jump @0\n      : @895 [@dyn 358] (gas: 74)\n 58920: a1 = u64 [sp + 0x30]\n 58923: a1 = reverse a1\n 58925: a2 = u64 [sp + 0x38]\n 58928: a2 = reverse a2\n 58930: a3 = reverse s1\n 58932: a4 = u64 [sp + 0x18]\n 58935: a4 = reverse a4\n 58937: a5 = a4 >> 0x38\n 58940: u8 [a0 + 0x1f] = a5\n 58943: a5 = a4 >> 0x30\n 58946: u8 [a0 + 0x1e] = a5\n 58949: a5 = a4 >> 0x28\n 58952: u8 [a0 + 0x1d] = a5\n 58955: a5 = a4 >> 0x20\n 58958: u8 [a0 + 0x1c] = a5\n 58961: a5 = a4 >> 0x18\n 58964: u8 [a0 + 0x1b] = a5\n 58967: a5 = a4 >> 0x10\n 58970: u8 [a0 + 0x1a] = a5\n 58973: a5 = a4 >> 0x8\n 58976: u8 [a0 + 0x19] = a5\n 58979: u8 [a0 + 0x18] = a4\n 58982: a4 = a3 >> 0x38\n 58985: u8 [a0 + 0x17] = a4\n 58988: a4 = a3 >> 0x30\n 58991: u8 [a0 + 0x16] = a4\n 58994: a4 = a3 >> 0x28\n 58997: u8 [a0 + 0x15] = a4\n 59000: a4 = a3 >> 0x20\n 59003: u8 [a0 + 0x14] = a4\n 59006: a4 = a3 >> 0x18\n 59009: u8 [a0 + 0x13] = a4\n 59012: a4 = a3 >> 0x10\n 59015: u8 [a0 + 0x12] = a4\n 59018: a4 = a3 >> 0x8\n 59021: u8 [a0 + 0x11] = a4\n 59024: u8 [a0 + 0x10] = a3\n 59027: u8 [a0 + 0x8] = a2\n 59030: a3 = a2 >> 0x38\n 59033: u8 [a0 + 0xf] = a3\n 59036: a3 = a2 >> 0x30\n 59039: u8 [a0 + 0xe] = a3\n 59042: a3 = a2 >> 0x28\n 59045: u8 [a0 + 0xd] = a3\n 59048: a3 = a2 >> 0x20\n 59051: u8 [a0 + 0xc] = a3\n 59054: a3 = a2 >> 0x18\n 59057: u8 [a0 + 0xb] = a3\n 59060: a3 = a2 >> 0x10\n 59063: u8 [a0 + 0xa] = a3\n 59066: a2 = a2 >> 0x8\n 59069: u8 [a0 + 0x9] = a2\n 59072: u8 [a0] = a1\n 59074: a2 = a1 >> 0x38\n 59077: u8 [a0 + 0x7] = a2\n 59080: a2 = a1 >> 0x30\n 59083: u8 [a0 + 0x6] = a2\n 59086: a2 = a1 >> 0x28\n 59089: u8 [a0 + 0x5] = a2\n 59092: a2 = a1 >> 0x20\n 59095: u8 [a0 + 0x4] = a2\n 59098: a2 = a1 >> 0x18\n 59101: u8 [a0 + 0x3] = a2\n 59104: a2 = a1 >> 0x10\n 59107: u8 [a0 + 0x2] = a2\n 59110: a1 = a1 >> 0x8\n 59113: u8 [a0 + 0x1] = a1\n 59116: u64 [sp + 648] = 0\n 59120: u64 [sp + 640] = 0\n 59124: u64 [sp + 624] = 0x40\n 59129: a0 = sp + 0x290\n 59133: a1 = sp + 0x270\n 59137: u64 [sp + 632] = 0\n 59141: ra = 718, jump @56\n      : @896 [@dyn 359] (gas: 15)\n 59148: a1 = u64 [sp + 0x2a8]\n 59152: a2 = u64 [sp + 0x2a0]\n 59156: a0 = u64 [sp + 0x298]\n 59160: s1 = u64 [sp + 0x290]\n 59164: u64 [sp + 0x28] = a0\n 59167: u64 [sp + 0x30] = a1\n 59170: a0 = a0 | a1\n 59173: a1 = s1 | a2\n 59176: a1 = a1 | a0\n 59179: a1 = a1 >> 0x20\n 59182: u64 [sp + 0x38] = a2\n 59185: a0 = a0 | a2\n 59188: a0 = a0 << 0x20\n 59191: a0 = a0 | a1\n 59194: jump @898 if a0 == 0\n      : @897 (gas: 1)\n 59197: jump @961\n      : @898 (gas: 4)\n 59200: i32 a0 = s1 + 0\n 59202: a1 = 0x20\n 59205: u64 [sp + 0x20] = a0\n 59208: ra = 720, jump @0\n      : @899 [@dyn 360] (gas: 42)\n 59215: u8 [a0 + 31] = 0x9\n 59219: a1 = u64 [sp + 0x30]\n 59222: a2 = u64 [sp + 0x38]\n 59225: a2 = a2 | a1\n 59228: a1 = 0xffffffe0\n 59238: u64 [sp + 0x18] = s1\n 59241: a1 = s1 <u a1\n 59244: s1 = u64 [sp + 0x28]\n 59247: a1 = 0 if s1 != 0\n 59249: a1 = 0 if a2 != 0\n 59251: u8 [a0 + 30] = 0\n 59254: u8 [a0 + 29] = 0\n 59257: u8 [a0 + 28] = 0\n 59260: u8 [a0 + 27] = 0\n 59263: u8 [a0 + 26] = 0\n 59266: u8 [a0 + 25] = 0\n 59269: u8 [a0 + 24] = 0\n 59272: u8 [a0 + 23] = 0\n 59275: u8 [a0 + 22] = 0\n 59278: u8 [a0 + 21] = 0\n 59281: u8 [a0 + 20] = 0\n 59284: u8 [a0 + 19] = 0\n 59287: u8 [a0 + 18] = 0\n 59290: u8 [a0 + 17] = 0\n 59293: u8 [a0 + 16] = 0\n 59296: u8 [a0 + 15] = 0\n 59299: u8 [a0 + 14] = 0\n 59302: u8 [a0 + 13] = 0\n 59305: u8 [a0 + 12] = 0\n 59308: u8 [a0 + 11] = 0\n 59311: u8 [a0 + 10] = 0\n 59314: u8 [a0 + 9] = 0\n 59317: u8 [a0 + 8] = 0\n 59320: u8 [a0 + 7] = 0\n 59323: u8 [a0 + 6] = 0\n 59326: u8 [a0 + 5] = 0\n 59329: u8 [a0 + 4] = 0\n 59332: u8 [a0 + 3] = 0\n 59335: u8 [a0 + 2] = 0\n 59338: u8 [a0 + 1] = 0\n 59341: u8 [a0 + 0] = 0\n 59343: jump @901 if a1 != 0\n      : @900 (gas: 1)\n 59346: jump @961\n      : @901 (gas: 4)\n 59349: a0 = u64 [sp + 0x20]\n 59352: i32 a0 = a0 + 0x20\n 59355: a1 = 0x20\n 59358: ra = 722, jump @0\n      : @902 [@dyn 361] (gas: 40)\n 59365: u8 [a0 + 31] = 0\n 59368: u8 [a0 + 30] = 0\n 59371: u8 [a0 + 29] = 0\n 59374: u8 [a0 + 28] = 0\n 59377: u8 [a0 + 27] = 0\n 59380: u8 [a0 + 26] = 0\n 59383: u8 [a0 + 25] = 0\n 59386: u8 [a0 + 24] = 0\n 59389: u8 [a0 + 23] = 0\n 59392: u8 [a0 + 22] = 0\n 59395: u8 [a0 + 21] = 0\n 59398: u8 [a0 + 20] = 0\n 59401: u8 [a0 + 19] = 0\n 59404: u8 [a0 + 18] = 0\n 59407: u8 [a0 + 17] = 0\n 59410: u8 [a0 + 16] = 0\n 59413: u8 [a0 + 15] = 0\n 59416: u8 [a0 + 14] = 0\n 59419: u8 [a0 + 13] = 0\n 59422: u8 [a0 + 12] = 0\n 59425: u8 [a0 + 11] = 0\n 59428: u8 [a0 + 10] = 0\n 59431: u8 [a0 + 8] = 0x73\n 59435: u8 [a0 + 7] = 0x75\n 59439: u8 [a0 + 6] = 0x6f\n 59443: u8 [a0 + 5] = 0x6c\n 59447: u8 [a0 + 4] = 0x65\n 59451: u8 [a0 + 3] = 0x76\n 59455: u8 [a0 + 2] = 0x72\n 59459: u8 [a0 + 1] = 0x61\n 59463: u8 [a0 + 0] = 0x6d\n 59466: a1 = 0xfffff7a0\n 59476: a2 = u64 [sp + 0x68]\n 59479: a1 = a2 <u a1\n 59482: a2 = u64 [sp + 0x60]\n 59485: a1 = 0 if a2 != 0\n 59487: a2 = u64 [sp + 0x58]\n 59490: a1 = 0 if a2 != 0\n 59492: u8 [a0 + 9] = 0\n 59495: jump @904 if a1 != 0\n      : @903 (gas: 1)\n 59498: jump @961\n      : @904 (gas: 4)\n 59501: a0 = u64 [sp + 0x50]\n 59504: i32 a0 = a0 + 0x60\n 59507: a1 = 0x20\n 59510: ra = 724, jump @0\n      : @905 [@dyn 362] (gas: 74)\n 59517: a1 = u64 [sp + 0x30]\n 59520: a1 = reverse a1\n 59522: a2 = u64 [sp + 0x38]\n 59525: a2 = reverse a2\n 59527: a3 = reverse s1\n 59529: a4 = u64 [sp + 0x18]\n 59532: a4 = reverse a4\n 59534: a5 = a4 >> 0x38\n 59537: u8 [a0 + 0x1f] = a5\n 59540: a5 = a4 >> 0x30\n 59543: u8 [a0 + 0x1e] = a5\n 59546: a5 = a4 >> 0x28\n 59549: u8 [a0 + 0x1d] = a5\n 59552: a5 = a4 >> 0x20\n 59555: u8 [a0 + 0x1c] = a5\n 59558: a5 = a4 >> 0x18\n 59561: u8 [a0 + 0x1b] = a5\n 59564: a5 = a4 >> 0x10\n 59567: u8 [a0 + 0x1a] = a5\n 59570: a5 = a4 >> 0x8\n 59573: u8 [a0 + 0x19] = a5\n 59576: u8 [a0 + 0x18] = a4\n 59579: a4 = a3 >> 0x38\n 59582: u8 [a0 + 0x17] = a4\n 59585: a4 = a3 >> 0x30\n 59588: u8 [a0 + 0x16] = a4\n 59591: a4 = a3 >> 0x28\n 59594: u8 [a0 + 0x15] = a4\n 59597: a4 = a3 >> 0x20\n 59600: u8 [a0 + 0x14] = a4\n 59603: a4 = a3 >> 0x18\n 59606: u8 [a0 + 0x13] = a4\n 59609: a4 = a3 >> 0x10\n 59612: u8 [a0 + 0x12] = a4\n 59615: a4 = a3 >> 0x8\n 59618: u8 [a0 + 0x11] = a4\n 59621: u8 [a0 + 0x10] = a3\n 59624: u8 [a0 + 0x8] = a2\n 59627: a3 = a2 >> 0x38\n 59630: u8 [a0 + 0xf] = a3\n 59633: a3 = a2 >> 0x30\n 59636: u8 [a0 + 0xe] = a3\n 59639: a3 = a2 >> 0x28\n 59642: u8 [a0 + 0xd] = a3\n 59645: a3 = a2 >> 0x20\n 59648: u8 [a0 + 0xc] = a3\n 59651: a3 = a2 >> 0x18\n 59654: u8 [a0 + 0xb] = a3\n 59657: a3 = a2 >> 0x10\n 59660: u8 [a0 + 0xa] = a3\n 59663: a2 = a2 >> 0x8\n 59666: u8 [a0 + 0x9] = a2\n 59669: u8 [a0] = a1\n 59671: a2 = a1 >> 0x38\n 59674: u8 [a0 + 0x7] = a2\n 59677: a2 = a1 >> 0x30\n 59680: u8 [a0 + 0x6] = a2\n 59683: a2 = a1 >> 0x28\n 59686: u8 [a0 + 0x5] = a2\n 59689: a2 = a1 >> 0x20\n 59692: u8 [a0 + 0x4] = a2\n 59695: a2 = a1 >> 0x18\n 59698: u8 [a0 + 0x3] = a2\n 59701: a2 = a1 >> 0x10\n 59704: u8 [a0 + 0x2] = a2\n 59707: a1 = a1 >> 0x8\n 59710: u8 [a0 + 0x1] = a1\n 59713: u64 [sp + 584] = 0\n 59717: u64 [sp + 576] = 0\n 59721: u64 [sp + 560] = 0x40\n 59726: a0 = sp + 0x250\n 59730: a1 = sp + 0x230\n 59734: u64 [sp + 568] = 0\n 59738: ra = 726, jump @56\n      : @906 [@dyn 363] (gas: 15)\n 59745: a1 = u64 [sp + 0x268]\n 59749: a2 = u64 [sp + 0x260]\n 59753: a0 = u64 [sp + 0x258]\n 59757: s1 = u64 [sp + 0x250]\n 59761: u64 [sp + 0x28] = a0\n 59764: u64 [sp + 0x30] = a1\n 59767: a0 = a0 | a1\n 59770: a1 = s1 | a2\n 59773: a1 = a1 | a0\n 59776: a1 = a1 >> 0x20\n 59779: u64 [sp + 0x38] = a2\n 59782: a0 = a0 | a2\n 59785: a0 = a0 << 0x20\n 59788: a0 = a0 | a1\n 59791: jump @908 if a0 == 0\n      : @907 (gas: 1)\n 59794: jump @961\n      : @908 (gas: 4)\n 59797: i32 a0 = s1 + 0\n 59799: a1 = 0x20\n 59802: u64 [sp + 0x20] = a0\n 59805: ra = 728, jump @0\n      : @909 [@dyn 364] (gas: 42)\n 59812: u8 [a0 + 31] = 0x6\n 59816: a1 = u64 [sp + 0x30]\n 59819: a2 = u64 [sp + 0x38]\n 59822: a2 = a2 | a1\n 59825: a1 = 0xffffffe0\n 59835: u64 [sp + 0x18] = s1\n 59838: a1 = s1 <u a1\n 59841: s1 = u64 [sp + 0x28]\n 59844: a1 = 0 if s1 != 0\n 59846: a1 = 0 if a2 != 0\n 59848: u8 [a0 + 30] = 0\n 59851: u8 [a0 + 29] = 0\n 59854: u8 [a0 + 28] = 0\n 59857: u8 [a0 + 27] = 0\n 59860: u8 [a0 + 26] = 0\n 59863: u8 [a0 + 25] = 0\n 59866: u8 [a0 + 24] = 0\n 59869: u8 [a0 + 23] = 0\n 59872: u8 [a0 + 22] = 0\n 59875: u8 [a0 + 21] = 0\n 59878: u8 [a0 + 20] = 0\n 59881: u8 [a0 + 19] = 0\n 59884: u8 [a0 + 18] = 0\n 59887: u8 [a0 + 17] = 0\n 59890: u8 [a0 + 16] = 0\n 59893: u8 [a0 + 15] = 0\n 59896: u8 [a0 + 14] = 0\n 59899: u8 [a0 + 13] = 0\n 59902: u8 [a0 + 12] = 0\n 59905: u8 [a0 + 11] = 0\n 59908: u8 [a0 + 10] = 0\n 59911: u8 [a0 + 9] = 0\n 59914: u8 [a0 + 8] = 0\n 59917: u8 [a0 + 7] = 0\n 59920: u8 [a0 + 6] = 0\n 59923: u8 [a0 + 5] = 0\n 59926: u8 [a0 + 4] = 0\n 59929: u8 [a0 + 3] = 0\n 59932: u8 [a0 + 2] = 0\n 59935: u8 [a0 + 1] = 0\n 59938: u8 [a0 + 0] = 0\n 59940: jump @911 if a1 != 0\n      : @910 (gas: 1)\n 59943: jump @961\n      : @911 (gas: 4)\n 59946: a0 = u64 [sp + 0x20]\n 59949: i32 a0 = a0 + 0x20\n 59952: a1 = 0x20\n 59955: ra = 730, jump @0\n      : @912 [@dyn 365] (gas: 40)\n 59962: u8 [a0 + 31] = 0\n 59965: u8 [a0 + 30] = 0\n 59968: u8 [a0 + 29] = 0\n 59971: u8 [a0 + 28] = 0\n 59974: u8 [a0 + 27] = 0\n 59977: u8 [a0 + 26] = 0\n 59980: u8 [a0 + 25] = 0\n 59983: u8 [a0 + 24] = 0\n 59986: u8 [a0 + 23] = 0\n 59989: u8 [a0 + 22] = 0\n 59992: u8 [a0 + 21] = 0\n 59995: u8 [a0 + 20] = 0\n 59998: u8 [a0 + 19] = 0\n 60001: u8 [a0 + 18] = 0\n 60004: u8 [a0 + 17] = 0\n 60007: u8 [a0 + 16] = 0\n 60010: u8 [a0 + 15] = 0\n 60013: u8 [a0 + 14] = 0\n 60016: u8 [a0 + 13] = 0\n 60019: u8 [a0 + 12] = 0\n 60022: u8 [a0 + 11] = 0\n 60025: u8 [a0 + 10] = 0\n 60028: u8 [a0 + 9] = 0\n 60031: u8 [a0 + 8] = 0\n 60034: u8 [a0 + 7] = 0\n 60037: u8 [a0 + 5] = 0x79\n 60041: u8 [a0 + 4] = 0x74\n 60045: u8 [a0 + 3] = 0x68\n 60049: u8 [a0 + 2] = 0x67\n 60053: u8 [a0 + 1] = 0x69\n 60057: u8 [a0 + 0] = 0x6d\n 60060: a1 = 0xfffff780\n 60070: a2 = u64 [sp + 0x68]\n 60073: a1 = a2 <u a1\n 60076: a2 = u64 [sp + 0x60]\n 60079: a1 = 0 if a2 != 0\n 60081: a2 = u64 [sp + 0x58]\n 60084: a1 = 0 if a2 != 0\n 60086: u8 [a0 + 6] = 0\n 60089: jump @914 if a1 != 0\n      : @913 (gas: 1)\n 60092: jump @961\n      : @914 (gas: 4)\n 60095: a0 = u64 [sp + 0x50]\n 60098: i32 a0 = a0 + 0x80\n 60102: a1 = 0x20\n 60105: ra = 732, jump @0\n      : @915 [@dyn 366] (gas: 74)\n 60112: a1 = u64 [sp + 0x30]\n 60115: a1 = reverse a1\n 60117: a2 = u64 [sp + 0x38]\n 60120: a2 = reverse a2\n 60122: a3 = reverse s1\n 60124: a4 = u64 [sp + 0x18]\n 60127: a4 = reverse a4\n 60129: a5 = a4 >> 0x38\n 60132: u8 [a0 + 0x1f] = a5\n 60135: a5 = a4 >> 0x30\n 60138: u8 [a0 + 0x1e] = a5\n 60141: a5 = a4 >> 0x28\n 60144: u8 [a0 + 0x1d] = a5\n 60147: a5 = a4 >> 0x20\n 60150: u8 [a0 + 0x1c] = a5\n 60153: a5 = a4 >> 0x18\n 60156: u8 [a0 + 0x1b] = a5\n 60159: a5 = a4 >> 0x10\n 60162: u8 [a0 + 0x1a] = a5\n 60165: a5 = a4 >> 0x8\n 60168: u8 [a0 + 0x19] = a5\n 60171: u8 [a0 + 0x18] = a4\n 60174: a4 = a3 >> 0x38\n 60177: u8 [a0 + 0x17] = a4\n 60180: a4 = a3 >> 0x30\n 60183: u8 [a0 + 0x16] = a4\n 60186: a4 = a3 >> 0x28\n 60189: u8 [a0 + 0x15] = a4\n 60192: a4 = a3 >> 0x20\n 60195: u8 [a0 + 0x14] = a4\n 60198: a4 = a3 >> 0x18\n 60201: u8 [a0 + 0x13] = a4\n 60204: a4 = a3 >> 0x10\n 60207: u8 [a0 + 0x12] = a4\n 60210: a4 = a3 >> 0x8\n 60213: u8 [a0 + 0x11] = a4\n 60216: u8 [a0 + 0x10] = a3\n 60219: u8 [a0 + 0x8] = a2\n 60222: a3 = a2 >> 0x38\n 60225: u8 [a0 + 0xf] = a3\n 60228: a3 = a2 >> 0x30\n 60231: u8 [a0 + 0xe] = a3\n 60234: a3 = a2 >> 0x28\n 60237: u8 [a0 + 0xd] = a3\n 60240: a3 = a2 >> 0x20\n 60243: u8 [a0 + 0xc] = a3\n 60246: a3 = a2 >> 0x18\n 60249: u8 [a0 + 0xb] = a3\n 60252: a3 = a2 >> 0x10\n 60255: u8 [a0 + 0xa] = a3\n 60258: a2 = a2 >> 0x8\n 60261: u8 [a0 + 0x9] = a2\n 60264: u8 [a0] = a1\n 60266: a2 = a1 >> 0x38\n 60269: u8 [a0 + 0x7] = a2\n 60272: a2 = a1 >> 0x30\n 60275: u8 [a0 + 0x6] = a2\n 60278: a2 = a1 >> 0x28\n 60281: u8 [a0 + 0x5] = a2\n 60284: a2 = a1 >> 0x20\n 60287: u8 [a0 + 0x4] = a2\n 60290: a2 = a1 >> 0x18\n 60293: u8 [a0 + 0x3] = a2\n 60296: a2 = a1 >> 0x10\n 60299: u8 [a0 + 0x2] = a2\n 60302: a1 = a1 >> 0x8\n 60305: u8 [a0 + 0x1] = a1\n 60308: u64 [sp + 520] = 0\n 60312: u64 [sp + 512] = 0\n 60316: u64 [sp + 496] = 0x40\n 60321: a0 = sp + 0x210\n 60325: a1 = sp + 0x1f0\n 60329: u64 [sp + 504] = 0\n 60333: ra = 734, jump @56\n      : @916 [@dyn 367] (gas: 15)\n 60340: a1 = u64 [sp + 0x228]\n 60344: a2 = u64 [sp + 0x220]\n 60348: a0 = u64 [sp + 0x218]\n 60352: s1 = u64 [sp + 0x210]\n 60356: u64 [sp + 0x28] = a0\n 60359: u64 [sp + 0x30] = a1\n 60362: a0 = a0 | a1\n 60365: a1 = s1 | a2\n 60368: a1 = a1 | a0\n 60371: a1 = a1 >> 0x20\n 60374: u64 [sp + 0x38] = a2\n 60377: a0 = a0 | a2\n 60380: a0 = a0 << 0x20\n 60383: a0 = a0 | a1\n 60386: jump @918 if a0 == 0\n      : @917 (gas: 1)\n 60389: jump @961\n      : @918 (gas: 4)\n 60392: i32 a0 = s1 + 0\n 60394: a1 = 0x20\n 60397: u64 [sp + 0x20] = a0\n 60400: ra = 736, jump @0\n      : @919 [@dyn 368] (gas: 42)\n 60407: u8 [a0 + 31] = 0xa\n 60411: a1 = u64 [sp + 0x30]\n 60414: a2 = u64 [sp + 0x38]\n 60417: a2 = a2 | a1\n 60420: a1 = 0xffffffe0\n 60430: u64 [sp + 0x18] = s1\n 60433: a1 = s1 <u a1\n 60436: s1 = u64 [sp + 0x28]\n 60439: a1 = 0 if s1 != 0\n 60441: a1 = 0 if a2 != 0\n 60443: u8 [a0 + 30] = 0\n 60446: u8 [a0 + 29] = 0\n 60449: u8 [a0 + 28] = 0\n 60452: u8 [a0 + 27] = 0\n 60455: u8 [a0 + 26] = 0\n 60458: u8 [a0 + 25] = 0\n 60461: u8 [a0 + 24] = 0\n 60464: u8 [a0 + 23] = 0\n 60467: u8 [a0 + 22] = 0\n 60470: u8 [a0 + 21] = 0\n 60473: u8 [a0 + 20] = 0\n 60476: u8 [a0 + 19] = 0\n 60479: u8 [a0 + 18] = 0\n 60482: u8 [a0 + 17] = 0\n 60485: u8 [a0 + 16] = 0\n 60488: u8 [a0 + 15] = 0\n 60491: u8 [a0 + 14] = 0\n 60494: u8 [a0 + 13] = 0\n 60497: u8 [a0 + 12] = 0\n 60500: u8 [a0 + 11] = 0\n 60503: u8 [a0 + 10] = 0\n 60506: u8 [a0 + 9] = 0\n 60509: u8 [a0 + 8] = 0\n 60512: u8 [a0 + 7] = 0\n 60515: u8 [a0 + 6] = 0\n 60518: u8 [a0 + 5] = 0\n 60521: u8 [a0 + 4] = 0\n 60524: u8 [a0 + 3] = 0\n 60527: u8 [a0 + 2] = 0\n 60530: u8 [a0 + 1] = 0\n 60533: u8 [a0 + 0] = 0\n 60535: jump @921 if a1 != 0\n      : @920 (gas: 1)\n 60538: jump @961\n      : @921 (gas: 4)\n 60541: a0 = u64 [sp + 0x20]\n 60544: i32 a0 = a0 + 0x20\n 60547: a1 = 0x20\n 60550: ra = 738, jump @0\n      : @922 [@dyn 369] (gas: 40)\n 60557: u8 [a0 + 31] = 0\n 60560: u8 [a0 + 30] = 0\n 60563: u8 [a0 + 29] = 0\n 60566: u8 [a0 + 28] = 0\n 60569: u8 [a0 + 27] = 0\n 60572: u8 [a0 + 26] = 0\n 60575: u8 [a0 + 25] = 0\n 60578: u8 [a0 + 24] = 0\n 60581: u8 [a0 + 23] = 0\n 60584: u8 [a0 + 22] = 0\n 60587: u8 [a0 + 21] = 0\n 60590: u8 [a0 + 20] = 0\n 60593: u8 [a0 + 19] = 0\n 60596: u8 [a0 + 18] = 0\n 60599: u8 [a0 + 17] = 0\n 60602: u8 [a0 + 16] = 0\n 60605: u8 [a0 + 15] = 0\n 60608: u8 [a0 + 14] = 0\n 60611: u8 [a0 + 13] = 0\n 60614: u8 [a0 + 12] = 0\n 60617: u8 [a0 + 11] = 0\n 60620: u8 [a0 + 10] = 0\n 60623: u8 [a0 + 9] = 0x73\n 60627: u8 [a0 + 8] = 0x75\n 60631: u8 [a0 + 7] = 0x6f\n 60635: u8 [a0 + 6] = 0x69\n 60639: u8 [a0 + 5] = 0x72\n 60643: u8 [a0 + 4] = 0x65\n 60647: u8 [a0 + 3] = 0x74\n 60651: u8 [a0 + 2] = 0x73\n 60655: u8 [a0 + 1] = 0x79\n 60659: a2 = 0xfffff760\n 60669: a3 = u64 [sp + 0x68]\n 60672: a2 = a3 <u a2\n 60675: a3 = u64 [sp + 0x60]\n 60678: a2 = 0 if a3 != 0\n 60680: a3 = u64 [sp + 0x58]\n 60683: a2 = 0 if a3 != 0\n 60685: u8 [a0 + 0] = 0x6d\n 60688: jump @961 if a2 == 0\n      : @923 (gas: 4)\n 60692: a0 = u64 [sp + 0x50]\n 60695: i32 a0 = a0 + 0xa0\n 60699: a1 = 0x20\n 60702: ra = 740, jump @0\n      : @924 [@dyn 370] (gas: 74)\n 60709: a1 = u64 [sp + 0x30]\n 60712: a1 = reverse a1\n 60714: a2 = u64 [sp + 0x38]\n 60717: a2 = reverse a2\n 60719: a3 = reverse s1\n 60721: a4 = u64 [sp + 0x18]\n 60724: a4 = reverse a4\n 60726: a5 = a4 >> 0x38\n 60729: u8 [a0 + 0x1f] = a5\n 60732: a5 = a4 >> 0x30\n 60735: u8 [a0 + 0x1e] = a5\n 60738: a5 = a4 >> 0x28\n 60741: u8 [a0 + 0x1d] = a5\n 60744: a5 = a4 >> 0x20\n 60747: u8 [a0 + 0x1c] = a5\n 60750: a5 = a4 >> 0x18\n 60753: u8 [a0 + 0x1b] = a5\n 60756: a5 = a4 >> 0x10\n 60759: u8 [a0 + 0x1a] = a5\n 60762: a5 = a4 >> 0x8\n 60765: u8 [a0 + 0x19] = a5\n 60768: u8 [a0 + 0x18] = a4\n 60771: a4 = a3 >> 0x38\n 60774: u8 [a0 + 0x17] = a4\n 60777: a4 = a3 >> 0x30\n 60780: u8 [a0 + 0x16] = a4\n 60783: a4 = a3 >> 0x28\n 60786: u8 [a0 + 0x15] = a4\n 60789: a4 = a3 >> 0x20\n 60792: u8 [a0 + 0x14] = a4\n 60795: a4 = a3 >> 0x18\n 60798: u8 [a0 + 0x13] = a4\n 60801: a4 = a3 >> 0x10\n 60804: u8 [a0 + 0x12] = a4\n 60807: a4 = a3 >> 0x8\n 60810: u8 [a0 + 0x11] = a4\n 60813: u8 [a0 + 0x10] = a3\n 60816: u8 [a0 + 0x8] = a2\n 60819: a3 = a2 >> 0x38\n 60822: u8 [a0 + 0xf] = a3\n 60825: a3 = a2 >> 0x30\n 60828: u8 [a0 + 0xe] = a3\n 60831: a3 = a2 >> 0x28\n 60834: u8 [a0 + 0xd] = a3\n 60837: a3 = a2 >> 0x20\n 60840: u8 [a0 + 0xc] = a3\n 60843: a3 = a2 >> 0x18\n 60846: u8 [a0 + 0xb] = a3\n 60849: a3 = a2 >> 0x10\n 60852: u8 [a0 + 0xa] = a3\n 60855: a2 = a2 >> 0x8\n 60858: u8 [a0 + 0x9] = a2\n 60861: u8 [a0] = a1\n 60863: a2 = a1 >> 0x38\n 60866: u8 [a0 + 0x7] = a2\n 60869: a2 = a1 >> 0x30\n 60872: u8 [a0 + 0x6] = a2\n 60875: a2 = a1 >> 0x28\n 60878: u8 [a0 + 0x5] = a2\n 60881: a2 = a1 >> 0x20\n 60884: u8 [a0 + 0x4] = a2\n 60887: a2 = a1 >> 0x18\n 60890: u8 [a0 + 0x3] = a2\n 60893: a2 = a1 >> 0x10\n 60896: u8 [a0 + 0x2] = a2\n 60899: a1 = a1 >> 0x8\n 60902: u8 [a0 + 0x1] = a1\n 60905: u64 [sp + 456] = 0\n 60909: u64 [sp + 448] = 0\n 60913: u64 [sp + 432] = 0x40\n 60918: a0 = sp + 0x1d0\n 60922: a1 = sp + 0x1b0\n 60926: u64 [sp + 440] = 0\n 60930: ra = 742, jump @56\n      : @925 [@dyn 371] (gas: 15)\n 60937: a1 = u64 [sp + 0x1e8]\n 60941: a2 = u64 [sp + 0x1e0]\n 60945: a0 = u64 [sp + 0x1d8]\n 60949: s1 = u64 [sp + 0x1d0]\n 60953: u64 [sp + 0x28] = a0\n 60956: u64 [sp + 0x30] = a1\n 60959: a0 = a0 | a1\n 60962: a1 = s1 | a2\n 60965: a1 = a1 | a0\n 60968: a1 = a1 >> 0x20\n 60971: u64 [sp + 0x38] = a2\n 60974: a0 = a0 | a2\n 60977: a0 = a0 << 0x20\n 60980: a0 = a0 | a1\n 60983: jump @961 if a0 != 0\n      : @926 (gas: 4)\n 60987: i32 a0 = s1 + 0\n 60989: a1 = 0x20\n 60992: u64 [sp + 0x20] = a0\n 60995: ra = 744, jump @0\n      : @927 [@dyn 372] (gas: 42)\n 61002: u8 [a0 + 31] = 0x4\n 61006: a1 = u64 [sp + 0x30]\n 61009: a2 = u64 [sp + 0x38]\n 61012: a2 = a2 | a1\n 61015: a1 = 0xffffffe0\n 61025: u64 [sp + 0x18] = s1\n 61028: a1 = s1 <u a1\n 61031: s1 = u64 [sp + 0x28]\n 61034: a1 = 0 if s1 != 0\n 61036: a1 = 0 if a2 != 0\n 61038: u8 [a0 + 30] = 0\n 61041: u8 [a0 + 29] = 0\n 61044: u8 [a0 + 28] = 0\n 61047: u8 [a0 + 27] = 0\n 61050: u8 [a0 + 26] = 0\n 61053: u8 [a0 + 25] = 0\n 61056: u8 [a0 + 24] = 0\n 61059: u8 [a0 + 23] = 0\n 61062: u8 [a0 + 22] = 0\n 61065: u8 [a0 + 21] = 0\n 61068: u8 [a0 + 20] = 0\n 61071: u8 [a0 + 19] = 0\n 61074: u8 [a0 + 18] = 0\n 61077: u8 [a0 + 17] = 0\n 61080: u8 [a0 + 16] = 0\n 61083: u8 [a0 + 15] = 0\n 61086: u8 [a0 + 14] = 0\n 61089: u8 [a0 + 13] = 0\n 61092: u8 [a0 + 12] = 0\n 61095: u8 [a0 + 11] = 0\n 61098: u8 [a0 + 10] = 0\n 61101: u8 [a0 + 9] = 0\n 61104: u8 [a0 + 8] = 0\n 61107: u8 [a0 + 7] = 0\n 61110: u8 [a0 + 6] = 0\n 61113: u8 [a0 + 5] = 0\n 61116: u8 [a0 + 4] = 0\n 61119: u8 [a0 + 3] = 0\n 61122: u8 [a0 + 2] = 0\n 61125: u8 [a0 + 1] = 0\n 61128: u8 [a0 + 0] = 0\n 61130: jump @961 if a1 == 0\n      : @928 (gas: 4)\n 61134: a0 = u64 [sp + 0x20]\n 61137: i32 a0 = a0 + 0x20\n 61140: a1 = 0x20\n 61143: ra = 746, jump @0\n      : @929 [@dyn 373] (gas: 40)\n 61150: u8 [a0 + 31] = 0\n 61153: u8 [a0 + 30] = 0\n 61156: u8 [a0 + 29] = 0\n 61159: u8 [a0 + 28] = 0\n 61162: u8 [a0 + 27] = 0\n 61165: u8 [a0 + 26] = 0\n 61168: u8 [a0 + 25] = 0\n 61171: u8 [a0 + 24] = 0\n 61174: u8 [a0 + 23] = 0\n 61177: u8 [a0 + 22] = 0\n 61180: u8 [a0 + 21] = 0\n 61183: u8 [a0 + 20] = 0\n 61186: u8 [a0 + 19] = 0\n 61189: u8 [a0 + 18] = 0\n 61192: u8 [a0 + 17] = 0\n 61195: u8 [a0 + 16] = 0\n 61198: u8 [a0 + 15] = 0\n 61201: u8 [a0 + 14] = 0\n 61204: u8 [a0 + 13] = 0\n 61207: u8 [a0 + 12] = 0\n 61210: u8 [a0 + 11] = 0\n 61213: u8 [a0 + 10] = 0\n 61216: u8 [a0 + 9] = 0\n 61219: u8 [a0 + 8] = 0\n 61222: u8 [a0 + 7] = 0\n 61225: u8 [a0 + 6] = 0\n 61228: u8 [a0 + 5] = 0\n 61231: u8 [a0 + 3] = 0x65\n 61235: u8 [a0 + 2] = 0x63\n 61239: u8 [a0 + 1] = 0x69\n 61243: u8 [a0 + 0] = 0x6e\n 61246: a1 = 0xfffff740\n 61256: a2 = u64 [sp + 0x68]\n 61259: a1 = a2 <u a1\n 61262: a2 = u64 [sp + 0x60]\n 61265: a1 = 0 if a2 != 0\n 61267: a2 = u64 [sp + 0x58]\n 61270: a1 = 0 if a2 != 0\n 61272: u8 [a0 + 4] = 0\n 61275: jump @961 if a1 == 0\n      : @930 (gas: 4)\n 61279: a0 = u64 [sp + 0x50]\n 61282: i32 a0 = a0 + 0xc0\n 61286: a1 = 0x20\n 61289: ra = 748, jump @0\n      : @931 [@dyn 374] (gas: 74)\n 61296: a1 = u64 [sp + 0x30]\n 61299: a1 = reverse a1\n 61301: a2 = u64 [sp + 0x38]\n 61304: a2 = reverse a2\n 61306: a3 = reverse s1\n 61308: a4 = u64 [sp + 0x18]\n 61311: a4 = reverse a4\n 61313: a5 = a4 >> 0x38\n 61316: u8 [a0 + 0x1f] = a5\n 61319: a5 = a4 >> 0x30\n 61322: u8 [a0 + 0x1e] = a5\n 61325: a5 = a4 >> 0x28\n 61328: u8 [a0 + 0x1d] = a5\n 61331: a5 = a4 >> 0x20\n 61334: u8 [a0 + 0x1c] = a5\n 61337: a5 = a4 >> 0x18\n 61340: u8 [a0 + 0x1b] = a5\n 61343: a5 = a4 >> 0x10\n 61346: u8 [a0 + 0x1a] = a5\n 61349: a5 = a4 >> 0x8\n 61352: u8 [a0 + 0x19] = a5\n 61355: u8 [a0 + 0x18] = a4\n 61358: a4 = a3 >> 0x38\n 61361: u8 [a0 + 0x17] = a4\n 61364: a4 = a3 >> 0x30\n 61367: u8 [a0 + 0x16] = a4\n 61370: a4 = a3 >> 0x28\n 61373: u8 [a0 + 0x15] = a4\n 61376: a4 = a3 >> 0x20\n 61379: u8 [a0 + 0x14] = a4\n 61382: a4 = a3 >> 0x18\n 61385: u8 [a0 + 0x13] = a4\n 61388: a4 = a3 >> 0x10\n 61391: u8 [a0 + 0x12] = a4\n 61394: a4 = a3 >> 0x8\n 61397: u8 [a0 + 0x11] = a4\n 61400: u8 [a0 + 0x10] = a3\n 61403: u8 [a0 + 0x8] = a2\n 61406: a3 = a2 >> 0x38\n 61409: u8 [a0 + 0xf] = a3\n 61412: a3 = a2 >> 0x30\n 61415: u8 [a0 + 0xe] = a3\n 61418: a3 = a2 >> 0x28\n 61421: u8 [a0 + 0xd] = a3\n 61424: a3 = a2 >> 0x20\n 61427: u8 [a0 + 0xc] = a3\n 61430: a3 = a2 >> 0x18\n 61433: u8 [a0 + 0xb] = a3\n 61436: a3 = a2 >> 0x10\n 61439: u8 [a0 + 0xa] = a3\n 61442: a2 = a2 >> 0x8\n 61445: u8 [a0 + 0x9] = a2\n 61448: u8 [a0] = a1\n 61450: a2 = a1 >> 0x38\n 61453: u8 [a0 + 0x7] = a2\n 61456: a2 = a1 >> 0x30\n 61459: u8 [a0 + 0x6] = a2\n 61462: a2 = a1 >> 0x28\n 61465: u8 [a0 + 0x5] = a2\n 61468: a2 = a1 >> 0x20\n 61471: u8 [a0 + 0x4] = a2\n 61474: a2 = a1 >> 0x18\n 61477: u8 [a0 + 0x3] = a2\n 61480: a2 = a1 >> 0x10\n 61483: u8 [a0 + 0x2] = a2\n 61486: a1 = a1 >> 0x8\n 61489: u8 [a0 + 0x1] = a1\n 61492: u64 [sp + 392] = 0\n 61496: u64 [sp + 384] = 0\n 61500: u64 [sp + 368] = 0x40\n 61505: a0 = sp + 0x190\n 61509: a1 = sp + 0x170\n 61513: u64 [sp + 376] = 0\n 61517: ra = 750, jump @56\n      : @932 [@dyn 375] (gas: 15)\n 61524: a1 = u64 [sp + 0x1a8]\n 61528: a2 = u64 [sp + 0x1a0]\n 61532: a0 = u64 [sp + 0x198]\n 61536: s1 = u64 [sp + 0x190]\n 61540: u64 [sp + 0x28] = a0\n 61543: u64 [sp + 0x30] = a1\n 61546: a0 = a0 | a1\n 61549: a1 = s1 | a2\n 61552: a1 = a1 | a0\n 61555: a1 = a1 >> 0x20\n 61558: u64 [sp + 0x38] = a2\n 61561: a0 = a0 | a2\n 61564: a0 = a0 << 0x20\n 61567: a0 = a0 | a1\n 61570: jump @961 if a0 != 0\n      : @933 (gas: 4)\n 61574: i32 a0 = s1 + 0\n 61576: a1 = 0x20\n 61579: u64 [sp + 0x20] = a0\n 61582: ra = 752, jump @0\n      : @934 [@dyn 376] (gas: 42)\n 61589: u8 [a0 + 31] = 0xb\n 61593: a1 = u64 [sp + 0x30]\n 61596: a2 = u64 [sp + 0x38]\n 61599: a2 = a2 | a1\n 61602: a1 = 0xffffffe0\n 61612: u64 [sp + 0x18] = s1\n 61615: a1 = s1 <u a1\n 61618: s1 = u64 [sp + 0x28]\n 61621: a1 = 0 if s1 != 0\n 61623: a1 = 0 if a2 != 0\n 61625: u8 [a0 + 30] = 0\n 61628: u8 [a0 + 29] = 0\n 61631: u8 [a0 + 28] = 0\n 61634: u8 [a0 + 27] = 0\n 61637: u8 [a0 + 26] = 0\n 61640: u8 [a0 + 25] = 0\n 61643: u8 [a0 + 24] = 0\n 61646: u8 [a0 + 23] = 0\n 61649: u8 [a0 + 22] = 0\n 61652: u8 [a0 + 21] = 0\n 61655: u8 [a0 + 20] = 0\n 61658: u8 [a0 + 19] = 0\n 61661: u8 [a0 + 18] = 0\n 61664: u8 [a0 + 17] = 0\n 61667: u8 [a0 + 16] = 0\n 61670: u8 [a0 + 15] = 0\n 61673: u8 [a0 + 14] = 0\n 61676: u8 [a0 + 13] = 0\n 61679: u8 [a0 + 12] = 0\n 61682: u8 [a0 + 11] = 0\n 61685: u8 [a0 + 10] = 0\n 61688: u8 [a0 + 9] = 0\n 61691: u8 [a0 + 8] = 0\n 61694: u8 [a0 + 7] = 0\n 61697: u8 [a0 + 6] = 0\n 61700: u8 [a0 + 5] = 0\n 61703: u8 [a0 + 4] = 0\n 61706: u8 [a0 + 3] = 0\n 61709: u8 [a0 + 2] = 0\n 61712: u8 [a0 + 1] = 0\n 61715: u8 [a0 + 0] = 0\n 61717: jump @961 if a1 == 0\n      : @935 (gas: 4)\n 61721: a0 = u64 [sp + 0x20]\n 61724: i32 a0 = a0 + 0x20\n 61727: a1 = 0x20\n 61730: ra = 754, jump @0\n      : @936 [@dyn 377] (gas: 40)\n 61737: u8 [a0 + 31] = 0\n 61740: u8 [a0 + 30] = 0\n 61743: u8 [a0 + 29] = 0\n 61746: u8 [a0 + 28] = 0\n 61749: u8 [a0 + 27] = 0\n 61752: u8 [a0 + 26] = 0\n 61755: u8 [a0 + 25] = 0\n 61758: u8 [a0 + 24] = 0\n 61761: u8 [a0 + 23] = 0\n 61764: u8 [a0 + 22] = 0\n 61767: u8 [a0 + 21] = 0\n 61770: u8 [a0 + 20] = 0\n 61773: u8 [a0 + 19] = 0\n 61776: u8 [a0 + 18] = 0\n 61779: u8 [a0 + 17] = 0\n 61782: u8 [a0 + 16] = 0\n 61785: u8 [a0 + 15] = 0\n 61788: u8 [a0 + 14] = 0\n 61791: u8 [a0 + 13] = 0\n 61794: u8 [a0 + 12] = 0\n 61797: u8 [a0 + 11] = 0\n 61800: u8 [a0 + 10] = 0x67\n 61804: u8 [a0 + 9] = 0x6e\n 61808: u8 [a0 + 8] = 0x69\n 61812: u8 [a0 + 7] = 0x64\n 61816: u8 [a0 + 6] = 0x6e\n 61820: u8 [a0 + 5] = 0x61\n 61824: u8 [a0 + 4] = 0x74\n 61828: u8 [a0 + 3] = 0x73\n 61832: u8 [a0 + 2] = 0x74\n 61836: u8 [a0 + 1] = 0x75\n 61840: a2 = 0xfffff720\n 61850: a3 = u64 [sp + 0x68]\n 61853: a2 = a3 <u a2\n 61856: a3 = u64 [sp + 0x60]\n 61859: a2 = 0 if a3 != 0\n 61861: a3 = u64 [sp + 0x58]\n 61864: a2 = 0 if a3 != 0\n 61866: u8 [a0 + 0] = 0x6f\n 61869: jump @961 if a2 == 0\n      : @937 (gas: 4)\n 61873: a0 = u64 [sp + 0x50]\n 61876: i32 a0 = a0 + 0xe0\n 61880: a1 = 0x20\n 61883: ra = 756, jump @0\n      : @938 [@dyn 378] (gas: 74)\n 61890: a1 = u64 [sp + 0x30]\n 61893: a1 = reverse a1\n 61895: a2 = u64 [sp + 0x38]\n 61898: a2 = reverse a2\n 61900: a3 = reverse s1\n 61902: a4 = u64 [sp + 0x18]\n 61905: a4 = reverse a4\n 61907: a5 = a4 >> 0x38\n 61910: u8 [a0 + 0x1f] = a5\n 61913: a5 = a4 >> 0x30\n 61916: u8 [a0 + 0x1e] = a5\n 61919: a5 = a4 >> 0x28\n 61922: u8 [a0 + 0x1d] = a5\n 61925: a5 = a4 >> 0x20\n 61928: u8 [a0 + 0x1c] = a5\n 61931: a5 = a4 >> 0x18\n 61934: u8 [a0 + 0x1b] = a5\n 61937: a5 = a4 >> 0x10\n 61940: u8 [a0 + 0x1a] = a5\n 61943: a5 = a4 >> 0x8\n 61946: u8 [a0 + 0x19] = a5\n 61949: u8 [a0 + 0x18] = a4\n 61952: a4 = a3 >> 0x38\n 61955: u8 [a0 + 0x17] = a4\n 61958: a4 = a3 >> 0x30\n 61961: u8 [a0 + 0x16] = a4\n 61964: a4 = a3 >> 0x28\n 61967: u8 [a0 + 0x15] = a4\n 61970: a4 = a3 >> 0x20\n 61973: u8 [a0 + 0x14] = a4\n 61976: a4 = a3 >> 0x18\n 61979: u8 [a0 + 0x13] = a4\n 61982: a4 = a3 >> 0x10\n 61985: u8 [a0 + 0x12] = a4\n 61988: a4 = a3 >> 0x8\n 61991: u8 [a0 + 0x11] = a4\n 61994: u8 [a0 + 0x10] = a3\n 61997: u8 [a0 + 0x8] = a2\n 62000: a3 = a2 >> 0x38\n 62003: u8 [a0 + 0xf] = a3\n 62006: a3 = a2 >> 0x30\n 62009: u8 [a0 + 0xe] = a3\n 62012: a3 = a2 >> 0x28\n 62015: u8 [a0 + 0xd] = a3\n 62018: a3 = a2 >> 0x20\n 62021: u8 [a0 + 0xc] = a3\n 62024: a3 = a2 >> 0x18\n 62027: u8 [a0 + 0xb] = a3\n 62030: a3 = a2 >> 0x10\n 62033: u8 [a0 + 0xa] = a3\n 62036: a2 = a2 >> 0x8\n 62039: u8 [a0 + 0x9] = a2\n 62042: u8 [a0] = a1\n 62044: a2 = a1 >> 0x38\n 62047: u8 [a0 + 0x7] = a2\n 62050: a2 = a1 >> 0x30\n 62053: u8 [a0 + 0x6] = a2\n 62056: a2 = a1 >> 0x28\n 62059: u8 [a0 + 0x5] = a2\n 62062: a2 = a1 >> 0x20\n 62065: u8 [a0 + 0x4] = a2\n 62068: a2 = a1 >> 0x18\n 62071: u8 [a0 + 0x3] = a2\n 62074: a2 = a1 >> 0x10\n 62077: u8 [a0 + 0x2] = a2\n 62080: a1 = a1 >> 0x8\n 62083: u8 [a0 + 0x1] = a1\n 62086: u64 [sp + 328] = 0\n 62090: u64 [sp + 320] = 0\n 62094: u64 [sp + 304] = 0x40\n 62099: a0 = sp + 0x150\n 62103: a1 = sp + 0x130\n 62107: u64 [sp + 312] = 0\n 62111: ra = 758, jump @56\n      : @939 [@dyn 379] (gas: 15)\n 62118: a1 = u64 [sp + 0x168]\n 62122: a2 = u64 [sp + 0x160]\n 62126: a0 = u64 [sp + 0x158]\n 62130: s1 = u64 [sp + 0x150]\n 62134: u64 [sp + 0x28] = a0\n 62137: u64 [sp + 0x30] = a1\n 62140: a0 = a0 | a1\n 62143: a1 = s1 | a2\n 62146: a1 = a1 | a0\n 62149: a1 = a1 >> 0x20\n 62152: u64 [sp + 0x38] = a2\n 62155: a0 = a0 | a2\n 62158: a0 = a0 << 0x20\n 62161: a0 = a0 | a1\n 62164: jump @961 if a0 != 0\n      : @940 (gas: 4)\n 62168: i32 a0 = s1 + 0\n 62170: a1 = 0x20\n 62173: u64 [sp + 0x20] = a0\n 62176: ra = 760, jump @0\n      : @941 [@dyn 380] (gas: 42)\n 62183: u8 [a0 + 31] = 0xa\n 62187: a1 = u64 [sp + 0x30]\n 62190: a2 = u64 [sp + 0x38]\n 62193: a2 = a2 | a1\n 62196: a1 = 0xffffffe0\n 62206: u64 [sp + 0x18] = s1\n 62209: a1 = s1 <u a1\n 62212: s1 = u64 [sp + 0x28]\n 62215: a1 = 0 if s1 != 0\n 62217: a1 = 0 if a2 != 0\n 62219: u8 [a0 + 30] = 0\n 62222: u8 [a0 + 29] = 0\n 62225: u8 [a0 + 28] = 0\n 62228: u8 [a0 + 27] = 0\n 62231: u8 [a0 + 26] = 0\n 62234: u8 [a0 + 25] = 0\n 62237: u8 [a0 + 24] = 0\n 62240: u8 [a0 + 23] = 0\n 62243: u8 [a0 + 22] = 0\n 62246: u8 [a0 + 21] = 0\n 62249: u8 [a0 + 20] = 0\n 62252: u8 [a0 + 19] = 0\n 62255: u8 [a0 + 18] = 0\n 62258: u8 [a0 + 17] = 0\n 62261: u8 [a0 + 16] = 0\n 62264: u8 [a0 + 15] = 0\n 62267: u8 [a0 + 14] = 0\n 62270: u8 [a0 + 13] = 0\n 62273: u8 [a0 + 12] = 0\n 62276: u8 [a0 + 11] = 0\n 62279: u8 [a0 + 10] = 0\n 62282: u8 [a0 + 9] = 0\n 62285: u8 [a0 + 8] = 0\n 62288: u8 [a0 + 7] = 0\n 62291: u8 [a0 + 6] = 0\n 62294: u8 [a0 + 5] = 0\n 62297: u8 [a0 + 4] = 0\n 62300: u8 [a0 + 3] = 0\n 62303: u8 [a0 + 2] = 0\n 62306: u8 [a0 + 1] = 0\n 62309: u8 [a0 + 0] = 0\n 62311: jump @961 if a1 == 0\n      : @942 (gas: 4)\n 62315: a0 = u64 [sp + 0x20]\n 62318: i32 a0 = a0 + 0x20\n 62321: a1 = 0x20\n 62324: ra = 762, jump @0\n      : @943 [@dyn 381] (gas: 40)\n 62331: u8 [a0 + 31] = 0\n 62334: u8 [a0 + 30] = 0\n 62337: u8 [a0 + 29] = 0\n 62340: u8 [a0 + 28] = 0\n 62343: u8 [a0 + 27] = 0\n 62346: u8 [a0 + 26] = 0\n 62349: u8 [a0 + 25] = 0\n 62352: u8 [a0 + 24] = 0\n 62355: u8 [a0 + 23] = 0\n 62358: u8 [a0 + 22] = 0\n 62361: u8 [a0 + 21] = 0\n 62364: u8 [a0 + 20] = 0\n 62367: u8 [a0 + 19] = 0\n 62370: u8 [a0 + 18] = 0\n 62373: u8 [a0 + 17] = 0\n 62376: u8 [a0 + 16] = 0\n 62379: u8 [a0 + 15] = 0\n 62382: u8 [a0 + 14] = 0\n 62385: u8 [a0 + 13] = 0\n 62388: u8 [a0 + 12] = 0\n 62391: u8 [a0 + 11] = 0\n 62394: u8 [a0 + 10] = 0\n 62397: u8 [a0 + 9] = 0x65\n 62401: u8 [a0 + 8] = 0x74\n 62405: u8 [a0 + 7] = 0x61\n 62409: u8 [a0 + 6] = 0x6e\n 62413: u8 [a0 + 5] = 0x6f\n 62417: u8 [a0 + 4] = 0x69\n 62421: u8 [a0 + 3] = 0x73\n 62425: u8 [a0 + 2] = 0x73\n 62429: u8 [a0 + 1] = 0x61\n 62433: a2 = 0xfffff700\n 62443: a3 = u64 [sp + 0x68]\n 62446: a2 = a3 <u a2\n 62449: a3 = u64 [sp + 0x60]\n 62452: a2 = 0 if a3 != 0\n 62454: a3 = u64 [sp + 0x58]\n 62457: a2 = 0 if a3 != 0\n 62459: u8 [a0 + 0] = 0x70\n 62462: jump @961 if a2 == 0\n      : @944 (gas: 4)\n 62466: a0 = u64 [sp + 0x50]\n 62469: i32 a0 = a0 + 0x100\n 62473: a1 = 0x20\n 62476: ra = 764, jump @0\n      : @945 [@dyn 382] (gas: 74)\n 62483: a1 = u64 [sp + 0x30]\n 62486: a1 = reverse a1\n 62488: a2 = u64 [sp + 0x38]\n 62491: a2 = reverse a2\n 62493: a3 = reverse s1\n 62495: a4 = u64 [sp + 0x18]\n 62498: a4 = reverse a4\n 62500: a5 = a4 >> 0x38\n 62503: u8 [a0 + 0x1f] = a5\n 62506: a5 = a4 >> 0x30\n 62509: u8 [a0 + 0x1e] = a5\n 62512: a5 = a4 >> 0x28\n 62515: u8 [a0 + 0x1d] = a5\n 62518: a5 = a4 >> 0x20\n 62521: u8 [a0 + 0x1c] = a5\n 62524: a5 = a4 >> 0x18\n 62527: u8 [a0 + 0x1b] = a5\n 62530: a5 = a4 >> 0x10\n 62533: u8 [a0 + 0x1a] = a5\n 62536: a5 = a4 >> 0x8\n 62539: u8 [a0 + 0x19] = a5\n 62542: u8 [a0 + 0x18] = a4\n 62545: a4 = a3 >> 0x38\n 62548: u8 [a0 + 0x17] = a4\n 62551: a4 = a3 >> 0x30\n 62554: u8 [a0 + 0x16] = a4\n 62557: a4 = a3 >> 0x28\n 62560: u8 [a0 + 0x15] = a4\n 62563: a4 = a3 >> 0x20\n 62566: u8 [a0 + 0x14] = a4\n 62569: a4 = a3 >> 0x18\n 62572: u8 [a0 + 0x13] = a4\n 62575: a4 = a3 >> 0x10\n 62578: u8 [a0 + 0x12] = a4\n 62581: a4 = a3 >> 0x8\n 62584: u8 [a0 + 0x11] = a4\n 62587: u8 [a0 + 0x10] = a3\n 62590: u8 [a0 + 0x8] = a2\n 62593: a3 = a2 >> 0x38\n 62596: u8 [a0 + 0xf] = a3\n 62599: a3 = a2 >> 0x30\n 62602: u8 [a0 + 0xe] = a3\n 62605: a3 = a2 >> 0x28\n 62608: u8 [a0 + 0xd] = a3\n 62611: a3 = a2 >> 0x20\n 62614: u8 [a0 + 0xc] = a3\n 62617: a3 = a2 >> 0x18\n 62620: u8 [a0 + 0xb] = a3\n 62623: a3 = a2 >> 0x10\n 62626: u8 [a0 + 0xa] = a3\n 62629: a2 = a2 >> 0x8\n 62632: u8 [a0 + 0x9] = a2\n 62635: u8 [a0] = a1\n 62637: a2 = a1 >> 0x38\n 62640: u8 [a0 + 0x7] = a2\n 62643: a2 = a1 >> 0x30\n 62646: u8 [a0 + 0x6] = a2\n 62649: a2 = a1 >> 0x28\n 62652: u8 [a0 + 0x5] = a2\n 62655: a2 = a1 >> 0x20\n 62658: u8 [a0 + 0x4] = a2\n 62661: a2 = a1 >> 0x18\n 62664: u8 [a0 + 0x3] = a2\n 62667: a2 = a1 >> 0x10\n 62670: u8 [a0 + 0x2] = a2\n 62673: a1 = a1 >> 0x8\n 62676: u8 [a0 + 0x1] = a1\n 62679: u64 [sp + 264] = 0\n 62683: u64 [sp + 256] = 0\n 62687: u64 [sp + 240] = 0x40\n 62692: a0 = sp + 0x110\n 62696: a1 = sp + 0xf0\n 62700: u64 [sp + 248] = 0\n 62704: ra = 766, jump @56\n      : @946 [@dyn 383] (gas: 15)\n 62711: a1 = u64 [sp + 0x128]\n 62715: a2 = u64 [sp + 0x120]\n 62719: a0 = u64 [sp + 0x118]\n 62723: s1 = u64 [sp + 0x110]\n 62727: u64 [sp + 0x28] = a0\n 62730: u64 [sp + 0x30] = a1\n 62733: a0 = a0 | a1\n 62736: a1 = s1 | a2\n 62739: a1 = a1 | a0\n 62742: a1 = a1 >> 0x20\n 62745: u64 [sp + 0x38] = a2\n 62748: a0 = a0 | a2\n 62751: a0 = a0 << 0x20\n 62754: a0 = a0 | a1\n 62757: jump @961 if a0 != 0\n      : @947 (gas: 4)\n 62761: i32 a0 = s1 + 0\n 62763: a1 = 0x20\n 62766: u64 [sp + 0x20] = a0\n 62769: ra = 768, jump @0\n      : @948 [@dyn 384] (gas: 42)\n 62776: u8 [a0 + 31] = 0x8\n 62780: a1 = u64 [sp + 0x30]\n 62783: a2 = u64 [sp + 0x38]\n 62786: a2 = a2 | a1\n 62789: a1 = 0xffffffe0\n 62799: u64 [sp + 0x18] = s1\n 62802: a1 = s1 <u a1\n 62805: s1 = u64 [sp + 0x28]\n 62808: a1 = 0 if s1 != 0\n 62810: a1 = 0 if a2 != 0\n 62812: u8 [a0 + 30] = 0\n 62815: u8 [a0 + 29] = 0\n 62818: u8 [a0 + 28] = 0\n 62821: u8 [a0 + 27] = 0\n 62824: u8 [a0 + 26] = 0\n 62827: u8 [a0 + 25] = 0\n 62830: u8 [a0 + 24] = 0\n 62833: u8 [a0 + 23] = 0\n 62836: u8 [a0 + 22] = 0\n 62839: u8 [a0 + 21] = 0\n 62842: u8 [a0 + 20] = 0\n 62845: u8 [a0 + 19] = 0\n 62848: u8 [a0 + 18] = 0\n 62851: u8 [a0 + 17] = 0\n 62854: u8 [a0 + 16] = 0\n 62857: u8 [a0 + 15] = 0\n 62860: u8 [a0 + 14] = 0\n 62863: u8 [a0 + 13] = 0\n 62866: u8 [a0 + 12] = 0\n 62869: u8 [a0 + 11] = 0\n 62872: u8 [a0 + 10] = 0\n 62875: u8 [a0 + 9] = 0\n 62878: u8 [a0 + 8] = 0\n 62881: u8 [a0 + 7] = 0\n 62884: u8 [a0 + 6] = 0\n 62887: u8 [a0 + 5] = 0\n 62890: u8 [a0 + 4] = 0\n 62893: u8 [a0 + 3] = 0\n 62896: u8 [a0 + 2] = 0\n 62899: u8 [a0 + 1] = 0\n 62902: u8 [a0 + 0] = 0\n 62904: jump @961 if a1 == 0\n      : @949 (gas: 4)\n 62908: a0 = u64 [sp + 0x20]\n 62911: i32 a0 = a0 + 0x20\n 62914: a1 = 0x20\n 62917: ra = 770, jump @0\n      : @950 [@dyn 385] (gas: 40)\n 62924: u8 [a0 + 31] = 0\n 62927: u8 [a0 + 30] = 0\n 62930: u8 [a0 + 29] = 0\n 62933: u8 [a0 + 28] = 0\n 62936: u8 [a0 + 27] = 0\n 62939: u8 [a0 + 26] = 0\n 62942: u8 [a0 + 25] = 0\n 62945: u8 [a0 + 24] = 0\n 62948: u8 [a0 + 23] = 0\n 62951: u8 [a0 + 22] = 0\n 62954: u8 [a0 + 21] = 0\n 62957: u8 [a0 + 20] = 0\n 62960: u8 [a0 + 19] = 0\n 62963: u8 [a0 + 18] = 0\n 62966: u8 [a0 + 17] = 0\n 62969: u8 [a0 + 16] = 0\n 62972: u8 [a0 + 15] = 0\n 62975: u8 [a0 + 14] = 0\n 62978: u8 [a0 + 13] = 0\n 62981: u8 [a0 + 12] = 0\n 62984: u8 [a0 + 11] = 0\n 62987: u8 [a0 + 10] = 0\n 62990: u8 [a0 + 9] = 0\n 62993: u8 [a0 + 8] = 0\n 62996: u8 [a0 + 7] = 0x6c\n 63000: u8 [a0 + 6] = 0x75\n 63004: u8 [a0 + 5] = 0x66\n 63008: u8 [a0 + 4] = 0x65\n 63012: u8 [a0 + 3] = 0x63\n 63016: u8 [a0 + 2] = 0x61\n 63020: u8 [a0 + 1] = 0x65\n 63024: a2 = 0xfffff6e0\n 63034: a3 = u64 [sp + 0x68]\n 63037: a2 = a3 <u a2\n 63040: a3 = u64 [sp + 0x60]\n 63043: a2 = 0 if a3 != 0\n 63045: a3 = u64 [sp + 0x58]\n 63048: a2 = 0 if a3 != 0\n 63050: u8 [a0 + 0] = 0x70\n 63053: jump @961 if a2 == 0\n      : @951 (gas: 4)\n 63057: a0 = u64 [sp + 0x50]\n 63060: i32 a0 = a0 + 0x120\n 63064: a1 = 0x20\n 63067: ra = 772, jump @0\n      : @952 [@dyn 386] (gas: 74)\n 63074: a1 = u64 [sp + 0x30]\n 63077: a1 = reverse a1\n 63079: a2 = u64 [sp + 0x38]\n 63082: a2 = reverse a2\n 63084: a3 = reverse s1\n 63086: a4 = u64 [sp + 0x18]\n 63089: a4 = reverse a4\n 63091: a5 = a4 >> 0x38\n 63094: u8 [a0 + 0x1f] = a5\n 63097: a5 = a4 >> 0x30\n 63100: u8 [a0 + 0x1e] = a5\n 63103: a5 = a4 >> 0x28\n 63106: u8 [a0 + 0x1d] = a5\n 63109: a5 = a4 >> 0x20\n 63112: u8 [a0 + 0x1c] = a5\n 63115: a5 = a4 >> 0x18\n 63118: u8 [a0 + 0x1b] = a5\n 63121: a5 = a4 >> 0x10\n 63124: u8 [a0 + 0x1a] = a5\n 63127: a5 = a4 >> 0x8\n 63130: u8 [a0 + 0x19] = a5\n 63133: u8 [a0 + 0x18] = a4\n 63136: a4 = a3 >> 0x38\n 63139: u8 [a0 + 0x17] = a4\n 63142: a4 = a3 >> 0x30\n 63145: u8 [a0 + 0x16] = a4\n 63148: a4 = a3 >> 0x28\n 63151: u8 [a0 + 0x15] = a4\n 63154: a4 = a3 >> 0x20\n 63157: u8 [a0 + 0x14] = a4\n 63160: a4 = a3 >> 0x18\n 63163: u8 [a0 + 0x13] = a4\n 63166: a4 = a3 >> 0x10\n 63169: u8 [a0 + 0x12] = a4\n 63172: a4 = a3 >> 0x8\n 63175: u8 [a0 + 0x11] = a4\n 63178: u8 [a0 + 0x10] = a3\n 63181: u8 [a0 + 0x8] = a2\n 63184: a3 = a2 >> 0x38\n 63187: u8 [a0 + 0xf] = a3\n 63190: a3 = a2 >> 0x30\n 63193: u8 [a0 + 0xe] = a3\n 63196: a3 = a2 >> 0x28\n 63199: u8 [a0 + 0xd] = a3\n 63202: a3 = a2 >> 0x20\n 63205: u8 [a0 + 0xc] = a3\n 63208: a3 = a2 >> 0x18\n 63211: u8 [a0 + 0xb] = a3\n 63214: a3 = a2 >> 0x10\n 63217: u8 [a0 + 0xa] = a3\n 63220: a2 = a2 >> 0x8\n 63223: u8 [a0 + 0x9] = a2\n 63226: u8 [a0] = a1\n 63228: a2 = a1 >> 0x38\n 63231: u8 [a0 + 0x7] = a2\n 63234: a2 = a1 >> 0x30\n 63237: u8 [a0 + 0x6] = a2\n 63240: a2 = a1 >> 0x28\n 63243: u8 [a0 + 0x5] = a2\n 63246: a2 = a1 >> 0x20\n 63249: u8 [a0 + 0x4] = a2\n 63252: a2 = a1 >> 0x18\n 63255: u8 [a0 + 0x3] = a2\n 63258: a2 = a1 >> 0x10\n 63261: u8 [a0 + 0x2] = a2\n 63264: a1 = a1 >> 0x8\n 63267: u8 [a0 + 0x1] = a1\n 63270: u64 [sp + 200] = 0\n 63274: u64 [sp + 192] = 0\n 63278: u64 [sp + 176] = 0x40\n 63283: a0 = sp + 0xd0\n 63287: a1 = sp + 0xb0\n 63291: u64 [sp + 184] = 0\n 63295: ra = 774, jump @56\n      : @953 [@dyn 387] (gas: 15)\n 63302: a1 = u64 [sp + 0xe8]\n 63306: a2 = u64 [sp + 0xe0]\n 63310: a0 = u64 [sp + 0xd8]\n 63314: s1 = u64 [sp + 0xd0]\n 63318: u64 [sp + 0x38] = a0\n 63321: u64 [sp + 0x28] = a1\n 63324: a0 = a0 | a1\n 63327: a1 = s1 | a2\n 63330: a1 = a1 | a0\n 63333: a1 = a1 >> 0x20\n 63336: u64 [sp + 0x30] = a2\n 63339: a0 = a0 | a2\n 63342: a0 = a0 << 0x20\n 63345: a0 = a0 | a1\n 63348: jump @961 if a0 != 0\n      : @954 (gas: 4)\n 63352: i32 a0 = s1 + 0\n 63354: a1 = 0x20\n 63357: u64 [sp + 0x20] = a0\n 63360: ra = 776, jump @0\n      : @955 [@dyn 388] (gas: 42)\n 63367: u8 [a0 + 31] = 0x7\n 63371: a1 = u64 [sp + 0x28]\n 63374: a2 = u64 [sp + 0x30]\n 63377: a2 = a2 | a1\n 63380: a1 = 0xffffffe0\n 63390: u64 [sp + 0x18] = s1\n 63393: a1 = s1 <u a1\n 63396: a3 = u64 [sp + 0x38]\n 63399: a1 = 0 if a3 != 0\n 63401: a1 = 0 if a2 != 0\n 63403: u8 [a0 + 30] = 0\n 63406: u8 [a0 + 29] = 0\n 63409: u8 [a0 + 28] = 0\n 63412: u8 [a0 + 27] = 0\n 63415: u8 [a0 + 26] = 0\n 63418: u8 [a0 + 25] = 0\n 63421: u8 [a0 + 24] = 0\n 63424: u8 [a0 + 23] = 0\n 63427: u8 [a0 + 22] = 0\n 63430: u8 [a0 + 21] = 0\n 63433: u8 [a0 + 20] = 0\n 63436: u8 [a0 + 19] = 0\n 63439: u8 [a0 + 18] = 0\n 63442: u8 [a0 + 17] = 0\n 63445: u8 [a0 + 16] = 0\n 63448: u8 [a0 + 15] = 0\n 63451: u8 [a0 + 14] = 0\n 63454: u8 [a0 + 13] = 0\n 63457: u8 [a0 + 12] = 0\n 63460: u8 [a0 + 11] = 0\n 63463: u8 [a0 + 10] = 0\n 63466: u8 [a0 + 9] = 0\n 63469: u8 [a0 + 8] = 0\n 63472: u8 [a0 + 7] = 0\n 63475: u8 [a0 + 6] = 0\n 63478: u8 [a0 + 5] = 0\n 63481: u8 [a0 + 4] = 0\n 63484: u8 [a0 + 3] = 0\n 63487: u8 [a0 + 2] = 0\n 63490: u8 [a0 + 1] = 0\n 63493: u8 [a0 + 0] = 0\n 63495: jump @961 if a1 == 0\n      : @956 (gas: 4)\n 63499: a0 = u64 [sp + 0x20]\n 63502: i32 a0 = a0 + 0x20\n 63505: a1 = 0x20\n 63508: ra = 778, jump @0\n      : @957 [@dyn 389] (gas: 40)\n 63515: u8 [a0 + 31] = 0\n 63518: u8 [a0 + 30] = 0\n 63521: u8 [a0 + 29] = 0\n 63524: u8 [a0 + 28] = 0\n 63527: u8 [a0 + 27] = 0\n 63530: u8 [a0 + 26] = 0\n 63533: u8 [a0 + 25] = 0\n 63536: u8 [a0 + 24] = 0\n 63539: u8 [a0 + 23] = 0\n 63542: u8 [a0 + 22] = 0\n 63545: u8 [a0 + 21] = 0\n 63548: u8 [a0 + 20] = 0\n 63551: u8 [a0 + 19] = 0\n 63554: u8 [a0 + 18] = 0\n 63557: u8 [a0 + 17] = 0\n 63560: u8 [a0 + 16] = 0\n 63563: u8 [a0 + 15] = 0\n 63566: u8 [a0 + 14] = 0\n 63569: u8 [a0 + 13] = 0\n 63572: u8 [a0 + 12] = 0\n 63575: u8 [a0 + 11] = 0\n 63578: u8 [a0 + 10] = 0\n 63581: u8 [a0 + 9] = 0\n 63584: u8 [a0 + 8] = 0\n 63587: u8 [a0 + 7] = 0\n 63590: u8 [a0 + 6] = 0x74\n 63594: u8 [a0 + 5] = 0x63\n 63598: u8 [a0 + 4] = 0x65\n 63602: u8 [a0 + 3] = 0x66\n 63606: u8 [a0 + 2] = 0x72\n 63610: u8 [a0 + 1] = 0x65\n 63614: a2 = 0xfffff6c0\n 63624: a3 = u64 [sp + 0x68]\n 63627: a2 = a3 <u a2\n 63630: s1 = u64 [sp + 0x60]\n 63633: a2 = 0 if s1 != 0\n 63635: a3 = u64 [sp + 0x58]\n 63638: a2 = 0 if a3 != 0\n 63640: u8 [a0 + 0] = 0x70\n 63643: jump @961 if a2 == 0\n      : @958 (gas: 4)\n 63647: a0 = u64 [sp + 0x50]\n 63650: i32 a0 = a0 + 0x140\n 63654: a1 = 0x20\n 63657: ra = 780, jump @0\n      : @959 [@dyn 390] (gas: 115)\n 63664: a1 = u64 [sp + 0x28]\n 63667: a1 = reverse a1\n 63669: a2 = u64 [sp + 0x30]\n 63672: a2 = reverse a2\n 63674: a3 = u64 [sp + 0x38]\n 63677: a3 = reverse a3\n 63679: a4 = u64 [sp + 0x18]\n 63682: a4 = reverse a4\n 63684: a5 = a4 >> 0x38\n 63687: u8 [a0 + 0x1f] = a5\n 63690: a5 = a4 >> 0x30\n 63693: u8 [a0 + 0x1e] = a5\n 63696: a5 = a4 >> 0x28\n 63699: u8 [a0 + 0x1d] = a5\n 63702: a5 = a4 >> 0x20\n 63705: u8 [a0 + 0x1c] = a5\n 63708: a5 = a4 >> 0x18\n 63711: u8 [a0 + 0x1b] = a5\n 63714: a5 = a4 >> 0x10\n 63717: u8 [a0 + 0x1a] = a5\n 63720: a5 = a4 >> 0x8\n 63723: u8 [a0 + 0x19] = a5\n 63726: u8 [a0 + 0x18] = a4\n 63729: a4 = a3 >> 0x38\n 63732: u8 [a0 + 0x17] = a4\n 63735: a4 = a3 >> 0x30\n 63738: u8 [a0 + 0x16] = a4\n 63741: a4 = a3 >> 0x28\n 63744: u8 [a0 + 0x15] = a4\n 63747: a4 = a3 >> 0x20\n 63750: u8 [a0 + 0x14] = a4\n 63753: a4 = a3 >> 0x18\n 63756: u8 [a0 + 0x13] = a4\n 63759: a4 = a3 >> 0x10\n 63762: u8 [a0 + 0x12] = a4\n 63765: a4 = a3 >> 0x8\n 63768: u8 [a0 + 0x11] = a4\n 63771: u8 [a0 + 0x10] = a3\n 63774: u8 [a0 + 0x8] = a2\n 63777: a3 = a2 >> 0x38\n 63780: u8 [a0 + 0xf] = a3\n 63783: a3 = a2 >> 0x30\n 63786: u8 [a0 + 0xe] = a3\n 63789: a3 = a2 >> 0x28\n 63792: u8 [a0 + 0xd] = a3\n 63795: a3 = a2 >> 0x20\n 63798: u8 [a0 + 0xc] = a3\n 63801: a3 = a2 >> 0x18\n 63804: u8 [a0 + 0xb] = a3\n 63807: a3 = a2 >> 0x10\n 63810: u8 [a0 + 0xa] = a3\n 63813: a2 = a2 >> 0x8\n 63816: u8 [a0 + 0x9] = a2\n 63819: u8 [a0] = a1\n 63821: a2 = a1 >> 0x38\n 63824: u8 [a0 + 0x7] = a2\n 63827: a2 = a1 >> 0x30\n 63830: u8 [a0 + 0x6] = a2\n 63833: a2 = a1 >> 0x28\n 63836: u8 [a0 + 0x5] = a2\n 63839: a2 = a1 >> 0x20\n 63842: u8 [a0 + 0x4] = a2\n 63845: a2 = a1 >> 0x18\n 63848: u8 [a0 + 0x3] = a2\n 63851: a2 = a1 >> 0x10\n 63854: u8 [a0 + 0x2] = a2\n 63857: a1 = a1 >> 0x8\n 63860: u8 [a0 + 0x1] = a1\n 63863: a0 = u64 [sp + 0x40]\n 63866: u64 [sp + 0x88] = a0\n 63870: a0 = u64 [sp + 0x48]\n 63873: u64 [sp + 0x80] = a0\n 63877: u64 [sp + 0x78] = s1\n 63880: a0 = u64 [sp + 0x68]\n 63883: u64 [sp + 0x70] = a0\n 63886: u64 [sp + 168] = 0\n 63890: u64 [sp + 160] = 0\n 63894: u64 [sp + 152] = 0\n 63898: a0 = sp + 0x90\n 63902: a1 = sp + 0x70\n 63905: u64 [sp + 144] = 0x1\n 63910: ra = 0x30e\n 63914: sp = sp + 0xfffffffffffffec0\n 63918: u64 [sp + 0x138] = ra\n 63922: u64 [sp + 0x130] = s0\n 63926: u64 [sp + 0x128] = s1\n 63930: s0 = sp + 0x140\n 63934: sp = sp & 0xffffffffffffffe0\n 63937: a2 = u64 [a1 + 0x18]\n 63940: u64 [sp + 0x78] = a2\n 63943: a2 = u64 [a1 + 0x10]\n 63946: u64 [sp + 0x60] = a2\n 63949: a2 = u64 [a1 + 0x8]\n 63952: u64 [sp + 0x58] = a2\n 63955: a1 = u64 [a1]\n 63957: u64 [sp + 0x50] = a1\n 63960: a2 = u64 [a0]\n 63962: u64 [sp + 0x48] = a2\n 63965: a1 = u64 [a0 + 0x8]\n 63968: u64 [sp + 0x70] = a1\n 63971: a3 = u64 [a0 + 0x10]\n 63974: u64 [sp + 0x68] = a3\n 63977: s1 = u64 [a0 + 0x18]\n 63980: u64 [sp + 216] = 0\n 63984: u64 [sp + 208] = 0\n 63988: u64 [sp + 200] = 0\n 63992: u64 [sp + 192] = 0x4b\n 63997: u64 [sp + 0xf8] = s1\n 64001: u64 [sp + 0xf0] = a3\n 64005: u64 [sp + 0xe8] = a1\n 64009: a0 = sp + 0xe0\n 64013: a1 = sp + 0xc0\n 64017: u64 [sp + 0xe0] = a2\n 64021: ra = 0xaa\n 64025: jump @152\n      : @960 [@dyn 391] (gas: 9)\n 64029: a0 = 0x13d0\n 64033: sp = s0 - a0\n 64036: sp = sp + 0x7f8\n 64040: sp = sp + 0x3e0\n 64044: ra = u64 [sp + 0x7f0]\n 64048: s0 = u64 [sp + 0x7e8]\n 64052: s1 = u64 [sp + 0x7e0]\n 64056: sp = sp + 0x7f8\n 64060: ret\n      : @961 (gas: 1)\n 64062: trap\n      : @962 (gas: 16)\n 64063: sp = sp + 0xffffffffffffff88\n 64066: u64 [sp + 0x70] = ra\n 64069: u64 [sp + 0x68] = s0\n 64072: u64 [sp + 0x60] = s1\n 64075: a5 = u64 [a1 + 0x10]\n 64078: s1 = u64 [a1 + 0x18]\n 64081: a4 = u64 [a1 + 0x8]\n 64084: s0 = u64 [a1]\n 64086: a1 = a4 | s1\n 64089: a3 = s0 | a5\n 64092: a3 = a3 | a1\n 64095: a3 = a3 >> 0x20\n 64098: a1 = a1 | a5\n 64101: a1 = a1 << 0x20\n 64104: a1 = a1 | a3\n 64107: jump @975 if a1 != 0\n      : @963 (gas: 16)\n 64111: u64 [sp + 0x28] = s1\n 64114: u64 [sp + 0x30] = a5\n 64117: u64 [sp + 0x40] = a4\n 64120: u64 [sp] = a0\n 64122: a0 = u64 [a2 + 0x18]\n 64125: u64 [sp + 0x58] = a0\n 64128: s1 = u64 [a2 + 0x10]\n 64131: a0 = u64 [a2 + 0x8]\n 64134: u64 [sp + 0x50] = a0\n 64137: a0 = u64 [a2]\n 64139: u64 [sp + 0x48] = a0\n 64142: u64 [sp + 0x20] = s0\n 64145: i32 a0 = s0 + 0\n 64147: a1 = 0x20\n 64150: u64 [sp + 0x8] = a0\n 64153: ra = 784, jump @0\n      : @964 [@dyn 392] (gas: 12)\n 64160: t0 = u64 [sp + 0x48]\n 64163: a1 = t0 | s1\n 64166: a2 = u64 [sp + 0x58]\n 64169: a3 = u64 [sp + 0x50]\n 64172: a2 = a2 | a3\n 64175: a1 = a1 | a2\n 64178: a1 = a1 >> 0x20\n 64181: u64 [sp + 0x38] = s1\n 64184: a2 = a2 | s1\n 64187: a2 = a2 << 0x20\n 64190: a1 = a1 | a2\n 64193: jump @975 if a1 != 0\n      : @965 (gas: 93)\n 64197: a1 = u8 [a0 + 0x19]\n 64200: a2 = u8 [a0 + 0x18]\n 64203: a3 = u8 [a0 + 0x1a]\n 64206: a4 = u8 [a0 + 0x1b]\n 64209: a1 = a1 << 0x8\n 64212: a1 = a1 | a2\n 64215: a3 = a3 << 0x10\n 64218: a4 = a4 << 0x18\n 64221: a3 = a3 | a4\n 64224: a1 = a1 | a3\n 64227: a2 = u8 [a0 + 0x1d]\n 64230: a3 = u8 [a0 + 0x1c]\n 64233: a4 = u8 [a0 + 0x1e]\n 64236: a5 = u8 [a0 + 0x1f]\n 64239: a2 = a2 << 0x8\n 64242: a2 = a2 | a3\n 64245: a4 = a4 << 0x10\n 64248: a5 = a5 << 0x18\n 64251: a4 = a4 | a5\n 64254: a2 = a2 | a4\n 64257: a2 = a2 << 0x20\n 64260: a1 = a1 | a2\n 64263: u64 [sp + 0x18] = a1\n 64266: a1 = u8 [a0 + 0x11]\n 64269: a2 = u8 [a0 + 0x10]\n 64272: a3 = u8 [a0 + 0x12]\n 64275: a4 = u8 [a0 + 0x13]\n 64278: a1 = a1 << 0x8\n 64281: a1 = a1 | a2\n 64284: a3 = a3 << 0x10\n 64287: a4 = a4 << 0x18\n 64290: a3 = a3 | a4\n 64293: a1 = a1 | a3\n 64296: a2 = u8 [a0 + 0x15]\n 64299: a3 = u8 [a0 + 0x14]\n 64302: a4 = u8 [a0 + 0x16]\n 64305: a5 = u8 [a0 + 0x17]\n 64308: a2 = a2 << 0x8\n 64311: a2 = a2 | a3\n 64314: a4 = a4 << 0x10\n 64317: a5 = a5 << 0x18\n 64320: a4 = a4 | a5\n 64323: a2 = a2 | a4\n 64326: a2 = a2 << 0x20\n 64329: a1 = a1 | a2\n 64332: u64 [sp + 0x10] = a1\n 64335: a1 = u8 [a0 + 0x9]\n 64338: a2 = u8 [a0 + 0x8]\n 64341: a3 = u8 [a0 + 0xa]\n 64344: a4 = u8 [a0 + 0xb]\n 64347: a1 = a1 << 0x8\n 64350: a1 = a1 | a2\n 64353: a3 = a3 << 0x10\n 64356: a4 = a4 << 0x18\n 64359: a3 = a3 | a4\n 64362: a1 = a1 | a3\n 64365: a2 = u8 [a0 + 0xd]\n 64368: a3 = u8 [a0 + 0xc]\n 64371: a4 = u8 [a0 + 0xe]\n 64374: a5 = u8 [a0 + 0xf]\n 64377: a2 = a2 << 0x8\n 64380: a2 = a2 | a3\n 64383: a4 = a4 << 0x10\n 64386: a5 = a5 << 0x18\n 64389: a4 = a4 | a5\n 64392: a2 = a2 | a4\n 64395: a2 = a2 << 0x20\n 64398: s1 = a2 | a1\n 64401: a1 = u8 [a0 + 0x1]\n 64404: a2 = u8 [a0]\n 64406: a3 = u8 [a0 + 0x2]\n 64409: a4 = u8 [a0 + 0x3]\n 64412: a1 = a1 << 0x8\n 64415: a1 = a1 | a2\n 64418: a3 = a3 << 0x10\n 64421: a4 = a4 << 0x18\n 64424: a3 = a3 | a4\n 64427: a1 = a1 | a3\n 64430: a2 = u8 [a0 + 0x5]\n 64433: a3 = u8 [a0 + 0x4]\n 64436: a4 = u8 [a0 + 0x6]\n 64439: a0 = u8 [a0 + 0x7]\n 64442: a2 = a2 << 0x8\n 64445: a2 = a2 | a3\n 64448: a4 = a4 << 0x10\n 64451: a0 = a0 << 0x18\n 64454: a0 = a0 | a4\n 64457: a0 = a0 | a2\n 64460: a0 = a0 << 0x20\n 64463: s0 = a0 | a1\n 64466: i32 a0 = t0 + 0\n 64468: a1 = 0x20\n 64471: ra = 786, jump @0\n      : @966 [@dyn 393] (gas: 73)\n 64478: a4 = s1\n 64480: a2 = u64 [sp + 0x10]\n 64483: s1 = u64 [sp + 0x18]\n 64486: t0 = u64 [sp + 0x48]\n 64489: a1 = a4 >> 0x38\n 64492: u8 [a0 + 0xf] = a1\n 64495: a1 = a4 >> 0x30\n 64498: u8 [a0 + 0xe] = a1\n 64501: a1 = a4 >> 0x28\n 64504: u8 [a0 + 0xd] = a1\n 64507: a1 = a4 >> 0x20\n 64510: u8 [a0 + 0xc] = a1\n 64513: a1 = a4 >> 0x18\n 64516: u8 [a0 + 0xb] = a1\n 64519: a1 = a4 >> 0x10\n 64522: u8 [a0 + 0xa] = a1\n 64525: a1 = a4 >> 0x8\n 64528: u8 [a0 + 0x9] = a1\n 64531: a1 = s0 >> 0x38\n 64534: u8 [a0 + 0x7] = a1\n 64537: a1 = s0 >> 0x30\n 64540: u8 [a0 + 0x6] = a1\n 64543: a1 = s0 >> 0x28\n 64546: u8 [a0 + 0x5] = a1\n 64549: a1 = s0 >> 0x20\n 64552: u8 [a0 + 0x4] = a1\n 64555: a1 = s0 >> 0x18\n 64558: u8 [a0 + 0x3] = a1\n 64561: a1 = s0 >> 0x10\n 64564: u8 [a0 + 0x2] = a1\n 64567: a1 = s0 >> 0x8\n 64570: u8 [a0 + 0x1] = a1\n 64573: a1 = a2 >> 0x38\n 64576: u8 [a0 + 0x17] = a1\n 64579: a1 = a2 >> 0x30\n 64582: u8 [a0 + 0x16] = a1\n 64585: a1 = a2 >> 0x28\n 64588: u8 [a0 + 0x15] = a1\n 64591: a1 = a2 >> 0x20\n 64594: u8 [a0 + 0x14] = a1\n 64597: a1 = a2 >> 0x18\n 64600: u8 [a0 + 0x13] = a1\n 64603: a1 = a2 >> 0x10\n 64606: u8 [a0 + 0x12] = a1\n 64609: a1 = a2 >> 0x8\n 64612: u8 [a0 + 0x11] = a1\n 64615: a1 = s1 >> 0x38\n 64618: u8 [a0 + 0x1f] = a1\n 64621: a1 = s1 >> 0x30\n 64624: u8 [a0 + 0x1e] = a1\n 64627: a1 = s1 >> 0x28\n 64630: u8 [a0 + 0x1d] = a1\n 64633: a1 = s1 >> 0x20\n 64636: u8 [a0 + 0x1c] = a1\n 64639: a1 = s1 >> 0x18\n 64642: u8 [a0 + 0x1b] = a1\n 64645: a1 = s1 >> 0x10\n 64648: u8 [a0 + 0x1a] = a1\n 64651: a1 = s1 >> 0x8\n 64654: u8 [a0 + 0x19] = a1\n 64657: ra = u64 [sp + 0x58]\n 64660: t2 = u64 [sp + 0x38]\n 64663: t1 = t2 | ra\n 64666: a1 = 0xffffffe0\n 64676: a3 = t0 <u a1\n 64679: a5 = u64 [sp + 0x50]\n 64682: a3 = 0 if a5 != 0\n 64684: a3 = 0 if t1 != 0\n 64686: u8 [a0 + 0x10] = a2\n 64689: u8 [a0 + 0x8] = a4\n 64692: u8 [a0] = s0\n 64694: u8 [a0 + 0x18] = s1\n 64697: jump @975 if a3 == 0\n      : @967 (gas: 9)\n 64701: a0 = u64 [sp + 0x30]\n 64704: a3 = u64 [sp + 0x28]\n 64707: a0 = a0 | a3\n 64710: a3 = u64 [sp + 0x20]\n 64713: a1 = a3 <u a1\n 64716: a3 = u64 [sp + 0x40]\n 64719: a1 = 0 if a3 != 0\n 64721: a1 = 0 if a0 != 0\n 64723: jump @975 if a1 == 0\n      : @968 (gas: 15)\n 64727: a1 = reverse s0\n 64729: a3 = reverse a4\n 64731: a4 = reverse a2\n 64733: s0 = reverse s1\n 64735: a0 = s0 | a3\n 64738: u64 [sp + 0x30] = a1\n 64741: u64 [sp + 0x20] = a4\n 64744: a1 = a1 | a4\n 64747: a0 = a0 | a1\n 64750: a0 = a0 >> 0x20\n 64753: u64 [sp + 0x28] = a3\n 64756: a1 = a1 | a3\n 64759: a1 = a1 << 0x20\n 64762: a0 = a0 | a1\n 64765: jump @975 if a0 != 0\n      : @969 (gas: 19)\n 64769: a3 = t0 + 0x20\n 64772: u64 [sp + 0x40] = a3\n 64775: a0 = a3 <u t0\n 64778: a1 = a5 + a0\n 64781: u64 [sp + 0x48] = a1\n 64784: a1 = a1 <u a5\n 64787: a1 = a0 if a0 == 0\n 64790: a1 = a1 + t2\n 64793: u64 [sp + 0x50] = a1\n 64796: a0 = a1 <u t2\n 64799: a0 = a0 + ra\n 64802: u64 [sp + 0x58] = a0\n 64805: i32 a0 = a3 + 0\n 64807: a1 = u64 [sp + 0x8]\n 64810: i32 a1 = a1 + 0x20\n 64813: u64 [sp + 0x38] = a1\n 64816: i32 s1 = s0 + 0\n 64818: a1 = s1\n 64820: ra = 788, jump @0\n      : @970 [@dyn 394] (gas: 5)\n 64827: u64 [sp + 0x18] = a0\n 64830: a0 = u64 [sp + 0x38]\n 64833: a1 = s1\n 64835: s1 = s0\n 64837: ra = 790, jump @0\n      : @971 [@dyn 395] (gas: 4)\n 64844: a1 = a0\n 64846: a0 = u64 [sp + 0x18]\n 64849: a2 = s0\n 64851: ra = 792, jump @8\n      : @972 [@dyn 396] (gas: 29)\n 64858: a0 = u64 [sp + 0x40]\n 64861: a0 = a0 + s0\n 64864: a1 = a0 <u s0\n 64867: a4 = u64 [sp + 0x20]\n 64870: a2 = u64 [sp + 0x48]\n 64873: a2 = a2 + a4\n 64876: a2 = a2 + a1\n 64879: a3 = a2 ^ a4\n 64882: a4 = a2 <u a4\n 64885: a4 = a1 if a3 == 0\n 64888: a5 = u64 [sp + 0x28]\n 64891: a1 = u64 [sp + 0x50]\n 64894: a1 = a1 + a5\n 64897: a4 = a4 + a1\n 64900: a3 = a4 <u a1\n 64903: a1 = a1 <u a5\n 64906: a5 = u64 [sp + 0x30]\n 64909: s0 = u64 [sp + 0x58]\n 64912: a5 = a5 + s0\n 64915: a1 = a1 + a5\n 64918: a1 = a1 + a3\n 64921: a3 = a0 | a4\n 64924: a1 = a1 | a2\n 64927: a3 = a3 | a1\n 64930: a3 = a3 >> 0x20\n 64933: a1 = a1 | a4\n 64936: a1 = a1 << 0x20\n 64939: a1 = a1 | a3\n 64942: jump @975 if a1 != 0\n      : @973 (gas: 3)\n 64946: i32 a0 = a0 + 0\n 64948: a1 = 0x20\n 64951: ra = 794, jump @0\n      : @974 [@dyn 397] (gas: 56)\n 64958: u8 [a0 + 31] = 0\n 64961: u8 [a0 + 30] = 0\n 64964: u8 [a0 + 29] = 0\n 64967: u8 [a0 + 28] = 0\n 64970: u8 [a0 + 27] = 0\n 64973: u8 [a0 + 26] = 0\n 64976: u8 [a0 + 25] = 0\n 64979: u8 [a0 + 24] = 0\n 64982: u8 [a0 + 23] = 0\n 64985: u8 [a0 + 22] = 0\n 64988: u8 [a0 + 21] = 0\n 64991: u8 [a0 + 20] = 0\n 64994: u8 [a0 + 19] = 0\n 64997: u8 [a0 + 18] = 0\n 65000: u8 [a0 + 17] = 0\n 65003: u8 [a0 + 16] = 0\n 65006: u8 [a0 + 15] = 0\n 65009: u8 [a0 + 14] = 0\n 65012: u8 [a0 + 13] = 0\n 65015: u8 [a0 + 12] = 0\n 65018: u8 [a0 + 11] = 0\n 65021: u8 [a0 + 10] = 0\n 65024: u8 [a0 + 9] = 0\n 65027: u8 [a0 + 8] = 0\n 65030: u8 [a0 + 7] = 0\n 65033: u8 [a0 + 6] = 0\n 65036: u8 [a0 + 5] = 0\n 65039: u8 [a0 + 4] = 0\n 65042: u8 [a0 + 3] = 0\n 65045: u8 [a0 + 2] = 0\n 65048: u8 [a0 + 1] = 0\n 65051: u8 [a0 + 0] = 0\n 65053: a0 = s1 + 0x1f\n 65056: a1 = 0x1ffffffe0\n 65066: a0 = a0 & a1\n 65069: a1 = u64 [sp + 0x40]\n 65072: a1 = a1 + a0\n 65075: a0 = a1 <u a0\n 65078: a2 = u64 [sp + 0x48]\n 65081: a2 = a2 + a0\n 65084: a0 = 0 if a2 != 0\n 65086: a3 = u64 [sp + 0x50]\n 65089: a0 = a0 + a3\n 65092: a3 = a0 <u a3\n 65095: a4 = u64 [sp + 0x58]\n 65098: a3 = a3 + a4\n 65101: a4 = u64 [sp]\n 65103: u64 [a4] = a1\n 65105: u64 [a4 + 0x8] = a2\n 65108: u64 [a4 + 0x10] = a0\n 65111: u64 [a4 + 0x18] = a3\n 65114: ra = u64 [sp + 0x70]\n 65117: s0 = u64 [sp + 0x68]\n 65120: s1 = u64 [sp + 0x60]\n 65123: sp = sp + 0x78\n 65126: ret\n      : @975 (gas: 1)\n 65128: trap\n      : @976 (gas: 8)\n 65129: a0 = u64 [sp + 0x110]\n 65133: a1 = u64 [sp + 0x118]\n 65137: a2 = u64 [sp + 0x108]\n 65141: a3 = u64 [sp + 0x100]\n 65145: a1 = a1 | a2\n 65148: a0 = a0 | a3\n 65151: a0 = a0 | a1\n 65154: jump @985 if a0 != 0\n      : @977 (gas: 2)\n 65158: a0 = i32 [0x20004]\n 65163: jump @985 if a0 <=u 3\n      : @978 (gas: 7)\n 65168: u64 [sp + 216] = 0\n 65172: u64 [sp + 208] = 0\n 65176: u64 [sp + 200] = 0\n 65180: a0 = sp + 0xe0\n 65184: a1 = sp + 0xc0\n 65188: u64 [sp + 192] = 0\n 65192: ra = 796, jump @1095\n      : @979 [@dyn 398] (gas: 11)\n 65198: a0 = u64 [sp + 0xf8]\n 65202: u64 [sp + 0x40] = a0\n 65205: a0 = u64 [sp + 0xf0]\n 65209: u64 [sp + 0x48] = a0\n 65212: a0 = u64 [sp + 0xe8]\n 65216: u64 [sp + 0x50] = a0\n 65219: a0 = u64 [sp + 0xe0]\n 65223: u64 [sp + 0x58] = a0\n 65226: a0 = 0x40\n 65229: a1 = 0x20\n 65232: ra = 798, jump @0\n      : @980 [@dyn 399] (gas: 100)\n 65239: a1 = u8 [a0 + 0x11]\n 65242: a2 = u8 [a0 + 0x10]\n 65245: a3 = u8 [a0 + 0x12]\n 65248: a4 = u8 [a0 + 0x13]\n 65251: a1 = a1 << 0x8\n 65254: a1 = a1 | a2\n 65257: a3 = a3 << 0x10\n 65260: a4 = a4 << 0x18\n 65263: a3 = a3 | a4\n 65266: a1 = a1 | a3\n 65269: a2 = u8 [a0 + 0x15]\n 65272: a3 = u8 [a0 + 0x14]\n 65275: a4 = u8 [a0 + 0x16]\n 65278: a5 = u8 [a0 + 0x17]\n 65281: a2 = a2 << 0x8\n 65284: a2 = a2 | a3\n 65287: a4 = a4 << 0x10\n 65290: a5 = a5 << 0x18\n 65293: a4 = a4 | a5\n 65296: a2 = a2 | a4\n 65299: a2 = a2 << 0x20\n 65302: t0 = a2 | a1\n 65305: a2 = u8 [a0 + 0x1]\n 65308: a3 = u8 [a0]\n 65310: a4 = u8 [a0 + 0x2]\n 65313: a5 = u8 [a0 + 0x3]\n 65316: a2 = a2 << 0x8\n 65319: a2 = a2 | a3\n 65322: a4 = a4 << 0x10\n 65325: a5 = a5 << 0x18\n 65328: a4 = a4 | a5\n 65331: a2 = a2 | a4\n 65334: a3 = u8 [a0 + 0x5]\n 65337: a4 = u8 [a0 + 0x4]\n 65340: a5 = u8 [a0 + 0x6]\n 65343: s1 = u8 [a0 + 0x7]\n 65346: a3 = a3 << 0x8\n 65349: a3 = a3 | a4\n 65352: a5 = a5 << 0x10\n 65355: s1 = s1 << 0x18\n 65358: a5 = a5 | s1\n 65361: a3 = a3 | a5\n 65364: a3 = a3 << 0x20\n 65367: a2 = a2 | a3\n 65370: a3 = u8 [a0 + 0x19]\n 65373: a4 = u8 [a0 + 0x18]\n 65376: a5 = u8 [a0 + 0x1a]\n 65379: s1 = u8 [a0 + 0x1b]\n 65382: a3 = a3 << 0x8\n 65385: a3 = a3 | a4\n 65388: a5 = a5 << 0x10\n 65391: s1 = s1 << 0x18\n 65394: a5 = a5 | s1\n 65397: a3 = a3 | a5\n 65400: a4 = u8 [a0 + 0x1d]\n 65403: a5 = u8 [a0 + 0x1c]\n 65406: s1 = u8 [a0 + 0x1e]\n 65409: a1 = u8 [a0 + 0x1f]\n 65412: a4 = a4 << 0x8\n 65415: a4 = a4 | a5\n 65418: s1 = s1 << 0x10\n 65421: a1 = a1 << 0x18\n 65424: a1 = a1 | s1\n 65427: a1 = a1 | a4\n 65430: a1 = a1 << 0x20\n 65433: a3 = a3 | a1\n 65436: a1 = u8 [a0 + 0x9]\n 65439: a4 = u8 [a0 + 0x8]\n 65442: a5 = u8 [a0 + 0xa]\n 65445: s1 = u8 [a0 + 0xb]\n 65448: a1 = a1 << 0x8\n 65451: a1 = a1 | a4\n 65454: a5 = a5 << 0x10\n 65457: s1 = s1 << 0x18\n 65460: a5 = a5 | s1\n 65463: a1 = a1 | a5\n 65466: a4 = u8 [a0 + 0xd]\n 65469: a5 = u8 [a0 + 0xc]\n 65472: s1 = u8 [a0 + 0xe]\n 65475: a0 = u8 [a0 + 0xf]\n 65478: a4 = a4 << 0x8\n 65481: a4 = a4 | a5\n 65484: s1 = s1 << 0x10\n 65487: a0 = a0 << 0x18\n 65490: a0 = a0 | s1\n 65493: a0 = a0 | a4\n 65496: a0 = a0 << 0x20\n 65499: a0 = a0 | a1\n 65502: s1 = reverse a0\n 65504: a3 = reverse a3\n 65506: a4 = reverse a2\n 65508: a2 = reverse t0\n 65510: a0 = a2 | a4\n 65513: a1 = a3 | s1\n 65516: a1 = a1 | a0\n 65519: a1 = a1 >> 0x20\n 65522: a0 = a0 | s1\n 65525: a0 = a0 << 0x20\n 65528: a0 = a0 | a1\n 65531: jump @984 if a0 != 0\n      : @981 (gas: 19)\n 65535: a0 = a3 + 0x20\n 65538: u64 [sp + 0x18] = a0\n 65541: a0 = a0 <u a3\n 65544: a1 = a2 + a0\n 65547: u64 [sp + 0x8] = a1\n 65550: a1 = a1 <u a2\n 65553: a1 = a0 if a0 == 0\n 65556: a1 = a1 + s1\n 65559: u64 [sp + 0x10] = a1\n 65562: a0 = a1 <u s1\n 65565: a0 = a0 + a4\n 65568: u64 [sp + 0x20] = a0\n 65571: i32 a0 = a3 + 0\n 65573: a1 = 0x20\n 65576: u64 [sp] = a0\n 65578: u64 [sp + 0x30] = a3\n 65581: u64 [sp + 0x28] = a2\n 65584: u64 [sp + 0x38] = a4\n 65587: ra = 800, jump @0\n      : @982 [@dyn 400] (gas: 52)\n 65594: u8 [a0 + 31] = 0x20\n 65598: u8 [a0 + 30] = 0\n 65601: u8 [a0 + 29] = 0\n 65604: u8 [a0 + 28] = 0\n 65607: u8 [a0 + 27] = 0\n 65610: u8 [a0 + 26] = 0\n 65613: u8 [a0 + 25] = 0\n 65616: u8 [a0 + 24] = 0\n 65619: u8 [a0 + 23] = 0\n 65622: u8 [a0 + 22] = 0\n 65625: u8 [a0 + 21] = 0\n 65628: u8 [a0 + 20] = 0\n 65631: u8 [a0 + 19] = 0\n 65634: u8 [a0 + 18] = 0\n 65637: u8 [a0 + 17] = 0\n 65640: u8 [a0 + 16] = 0\n 65643: u8 [a0 + 15] = 0\n 65646: u8 [a0 + 14] = 0\n 65649: u8 [a0 + 13] = 0\n 65652: u8 [a0 + 12] = 0\n 65655: u8 [a0 + 11] = 0\n 65658: u8 [a0 + 10] = 0\n 65661: u8 [a0 + 9] = 0\n 65664: u8 [a0 + 8] = 0\n 65667: u8 [a0 + 7] = 0\n 65670: u8 [a0 + 6] = 0\n 65673: u8 [a0 + 5] = 0\n 65676: u8 [a0 + 4] = 0\n 65679: u8 [a0 + 3] = 0\n 65682: u8 [a0 + 2] = 0\n 65685: u8 [a0 + 1] = 0\n 65688: u8 [a0 + 0] = 0\n 65690: a0 = u64 [sp + 0x8]\n 65693: u64 [sp + 0x68] = a0\n 65696: a0 = u64 [sp + 0x18]\n 65699: u64 [sp + 0x60] = a0\n 65702: a0 = u64 [sp + 0x40]\n 65705: u64 [sp + 0x98] = a0\n 65709: a0 = u64 [sp + 0x48]\n 65712: u64 [sp + 0x90] = a0\n 65716: a0 = u64 [sp + 0x50]\n 65719: u64 [sp + 0x88] = a0\n 65723: a0 = u64 [sp + 0x58]\n 65726: u64 [sp + 0x80] = a0\n 65730: a0 = u64 [sp + 0x10]\n 65733: u64 [sp + 0x70] = a0\n 65736: a0 = sp + 0xa0\n 65740: a1 = sp + 0x80\n 65744: a2 = sp + 0x60\n 65747: a3 = u64 [sp + 0x20]\n 65750: u64 [sp + 0x78] = a3\n 65753: ra = 802, jump @962\n      : @983 [@dyn 401] (gas: 30)\n 65759: a0 = u64 [sp + 0xa8]\n 65763: t0 = u64 [sp + 0xb8]\n 65767: t1 = u64 [sp + 0xa0]\n 65771: a3 = u64 [sp + 0xb0]\n 65775: a1 = u64 [sp + 0x28]\n 65778: a4 = a0 ^ a1\n 65781: a5 = a0 <u a1\n 65784: t2 = a1\n 65786: a2 = u64 [sp + 0x30]\n 65789: a1 = t1 <u a2\n 65792: a5 = a1 if a4 == 0\n 65795: a4 = a3 - s1\n 65798: a3 = a3 <u s1\n 65801: s1 = u64 [sp + 0x38]\n 65804: s1 = t0 - s1\n 65807: s1 = s1 - a3\n 65810: a3 = a4 <u a5\n 65813: s1 = s1 - a3\n 65816: a4 = a4 - a5\n 65819: a0 = a0 - t2\n 65822: a1 = a0 - a1\n 65825: a0 = t1 - a2\n 65828: a1 = a1 | s1\n 65831: a2 = a0 | a4\n 65834: a2 = a2 | a1\n 65837: a1 = a1 | a4\n 65840: a2 = a2 >> 0x20\n 65843: a1 = a1 << 0x20\n 65846: a1 = a1 | a2\n 65849: jump @987 if a1 == 0\n      : @984 (gas: 1)\n 65852: trap\n      : @985 (gas: 3)\n 65853: a0 = 0\n 65855: a1 = 0\n 65857: ra = 804, jump @0\n      : @986 [@dyn 402] (gas: 5)\n 65864: i32 a1 = a0 + 0\n 65866: a0 = 0x1\n 65869: a2 = 0\n 65871: ecalli 6 // 'seal_return'\n 65873: fallthrough\n      : @987 (gas: 4)\n 65874: i32 s1 = a0 + 0\n 65876: a0 = u64 [sp]\n 65878: a1 = s1\n 65880: ra = 806, jump @0\n      : @988 [@dyn 403] (gas: 6)\n 65887: i32 a1 = a0 + 0\n 65889: a0 = 0\n 65891: a2 = s1\n 65893: ra = 0x328\n 65897: ecalli 6 // 'seal_return'\n 65899: fallthrough\n      : @989 [@dyn 404] (gas: 13)\n 65900: sp = sp + 0xfffffffffffffee0\n 65904: u64 [sp + 0x118] = ra\n 65908: u64 [sp + 0x110] = s0\n 65912: u64 [sp + 0x108] = s1\n 65916: s0 = sp + 0x120\n 65920: sp = sp & 0xffffffffffffffe0\n 65923: u64 [sp + 248] = 0\n 65927: u64 [sp + 240] = 0\n 65931: u64 [sp + 232] = 0\n 65935: u64 [sp + 224] = 0\n 65939: i32 a0 = sp + 0xe0\n 65943: ecalli 9 // 'value_transferred'\n 65945: fallthrough\n      : @990 (gas: 8)\n 65946: a0 = u64 [sp + 0xf0]\n 65950: a1 = u64 [sp + 0xf8]\n 65954: a2 = u64 [sp + 0xe8]\n 65958: a3 = u64 [sp + 0xe0]\n 65962: a1 = a1 | a2\n 65965: a0 = a0 | a3\n 65968: a0 = a0 | a1\n 65971: jump @999 if a0 != 0\n      : @991 (gas: 2)\n 65975: a0 = i32 [0x20004]\n 65980: jump @999 if a0 <=u 3\n      : @992 (gas: 44)\n 65985: a0 = sp + 0xc0\n 65989: ra = 0x32a\n 65993: sp = sp + 0xfffffffffffffb40\n 65997: u64 [sp + 0x4b8] = ra\n 66001: u64 [sp + 0x4b0] = s0\n 66005: u64 [sp + 0x4a8] = s1\n 66009: s0 = sp + 0x4c0\n 66013: sp = sp & 0xffffffffffffffe0\n 66016: s1 = sp\n 66018: u64 [s1 + 0xb0] = a0\n 66022: u64 [s1 + 1048] = 0\n 66026: u64 [s1 + 1040] = 0\n 66030: u64 [s1 + 1032] = 0\n 66034: a0 = s1 + 0x420\n 66038: a1 = s1 + 0x400\n 66042: u64 [s1 + 1024] = 0\n 66046: ra = 0x3be\n 66050: sp = sp + 0xffffffffffffff40\n 66054: u64 [sp + 0xb8] = ra\n 66058: u64 [sp + 0xb0] = s0\n 66062: u64 [sp + 0xa8] = s1\n 66066: s0 = sp + 0xc0\n 66070: sp = sp & 0xffffffffffffffe0\n 66073: u64 [sp + 0x18] = a0\n 66076: a0 = u64 [a1 + 0x18]\n 66079: a2 = u64 [a1 + 0x10]\n 66082: a3 = u64 [a1 + 0x8]\n 66085: a1 = u64 [a1]\n 66087: u64 [sp + 0x78] = a0\n 66090: u64 [sp + 0x70] = a2\n 66093: u64 [sp + 0x68] = a3\n 66096: u64 [sp + 0x60] = a1\n 66099: u64 [sp + 152] = 0\n 66103: u64 [sp + 144] = 0\n 66107: u64 [sp + 136] = 0\n 66111: u64 [sp + 128] = 0\n 66115: u32 [sp + 160] = 0x20\n 66120: i32 a1 = sp + 0x60\n 66123: i32 a3 = sp + 0x80\n 66127: i32 a4 = sp + 0xa0\n 66131: a2 = 0xffffffffffffffff\n 66134: a0 = 0\n 66136: ecalli 3 // 'get_storage'\n 66138: jump @1107\n      : @993 [@dyn 405] (gas: 11)\n 66141: a0 = u64 [sp + 0xd8]\n 66145: u64 [sp + 0x40] = a0\n 66148: a0 = u64 [sp + 0xd0]\n 66152: u64 [sp + 0x48] = a0\n 66155: a0 = u64 [sp + 0xc8]\n 66159: u64 [sp + 0x50] = a0\n 66162: a0 = u64 [sp + 0xc0]\n 66166: u64 [sp + 0x58] = a0\n 66169: a0 = 0x40\n 66172: a1 = 0x20\n 66175: ra = 812, jump @0\n      : @994 [@dyn 406] (gas: 100)\n 66182: a1 = u8 [a0 + 0x11]\n 66185: a2 = u8 [a0 + 0x10]\n 66188: a3 = u8 [a0 + 0x12]\n 66191: a4 = u8 [a0 + 0x13]\n 66194: a1 = a1 << 0x8\n 66197: a1 = a1 | a2\n 66200: a3 = a3 << 0x10\n 66203: a4 = a4 << 0x18\n 66206: a3 = a3 | a4\n 66209: a1 = a1 | a3\n 66212: a2 = u8 [a0 + 0x15]\n 66215: a3 = u8 [a0 + 0x14]\n 66218: a4 = u8 [a0 + 0x16]\n 66221: a5 = u8 [a0 + 0x17]\n 66224: a2 = a2 << 0x8\n 66227: a2 = a2 | a3\n 66230: a4 = a4 << 0x10\n 66233: a5 = a5 << 0x18\n 66236: a4 = a4 | a5\n 66239: a2 = a2 | a4\n 66242: a2 = a2 << 0x20\n 66245: t0 = a2 | a1\n 66248: a2 = u8 [a0 + 0x1]\n 66251: a3 = u8 [a0]\n 66253: a4 = u8 [a0 + 0x2]\n 66256: a5 = u8 [a0 + 0x3]\n 66259: a2 = a2 << 0x8\n 66262: a2 = a2 | a3\n 66265: a4 = a4 << 0x10\n 66268: a5 = a5 << 0x18\n 66271: a4 = a4 | a5\n 66274: a2 = a2 | a4\n 66277: a3 = u8 [a0 + 0x5]\n 66280: a4 = u8 [a0 + 0x4]\n 66283: a5 = u8 [a0 + 0x6]\n 66286: s1 = u8 [a0 + 0x7]\n 66289: a3 = a3 << 0x8\n 66292: a3 = a3 | a4\n 66295: a5 = a5 << 0x10\n 66298: s1 = s1 << 0x18\n 66301: a5 = a5 | s1\n 66304: a3 = a3 | a5\n 66307: a3 = a3 << 0x20\n 66310: a2 = a2 | a3\n 66313: a3 = u8 [a0 + 0x19]\n 66316: a4 = u8 [a0 + 0x18]\n 66319: a5 = u8 [a0 + 0x1a]\n 66322: s1 = u8 [a0 + 0x1b]\n 66325: a3 = a3 << 0x8\n 66328: a3 = a3 | a4\n 66331: a5 = a5 << 0x10\n 66334: s1 = s1 << 0x18\n 66337: a5 = a5 | s1\n 66340: a3 = a3 | a5\n 66343: a4 = u8 [a0 + 0x1d]\n 66346: a5 = u8 [a0 + 0x1c]\n 66349: s1 = u8 [a0 + 0x1e]\n 66352: a1 = u8 [a0 + 0x1f]\n 66355: a4 = a4 << 0x8\n 66358: a4 = a4 | a5\n 66361: s1 = s1 << 0x10\n 66364: a1 = a1 << 0x18\n 66367: a1 = a1 | s1\n 66370: a1 = a1 | a4\n 66373: a1 = a1 << 0x20\n 66376: a3 = a3 | a1\n 66379: a1 = u8 [a0 + 0x9]\n 66382: a4 = u8 [a0 + 0x8]\n 66385: a5 = u8 [a0 + 0xa]\n 66388: s1 = u8 [a0 + 0xb]\n 66391: a1 = a1 << 0x8\n 66394: a1 = a1 | a4\n 66397: a5 = a5 << 0x10\n 66400: s1 = s1 << 0x18\n 66403: a5 = a5 | s1\n 66406: a1 = a1 | a5\n 66409: a4 = u8 [a0 + 0xd]\n 66412: a5 = u8 [a0 + 0xc]\n 66415: s1 = u8 [a0 + 0xe]\n 66418: a0 = u8 [a0 + 0xf]\n 66421: a4 = a4 << 0x8\n 66424: a4 = a4 | a5\n 66427: s1 = s1 << 0x10\n 66430: a0 = a0 << 0x18\n 66433: a0 = a0 | s1\n 66436: a0 = a0 | a4\n 66439: a0 = a0 << 0x20\n 66442: a0 = a0 | a1\n 66445: s1 = reverse a0\n 66447: a3 = reverse a3\n 66449: a4 = reverse a2\n 66451: a2 = reverse t0\n 66453: a0 = a2 | a4\n 66456: a1 = a3 | s1\n 66459: a1 = a1 | a0\n 66462: a1 = a1 >> 0x20\n 66465: a0 = a0 | s1\n 66468: a0 = a0 << 0x20\n 66471: a0 = a0 | a1\n 66474: jump @998 if a0 != 0\n      : @995 (gas: 19)\n 66478: a0 = a3 + 0x20\n 66481: u64 [sp + 0x18] = a0\n 66484: a0 = a0 <u a3\n 66487: a1 = a2 + a0\n 66490: u64 [sp + 0x8] = a1\n 66493: a1 = a1 <u a2\n 66496: a1 = a0 if a0 == 0\n 66499: a1 = a1 + s1\n 66502: u64 [sp + 0x10] = a1\n 66505: a0 = a1 <u s1\n 66508: a0 = a0 + a4\n 66511: u64 [sp + 0x20] = a0\n 66514: i32 a0 = a3 + 0\n 66516: a1 = 0x20\n 66519: u64 [sp] = a0\n 66521: u64 [sp + 0x30] = a3\n 66524: u64 [sp + 0x28] = a2\n 66527: u64 [sp + 0x38] = a4\n 66530: ra = 814, jump @0\n      : @996 [@dyn 407] (gas: 52)\n 66537: u8 [a0 + 31] = 0x20\n 66541: u8 [a0 + 30] = 0\n 66544: u8 [a0 + 29] = 0\n 66547: u8 [a0 + 28] = 0\n 66550: u8 [a0 + 27] = 0\n 66553: u8 [a0 + 26] = 0\n 66556: u8 [a0 + 25] = 0\n 66559: u8 [a0 + 24] = 0\n 66562: u8 [a0 + 23] = 0\n 66565: u8 [a0 + 22] = 0\n 66568: u8 [a0 + 21] = 0\n 66571: u8 [a0 + 20] = 0\n 66574: u8 [a0 + 19] = 0\n 66577: u8 [a0 + 18] = 0\n 66580: u8 [a0 + 17] = 0\n 66583: u8 [a0 + 16] = 0\n 66586: u8 [a0 + 15] = 0\n 66589: u8 [a0 + 14] = 0\n 66592: u8 [a0 + 13] = 0\n 66595: u8 [a0 + 12] = 0\n 66598: u8 [a0 + 11] = 0\n 66601: u8 [a0 + 10] = 0\n 66604: u8 [a0 + 9] = 0\n 66607: u8 [a0 + 8] = 0\n 66610: u8 [a0 + 7] = 0\n 66613: u8 [a0 + 6] = 0\n 66616: u8 [a0 + 5] = 0\n 66619: u8 [a0 + 4] = 0\n 66622: u8 [a0 + 3] = 0\n 66625: u8 [a0 + 2] = 0\n 66628: u8 [a0 + 1] = 0\n 66631: u8 [a0 + 0] = 0\n 66633: a0 = u64 [sp + 0x8]\n 66636: u64 [sp + 0x68] = a0\n 66639: a0 = u64 [sp + 0x18]\n 66642: u64 [sp + 0x60] = a0\n 66645: a0 = u64 [sp + 0x40]\n 66648: u64 [sp + 0x98] = a0\n 66652: a0 = u64 [sp + 0x48]\n 66655: u64 [sp + 0x90] = a0\n 66659: a0 = u64 [sp + 0x50]\n 66662: u64 [sp + 0x88] = a0\n 66666: a0 = u64 [sp + 0x58]\n 66669: u64 [sp + 0x80] = a0\n 66673: a0 = u64 [sp + 0x10]\n 66676: u64 [sp + 0x70] = a0\n 66679: a0 = sp + 0xa0\n 66683: a1 = sp + 0x80\n 66687: a2 = sp + 0x60\n 66690: a3 = u64 [sp + 0x20]\n 66693: u64 [sp + 0x78] = a3\n 66696: ra = 816, jump @962\n      : @997 [@dyn 408] (gas: 30)\n 66702: a0 = u64 [sp + 0xa8]\n 66706: t0 = u64 [sp + 0xb8]\n 66710: t1 = u64 [sp + 0xa0]\n 66714: a3 = u64 [sp + 0xb0]\n 66718: a1 = u64 [sp + 0x28]\n 66721: a4 = a0 ^ a1\n 66724: a5 = a0 <u a1\n 66727: t2 = a1\n 66729: a2 = u64 [sp + 0x30]\n 66732: a1 = t1 <u a2\n 66735: a5 = a1 if a4 == 0\n 66738: a4 = a3 - s1\n 66741: a3 = a3 <u s1\n 66744: s1 = u64 [sp + 0x38]\n 66747: s1 = t0 - s1\n 66750: s1 = s1 - a3\n 66753: a3 = a4 <u a5\n 66756: s1 = s1 - a3\n 66759: a4 = a4 - a5\n 66762: a0 = a0 - t2\n 66765: a1 = a0 - a1\n 66768: a0 = t1 - a2\n 66771: a1 = a1 | s1\n 66774: a2 = a0 | a4\n 66777: a2 = a2 | a1\n 66780: a1 = a1 | a4\n 66783: a2 = a2 >> 0x20\n 66786: a1 = a1 << 0x20\n 66789: a1 = a1 | a2\n 66792: jump @1001 if a1 == 0\n      : @998 (gas: 1)\n 66795: trap\n      : @999 (gas: 3)\n 66796: a0 = 0\n 66798: a1 = 0\n 66800: ra = 818, jump @0\n      : @1000 [@dyn 409] (gas: 5)\n 66807: i32 a1 = a0 + 0\n 66809: a0 = 0x1\n 66812: a2 = 0\n 66814: ecalli 6 // 'seal_return'\n 66816: fallthrough\n      : @1001 (gas: 4)\n 66817: i32 s1 = a0 + 0\n 66819: a0 = u64 [sp]\n 66821: a1 = s1\n 66823: ra = 820, jump @0\n      : @1002 [@dyn 410] (gas: 6)\n 66830: i32 a1 = a0 + 0\n 66832: a0 = 0\n 66834: a2 = s1\n 66836: ra = 0x336\n 66840: ecalli 6 // 'seal_return'\n 66842: fallthrough\n      : @1003 [@dyn 411] (gas: 5)\n 66843: sp = sp + 0xfffffffffffffff8\n 66846: u64 [sp] = ra\n 66848: a0 = 0\n 66850: a1 = 0\n 66852: ra = 824, jump @0\n      : @1004 [@dyn 412] (gas: 6)\n 66859: i32 a1 = a0 + 0\n 66861: a0 = 0x1\n 66864: a2 = 0\n 66866: ra = 0x33a\n 66870: ecalli 6 // 'seal_return'\n 66872: fallthrough\n      : @1005 [@dyn 413] (gas: 16)\n 66873: sp = sp + 0xffffffffffffffa8\n 66876: u64 [sp + 0x50] = ra\n 66879: u64 [sp + 0x48] = s0\n 66882: u64 [sp + 0x40] = s1\n 66885: a3 = u64 [a0 + 0x10]\n 66888: a4 = u64 [a0 + 0x18]\n 66891: a5 = u64 [a0 + 0x8]\n 66894: a0 = u64 [a0]\n 66896: a4 = a4 | a5\n 66899: a5 = a0 | a3\n 66902: a5 = a5 | a4\n 66905: a5 = a5 >> 0x20\n 66908: a3 = a3 | a4\n 66911: a3 = a3 << 0x20\n 66914: a3 = a3 | a5\n 66917: jump @1013 if a3 != 0\n      : @1006 (gas: 12)\n 66921: a4 = u64 [a2 + 0x18]\n 66924: a5 = u64 [a2 + 0x10]\n 66927: s0 = u64 [a2]\n 66929: s1 = u64 [a2 + 0x8]\n 66932: a2 = s0 | a5\n 66935: a3 = s1 | a4\n 66938: a2 = a2 | a3\n 66941: a2 = a2 >> 0x20\n 66944: a3 = a3 | a5\n 66947: a3 = a3 << 0x20\n 66950: a2 = a2 | a3\n 66953: jump @1013 if a2 != 0\n      : @1007 (gas: 18)\n 66957: u64 [sp + 0x28] = s1\n 66960: u64 [sp + 0x30] = a5\n 66963: u64 [sp + 0x38] = a4\n 66966: a2 = u64 [a1 + 0x18]\n 66969: a3 = u64 [a1 + 0x10]\n 66972: a5 = u64 [a1]\n 66974: a4 = u64 [a1 + 0x8]\n 66977: a1 = a5 | a3\n 66980: u64 [sp + 0x20] = a2\n 66983: u64 [sp + 0x10] = a4\n 66986: a2 = a2 | a4\n 66989: a1 = a1 | a2\n 66992: a1 = a1 >> 0x20\n 66995: u64 [sp + 0x18] = a3\n 66998: a2 = a2 | a3\n 67001: a2 = a2 << 0x20\n 67004: a1 = a1 | a2\n 67007: jump @1013 if a1 != 0\n      : @1008 (gas: 7)\n 67011: i32 a0 = a0 + 0\n 67013: u64 [sp + 0x8] = a0\n 67016: i32 a0 = a5 + 0\n 67018: i32 s1 = s0 + 0\n 67020: a1 = s1\n 67022: u64 [sp] = a5\n 67024: ra = 828, jump @0\n      : @1009 [@dyn 414] (gas: 5)\n 67031: i32 a0 = a0 + 0\n 67033: a1 = s1\n 67035: a2 = u64 [sp + 0x8]\n 67038: ecalli 0 // 'call_data_copy'\n 67039: fallthrough\n      : @1010 (gas: 29)\n 67040: a0 = u64 [sp]\n 67042: a0 = a0 + s0\n 67045: a1 = a0 <u s0\n 67048: a4 = u64 [sp + 0x28]\n 67051: a2 = u64 [sp + 0x10]\n 67054: a2 = a2 + a4\n 67057: a2 = a2 + a1\n 67060: a3 = a2 ^ a4\n 67063: a4 = a2 <u a4\n 67066: a4 = a1 if a3 == 0\n 67069: a5 = u64 [sp + 0x30]\n 67072: a1 = u64 [sp + 0x18]\n 67075: a1 = a1 + a5\n 67078: a4 = a4 + a1\n 67081: a3 = a4 <u a1\n 67084: a1 = a1 <u a5\n 67087: a5 = u64 [sp + 0x38]\n 67090: s1 = u64 [sp + 0x20]\n 67093: a5 = a5 + s1\n 67096: a1 = a1 + a5\n 67099: a1 = a1 + a3\n 67102: a3 = a0 | a4\n 67105: a1 = a1 | a2\n 67108: a3 = a3 | a1\n 67111: a3 = a3 >> 0x20\n 67114: a1 = a1 | a4\n 67117: a1 = a1 << 0x20\n 67120: a1 = a1 | a3\n 67123: jump @1013 if a1 != 0\n      : @1011 (gas: 3)\n 67126: i32 a0 = a0 + 0\n 67128: a1 = 0x20\n 67131: ra = 830, jump @0\n      : @1012 [@dyn 415] (gas: 37)\n 67138: u8 [a0 + 31] = 0\n 67141: u8 [a0 + 30] = 0\n 67144: u8 [a0 + 29] = 0\n 67147: u8 [a0 + 28] = 0\n 67150: u8 [a0 + 27] = 0\n 67153: u8 [a0 + 26] = 0\n 67156: u8 [a0 + 25] = 0\n 67159: u8 [a0 + 24] = 0\n 67162: u8 [a0 + 23] = 0\n 67165: u8 [a0 + 22] = 0\n 67168: u8 [a0 + 21] = 0\n 67171: u8 [a0 + 20] = 0\n 67174: u8 [a0 + 19] = 0\n 67177: u8 [a0 + 18] = 0\n 67180: u8 [a0 + 17] = 0\n 67183: u8 [a0 + 16] = 0\n 67186: u8 [a0 + 15] = 0\n 67189: u8 [a0 + 14] = 0\n 67192: u8 [a0 + 13] = 0\n 67195: u8 [a0 + 12] = 0\n 67198: u8 [a0 + 11] = 0\n 67201: u8 [a0 + 10] = 0\n 67204: u8 [a0 + 9] = 0\n 67207: u8 [a0 + 8] = 0\n 67210: u8 [a0 + 7] = 0\n 67213: u8 [a0 + 6] = 0\n 67216: u8 [a0 + 5] = 0\n 67219: u8 [a0 + 4] = 0\n 67222: u8 [a0 + 3] = 0\n 67225: u8 [a0 + 2] = 0\n 67228: u8 [a0 + 1] = 0\n 67231: u8 [a0 + 0] = 0\n 67233: ra = u64 [sp + 0x50]\n 67236: s0 = u64 [sp + 0x48]\n 67239: s1 = u64 [sp + 0x40]\n 67242: sp = sp + 0x58\n 67245: ret\n      : @1013 (gas: 1)\n 67247: trap\n      : @1014 (gas: 16)\n 67248: sp = sp + 0xfffffffffffffee0\n 67252: u64 [sp + 0x118] = ra\n 67256: u64 [sp + 0x110] = s0\n 67260: u64 [sp + 0x108] = s1\n 67264: s0 = sp + 0x120\n 67268: sp = sp & 0xfffffffffffffff0\n 67271: a4 = u64 [a2 + 0x18]\n 67274: a5 = u64 [a2 + 0x10]\n 67277: s1 = u64 [a2 + 0x8]\n 67280: u64 [sp + 0x50] = a4\n 67283: u64 [sp + 0x48] = a5\n 67286: a4 = a4 | a5\n 67289: a5 = s1 <u 0x1\n 67292: a5 = 0 if a4 != 0\n 67294: u64 [sp] = a0\n 67296: jump @1028 if a5 == 0\n      : @1015 (gas: 35)\n 67300: a0 = u64 [a3 + 0x18]\n 67303: u64 [sp + 0x18] = a0\n 67306: a0 = u64 [a3 + 0x10]\n 67309: u64 [sp + 0x20] = a0\n 67312: a0 = u64 [a3 + 0x8]\n 67315: u64 [sp + 0x8] = a0\n 67318: a0 = u64 [a3]\n 67320: u64 [sp + 0x10] = a0\n 67323: a2 = u64 [a2]\n 67325: a0 = u64 [a1 + 0x18]\n 67328: u64 [sp + 0x70] = a0\n 67331: a0 = u64 [a1 + 0x10]\n 67334: u64 [sp + 0x78] = a0\n 67337: a0 = u64 [a1 + 0x8]\n 67340: u64 [sp + 0x68] = a0\n 67343: a0 = u64 [a1]\n 67345: u64 [sp + 0x60] = a0\n 67348: a0 = a2 + 0x1f\n 67351: u64 [sp + 0x40] = a2\n 67354: a1 = a0 <u a2\n 67357: a1 = a1 + s1\n 67360: a1 = a1 & 0x1\n 67363: a0 = a0 & 0xffffffffffffffe0\n 67366: a2 = a0 + 0x20\n 67369: a0 = a2 <u a0\n 67372: a3 = a1 + a0\n 67375: a4 = a3 <u a1\n 67378: a4 = a0 if a0 == 0\n 67381: u64 [sp + 216] = 0\n 67385: u64 [sp + 0xc0] = a2\n 67389: u64 [sp + 0xc8] = a3\n 67393: a0 = sp + 0xe0\n 67397: a1 = sp + 0xc0\n 67401: u64 [sp + 0xd0] = a4\n 67405: ra = 832, jump @56\n      : @1016 [@dyn 416] (gas: 15)\n 67412: a0 = u64 [sp + 0xf8]\n 67416: a2 = u64 [sp + 0xf0]\n 67420: a1 = u64 [sp + 0xe8]\n 67424: a3 = u64 [sp + 0xe0]\n 67428: u64 [sp + 0x58] = a0\n 67431: u64 [sp + 0x30] = a1\n 67434: a0 = a0 | a1\n 67437: a1 = a3 | a2\n 67440: a1 = a1 | a0\n 67443: a1 = a1 >> 0x20\n 67446: u64 [sp + 0x38] = a2\n 67449: a0 = a0 | a2\n 67452: a0 = a0 << 0x20\n 67455: a0 = a0 | a1\n 67458: jump @1027 if a0 != 0\n      : @1017 (gas: 4)\n 67462: u64 [sp + 0x28] = a3\n 67465: i32 a0 = a3 + 0\n 67467: a1 = 0x20\n 67470: ra = 834, jump @0\n      : @1018 [@dyn 417] (gas: 102)\n 67477: t2 = u64 [sp + 0x40]\n 67480: a1 = u64 [sp + 0x60]\n 67483: a1 = a1 + t2\n 67486: a3 = a1 <u t2\n 67489: a2 = u64 [sp + 0x68]\n 67492: a2 = a2 + s1\n 67495: a4 = a2 + a3\n 67498: a5 = a4 ^ s1\n 67501: a2 = a4 <u s1\n 67504: a2 = a3 if a5 == 0\n 67507: a5 = u64 [sp + 0x8]\n 67510: a3 = a4 ^ a5\n 67513: a4 = a5 <u a4\n 67516: a5 = u64 [sp + 0x10]\n 67519: a1 = a5 <u a1\n 67522: ra = u64 [sp + 0x48]\n 67525: a5 = u64 [sp + 0x78]\n 67528: a5 = a5 + ra\n 67531: a1 = a4 if a3 != 0\n 67534: a3 = a5 <u ra\n 67537: t1 = u64 [sp + 0x50]\n 67540: a4 = u64 [sp + 0x70]\n 67543: a4 = a4 + t1\n 67546: a3 = a3 + a4\n 67549: a2 = a2 + a5\n 67552: a4 = a2 <u a5\n 67555: a3 = a3 + a4\n 67558: a5 = u64 [sp + 0x18]\n 67561: a4 = a3 ^ a5\n 67564: a3 = a5 <u a3\n 67567: t0 = u64 [sp + 0x20]\n 67570: a5 = t0 <u a2\n 67573: a3 = a5 if a4 == 0\n 67576: a2 = a2 ^ t0\n 67579: a2 = a2 | a4\n 67582: a1 = a3 if a2 != 0\n 67585: a2 = reverse t2\n 67587: a3 = a2 >> 0x38\n 67590: u8 [a0 + 0x1f] = a3\n 67593: a3 = a2 >> 0x30\n 67596: u8 [a0 + 0x1e] = a3\n 67599: a3 = a2 >> 0x28\n 67602: u8 [a0 + 0x1d] = a3\n 67605: a3 = a2 >> 0x20\n 67608: u8 [a0 + 0x1c] = a3\n 67611: a3 = a2 >> 0x18\n 67614: u8 [a0 + 0x1b] = a3\n 67617: a3 = a2 >> 0x10\n 67620: u8 [a0 + 0x1a] = a3\n 67623: a3 = a2 >> 0x8\n 67626: u8 [a0 + 0x19] = a3\n 67629: a3 = reverse s1\n 67631: u8 [a0 + 0x18] = a2\n 67634: a2 = a3 >> 0x38\n 67637: u8 [a0 + 0x17] = a2\n 67640: a2 = a3 >> 0x30\n 67643: u8 [a0 + 0x16] = a2\n 67646: a2 = a3 >> 0x28\n 67649: u8 [a0 + 0x15] = a2\n 67652: a2 = a3 >> 0x20\n 67655: u8 [a0 + 0x14] = a2\n 67658: a2 = a3 >> 0x18\n 67661: u8 [a0 + 0x13] = a2\n 67664: a2 = a3 >> 0x10\n 67667: u8 [a0 + 0x12] = a2\n 67670: a2 = reverse ra\n 67672: u8 [a0 + 0x10] = a3\n 67675: a3 = a3 >> 0x8\n 67678: u8 [a0 + 0x11] = a3\n 67681: a3 = a2 >> 0x38\n 67684: u8 [a0 + 0xf] = a3\n 67687: a3 = a2 >> 0x30\n 67690: u8 [a0 + 0xe] = a3\n 67693: a3 = a2 >> 0x28\n 67696: u8 [a0 + 0xd] = a3\n 67699: a3 = a2 >> 0x20\n 67702: u8 [a0 + 0xc] = a3\n 67705: a3 = a2 >> 0x18\n 67708: u8 [a0 + 0xb] = a3\n 67711: a3 = a2 >> 0x10\n 67714: u8 [a0 + 0xa] = a3\n 67717: a3 = reverse t1\n 67719: u8 [a0 + 0x8] = a2\n 67722: a2 = a2 >> 0x8\n 67725: u8 [a0 + 0x9] = a2\n 67728: a2 = a3 >> 0x38\n 67731: u8 [a0 + 0x7] = a2\n 67734: a2 = a3 >> 0x30\n 67737: u8 [a0 + 0x6] = a2\n 67740: a2 = a3 >> 0x28\n 67743: u8 [a0 + 0x5] = a2\n 67746: a2 = a3 >> 0x20\n 67749: u8 [a0 + 0x4] = a2\n 67752: a2 = a3 >> 0x18\n 67755: u8 [a0 + 0x3] = a2\n 67758: a2 = a3 >> 0x10\n 67761: u8 [a0 + 0x2] = a2\n 67764: u8 [a0] = a3\n 67766: a3 = a3 >> 0x8\n 67769: u8 [a0 + 0x1] = a3\n 67772: t0 = u64 [sp + 0x60]\n 67775: jump @1032 if a1 != 0\n      : @1019 (gas: 12)\n 67779: a2 = u64 [sp + 0x78]\n 67782: a0 = t0 | a2\n 67785: a1 = u64 [sp + 0x70]\n 67788: a3 = u64 [sp + 0x68]\n 67791: a1 = a1 | a3\n 67794: a0 = a0 | a1\n 67797: a0 = a0 >> 0x20\n 67800: a1 = a1 | a2\n 67803: a1 = a1 << 0x20\n 67806: a0 = a0 | a1\n 67809: a3 = u64 [sp + 0x58]\n 67812: jump @1027 if a0 != 0\n      : @1020 (gas: 11)\n 67816: a0 = t2 | ra\n 67819: a1 = s1 | t1\n 67822: a0 = a0 | a1\n 67825: a0 = a0 >> 0x20\n 67828: a1 = a1 | ra\n 67831: a1 = a1 << 0x20\n 67834: a0 = a0 | a1\n 67837: a2 = u64 [sp + 0x38]\n 67840: a4 = u64 [sp + 0x30]\n 67843: a5 = u64 [sp + 0x28]\n 67846: jump @1027 if a0 != 0\n      : @1021 (gas: 7)\n 67850: u64 [sp + 0x78] = s1\n 67853: a0 = a2 | a3\n 67856: a1 = 0xffffffe0\n 67866: a1 = a5 <u a1\n 67869: a1 = 0 if a4 != 0\n 67871: a1 = 0 if a0 != 0\n 67873: jump @1027 if a1 == 0\n      : @1022 (gas: 16)\n 67877: s1 = a5 + 0x20\n 67880: a0 = s1 <u a5\n 67883: a1 = a4 + a0\n 67886: u64 [sp + 0x20] = a1\n 67889: a1 = a1 <u a4\n 67892: a1 = a0 if a0 == 0\n 67895: a1 = a1 + a2\n 67898: u64 [sp + 0x68] = a1\n 67901: a0 = a1 <u a2\n 67904: u64 [sp + 0x70] = a0\n 67907: i32 t0 = t0 + 0\n 67909: u64 [sp + 0x60] = t0\n 67912: i32 a0 = s1 + 0\n 67914: i32 a1 = t2 + 0\n 67916: u64 [sp + 0x18] = a1\n 67919: ra = 836, jump @0\n      : @1023 [@dyn 418] (gas: 5)\n 67926: i32 a0 = a0 + 0\n 67928: a1 = u64 [sp + 0x18]\n 67931: a2 = u64 [sp + 0x60]\n 67934: ecalli 0 // 'call_data_copy'\n 67935: fallthrough\n      : @1024 (gas: 31)\n 67936: a0 = u64 [sp + 0x40]\n 67939: a0 = a0 + s1\n 67942: a1 = a0 <u s1\n 67945: a2 = u64 [sp + 0x78]\n 67948: a4 = u64 [sp + 0x20]\n 67951: a2 = a2 + a4\n 67954: a2 = a2 + a1\n 67957: a3 = a2 ^ a4\n 67960: a4 = a2 <u a4\n 67963: a4 = a1 if a3 == 0\n 67966: a1 = u64 [sp + 0x48]\n 67969: a3 = u64 [sp + 0x68]\n 67972: a1 = a1 + a3\n 67975: a4 = a4 + a1\n 67978: t0 = a4 <u a1\n 67981: a1 = a1 <u a3\n 67984: a5 = u64 [sp + 0x50]\n 67987: s1 = u64 [sp + 0x58]\n 67990: a5 = a5 + s1\n 67993: a3 = u64 [sp + 0x70]\n 67996: a5 = a5 + a3\n 67999: a1 = a1 + a5\n 68002: a1 = a1 + t0\n 68005: a3 = a0 | a4\n 68008: a1 = a1 | a2\n 68011: a3 = a3 | a1\n 68014: a3 = a3 >> 0x20\n 68017: a1 = a1 | a4\n 68020: a1 = a1 << 0x20\n 68023: a1 = a1 | a3\n 68026: jump @1027 if a1 != 0\n      : @1025 (gas: 3)\n 68030: i32 a0 = a0 + 0\n 68032: a1 = 0x20\n 68035: ra = 838, jump @0\n      : @1026 [@dyn 419] (gas: 46)\n 68042: u8 [a0 + 31] = 0\n 68045: u8 [a0 + 30] = 0\n 68048: u8 [a0 + 29] = 0\n 68051: u8 [a0 + 28] = 0\n 68054: u8 [a0 + 27] = 0\n 68057: u8 [a0 + 26] = 0\n 68060: u8 [a0 + 25] = 0\n 68063: u8 [a0 + 24] = 0\n 68066: u8 [a0 + 23] = 0\n 68069: u8 [a0 + 22] = 0\n 68072: u8 [a0 + 21] = 0\n 68075: u8 [a0 + 20] = 0\n 68078: u8 [a0 + 19] = 0\n 68081: u8 [a0 + 18] = 0\n 68084: u8 [a0 + 17] = 0\n 68087: u8 [a0 + 16] = 0\n 68090: u8 [a0 + 15] = 0\n 68093: u8 [a0 + 14] = 0\n 68096: u8 [a0 + 13] = 0\n 68099: u8 [a0 + 12] = 0\n 68102: u8 [a0 + 11] = 0\n 68105: u8 [a0 + 10] = 0\n 68108: u8 [a0 + 9] = 0\n 68111: u8 [a0 + 8] = 0\n 68114: u8 [a0 + 7] = 0\n 68117: u8 [a0 + 6] = 0\n 68120: u8 [a0 + 5] = 0\n 68123: u8 [a0 + 4] = 0\n 68126: u8 [a0 + 3] = 0\n 68129: u8 [a0 + 2] = 0\n 68132: u8 [a0 + 1] = 0\n 68135: u8 [a0 + 0] = 0\n 68137: a0 = u64 [sp]\n 68139: a1 = u64 [sp + 0x28]\n 68142: u64 [a0] = a1\n 68144: u64 [a0 + 0x18] = s1\n 68147: a1 = u64 [sp + 0x30]\n 68150: u64 [a0 + 0x8] = a1\n 68153: a1 = u64 [sp + 0x38]\n 68156: u64 [a0 + 0x10] = a1\n 68159: sp = s0 + 0xfffffffffffffee0\n 68163: ra = u64 [sp + 0x118]\n 68167: s0 = u64 [sp + 0x110]\n 68171: s1 = u64 [sp + 0x108]\n 68175: sp = sp + 0x120\n 68179: ret\n      : @1027 (gas: 1)\n 68181: trap\n      : @1028 (gas: 8)\n 68182: u64 [sp + 176] = 0\n 68186: u64 [sp + 168] = 0\n 68190: u64 [sp + 160] = 0\n 68194: a0 = 0x4e487b7100000000\n 68204: a1 = sp + 0xa0\n 68208: u64 [sp + 0xb8] = a0\n 68212: a0 = 0\n 68214: ra = 840, jump @23\n      : @1029 [@dyn 420] (gas: 7)\n 68221: u64 [sp + 152] = 0\n 68225: u64 [sp + 144] = 0\n 68229: u64 [sp + 128] = 0x41\n 68234: a0 = 0x4\n 68237: a1 = sp + 0x80\n 68241: u64 [sp + 136] = 0\n 68245: ra = 842, jump @23\n      : @1030 [@dyn 421] (gas: 3)\n 68252: a1 = 0x24\n 68255: a0 = 0\n 68257: ra = 844, jump @0\n      : @1031 [@dyn 422] (gas: 5)\n 68264: i32 a1 = a0 + 0\n 68266: a0 = 0x1\n 68269: a2 = 0x24\n 68272: ecalli 6 // 'seal_return'\n 68274: fallthrough\n      : @1032 (gas: 3)\n 68275: a0 = 0\n 68277: a1 = 0\n 68279: ra = 846, jump @0\n      : @1033 [@dyn 423] (gas: 6)\n 68286: i32 a1 = a0 + 0\n 68288: a0 = 0x1\n 68291: a2 = 0\n 68293: ra = 0x350\n 68297: ecalli 6 // 'seal_return'\n 68299: fallthrough\n      : @1034 [@dyn 424] (gas: 38)\n 68300: sp = sp + 0xffffffffffffff00\n 68304: u64 [sp + 0xf8] = ra\n 68308: u64 [sp + 0xf0] = s0\n 68312: u64 [sp + 0xe8] = s1\n 68316: s0 = sp + 0x100\n 68320: sp = sp & 0xffffffffffffffe0\n 68323: ra = u64 [a1]\n 68325: a4 = u64 [a2 + 0x8]\n 68328: t2 = u64 [a1 + 0x8]\n 68331: s1 = u64 [a2]\n 68333: a3 = ra + 0x1f\n 68336: t1 = a3 <u ra\n 68339: a5 = t2 + t1\n 68342: u64 [sp + 0x20] = s1\n 68345: a3 = a3 <u s1\n 68348: s1 = a5 ^ a4\n 68351: u64 [sp + 0x28] = a4\n 68354: a4 = a5 <u a4\n 68357: a4 = a3 if s1 == 0\n 68360: t0 = u64 [a1 + 0x10]\n 68363: u64 [sp + 0x38] = t2\n 68366: a3 = a5 <u t2\n 68369: a3 = t1 if t1 == 0\n 68372: t1 = u64 [a2 + 0x18]\n 68375: a5 = u64 [a1 + 0x18]\n 68378: s1 = u64 [a2 + 0x10]\n 68381: a3 = a3 + t0\n 68384: a1 = a3 <u t0\n 68387: u64 [sp + 0x30] = a5\n 68390: a1 = a1 + a5\n 68393: a2 = a1 ^ t1\n 68396: a1 = a1 <s t1\n 68399: a5 = a3 <u s1\n 68402: a1 = a5 if a2 == 0\n 68405: a3 = a3 ^ s1\n 68408: a2 = a2 | a3\n 68411: a4 = a1 if a2 != 0\n 68414: jump @1039 if a4 == 0\n      : @1035 (gas: 14)\n 68418: t2 = t0\n 68420: u64 [sp + 0x8] = s1\n 68423: u64 [sp + 0x10] = t1\n 68426: u64 [sp + 0x18] = a0\n 68429: a0 = ra | t2\n 68432: a1 = u64 [sp + 0x38]\n 68435: a2 = u64 [sp + 0x30]\n 68438: a1 = a1 | a2\n 68441: a0 = a0 | a1\n 68444: a0 = a0 >> 0x20\n 68447: a1 = a1 | t2\n 68450: a1 = a1 << 0x20\n 68453: a0 = a0 | a1\n 68456: jump @1038 if a0 != 0\n      : @1036 (gas: 41)\n 68460: s1 = t2\n 68462: i32 a1 = ra + 0\n 68464: i32 a0 = sp + 0xc0\n 68468: u64 [sp] = ra\n 68470: ecalli 1 // 'call_data_load'\n 68472: t0 = u64 [sp + 0xc0]\n 68476: t1 = u64 [sp + 0xc8]\n 68480: a2 = u64 [sp + 0xd0]\n 68484: a3 = u64 [sp + 0xd8]\n 68488: a0 = u64 [sp]\n 68490: a4 = a0 + 0x20\n 68493: a5 = a4 <u a0\n 68496: a1 = u64 [sp + 0x38]\n 68499: a0 = a1 + a5\n 68502: a1 = a0 <u a1\n 68505: a1 = a5 if a5 == 0\n 68508: a1 = a1 + s1\n 68511: a5 = a1 <u s1\n 68514: s1 = u64 [sp + 0x30]\n 68517: a5 = a5 + s1\n 68520: s1 = u64 [sp + 0x10]\n 68523: u64 [sp + 0x58] = s1\n 68526: s1 = u64 [sp + 0x8]\n 68529: u64 [sp + 0x50] = s1\n 68532: s1 = u64 [sp + 0x28]\n 68535: u64 [sp + 0x48] = s1\n 68538: s1 = u64 [sp + 0x20]\n 68541: u64 [sp + 0x40] = s1\n 68544: u64 [sp + 0x78] = a3\n 68547: u64 [sp + 0x70] = a2\n 68550: u64 [sp + 0x68] = t1\n 68553: u64 [sp + 0x60] = t0\n 68556: u64 [sp + 0x88] = a0\n 68560: u64 [sp + 0x80] = a4\n 68564: u64 [sp + 0x90] = a1\n 68568: a0 = sp + 0xa0\n 68572: a1 = sp + 0x80\n 68576: a2 = sp + 0x60\n 68579: a3 = sp + 0x40\n 68582: u64 [sp + 0x98] = a5\n 68586: ra = 850, jump @1014\n      : @1037 [@dyn 425] (gas: 15)\n 68592: a0 = u64 [sp + 0xb0]\n 68596: a1 = u64 [sp + 0xb8]\n 68600: a2 = u64 [sp + 0xa0]\n 68604: a3 = u64 [sp + 0xa8]\n 68608: a4 = u64 [sp + 0x18]\n 68611: u64 [a4 + 0x10] = a0\n 68614: u64 [a4 + 0x18] = a1\n 68617: u64 [a4] = a2\n 68619: u64 [a4 + 0x8] = a3\n 68622: sp = s0 + 0xffffffffffffff00\n 68626: ra = u64 [sp + 0xf8]\n 68630: s0 = u64 [sp + 0xf0]\n 68634: s1 = u64 [sp + 0xe8]\n 68638: sp = sp + 0x100\n 68642: ret\n      : @1038 (gas: 1)\n 68644: trap\n      : @1039 (gas: 3)\n 68645: a0 = 0\n 68647: a1 = 0\n 68649: ra = 852, jump @0\n      : @1040 [@dyn 426] (gas: 6)\n 68656: i32 a1 = a0 + 0\n 68658: a0 = 0x1\n 68661: a2 = 0\n 68663: ra = 0x356\n 68667: ecalli 6 // 'seal_return'\n 68669: fallthrough\n      : @1041 [@dyn 427] (gas: 42)\n 68670: sp = sp + 0xfffffffffffffee0\n 68674: u64 [sp + 0x118] = ra\n 68678: u64 [sp + 0x110] = s0\n 68682: u64 [sp + 0x108] = s1\n 68686: s0 = sp + 0x120\n 68690: sp = sp & 0xffffffffffffffe0\n 68693: s1 = u64 [a2 + 0x8]\n 68696: t2 = u64 [a1 + 0x8]\n 68699: a5 = u64 [a2]\n 68701: ra = u64 [a1]\n 68703: t1 = u64 [a2 + 0x10]\n 68706: a4 = s1 ^ t2\n 68709: a3 = s1 <u t2\n 68712: t0 = a5 <u ra\n 68715: a3 = t0 if a4 == 0\n 68718: u64 [sp + 0x38] = s1\n 68721: a4 = s1 - t2\n 68724: a4 = a4 - t0\n 68727: u64 [sp + 0x30] = a5\n 68730: a5 = a5 - ra\n 68733: a5 = a5 <u 0x20\n 68736: a5 = a5 ^ 0x1\n 68739: t0 = u64 [a1 + 0x10]\n 68742: s1 = a4 >u 0\n 68744: a5 = s1 if a4 != 0\n 68747: a4 = u64 [a2 + 0x18]\n 68750: s1 = u64 [a1 + 0x18]\n 68753: a1 = t1 - t0\n 68756: a2 = a1 - a3\n 68759: a1 = a1 <u a3\n 68762: u64 [sp + 0x28] = t1\n 68765: a3 = t1 <u t0\n 68768: u64 [sp + 0x20] = a4\n 68771: a4 = a4 - s1\n 68774: a4 = a4 - a3\n 68777: a4 = a4 - a1\n 68780: a1 = a4 >s 0\n 68782: a3 = a2 >u 0\n 68784: a3 = a1 if a4 != 0\n 68787: a2 = a2 | a4\n 68790: a5 = a3 if a2 != 0\n 68793: jump @1050 if a5 == 0\n      : @1042 (gas: 11)\n 68797: a2 = ra | t0\n 68800: u64 [sp + 0x18] = t2\n 68803: u64 [sp + 0x8] = s1\n 68806: a1 = t2 | s1\n 68809: a2 = a2 | a1\n 68812: a2 = a2 >> 0x20\n 68815: u64 [sp + 0x10] = t0\n 68818: a1 = a1 | t0\n 68821: a1 = a1 << 0x20\n 68824: a1 = a1 | a2\n 68827: jump @1049 if a1 != 0\n      : @1043 (gas: 6)\n 68831: u64 [sp] = a0\n 68833: s1 = ra\n 68835: i32 a1 = ra + 0\n 68837: i32 a0 = sp + 0xc0\n 68841: ecalli 1 // 'call_data_load'\n 68843: fallthrough\n      : @1044 (gas: 7)\n 68844: a0 = u64 [sp + 0xd8]\n 68848: a1 = u64 [sp + 0xd0]\n 68852: a2 = u64 [sp + 0xc8]\n 68856: a3 = a1 | a0\n 68859: a4 = a2 <u 0x1\n 68862: a4 = 0 if a3 != 0\n 68864: jump @1050 if a4 == 0\n      : @1045 (gas: 42)\n 68868: a3 = u64 [sp + 0xc0]\n 68872: t0 = a3 + s1\n 68875: a3 = t0 <u a3\n 68878: a4 = u64 [sp + 0x18]\n 68881: a4 = a4 + a2\n 68884: t1 = a4 + a3\n 68887: a4 = t1 ^ a2\n 68890: s1 = t1 <u a2\n 68893: s1 = a3 if a4 == 0\n 68896: a2 = u64 [sp + 0x10]\n 68899: a2 = a2 + a1\n 68902: s1 = s1 + a2\n 68905: a3 = s1 <u a2\n 68908: a1 = a2 <u a1\n 68911: a2 = u64 [sp + 0x8]\n 68914: a0 = a0 + a2\n 68917: a0 = a0 + a1\n 68920: ra = a0 + a3\n 68923: a0 = t0 + 0x1f\n 68926: a1 = a0 <u t0\n 68929: a2 = t1 + a1\n 68932: a3 = a2 <u t1\n 68935: a3 = a1 if a1 == 0\n 68938: t2 = s1 + a3\n 68941: a1 = t2 <u s1\n 68944: a1 = a1 + ra\n 68947: a5 = u64 [sp + 0x38]\n 68950: a4 = a2 ^ a5\n 68953: a2 = a2 <u a5\n 68956: a5 = u64 [sp + 0x30]\n 68959: a0 = a0 <u a5\n 68962: a0 = a2 if a4 != 0\n 68965: a5 = u64 [sp + 0x28]\n 68968: a2 = t2 <u a5\n 68971: a4 = u64 [sp + 0x20]\n 68974: a3 = a1 ^ a4\n 68977: a1 = a1 <s a4\n 68980: a1 = a2 if a3 == 0\n 68983: a2 = t2 ^ a5\n 68986: a2 = a2 | a3\n 68989: a0 = a1 if a2 != 0\n 68992: jump @1051 if a0 == 0\n      : @1046 (gas: 11)\n 68996: a0 = t0 | s1\n 68999: u64 [sp + 0x18] = t1\n 69002: u64 [sp + 0x8] = ra\n 69005: a1 = t1 | ra\n 69008: a0 = a0 | a1\n 69011: a0 = a0 >> 0x20\n 69014: u64 [sp + 0x10] = s1\n 69017: a1 = a1 | s1\n 69020: a1 = a1 << 0x20\n 69023: a0 = a0 | a1\n 69026: jump @1049 if a0 != 0\n      : @1047 (gas: 40)\n 69030: i32 a1 = t0 + 0\n 69032: i32 a0 = sp + 0xe0\n 69036: s1 = t0\n 69038: ecalli 1 // 'call_data_load'\n 69040: t0 = u64 [sp + 0xe0]\n 69044: t1 = u64 [sp + 0xe8]\n 69048: a2 = u64 [sp + 0xf0]\n 69052: a3 = u64 [sp + 0xf8]\n 69056: a4 = s1 + 0x20\n 69059: a5 = a4 <u s1\n 69062: a1 = u64 [sp + 0x18]\n 69065: a0 = a1 + a5\n 69068: a1 = a0 <u a1\n 69071: a1 = a5 if a5 == 0\n 69074: a5 = u64 [sp + 0x10]\n 69077: a1 = a1 + a5\n 69080: a5 = a1 <u a5\n 69083: s1 = u64 [sp + 0x8]\n 69086: a5 = a5 + s1\n 69089: s1 = u64 [sp + 0x20]\n 69092: u64 [sp + 0x58] = s1\n 69095: s1 = u64 [sp + 0x28]\n 69098: u64 [sp + 0x50] = s1\n 69101: s1 = u64 [sp + 0x38]\n 69104: u64 [sp + 0x48] = s1\n 69107: s1 = u64 [sp + 0x30]\n 69110: u64 [sp + 0x40] = s1\n 69113: u64 [sp + 0x78] = a3\n 69116: u64 [sp + 0x70] = a2\n 69119: u64 [sp + 0x68] = t1\n 69122: u64 [sp + 0x60] = t0\n 69125: u64 [sp + 0x88] = a0\n 69129: u64 [sp + 0x80] = a4\n 69133: u64 [sp + 0x90] = a1\n 69137: a0 = sp + 0xa0\n 69141: a1 = sp + 0x80\n 69145: a2 = sp + 0x60\n 69148: a3 = sp + 0x40\n 69151: u64 [sp + 0x98] = a5\n 69155: ra = 856, jump @1014\n      : @1048 [@dyn 428] (gas: 15)\n 69161: a0 = u64 [sp + 0xb8]\n 69165: a1 = u64 [sp + 0xb0]\n 69169: a2 = u64 [sp + 0xa8]\n 69173: a3 = u64 [sp + 0xa0]\n 69177: a4 = u64 [sp]\n 69179: u64 [a4 + 0x18] = a0\n 69182: u64 [a4 + 0x10] = a1\n 69185: u64 [a4 + 0x8] = a2\n 69188: u64 [a4] = a3\n 69190: sp = s0 + 0xfffffffffffffee0\n 69194: ra = u64 [sp + 0x118]\n 69198: s0 = u64 [sp + 0x110]\n 69202: s1 = u64 [sp + 0x108]\n 69206: sp = sp + 0x120\n 69210: ret\n      : @1049 (gas: 1)\n 69212: trap\n      : @1050 (gas: 4)\n 69213: a0 = 0\n 69215: a1 = 0\n 69217: ra = 0x35a\n 69221: jump @0\n      : @1051 (gas: 2)\n 69225: a1 = 0\n 69227: ra = 858, jump @0\n      : @1052 [@dyn 429] (gas: 6)\n 69234: i32 a1 = a0 + 0\n 69236: a0 = 0x1\n 69239: a2 = 0\n 69241: ra = 0x35c\n 69245: ecalli 6 // 'seal_return'\n 69247: fallthrough\n      : @1053 [@dyn 430] (gas: 9)\n 69248: a2 = u64 [a1 + 0x18]\n 69251: a3 = u64 [a1 + 0x10]\n 69254: a4 = u64 [a1 + 0x8]\n 69257: a1 = u64 [a1]\n 69259: u64 [a0 + 0x18] = a2\n 69262: u64 [a0 + 0x10] = a3\n 69265: u64 [a0 + 0x8] = a4\n 69268: u64 [a0] = a1\n 69270: ret\n      : @1054 (gas: 8)\n 69272: a0 = u64 [sp + 0xb0]\n 69276: a1 = u64 [sp + 0xb8]\n 69280: a2 = u64 [sp + 0xa8]\n 69284: a3 = u64 [sp + 0xa0]\n 69288: a1 = a1 | a2\n 69291: a0 = a0 | a3\n 69294: a0 = a0 | a1\n 69297: jump @1060 if a0 != 0\n      : @1055 (gas: 13)\n 69301: a0 = u32 [0x20004]\n 69306: u64 [sp + 88] = 0\n 69309: u64 [sp + 80] = 0\n 69312: u64 [sp + 72] = 0\n 69315: u64 [sp + 0x40] = a0\n 69318: u64 [sp + 120] = 0\n 69321: u64 [sp + 112] = 0\n 69324: u64 [sp + 96] = 0x4\n 69328: a0 = sp + 0x80\n 69332: a1 = sp + 0x60\n 69335: a2 = sp + 0x40\n 69338: u64 [sp + 104] = 0\n 69341: ra = 862, jump @1041\n      : @1056 [@dyn 431] (gas: 15)\n 69347: a0 = u64 [sp + 0x80]\n 69351: a1 = u64 [sp + 0x88]\n 69355: a2 = u64 [sp + 0x90]\n 69359: a3 = u64 [sp + 0x98]\n 69363: u64 [sp + 0x18] = a3\n 69366: u64 [sp + 0x10] = a2\n 69369: u64 [sp + 0x8] = a1\n 69372: u64 [sp] = a0\n 69374: u64 [sp + 56] = 0\n 69377: u64 [sp + 48] = 0\n 69380: u64 [sp + 40] = 0\n 69383: a0 = sp + 0x20\n 69386: a1 = sp\n 69388: u64 [sp + 32] = 0\n 69391: ra = 864, jump @177\n      : @1057 [@dyn 432] (gas: 3)\n 69398: a0 = 0x40\n 69401: a1 = 0x20\n 69404: ra = 866, jump @0\n      : @1058 [@dyn 433] (gas: 100)\n 69411: a1 = u8 [a0 + 0x11]\n 69414: a2 = u8 [a0 + 0x10]\n 69417: a3 = u8 [a0 + 0x12]\n 69420: a4 = u8 [a0 + 0x13]\n 69423: a1 = a1 << 0x8\n 69426: a1 = a1 | a2\n 69429: a3 = a3 << 0x10\n 69432: a4 = a4 << 0x18\n 69435: a3 = a3 | a4\n 69438: a1 = a1 | a3\n 69441: a2 = u8 [a0 + 0x15]\n 69444: a3 = u8 [a0 + 0x14]\n 69447: a4 = u8 [a0 + 0x16]\n 69450: a5 = u8 [a0 + 0x17]\n 69453: a2 = a2 << 0x8\n 69456: a2 = a2 | a3\n 69459: a4 = a4 << 0x10\n 69462: a5 = a5 << 0x18\n 69465: a4 = a4 | a5\n 69468: a2 = a2 | a4\n 69471: a2 = a2 << 0x20\n 69474: t0 = a2 | a1\n 69477: a2 = u8 [a0 + 0x1]\n 69480: a3 = u8 [a0]\n 69482: a4 = u8 [a0 + 0x2]\n 69485: a5 = u8 [a0 + 0x3]\n 69488: a2 = a2 << 0x8\n 69491: a2 = a2 | a3\n 69494: a4 = a4 << 0x10\n 69497: a5 = a5 << 0x18\n 69500: a4 = a4 | a5\n 69503: a2 = a2 | a4\n 69506: a3 = u8 [a0 + 0x5]\n 69509: a4 = u8 [a0 + 0x4]\n 69512: a5 = u8 [a0 + 0x6]\n 69515: a1 = u8 [a0 + 0x7]\n 69518: a3 = a3 << 0x8\n 69521: a3 = a3 | a4\n 69524: a5 = a5 << 0x10\n 69527: a1 = a1 << 0x18\n 69530: a1 = a1 | a5\n 69533: a1 = a1 | a3\n 69536: a1 = a1 << 0x20\n 69539: t1 = a1 | a2\n 69542: a1 = u8 [a0 + 0x19]\n 69545: a3 = u8 [a0 + 0x18]\n 69548: a4 = u8 [a0 + 0x1a]\n 69551: a5 = u8 [a0 + 0x1b]\n 69554: a1 = a1 << 0x8\n 69557: a1 = a1 | a3\n 69560: a4 = a4 << 0x10\n 69563: a5 = a5 << 0x18\n 69566: a4 = a4 | a5\n 69569: a1 = a1 | a4\n 69572: a3 = u8 [a0 + 0x1d]\n 69575: a4 = u8 [a0 + 0x1c]\n 69578: a5 = u8 [a0 + 0x1e]\n 69581: a2 = u8 [a0 + 0x1f]\n 69584: a3 = a3 << 0x8\n 69587: a3 = a3 | a4\n 69590: a5 = a5 << 0x10\n 69593: a2 = a2 << 0x18\n 69596: a2 = a2 | a5\n 69599: a2 = a2 | a3\n 69602: a2 = a2 << 0x20\n 69605: a3 = a2 | a1\n 69608: a1 = u8 [a0 + 0x9]\n 69611: a2 = u8 [a0 + 0x8]\n 69614: a4 = u8 [a0 + 0xa]\n 69617: a5 = u8 [a0 + 0xb]\n 69620: a1 = a1 << 0x8\n 69623: a1 = a1 | a2\n 69626: a4 = a4 << 0x10\n 69629: a5 = a5 << 0x18\n 69632: a4 = a4 | a5\n 69635: a1 = a1 | a4\n 69638: a2 = u8 [a0 + 0xd]\n 69641: a4 = u8 [a0 + 0xc]\n 69644: a5 = u8 [a0 + 0xe]\n 69647: a0 = u8 [a0 + 0xf]\n 69650: a2 = a2 << 0x8\n 69653: a2 = a2 | a4\n 69656: a5 = a5 << 0x10\n 69659: a0 = a0 << 0x18\n 69662: a0 = a0 | a5\n 69665: a0 = a0 | a2\n 69668: a0 = a0 << 0x20\n 69671: a0 = a0 | a1\n 69674: a1 = reverse a0\n 69676: a0 = reverse a3\n 69678: a2 = reverse t1\n 69680: a3 = reverse t0\n 69682: a2 = a2 | a3\n 69685: a3 = a0 | a1\n 69688: a3 = a3 | a2\n 69691: a3 = a3 >> 0x20\n 69694: a1 = a1 | a2\n 69697: a1 = a1 << 0x20\n 69700: a1 = a1 | a3\n 69703: jump @1062 if a1 == 0\n      : @1059 (gas: 1)\n 69706: trap\n      : @1060 (gas: 3)\n 69707: a0 = 0\n 69709: a1 = 0\n 69711: ra = 868, jump @0\n      : @1061 [@dyn 434] (gas: 7)\n 69718: i32 a1 = a0 + 0\n 69720: a0 = 0x1\n 69723: a2 = 0\n 69725: ecalli 6 // 'seal_return'\n 69727: i32 a0 = a0 + 0\n 69729: ra = 0x366\n 69733: jump @0\n      : @1062 (gas: 2)\n 69737: i32 a0 = a0 + 0\n 69739: ra = 870, jump @0\n      : @1063 [@dyn 435] (gas: 6)\n 69746: i32 a1 = a0 + 0\n 69748: a0 = 0\n 69750: a2 = 0\n 69752: ra = 0x368\n 69756: ecalli 6 // 'seal_return'\n 69758: fallthrough\n      : @1064 [@dyn 436] (gas: 6)\n 69759: u64 [a0 + 24] = 0\n 69762: u64 [a0 + 16] = 0\n 69765: u64 [a0 + 8] = 0\n 69768: a1 = 0x60\n 69771: u64 [a0] = a1\n 69773: ret\n      : @1065 (gas: 20)\n 69775: sp = sp + 0xffffffffffffffb0\n 69778: u64 [sp + 0x48] = ra\n 69781: u64 [sp + 0x40] = s0\n 69784: u64 [sp + 0x38] = s1\n 69787: a4 = u64 [a1 + 0x10]\n 69790: a3 = u64 [a1 + 0x18]\n 69793: a5 = u64 [a1 + 0x8]\n 69796: s0 = u64 [a1]\n 69798: u64 [sp + 0x28] = a3\n 69801: u64 [sp + 0x20] = a5\n 69804: a1 = a5 | a3\n 69807: a3 = s0 | a4\n 69810: a3 = a3 | a1\n 69813: a3 = a3 >> 0x20\n 69816: u64 [sp + 0x30] = a4\n 69819: a1 = a1 | a4\n 69822: a1 = a1 << 0x20\n 69825: a1 = a1 | a3\n 69828: u64 [sp + 0x18] = a0\n 69831: jump @1068 if a1 != 0\n      : @1066 (gas: 10)\n 69835: a0 = u64 [a2 + 0x18]\n 69838: u64 [sp] = a0\n 69840: s1 = u64 [a2 + 0x10]\n 69843: a0 = u64 [a2 + 0x8]\n 69846: u64 [sp + 0x8] = a0\n 69849: a0 = u64 [a2]\n 69851: u64 [sp + 0x10] = a0\n 69854: i32 a0 = s0 + 0\n 69856: a1 = 0x20\n 69859: ra = 874, jump @0\n      : @1067 [@dyn 437] (gas: 88)\n 69866: a1 = u64 [sp]\n 69868: a1 = reverse a1\n 69870: a2 = reverse s1\n 69872: a3 = u64 [sp + 0x8]\n 69875: a3 = reverse a3\n 69877: a4 = u64 [sp + 0x10]\n 69880: a4 = reverse a4\n 69882: a5 = a4 >> 0x38\n 69885: u8 [a0 + 0x1f] = a5\n 69888: a5 = a4 >> 0x30\n 69891: u8 [a0 + 0x1e] = a5\n 69894: a5 = a4 >> 0x28\n 69897: u8 [a0 + 0x1d] = a5\n 69900: a5 = a4 >> 0x20\n 69903: u8 [a0 + 0x1c] = a5\n 69906: a5 = a4 >> 0x18\n 69909: u8 [a0 + 0x1b] = a5\n 69912: a5 = a4 >> 0x10\n 69915: u8 [a0 + 0x1a] = a5\n 69918: a5 = a4 >> 0x8\n 69921: u8 [a0 + 0x19] = a5\n 69924: u8 [a0 + 0x18] = a4\n 69927: u8 [a0 + 0x10] = a3\n 69930: a4 = a3 >> 0x38\n 69933: u8 [a0 + 0x17] = a4\n 69936: a4 = a3 >> 0x30\n 69939: u8 [a0 + 0x16] = a4\n 69942: a4 = a3 >> 0x28\n 69945: u8 [a0 + 0x15] = a4\n 69948: a4 = a3 >> 0x20\n 69951: u8 [a0 + 0x14] = a4\n 69954: a4 = a3 >> 0x18\n 69957: u8 [a0 + 0x13] = a4\n 69960: a4 = a3 >> 0x10\n 69963: u8 [a0 + 0x12] = a4\n 69966: a3 = a3 >> 0x8\n 69969: u8 [a0 + 0x11] = a3\n 69972: u8 [a0 + 0x8] = a2\n 69975: a3 = a2 >> 0x38\n 69978: u8 [a0 + 0xf] = a3\n 69981: a3 = a2 >> 0x30\n 69984: u8 [a0 + 0xe] = a3\n 69987: a3 = a2 >> 0x28\n 69990: u8 [a0 + 0xd] = a3\n 69993: a3 = a2 >> 0x20\n 69996: u8 [a0 + 0xc] = a3\n 69999: a3 = a2 >> 0x18\n 70002: u8 [a0 + 0xb] = a3\n 70005: a3 = a2 >> 0x10\n 70008: u8 [a0 + 0xa] = a3\n 70011: a2 = a2 >> 0x8\n 70014: u8 [a0 + 0x9] = a2\n 70017: u8 [a0] = a1\n 70019: a2 = a1 >> 0x38\n 70022: u8 [a0 + 0x7] = a2\n 70025: a2 = a1 >> 0x30\n 70028: u8 [a0 + 0x6] = a2\n 70031: a2 = a1 >> 0x28\n 70034: u8 [a0 + 0x5] = a2\n 70037: a2 = a1 >> 0x20\n 70040: u8 [a0 + 0x4] = a2\n 70043: a2 = a1 >> 0x18\n 70046: u8 [a0 + 0x3] = a2\n 70049: a2 = a1 >> 0x10\n 70052: u8 [a0 + 0x2] = a2\n 70055: a1 = a1 >> 0x8\n 70058: u8 [a0 + 0x1] = a1\n 70061: a0 = s0 + 0x20\n 70064: a1 = a0 <u s0\n 70067: a3 = u64 [sp + 0x20]\n 70070: a2 = a3 + a1\n 70073: a3 = a2 <u a3\n 70076: a3 = a1 if a1 == 0\n 70079: a1 = u64 [sp + 0x30]\n 70082: a3 = a3 + a1\n 70085: a1 = a3 <u a1\n 70088: a4 = u64 [sp + 0x28]\n 70091: a1 = a1 + a4\n 70094: a4 = u64 [sp + 0x18]\n 70097: u64 [a4] = a0\n 70099: u64 [a4 + 0x8] = a2\n 70102: u64 [a4 + 0x10] = a3\n 70105: u64 [a4 + 0x18] = a1\n 70108: ra = u64 [sp + 0x48]\n 70111: s0 = u64 [sp + 0x40]\n 70114: s1 = u64 [sp + 0x38]\n 70117: sp = sp + 0x50\n 70120: ret\n      : @1068 (gas: 1)\n 70122: trap\n      : @1069 (gas: 39)\n 70123: sp = sp + 0xfffffffffffffea0\n 70127: u64 [sp + 0x158] = ra\n 70131: u64 [sp + 0x150] = s0\n 70135: u64 [sp + 0x148] = s1\n 70139: s0 = sp + 0x160\n 70143: sp = sp & 0xffffffffffffffe0\n 70146: u64 [sp + 0x8] = a0\n 70149: a0 = u64 [a2 + 0x18]\n 70152: u64 [sp + 0xb0] = a0\n 70156: a0 = u64 [a2 + 0x10]\n 70159: u64 [sp + 0xa8] = a0\n 70163: a0 = u64 [a2 + 0x8]\n 70166: u64 [sp + 0xa0] = a0\n 70170: a0 = u64 [a2]\n 70172: u64 [sp + 0xb8] = a0\n 70176: a4 = u64 [a1 + 0x18]\n 70179: a3 = u64 [a1 + 0x10]\n 70182: a2 = u64 [a1 + 0x8]\n 70185: a0 = u64 [a1]\n 70187: u64 [sp + 0x18] = a4\n 70190: u64 [sp + 0x118] = a4\n 70194: u64 [sp + 0x20] = a3\n 70197: u64 [sp + 0x110] = a3\n 70201: u64 [sp + 0x68] = a2\n 70204: u64 [sp + 0x108] = a2\n 70208: u64 [sp + 0x70] = a0\n 70211: u64 [sp + 0x100] = a0\n 70215: u64 [sp + 312] = 0\n 70219: u64 [sp + 304] = 0\n 70223: u64 [sp + 296] = 0\n 70227: u64 [sp + 288] = 0\n 70231: u32 [sp + 320] = 0x20\n 70236: i32 a1 = sp + 0x100\n 70240: i32 a3 = sp + 0x120\n 70244: i32 a4 = sp + 0x140\n 70248: a2 = 0xffffffffffffffff\n 70251: a0 = 0\n 70253: ecalli 3 // 'get_storage'\n 70255: fallthrough\n      : @1070 (gas: 32)\n 70256: t0 = u64 [sp + 0x130]\n 70260: t1 = u64 [sp + 0x128]\n 70264: t2 = u64 [sp + 0x138]\n 70268: a5 = u64 [sp + 0x120]\n 70272: a0 = t0 << 0x3f\n 70275: a1 = t1 >> 0x1\n 70278: a0 = a0 | a1\n 70281: a1 = t2 << 0x3f\n 70284: a2 = t0 >> 0x1\n 70287: a1 = a1 | a2\n 70290: a2 = t1 << 0x3f\n 70293: a3 = a5 >> 0x1\n 70296: a4 = a3 | a2\n 70299: a2 = t2 >> 0x1\n 70302: u64 [sp + 0x78] = a5\n 70305: a5 = a5 & 0x1\n 70308: a3 = -a5\n 70310: ra = a4 & 0x7f\n 70313: a1 = a1 & a3\n 70316: s1 = a3 & a0\n 70319: a4 = ra if a5 == 0\n 70322: a2 = a2 & a3\n 70325: u64 [sp + 0x58] = a4\n 70328: a0 = a4 <u 0x20\n 70331: u64 [sp + 0x48] = s1\n 70334: a0 = 0 if s1 != 0\n 70336: u64 [sp + 0x50] = a1\n 70339: u64 [sp + 0x40] = a2\n 70342: a1 = a1 | a2\n 70345: a0 = 0 if a1 != 0\n 70347: a1 = a5 <u 0x1\n 70350: jump @1089 if a1 != a0\n      : @1071 (gas: 17)\n 70354: u64 [sp + 0x98] = a5\n 70358: u64 [sp + 0x10] = ra\n 70361: u64 [sp + 0x80] = t1\n 70365: u64 [sp + 0x88] = t0\n 70369: u64 [sp + 0x90] = t2\n 70373: a0 = u64 [sp + 0xb8]\n 70377: a2 = u64 [sp + 0xa8]\n 70381: a0 = a0 | a2\n 70384: a1 = u64 [sp + 0xb0]\n 70388: a3 = u64 [sp + 0xa0]\n 70392: a1 = a1 | a3\n 70395: a0 = a0 | a1\n 70398: a0 = a0 >> 0x20\n 70401: a1 = a1 | a2\n 70404: a1 = a1 << 0x20\n 70407: a0 = a0 | a1\n 70410: jump @1088 if a0 != 0\n      : @1072 (gas: 4)\n 70414: s1 = u64 [sp + 0xb8]\n 70418: i32 a0 = s1 + 0\n 70420: a1 = 0x20\n 70423: ra = 876, jump @0\n      : @1073 [@dyn 438] (gas: 85)\n 70430: a1 = u64 [sp + 0x40]\n 70433: a1 = reverse a1\n 70435: a2 = u64 [sp + 0x58]\n 70438: a2 = reverse a2\n 70440: a3 = a2 >> 0x38\n 70443: u8 [a0 + 0x1f] = a3\n 70446: a3 = a2 >> 0x30\n 70449: u8 [a0 + 0x1e] = a3\n 70452: a3 = a2 >> 0x28\n 70455: u8 [a0 + 0x1d] = a3\n 70458: a3 = a2 >> 0x20\n 70461: u8 [a0 + 0x1c] = a3\n 70464: a3 = a2 >> 0x18\n 70467: u8 [a0 + 0x1b] = a3\n 70470: a3 = a2 >> 0x10\n 70473: u8 [a0 + 0x1a] = a3\n 70476: a3 = a2 >> 0x8\n 70479: u8 [a0 + 0x19] = a3\n 70482: a3 = u64 [sp + 0x48]\n 70485: a3 = reverse a3\n 70487: u8 [a0 + 0x18] = a2\n 70490: a2 = a3 >> 0x38\n 70493: u8 [a0 + 0x17] = a2\n 70496: a2 = a3 >> 0x30\n 70499: u8 [a0 + 0x16] = a2\n 70502: a2 = a3 >> 0x28\n 70505: u8 [a0 + 0x15] = a2\n 70508: a2 = a3 >> 0x20\n 70511: u8 [a0 + 0x14] = a2\n 70514: a2 = a3 >> 0x18\n 70517: u8 [a0 + 0x13] = a2\n 70520: a2 = a3 >> 0x10\n 70523: u8 [a0 + 0x12] = a2\n 70526: a2 = u64 [sp + 0x50]\n 70529: a2 = reverse a2\n 70531: u8 [a0 + 0x10] = a3\n 70534: a3 = a3 >> 0x8\n 70537: u8 [a0 + 0x11] = a3\n 70540: u8 [a0 + 0x8] = a2\n 70543: a3 = a2 >> 0x38\n 70546: u8 [a0 + 0xf] = a3\n 70549: a3 = a2 >> 0x30\n 70552: u8 [a0 + 0xe] = a3\n 70555: a3 = a2 >> 0x28\n 70558: u8 [a0 + 0xd] = a3\n 70561: a3 = a2 >> 0x20\n 70564: u8 [a0 + 0xc] = a3\n 70567: a3 = a2 >> 0x18\n 70570: u8 [a0 + 0xb] = a3\n 70573: a3 = a2 >> 0x10\n 70576: u8 [a0 + 0xa] = a3\n 70579: a2 = a2 >> 0x8\n 70582: u8 [a0 + 0x9] = a2\n 70585: u8 [a0] = a1\n 70587: a2 = a1 >> 0x38\n 70590: u8 [a0 + 0x7] = a2\n 70593: a2 = a1 >> 0x30\n 70596: u8 [a0 + 0x6] = a2\n 70599: a2 = a1 >> 0x28\n 70602: u8 [a0 + 0x5] = a2\n 70605: a2 = a1 >> 0x20\n 70608: u8 [a0 + 0x4] = a2\n 70611: a2 = a1 >> 0x18\n 70614: u8 [a0 + 0x3] = a2\n 70617: a2 = a1 >> 0x10\n 70620: u8 [a0 + 0x2] = a2\n 70623: a1 = a1 >> 0x8\n 70626: u8 [a0 + 0x1] = a1\n 70629: a0 = s1 + 0x20\n 70632: u64 [sp + 0x60] = a0\n 70635: a0 = a0 <u s1\n 70638: a3 = u64 [sp + 0xa0]\n 70642: a1 = a3 + a0\n 70645: u64 [sp + 0x28] = a1\n 70648: a1 = a1 <u a3\n 70651: a1 = a0 if a0 == 0\n 70654: a0 = u64 [sp + 0xa8]\n 70658: a1 = a1 + a0\n 70661: u64 [sp + 0x30] = a1\n 70664: a0 = a1 <u a0\n 70667: a1 = u64 [sp + 0xb0]\n 70671: a0 = a0 + a1\n 70674: u64 [sp + 0x38] = a0\n 70677: a0 = u64 [sp + 0x98]\n 70681: jump @1077 if a0 != 0\n      : @1074 (gas: 9)\n 70685: a0 = u64 [sp + 0xb0]\n 70689: a1 = u64 [sp + 0xa8]\n 70693: a0 = a0 | a1\n 70696: a1 = 0xffffffe0\n 70706: a2 = u64 [sp + 0xb8]\n 70710: a1 = a2 <u a1\n 70713: a1 = 0 if a3 != 0\n 70715: a1 = 0 if a0 != 0\n 70717: jump @1088 if a1 == 0\n      : @1075 (gas: 5)\n 70721: a0 = u64 [sp + 0x78]\n 70724: s1 = a0 & 0xffffffffffffff00\n 70728: a0 = i32 [sp + 0x60]\n 70731: a1 = 0x20\n 70734: ra = 878, jump @0\n      : @1076 [@dyn 439] (gas: 73)\n 70741: t0 = 0\n 70743: t1 = 0\n 70745: u64 [sp + 176] = 0\n 70749: a3 = reverse s1\n 70751: a4 = a3 >> 0x30\n 70754: u8 [a0 + 0x1e] = a4\n 70757: a4 = a3 >> 0x28\n 70760: u8 [a0 + 0x1d] = a4\n 70763: a4 = a3 >> 0x20\n 70766: u8 [a0 + 0x1c] = a4\n 70769: a4 = a3 >> 0x18\n 70772: u8 [a0 + 0x1b] = a4\n 70775: a4 = a3 >> 0x10\n 70778: u8 [a0 + 0x1a] = a4\n 70781: a1 = u64 [sp + 0x80]\n 70785: a4 = reverse a1\n 70787: u8 [a0 + 0x18] = a3\n 70790: a3 = a3 >> 0x8\n 70793: u8 [a0 + 0x19] = a3\n 70796: a3 = a4 >> 0x38\n 70799: u8 [a0 + 0x17] = a3\n 70802: a3 = a4 >> 0x30\n 70805: u8 [a0 + 0x16] = a3\n 70808: a3 = a4 >> 0x28\n 70811: u8 [a0 + 0x15] = a3\n 70814: a3 = a4 >> 0x20\n 70817: u8 [a0 + 0x14] = a3\n 70820: a3 = a4 >> 0x18\n 70823: u8 [a0 + 0x13] = a3\n 70826: a3 = a4 >> 0x10\n 70829: u8 [a0 + 0x12] = a3\n 70832: a1 = u64 [sp + 0x88]\n 70836: a3 = reverse a1\n 70838: u8 [a0 + 0x10] = a4\n 70841: a4 = a4 >> 0x8\n 70844: u8 [a0 + 0x11] = a4\n 70847: a4 = a3 >> 0x38\n 70850: u8 [a0 + 0xf] = a4\n 70853: a4 = a3 >> 0x30\n 70856: u8 [a0 + 0xe] = a4\n 70859: a4 = a3 >> 0x28\n 70862: u8 [a0 + 0xd] = a4\n 70865: a4 = a3 >> 0x20\n 70868: u8 [a0 + 0xc] = a4\n 70871: a4 = a3 >> 0x18\n 70874: u8 [a0 + 0xb] = a4\n 70877: a4 = a3 >> 0x10\n 70880: u8 [a0 + 0xa] = a4\n 70883: a1 = u64 [sp + 0x90]\n 70887: a4 = reverse a1\n 70889: u8 [a0 + 31] = 0\n 70892: u8 [a0 + 0x8] = a3\n 70895: a3 = a3 >> 0x8\n 70898: u8 [a0 + 0x9] = a3\n 70901: u8 [a0] = a4\n 70903: a3 = a4 >> 0x38\n 70906: u8 [a0 + 0x7] = a3\n 70909: a3 = a4 >> 0x30\n 70912: u8 [a0 + 0x6] = a3\n 70915: a3 = a4 >> 0x28\n 70918: u8 [a0 + 0x5] = a3\n 70921: a3 = a4 >> 0x20\n 70924: u8 [a0 + 0x4] = a3\n 70927: a3 = a4 >> 0x18\n 70930: u8 [a0 + 0x3] = a3\n 70933: a3 = a4 >> 0x10\n 70936: u8 [a0 + 0x2] = a3\n 70939: a4 = a4 >> 0x8\n 70942: u8 [a0 + 0x1] = a4\n 70945: a0 = u64 [sp + 0x10]\n 70948: a0 = a0 >u 0\n 70950: ra = a0 << 0x5\n 70953: jump @1087\n      : @1077 (gas: 3)\n 70956: a1 = 0x20\n 70959: a0 = 0\n 70961: ra = 880, jump @0\n      : @1078 [@dyn 440] (gas: 71)\n 70968: a1 = u64 [sp + 0x18]\n 70971: a1 = reverse a1\n 70973: a2 = u64 [sp + 0x20]\n 70976: a2 = reverse a2\n 70978: a3 = u64 [sp + 0x68]\n 70981: a3 = reverse a3\n 70983: a4 = u64 [sp + 0x70]\n 70986: a4 = reverse a4\n 70988: a5 = a4 >> 0x38\n 70991: u8 [a0 + 0x1f] = a5\n 70994: a5 = a4 >> 0x30\n 70997: u8 [a0 + 0x1e] = a5\n 71000: a5 = a4 >> 0x28\n 71003: u8 [a0 + 0x1d] = a5\n 71006: a5 = a4 >> 0x20\n 71009: u8 [a0 + 0x1c] = a5\n 71012: a5 = a4 >> 0x18\n 71015: u8 [a0 + 0x1b] = a5\n 71018: a5 = a4 >> 0x10\n 71021: u8 [a0 + 0x1a] = a5\n 71024: a5 = a4 >> 0x8\n 71027: u8 [a0 + 0x19] = a5\n 71030: u8 [a0 + 0x18] = a4\n 71033: u8 [a0 + 0x10] = a3\n 71036: a4 = a3 >> 0x38\n 71039: u8 [a0 + 0x17] = a4\n 71042: a4 = a3 >> 0x30\n 71045: u8 [a0 + 0x16] = a4\n 71048: a4 = a3 >> 0x28\n 71051: u8 [a0 + 0x15] = a4\n 71054: a4 = a3 >> 0x20\n 71057: u8 [a0 + 0x14] = a4\n 71060: a4 = a3 >> 0x18\n 71063: u8 [a0 + 0x13] = a4\n 71066: a4 = a3 >> 0x10\n 71069: u8 [a0 + 0x12] = a4\n 71072: a3 = a3 >> 0x8\n 71075: u8 [a0 + 0x11] = a3\n 71078: u8 [a0 + 0x8] = a2\n 71081: a3 = a2 >> 0x38\n 71084: u8 [a0 + 0xf] = a3\n 71087: a3 = a2 >> 0x30\n 71090: u8 [a0 + 0xe] = a3\n 71093: a3 = a2 >> 0x28\n 71096: u8 [a0 + 0xd] = a3\n 71099: a3 = a2 >> 0x20\n 71102: u8 [a0 + 0xc] = a3\n 71105: a3 = a2 >> 0x18\n 71108: u8 [a0 + 0xb] = a3\n 71111: a3 = a2 >> 0x10\n 71114: u8 [a0 + 0xa] = a3\n 71117: a2 = a2 >> 0x8\n 71120: u8 [a0 + 0x9] = a2\n 71123: u8 [a0] = a1\n 71125: a2 = a1 >> 0x38\n 71128: u8 [a0 + 0x7] = a2\n 71131: a2 = a1 >> 0x30\n 71134: u8 [a0 + 0x6] = a2\n 71137: a2 = a1 >> 0x28\n 71140: u8 [a0 + 0x5] = a2\n 71143: a2 = a1 >> 0x20\n 71146: u8 [a0 + 0x4] = a2\n 71149: a2 = a1 >> 0x18\n 71152: u8 [a0 + 0x3] = a2\n 71155: a2 = a1 >> 0x10\n 71158: u8 [a0 + 0x2] = a2\n 71161: a1 = a1 >> 0x8\n 71164: u8 [a0 + 0x1] = a1\n 71167: a1 = 0x20\n 71170: a0 = 0\n 71172: ra = 882, jump @0\n      : @1079 [@dyn 441] (gas: 5)\n 71179: i32 a0 = a0 + 0\n 71181: i32 a2 = sp + 0x120\n 71185: a1 = 0x20\n 71188: ecalli 4 // 'hash_keccak_256'\n 71190: fallthrough\n      : @1080 (gas: 9)\n 71191: a0 = u64 [sp + 0x78]\n 71194: a0 = a0 <u 0x2\n 71197: a1 = u64 [sp + 0x80]\n 71201: a0 = 0 if a1 != 0\n 71203: a1 = u64 [sp + 0x90]\n 71207: a2 = u64 [sp + 0x88]\n 71211: a1 = a1 | a2\n 71214: a0 = 0 if a1 != 0\n 71216: jump @1082 if a0 == 0\n      : @1081 (gas: 5)\n 71219: ra = 0\n 71221: t0 = 0\n 71223: t1 = 0\n 71225: u64 [sp + 176] = 0\n 71229: jump @1087\n      : @1082 (gas: 19)\n 71232: u64 [sp + 168] = 0\n 71236: u64 [sp + 160] = 0\n 71240: s1 = 0\n 71242: u64 [sp + 176] = 0\n 71246: a0 = u64 [sp + 0x120]\n 71250: a1 = u64 [sp + 0x128]\n 71254: a2 = u64 [sp + 0x130]\n 71258: a3 = u64 [sp + 0x138]\n 71262: a0 = reverse a0\n 71264: a5 = reverse a1\n 71266: a1 = reverse a2\n 71268: t2 = reverse a3\n 71270: i32 a3 = sp + 0x100\n 71274: u64 [sp + 0x20] = a3\n 71277: i32 a3 = sp + 0x120\n 71281: u64 [sp + 0x18] = a3\n 71284: i32 a3 = sp + 0x140\n 71288: u64 [sp + 0x10] = a3\n 71291: fallthrough\n      : @1083 (gas: 20)\n 71292: u64 [sp + 0x88] = a5\n 71296: u64 [sp + 0x110] = a5\n 71300: u64 [sp + 0xb8] = a1\n 71304: u64 [sp + 0x108] = a1\n 71308: u64 [sp + 0x90] = t2\n 71312: u64 [sp + 0x100] = t2\n 71316: u64 [sp + 0x98] = a0\n 71320: u64 [sp + 0x118] = a0\n 71324: u64 [sp + 312] = 0\n 71328: u64 [sp + 304] = 0\n 71332: u64 [sp + 296] = 0\n 71336: u64 [sp + 288] = 0\n 71340: u32 [sp + 320] = 0x20\n 71345: a2 = 0xffffffffffffffff\n 71348: a0 = 0\n 71350: a1 = u64 [sp + 0x20]\n 71353: a3 = u64 [sp + 0x18]\n 71356: a4 = u64 [sp + 0x10]\n 71359: ecalli 3 // 'get_storage'\n 71361: fallthrough\n      : @1084 (gas: 30)\n 71362: a0 = u64 [sp + 0x60]\n 71365: a1 = u64 [sp + 0xa8]\n 71369: a0 = a0 + a1\n 71372: a1 = a0 <u a1\n 71375: a2 = u64 [sp + 0x28]\n 71378: a4 = u64 [sp + 0xa0]\n 71382: a2 = a2 + a4\n 71385: a2 = a2 + a1\n 71388: a3 = a2 ^ a4\n 71391: a4 = a2 <u a4\n 71394: a4 = a1 if a3 == 0\n 71397: a1 = u64 [sp + 0x30]\n 71400: a1 = a1 + s1\n 71403: u64 [sp + 0x80] = s1\n 71407: a3 = a1 <u s1\n 71410: a5 = u64 [sp + 0x38]\n 71413: s1 = u64 [sp + 0xb0]\n 71417: a5 = a5 + s1\n 71420: a3 = a3 + a5\n 71423: a4 = a4 + a1\n 71426: a1 = a4 <u a1\n 71429: a1 = a1 + a3\n 71432: a1 = a1 | a2\n 71435: a2 = a0 | a4\n 71438: a2 = a2 | a1\n 71441: a1 = a1 | a4\n 71444: a2 = a2 >> 0x20\n 71447: a1 = a1 << 0x20\n 71450: a1 = a1 | a2\n 71453: jump @1088 if a1 != 0\n      : @1085 (gas: 10)\n 71457: a1 = u64 [sp + 0x138]\n 71461: u64 [sp + 0x70] = a1\n 71464: a1 = u64 [sp + 0x130]\n 71468: u64 [sp + 0x78] = a1\n 71471: a1 = u64 [sp + 0x128]\n 71475: u64 [sp + 0x68] = a1\n 71478: s1 = u64 [sp + 0x120]\n 71482: i32 a0 = a0 + 0\n 71484: a1 = 0x20\n 71487: ra = 884, jump @0\n      : @1086 [@dyn 442] (gas: 115)\n 71494: a1 = reverse s1\n 71496: a2 = a1 >> 0x38\n 71499: u8 [a0 + 0x1f] = a2\n 71502: a2 = a1 >> 0x30\n 71505: u8 [a0 + 0x1e] = a2\n 71508: a2 = a1 >> 0x28\n 71511: u8 [a0 + 0x1d] = a2\n 71514: a2 = a1 >> 0x20\n 71517: u8 [a0 + 0x1c] = a2\n 71520: a2 = a1 >> 0x18\n 71523: u8 [a0 + 0x1b] = a2\n 71526: a2 = a1 >> 0x10\n 71529: u8 [a0 + 0x1a] = a2\n 71532: a2 = a1 >> 0x8\n 71535: u8 [a0 + 0x19] = a2\n 71538: a2 = u64 [sp + 0x68]\n 71541: a2 = reverse a2\n 71543: u8 [a0 + 0x18] = a1\n 71546: a1 = a2 >> 0x38\n 71549: u8 [a0 + 0x17] = a1\n 71552: a1 = a2 >> 0x30\n 71555: u8 [a0 + 0x16] = a1\n 71558: a1 = a2 >> 0x28\n 71561: u8 [a0 + 0x15] = a1\n 71564: a1 = a2 >> 0x20\n 71567: u8 [a0 + 0x14] = a1\n 71570: a1 = a2 >> 0x18\n 71573: u8 [a0 + 0x13] = a1\n 71576: a1 = a2 >> 0x10\n 71579: u8 [a0 + 0x12] = a1\n 71582: a1 = u64 [sp + 0x70]\n 71585: a1 = reverse a1\n 71587: a3 = u64 [sp + 0x78]\n 71590: a3 = reverse a3\n 71592: u8 [a0 + 0x10] = a2\n 71595: a2 = a2 >> 0x8\n 71598: u8 [a0 + 0x11] = a2\n 71601: u8 [a0 + 0x8] = a3\n 71604: a2 = a3 >> 0x38\n 71607: u8 [a0 + 0xf] = a2\n 71610: a2 = a3 >> 0x30\n 71613: u8 [a0 + 0xe] = a2\n 71616: a2 = a3 >> 0x28\n 71619: u8 [a0 + 0xd] = a2\n 71622: a2 = a3 >> 0x20\n 71625: u8 [a0 + 0xc] = a2\n 71628: a2 = a3 >> 0x18\n 71631: u8 [a0 + 0xb] = a2\n 71634: a2 = a3 >> 0x10\n 71637: u8 [a0 + 0xa] = a2\n 71640: a3 = a3 >> 0x8\n 71643: u8 [a0 + 0x9] = a3\n 71646: u8 [a0] = a1\n 71648: a2 = a1 >> 0x38\n 71651: u8 [a0 + 0x7] = a2\n 71654: a2 = a1 >> 0x30\n 71657: u8 [a0 + 0x6] = a2\n 71660: a2 = a1 >> 0x28\n 71663: u8 [a0 + 0x5] = a2\n 71666: a2 = a1 >> 0x20\n 71669: u8 [a0 + 0x4] = a2\n 71672: a2 = a1 >> 0x18\n 71675: u8 [a0 + 0x3] = a2\n 71678: a2 = a1 >> 0x10\n 71681: u8 [a0 + 0x2] = a2\n 71684: a1 = a1 >> 0x8\n 71687: u8 [a0 + 0x1] = a1\n 71690: t2 = u64 [sp + 0x90]\n 71694: t2 = t2 + 0x1\n 71697: a0 = t2 <u 0x1\n 71700: a1 = u64 [sp + 0xb8]\n 71704: a1 = a1 + a0\n 71707: u64 [sp + 0xb8] = a1\n 71711: a0 = u64 [sp + 0xa8]\n 71715: ra = a0 + 0x20\n 71718: a2 = ra <u a0\n 71721: a0 = u64 [sp + 0xa0]\n 71725: t0 = a0 + a2\n 71728: a3 = t0 <u a0\n 71731: a3 = a2 if a2 == 0\n 71734: a0 = u64 [sp + 0x80]\n 71738: t1 = a0 + a3\n 71741: a3 = t1 <u a0\n 71744: a5 = u64 [sp + 0xb0]\n 71748: a5 = a5 + a3\n 71751: a1 = u64 [sp + 0x50]\n 71754: a0 = t1 <u a1\n 71757: u64 [sp + 0xa8] = a0\n 71761: a2 = u64 [sp + 0x58]\n 71764: a4 = ra <u a2\n 71767: a2 = u64 [sp + 0x48]\n 71770: s1 = t0 ^ a2\n 71773: a3 = t0 <u a2\n 71776: a3 = a4 if s1 == 0\n 71779: a2 = u64 [sp + 0x40]\n 71782: a0 = a5 ^ a2\n 71785: u64 [sp + 0xb0] = a5\n 71789: s1 = a5 <u a2\n 71792: a2 = u64 [sp + 0xa8]\n 71796: s1 = a2 if a0 == 0\n 71799: a4 = t1 ^ a1\n 71802: a1 = u64 [sp + 0xb8]\n 71806: a0 = a0 | a4\n 71809: a5 = t2 | a1\n 71812: a5 = a5 <u 0x1\n 71815: a4 = u64 [sp + 0x88]\n 71819: a5 = a5 + a4\n 71822: a4 = a5 <u a4\n 71825: a3 = s1 if a0 != 0\n 71828: a0 = u64 [sp + 0x98]\n 71832: a0 = a0 + a4\n 71835: u64 [sp + 0xa8] = ra\n 71839: u64 [sp + 0xa0] = t0\n 71843: s1 = t1\n 71845: jump @1083 if a3 != 0\n      : @1087 (gas: 30)\n 71849: a3 = u64 [sp + 0x60]\n 71852: a3 = a3 + ra\n 71855: a0 = a3 <u ra\n 71858: a4 = u64 [sp + 0x28]\n 71861: a4 = a4 + t0\n 71864: a4 = a4 + a0\n 71867: a5 = a4 ^ t0\n 71870: a1 = a4 <u t0\n 71873: a1 = a0 if a5 == 0\n 71876: a0 = u64 [sp + 0x30]\n 71879: a0 = a0 + t1\n 71882: a1 = a1 + a0\n 71885: a5 = a1 <u a0\n 71888: a0 = a0 <u t1\n 71891: a2 = u64 [sp + 0x38]\n 71894: s1 = u64 [sp + 0xb0]\n 71898: a2 = a2 + s1\n 71901: a0 = a0 + a2\n 71904: a0 = a0 + a5\n 71907: a2 = u64 [sp + 0x8]\n 71910: u64 [a2] = a3\n 71912: u64 [a2 + 0x8] = a4\n 71915: u64 [a2 + 0x10] = a1\n 71918: u64 [a2 + 0x18] = a0\n 71921: sp = s0 + 0xfffffffffffffea0\n 71925: ra = u64 [sp + 0x158]\n 71929: s0 = u64 [sp + 0x150]\n 71933: s1 = u64 [sp + 0x148]\n 71937: sp = sp + 0x160\n 71941: ret\n      : @1088 (gas: 1)\n 71943: trap\n      : @1089 (gas: 8)\n 71944: u64 [sp + 240] = 0\n 71948: u64 [sp + 232] = 0\n 71952: u64 [sp + 224] = 0\n 71956: a0 = 0x4e487b7100000000\n 71966: a1 = sp + 0xe0\n 71970: u64 [sp + 0xf8] = a0\n 71974: a0 = 0\n 71976: ra = 886, jump @23\n      : @1090 [@dyn 443] (gas: 7)\n 71983: u64 [sp + 216] = 0\n 71987: u64 [sp + 208] = 0\n 71991: u64 [sp + 192] = 0x22\n 71996: a0 = 0x4\n 71999: a1 = sp + 0xc0\n 72003: u64 [sp + 200] = 0\n 72007: ra = 888, jump @23\n      : @1091 [@dyn 444] (gas: 3)\n 72014: a1 = 0x24\n 72017: a0 = 0\n 72019: ra = 890, jump @0\n      : @1092 [@dyn 445] (gas: 6)\n 72026: i32 a1 = a0 + 0\n 72028: a0 = 0x1\n 72031: a2 = 0x24\n 72034: ra = 0x37c\n 72038: ecalli 6 // 'seal_return'\n 72040: fallthrough\n      : @1093 [@dyn 446] (gas: 27)\n 72041: sp = sp + 0xffffffffffffff80\n 72044: u64 [sp + 0x78] = ra\n 72047: u64 [sp + 0x70] = s0\n 72050: u64 [sp + 0x68] = s1\n 72053: s0 = sp + 0x80\n 72057: sp = sp & 0xfffffffffffffff0\n 72060: t0 = u64 [a1]\n 72062: t1 = u64 [a1 + 0x8]\n 72065: t2 = u64 [a1 + 0x10]\n 72068: a1 = u64 [a1 + 0x18]\n 72071: a3 = u64 [a2]\n 72073: a4 = u64 [a2 + 0x8]\n 72076: a5 = u64 [a2 + 0x10]\n 72079: a2 = u64 [a2 + 0x18]\n 72082: s1 = a0\n 72084: u64 [sp + 0x18] = a2\n 72087: u64 [sp + 0x10] = a5\n 72090: u64 [sp + 0x8] = a4\n 72093: u64 [sp] = a3\n 72095: u64 [sp + 0x38] = a1\n 72098: u64 [sp + 0x30] = t2\n 72101: u64 [sp + 0x28] = t1\n 72104: a0 = sp + 0x40\n 72107: a1 = sp + 0x20\n 72110: a2 = sp\n 72112: u64 [sp + 0x20] = t0\n 72115: ra = 894, jump @1069\n      : @1094 [@dyn 447] (gas: 14)\n 72121: a0 = u64 [sp + 0x50]\n 72124: a1 = u64 [sp + 0x58]\n 72127: a2 = u64 [sp + 0x40]\n 72130: a3 = u64 [sp + 0x48]\n 72133: u64 [s1 + 0x10] = a0\n 72136: u64 [s1 + 0x18] = a1\n 72139: u64 [s1] = a2\n 72141: u64 [s1 + 0x8] = a3\n 72144: sp = s0 + 0xffffffffffffff80\n 72147: ra = u64 [sp + 0x78]\n 72150: s0 = u64 [sp + 0x70]\n 72153: s1 = u64 [sp + 0x68]\n 72156: sp = sp + 0x80\n 72160: ret\n      : @1095 (gas: 18)\n 72162: sp = sp + 0xffffffffffffff00\n 72166: u64 [sp + 0xf8] = ra\n 72170: u64 [sp + 0xf0] = s0\n 72174: u64 [sp + 0xe8] = s1\n 72178: s0 = sp + 0x100\n 72182: sp = sp & 0xfffffffffffffff0\n 72185: a2 = u64 [a1]\n 72187: u64 [sp + 0x20] = a2\n 72190: a2 = u64 [a1 + 0x8]\n 72193: u64 [sp + 0x10] = a2\n 72196: a2 = u64 [a1 + 0x10]\n 72199: u64 [sp + 0x8] = a2\n 72202: a1 = u64 [a1 + 0x18]\n 72205: u64 [sp] = a1\n 72207: u64 [sp + 0x18] = a0\n 72210: a0 = 0x40\n 72213: a1 = 0x20\n 72216: ra = 896, jump @0\n      : @1096 [@dyn 448] (gas: 111)\n 72223: a1 = u8 [a0 + 0x1]\n 72226: a2 = u8 [a0]\n 72228: a3 = u8 [a0 + 0x2]\n 72231: a4 = u8 [a0 + 0x3]\n 72234: a1 = a1 << 0x8\n 72237: a1 = a1 | a2\n 72240: a3 = a3 << 0x10\n 72243: a4 = a4 << 0x18\n 72246: a3 = a3 | a4\n 72249: a1 = a1 | a3\n 72252: a2 = u8 [a0 + 0x5]\n 72255: a3 = u8 [a0 + 0x4]\n 72258: a4 = u8 [a0 + 0x6]\n 72261: a5 = u8 [a0 + 0x7]\n 72264: a2 = a2 << 0x8\n 72267: a2 = a2 | a3\n 72270: a4 = a4 << 0x10\n 72273: a5 = a5 << 0x18\n 72276: a4 = a4 | a5\n 72279: a2 = a2 | a4\n 72282: a2 = a2 << 0x20\n 72285: t0 = a2 | a1\n 72288: a2 = u8 [a0 + 0x9]\n 72291: a3 = u8 [a0 + 0x8]\n 72294: a4 = u8 [a0 + 0xa]\n 72297: a5 = u8 [a0 + 0xb]\n 72300: a2 = a2 << 0x8\n 72303: a2 = a2 | a3\n 72306: a4 = a4 << 0x10\n 72309: a5 = a5 << 0x18\n 72312: a4 = a4 | a5\n 72315: a2 = a2 | a4\n 72318: a3 = u8 [a0 + 0xd]\n 72321: a4 = u8 [a0 + 0xc]\n 72324: a5 = u8 [a0 + 0xe]\n 72327: s1 = u8 [a0 + 0xf]\n 72330: a3 = a3 << 0x8\n 72333: a3 = a3 | a4\n 72336: a5 = a5 << 0x10\n 72339: s1 = s1 << 0x18\n 72342: a5 = a5 | s1\n 72345: a3 = a3 | a5\n 72348: a3 = a3 << 0x20\n 72351: a2 = a2 | a3\n 72354: a3 = u8 [a0 + 0x11]\n 72357: a4 = u8 [a0 + 0x10]\n 72360: a5 = u8 [a0 + 0x12]\n 72363: s1 = u8 [a0 + 0x13]\n 72366: a3 = a3 << 0x8\n 72369: a3 = a3 | a4\n 72372: a5 = a5 << 0x10\n 72375: s1 = s1 << 0x18\n 72378: a5 = a5 | s1\n 72381: a3 = a3 | a5\n 72384: a4 = u8 [a0 + 0x15]\n 72387: a5 = u8 [a0 + 0x14]\n 72390: s1 = u8 [a0 + 0x16]\n 72393: a1 = u8 [a0 + 0x17]\n 72396: a4 = a4 << 0x8\n 72399: a4 = a4 | a5\n 72402: s1 = s1 << 0x10\n 72405: a1 = a1 << 0x18\n 72408: a1 = a1 | s1\n 72411: a1 = a1 | a4\n 72414: a1 = a1 << 0x20\n 72417: a3 = a3 | a1\n 72420: a1 = u8 [a0 + 0x19]\n 72423: a4 = u8 [a0 + 0x18]\n 72426: a5 = u8 [a0 + 0x1a]\n 72429: s1 = u8 [a0 + 0x1b]\n 72432: a1 = a1 << 0x8\n 72435: a1 = a1 | a4\n 72438: a5 = a5 << 0x10\n 72441: s1 = s1 << 0x18\n 72444: a5 = a5 | s1\n 72447: a1 = a1 | a5\n 72450: a4 = u8 [a0 + 0x1d]\n 72453: a5 = u8 [a0 + 0x1c]\n 72456: s1 = u8 [a0 + 0x1e]\n 72459: a0 = u8 [a0 + 0x1f]\n 72462: a4 = a4 << 0x8\n 72465: a4 = a4 | a5\n 72468: s1 = s1 << 0x10\n 72471: a0 = a0 << 0x18\n 72474: a0 = a0 | s1\n 72477: a0 = a0 | a4\n 72480: a0 = a0 << 0x20\n 72483: a0 = a0 | a1\n 72486: a4 = reverse a0\n 72488: u64 [sp + 0x38] = a4\n 72491: s1 = reverse a3\n 72493: a2 = reverse a2\n 72495: u64 [sp + 0x30] = a2\n 72498: a1 = reverse t0\n 72500: u64 [sp + 0x28] = a1\n 72503: a0 = u64 [sp]\n 72505: u64 [sp + 0xb8] = a0\n 72509: a0 = u64 [sp + 0x8]\n 72512: u64 [sp + 0xb0] = a0\n 72516: a0 = u64 [sp + 0x10]\n 72519: u64 [sp + 0xa8] = a0\n 72523: a0 = u64 [sp + 0x20]\n 72526: u64 [sp + 0xa0] = a0\n 72530: u64 [sp + 0x98] = a1\n 72534: u64 [sp + 0x90] = a2\n 72538: u64 [sp + 0x88] = s1\n 72542: a0 = sp + 0xc0\n 72546: a1 = sp + 0xa0\n 72550: a2 = sp + 0x80\n 72554: u64 [sp + 0x80] = a4\n 72558: ra = 898, jump @1069\n      : @1097 [@dyn 449] (gas: 58)\n 72564: t2 = s1\n 72566: a3 = u64 [sp + 0xc8]\n 72570: a0 = u64 [sp + 0xd8]\n 72574: u64 [sp + 0x10] = a0\n 72577: a4 = u64 [sp + 0xc0]\n 72581: t1 = u64 [sp + 0xd0]\n 72585: a5 = a3 ^ s1\n 72588: a1 = a3 <u s1\n 72591: a2 = u64 [sp + 0x38]\n 72594: s1 = a4 <u a2\n 72597: a1 = s1 if a5 == 0\n 72600: a3 = a3 - t2\n 72603: a3 = a3 - s1\n 72606: u64 [sp + 0x8] = a3\n 72609: a4 = a4 - a2\n 72612: a5 = a4 + 0x1f\n 72615: a4 = a5 <u a4\n 72618: a3 = a3 + a4\n 72621: a5 = a5 & 0xffffffffffffffe0\n 72624: a0 = a3 + t2\n 72627: a2 = a2 + a5\n 72630: u64 [sp + 0x20] = a2\n 72633: a5 = a2 <u a5\n 72636: t0 = a0 + a5\n 72639: a0 = t0 ^ a3\n 72642: a2 = t0 <u a3\n 72645: a2 = a5 if a0 == 0\n 72648: s1 = u64 [sp + 0x30]\n 72651: a0 = t1 - s1\n 72654: a5 = t1 <u s1\n 72657: t1 = s1\n 72659: ra = u64 [sp + 0x28]\n 72662: s1 = u64 [sp + 0x10]\n 72665: s1 = s1 - ra\n 72668: s1 = s1 - a5\n 72671: a5 = a0 <u a1\n 72674: s1 = s1 - a5\n 72677: a0 = a0 - a1\n 72680: a1 = u64 [sp + 0x8]\n 72683: a1 = a3 <u a1\n 72686: a1 = a4 if a4 == 0\n 72689: a1 = a1 + a0\n 72692: a0 = a1 <u a0\n 72695: a3 = a1 + t1\n 72698: a5 = a3 + a2\n 72701: a1 = a3 <u a1\n 72704: a2 = a5 <u a3\n 72707: s1 = s1 + ra\n 72710: a0 = a0 + s1\n 72713: a0 = a0 + a1\n 72716: s1 = a0 + a2\n 72719: a0 = s1 >u 0\n 72721: a1 = a5 >u 0\n 72723: a1 = a0 if s1 != 0\n 72726: a0 = a5 | s1\n 72729: a2 = t0 >u 0\n 72731: a2 = a1 if a0 != 0\n 72734: jump @1101 if a2 != 0\n      : @1098 (gas: 15)\n 72738: a4 = t1\n 72740: a0 = u64 [sp + 0x38]\n 72743: a1 = u64 [sp + 0x20]\n 72746: a0 = a1 <u a0\n 72749: a1 = t0 ^ t2\n 72752: a2 = t0 <u t2\n 72755: a2 = a0 if a1 == 0\n 72758: a0 = a5 <u t1\n 72761: a1 = s1 ^ ra\n 72764: a3 = s1 <u ra\n 72767: a3 = a0 if a1 == 0\n 72770: a0 = a5 ^ t1\n 72773: a0 = a0 | a1\n 72776: a3 = a2 if a0 == 0\n 72779: jump @1101 if a3 != 0\n      : @1099 (gas: 6)\n 72783: a0 = 0x40\n 72786: a1 = 0x20\n 72789: u64 [sp + 0x10] = t2\n 72792: u64 [sp + 0x8] = t0\n 72795: u64 [sp] = a5\n 72797: ra = 900, jump @0\n      : @1100 [@dyn 450] (gas: 82)\n 72804: a1 = reverse s1\n 72806: a2 = u64 [sp]\n 72808: a2 = reverse a2\n 72810: a3 = u64 [sp + 0x8]\n 72813: a3 = reverse a3\n 72815: a4 = u64 [sp + 0x20]\n 72818: a4 = reverse a4\n 72820: u8 [a0 + 0x18] = a4\n 72823: a5 = a4 >> 0x38\n 72826: u8 [a0 + 0x1f] = a5\n 72829: a5 = a4 >> 0x30\n 72832: u8 [a0 + 0x1e] = a5\n 72835: a5 = a4 >> 0x28\n 72838: u8 [a0 + 0x1d] = a5\n 72841: a5 = a4 >> 0x20\n 72844: u8 [a0 + 0x1c] = a5\n 72847: a5 = a4 >> 0x18\n 72850: u8 [a0 + 0x1b] = a5\n 72853: a5 = a4 >> 0x10\n 72856: u8 [a0 + 0x1a] = a5\n 72859: a4 = a4 >> 0x8\n 72862: u8 [a0 + 0x19] = a4\n 72865: u8 [a0 + 0x10] = a3\n 72868: a4 = a3 >> 0x38\n 72871: u8 [a0 + 0x17] = a4\n 72874: a4 = a3 >> 0x30\n 72877: u8 [a0 + 0x16] = a4\n 72880: a4 = a3 >> 0x28\n 72883: u8 [a0 + 0x15] = a4\n 72886: a4 = a3 >> 0x20\n 72889: u8 [a0 + 0x14] = a4\n 72892: a4 = a3 >> 0x18\n 72895: u8 [a0 + 0x13] = a4\n 72898: a4 = a3 >> 0x10\n 72901: u8 [a0 + 0x12] = a4\n 72904: a3 = a3 >> 0x8\n 72907: u8 [a0 + 0x11] = a3\n 72910: u8 [a0 + 0x8] = a2\n 72913: a3 = a2 >> 0x38\n 72916: u8 [a0 + 0xf] = a3\n 72919: a3 = a2 >> 0x30\n 72922: u8 [a0 + 0xe] = a3\n 72925: a3 = a2 >> 0x28\n 72928: u8 [a0 + 0xd] = a3\n 72931: a3 = a2 >> 0x20\n 72934: u8 [a0 + 0xc] = a3\n 72937: a3 = a2 >> 0x18\n 72940: u8 [a0 + 0xb] = a3\n 72943: a3 = a2 >> 0x10\n 72946: u8 [a0 + 0xa] = a3\n 72949: a2 = a2 >> 0x8\n 72952: u8 [a0 + 0x9] = a2\n 72955: u8 [a0] = a1\n 72957: a2 = a1 >> 0x38\n 72960: u8 [a0 + 0x7] = a2\n 72963: a2 = a1 >> 0x30\n 72966: u8 [a0 + 0x6] = a2\n 72969: a2 = a1 >> 0x28\n 72972: u8 [a0 + 0x5] = a2\n 72975: a2 = a1 >> 0x20\n 72978: u8 [a0 + 0x4] = a2\n 72981: a2 = a1 >> 0x18\n 72984: u8 [a0 + 0x3] = a2\n 72987: a2 = a1 >> 0x10\n 72990: u8 [a0 + 0x2] = a2\n 72993: a1 = a1 >> 0x8\n 72996: u8 [a0 + 0x1] = a1\n 72999: a0 = u64 [sp + 0x18]\n 73002: a1 = u64 [sp + 0x38]\n 73005: u64 [a0] = a1\n 73007: a1 = u64 [sp + 0x28]\n 73010: u64 [a0 + 0x18] = a1\n 73013: a1 = u64 [sp + 0x10]\n 73016: u64 [a0 + 0x8] = a1\n 73019: a1 = u64 [sp + 0x30]\n 73022: u64 [a0 + 0x10] = a1\n 73025: sp = s0 + 0xffffffffffffff00\n 73029: ra = u64 [sp + 0xf8]\n 73033: s0 = u64 [sp + 0xf0]\n 73037: s1 = u64 [sp + 0xe8]\n 73041: sp = sp + 0x100\n 73045: ret\n      : @1101 (gas: 8)\n 73047: u64 [sp + 112] = 0\n 73050: u64 [sp + 104] = 0\n 73053: u64 [sp + 96] = 0\n 73056: a0 = 0x4e487b7100000000\n 73066: a1 = sp + 0x60\n 73069: u64 [sp + 0x78] = a0\n 73072: a0 = 0\n 73074: ra = 902, jump @23\n      : @1102 [@dyn 451] (gas: 7)\n 73081: u64 [sp + 88] = 0\n 73084: u64 [sp + 80] = 0\n 73087: u64 [sp + 64] = 0x41\n 73091: a0 = 0x4\n 73094: a1 = sp + 0x40\n 73097: u64 [sp + 72] = 0\n 73100: ra = 904, jump @23\n      : @1103 [@dyn 452] (gas: 3)\n 73107: a1 = 0x24\n 73110: a0 = 0\n 73112: ra = 906, jump @0\n      : @1104 [@dyn 453] (gas: 6)\n 73119: i32 a1 = a0 + 0\n 73121: a0 = 0x1\n 73124: a2 = 0x24\n 73127: ra = 0x38c\n 73131: ecalli 6 // 'seal_return'\n 73133: fallthrough\n      : @1105 [@dyn 454] (gas: 18)\n 73134: sp = sp + 0xffffffffffffffa0\n 73137: u64 [sp + 0x58] = ra\n 73140: u64 [sp + 0x50] = s0\n 73143: u64 [sp + 0x48] = s1\n 73146: s0 = sp + 0x60\n 73149: sp = sp & 0xfffffffffffffff0\n 73152: a2 = u64 [a1]\n 73154: a3 = u64 [a1 + 0x8]\n 73157: a4 = u64 [a1 + 0x10]\n 73160: a1 = u64 [a1 + 0x18]\n 73163: s1 = a0\n 73165: u64 [sp + 0x18] = a1\n 73168: u64 [sp + 0x10] = a4\n 73171: u64 [sp + 0x8] = a3\n 73174: a0 = sp + 0x20\n 73177: a1 = sp\n 73179: u64 [sp] = a2\n 73181: ra = 910, jump @1095\n      : @1106 [@dyn 455] (gas: 14)\n 73187: a0 = u64 [sp + 0x30]\n 73190: a1 = u64 [sp + 0x38]\n 73193: a2 = u64 [sp + 0x20]\n 73196: a3 = u64 [sp + 0x28]\n 73199: u64 [s1 + 0x10] = a0\n 73202: u64 [s1 + 0x18] = a1\n 73205: u64 [s1] = a2\n 73207: u64 [s1 + 0x8] = a3\n 73210: sp = s0 + 0xffffffffffffffa0\n 73213: ra = u64 [sp + 0x58]\n 73216: s0 = u64 [sp + 0x50]\n 73219: s1 = u64 [sp + 0x48]\n 73222: sp = sp + 0x60\n 73225: ret\n      : @1107 (gas: 27)\n 73227: a0 = u64 [sp + 0x90]\n 73231: a1 = u64 [sp + 0x88]\n 73235: a2 = u64 [sp + 0x80]\n 73239: a3 = u64 [sp + 0x98]\n 73243: a4 = a0 << 0x3f\n 73246: a5 = a1 >> 0x1\n 73249: a4 = a4 | a5\n 73252: a5 = a3 << 0x3f\n 73255: a0 = a0 >> 0x1\n 73258: s1 = a0 | a5\n 73261: a1 = a1 << 0x3f\n 73264: a5 = a2 >> 0x1\n 73267: a5 = a5 | a1\n 73270: a3 = a3 >> 0x1\n 73273: a2 = a2 & 0x1\n 73276: a0 = -a2\n 73278: t0 = a2 <u 0x1\n 73281: a1 = a5 & 0x7f\n 73284: s1 = s1 & a0\n 73287: a4 = a4 & a0\n 73290: a1 = a5 if a2 != 0\n 73293: a3 = a3 & a0\n 73296: a0 = a1 <u 0x20\n 73299: a0 = 0 if a4 != 0\n 73301: a2 = s1 | a3\n 73304: a0 = 0 if a2 != 0\n 73306: jump @1109 if t0 != a0\n      : @1108 (gas: 11)\n 73309: a0 = u64 [sp + 0x18]\n 73312: u64 [a0] = a1\n 73314: u64 [a0 + 0x8] = a4\n 73317: u64 [a0 + 0x10] = s1\n 73320: u64 [a0 + 0x18] = a3\n 73323: sp = s0 + 0xffffffffffffff40\n 73327: ra = u64 [sp + 0xb8]\n 73331: s0 = u64 [sp + 0xb0]\n 73335: s1 = u64 [sp + 0xa8]\n 73339: sp = sp + 0xc0\n 73343: ret\n      : @1109 (gas: 8)\n 73345: u64 [sp + 80] = 0\n 73348: u64 [sp + 72] = 0\n 73351: u64 [sp + 64] = 0\n 73354: a0 = 0x4e487b7100000000\n 73364: a1 = sp + 0x40\n 73367: u64 [sp + 0x58] = a0\n 73370: a0 = 0\n 73372: ra = 912, jump @23\n      : @1110 [@dyn 456] (gas: 7)\n 73379: u64 [sp + 56] = 0\n 73382: u64 [sp + 48] = 0\n 73385: u64 [sp + 32] = 0x22\n 73389: a0 = 0x4\n 73392: a1 = sp + 0x20\n 73395: u64 [sp + 40] = 0\n 73398: ra = 914, jump @23\n      : @1111 [@dyn 457] (gas: 3)\n 73405: a1 = 0x24\n 73408: a0 = 0\n 73410: ra = 916, jump @0\n      : @1112 [@dyn 458] (gas: 6)\n 73417: i32 a1 = a0 + 0\n 73419: a0 = 0x1\n 73422: a2 = 0x24\n 73425: ra = 0x396\n 73429: ecalli 6 // 'seal_return'\n 73431: fallthrough\n      : @1113 [@dyn 459] (gas: 9)\n 73432: a2 = u64 [a1 + 0x18]\n 73435: a3 = u64 [a1 + 0x10]\n 73438: a4 = u64 [a1 + 0x8]\n 73441: a1 = u64 [a1]\n 73443: u64 [a0 + 0x18] = a2\n 73446: u64 [a0 + 0x10] = a3\n 73449: u64 [a0 + 0x8] = a4\n 73452: u64 [a0] = a1\n 73454: ret\n      : @1114 (gas: 17)\n 73456: sp = sp + 0xffffffffffffffa0\n 73459: u64 [sp + 0x58] = ra\n 73462: u64 [sp + 0x50] = s0\n 73465: u64 [sp + 0x48] = s1\n 73468: a3 = u64 [a1 + 0x18]\n 73471: a4 = u64 [a1 + 0x10]\n 73474: a5 = u64 [a1 + 0x8]\n 73477: s1 = u64 [a1]\n 73479: a1 = a5 | a3\n 73482: a2 = s1 | a4\n 73485: a2 = a2 | a1\n 73488: a2 = a2 >> 0x20\n 73491: a1 = a1 | a4\n 73494: a1 = a1 << 0x20\n 73497: a1 = a1 | a2\n 73500: u64 [sp + 0x20] = a0\n 73503: jump @1123 if a1 != 0\n      : @1115 (gas: 19)\n 73507: a0 = s1 + 0x20\n 73510: u64 [sp + 0x40] = a0\n 73513: a0 = a0 <u s1\n 73516: a1 = a5 + a0\n 73519: u64 [sp + 0x38] = a1\n 73522: u64 [sp + 0x8] = a5\n 73525: s0 = a1 <u a5\n 73528: s0 = a0 if a0 == 0\n 73531: s0 = s0 + a4\n 73534: u64 [sp + 0x10] = a4\n 73537: a0 = s0 <u a4\n 73540: u64 [sp + 0x18] = a3\n 73543: a0 = a0 + a3\n 73546: u64 [sp + 0x30] = a0\n 73549: u64 [sp] = s1\n 73551: i32 a0 = s1 + 0\n 73553: a1 = 0x20\n 73556: s1 = 0x20\n 73559: ra = 920, jump @0\n      : @1116 [@dyn 460] (gas: 43)\n 73566: u8 [a0 + 0x1f] = s1\n 73569: a1 = u64 [sp + 0x40]\n 73572: a1 = a1 | s0\n 73575: a2 = u64 [sp + 0x38]\n 73578: a3 = u64 [sp + 0x30]\n 73581: a2 = a2 | a3\n 73584: a1 = a1 | a2\n 73587: a1 = a1 >> 0x20\n 73590: a2 = a2 | s0\n 73593: a2 = a2 << 0x20\n 73596: a1 = a1 | a2\n 73599: u8 [a0 + 30] = 0\n 73602: u8 [a0 + 29] = 0\n 73605: u8 [a0 + 28] = 0\n 73608: u8 [a0 + 27] = 0\n 73611: u8 [a0 + 26] = 0\n 73614: u8 [a0 + 25] = 0\n 73617: u8 [a0 + 24] = 0\n 73620: u8 [a0 + 23] = 0\n 73623: u8 [a0 + 22] = 0\n 73626: u8 [a0 + 21] = 0\n 73629: u8 [a0 + 20] = 0\n 73632: u8 [a0 + 19] = 0\n 73635: u8 [a0 + 18] = 0\n 73638: u8 [a0 + 17] = 0\n 73641: u8 [a0 + 16] = 0\n 73644: u8 [a0 + 15] = 0\n 73647: u8 [a0 + 14] = 0\n 73650: u8 [a0 + 13] = 0\n 73653: u8 [a0 + 12] = 0\n 73656: u8 [a0 + 11] = 0\n 73659: u8 [a0 + 10] = 0\n 73662: u8 [a0 + 9] = 0\n 73665: u8 [a0 + 8] = 0\n 73668: u8 [a0 + 7] = 0\n 73671: u8 [a0 + 6] = 0\n 73674: u8 [a0 + 5] = 0\n 73677: u8 [a0 + 4] = 0\n 73680: u8 [a0 + 3] = 0\n 73683: u8 [a0 + 2] = 0\n 73686: u8 [a0 + 1] = 0\n 73689: u8 [a0 + 0] = 0\n 73691: jump @1123 if a1 != 0\n      : @1117 (gas: 6)\n 73695: s1 = s0\n 73697: s0 = u64 [sp + 0x40]\n 73700: i32 a0 = s0 + 0\n 73702: a1 = 0x20\n 73705: u64 [sp + 0x28] = a0\n 73708: ra = 922, jump @0\n      : @1118 [@dyn 461] (gas: 42)\n 73715: u8 [a0 + 31] = 0x21\n 73719: u8 [a0 + 30] = 0\n 73722: u8 [a0 + 29] = 0\n 73725: u8 [a0 + 28] = 0\n 73728: u8 [a0 + 27] = 0\n 73731: u8 [a0 + 26] = 0\n 73734: u8 [a0 + 25] = 0\n 73737: u8 [a0 + 24] = 0\n 73740: u8 [a0 + 23] = 0\n 73743: u8 [a0 + 22] = 0\n 73746: u8 [a0 + 21] = 0\n 73749: u8 [a0 + 20] = 0\n 73752: u8 [a0 + 19] = 0\n 73755: u8 [a0 + 18] = 0\n 73758: u8 [a0 + 17] = 0\n 73761: u8 [a0 + 16] = 0\n 73764: u8 [a0 + 15] = 0\n 73767: u8 [a0 + 14] = 0\n 73770: u8 [a0 + 13] = 0\n 73773: u8 [a0 + 12] = 0\n 73776: u8 [a0 + 11] = 0\n 73779: u8 [a0 + 10] = 0\n 73782: u8 [a0 + 9] = 0\n 73785: u8 [a0 + 8] = 0\n 73788: u8 [a0 + 7] = 0\n 73791: u8 [a0 + 6] = 0\n 73794: u8 [a0 + 5] = 0\n 73797: u8 [a0 + 4] = 0\n 73800: u8 [a0 + 3] = 0\n 73803: u8 [a0 + 2] = 0\n 73806: u8 [a0 + 1] = 0\n 73809: a1 = u64 [sp + 0x30]\n 73812: a2 = s1 | a1\n 73815: s1 = 0x100000000\n 73825: a1 = 0xffffffe0\n 73835: a1 = s0 <u a1\n 73838: s0 = a2\n 73840: a2 = u64 [sp + 0x38]\n 73843: a1 = 0 if a2 != 0\n 73845: a1 = 0 if s0 != 0\n 73847: u8 [a0 + 0] = 0\n 73849: jump @1123 if a1 == 0\n      : @1119 (gas: 4)\n 73853: a0 = u64 [sp + 0x28]\n 73856: i32 a0 = a0 + 0x20\n 73859: a1 = 0x20\n 73862: ra = 924, jump @0\n      : @1120 [@dyn 462] (gas: 40)\n 73869: u8 [a0 + 30] = 0x79\n 73873: u8 [a0 + 21] = 0x6e\n 73877: u8 [a0 + 31] = 0x65\n 73881: u8 [a0 + 27] = 0x65\n 73885: u8 [a0 + 20] = 0x65\n 73889: u8 [a0 + 19] = 0x65\n 73893: u8 [a0 + 18] = 0x62\n 73897: u8 [a0 + 23] = 0x73\n 73901: u8 [a0 + 16] = 0x73\n 73905: u8 [a0 + 14] = 0x68\n 73909: u8 [a0 + 28] = 0x64\n 73913: u8 [a0 + 12] = 0x64\n 73917: u8 [a0 + 26] = 0x72\n 73921: u8 [a0 + 11] = 0x72\n 73925: u8 [a0 + 9] = 0x77\n 73929: u8 [a0 + 7] = 0x63\n 73933: u8 [a0 + 6] = 0x69\n 73937: u8 [a0 + 5] = 0x67\n 73941: u8 [a0 + 15] = 0x61\n 73945: u8 [a0 + 4] = 0x61\n 73949: u8 [a0 + 3] = 0x6d\n 73953: u8 [a0 + 29] = 0x20\n 73957: u8 [a0 + 22] = 0x20\n 73961: u8 [a0 + 17] = 0x20\n 73965: u8 [a0 + 13] = 0x20\n 73969: u8 [a0 + 8] = 0x20\n 73973: u8 [a0 + 2] = 0x20\n 73977: u8 [a0 + 25] = 0x6f\n 73981: u8 [a0 + 10] = 0x6f\n 73985: u8 [a0 + 1] = 0x6f\n 73989: u8 [a0 + 0] = 0x4e\n 73992: a1 = s1 + 0xffffffffffffffc0\n 73995: a2 = u64 [sp + 0x40]\n 73998: a1 = a2 <u a1\n 74001: a2 = u64 [sp + 0x38]\n 74004: a1 = 0 if a2 != 0\n 74006: a1 = 0 if s0 != 0\n 74008: s0 = 0x74\n 74011: u8 [a0 + 0x18] = s0\n 74014: jump @1123 if a1 == 0\n      : @1121 (gas: 4)\n 74018: a0 = u64 [sp + 0x28]\n 74021: i32 a0 = a0 + 0x40\n 74024: a1 = 0x20\n 74027: ra = 926, jump @0\n      : @1122 [@dyn 463] (gas: 54)\n 74034: u8 [a0 + 31] = 0\n 74037: u8 [a0 + 30] = 0\n 74040: u8 [a0 + 29] = 0\n 74043: u8 [a0 + 28] = 0\n 74046: u8 [a0 + 27] = 0\n 74049: u8 [a0 + 26] = 0\n 74052: u8 [a0 + 25] = 0\n 74055: u8 [a0 + 24] = 0\n 74058: u8 [a0 + 23] = 0\n 74061: u8 [a0 + 22] = 0\n 74064: u8 [a0 + 21] = 0\n 74067: u8 [a0 + 20] = 0\n 74070: u8 [a0 + 19] = 0\n 74073: u8 [a0 + 18] = 0\n 74076: u8 [a0 + 17] = 0\n 74079: u8 [a0 + 16] = 0\n 74082: u8 [a0 + 15] = 0\n 74085: u8 [a0 + 14] = 0\n 74088: u8 [a0 + 13] = 0\n 74091: u8 [a0 + 12] = 0\n 74094: u8 [a0 + 11] = 0\n 74097: u8 [a0 + 10] = 0\n 74100: u8 [a0 + 9] = 0\n 74103: u8 [a0 + 8] = 0\n 74106: u8 [a0 + 7] = 0\n 74109: u8 [a0 + 6] = 0\n 74112: u8 [a0 + 5] = 0\n 74115: u8 [a0 + 4] = 0\n 74118: u8 [a0 + 3] = 0\n 74121: u8 [a0 + 2] = 0\n 74124: u8 [a0 + 1] = 0\n 74127: u8 [a0] = s0\n 74129: a1 = u64 [sp]\n 74131: a0 = a1 + 0x80\n 74135: a1 = a0 <u a1\n 74138: a3 = u64 [sp + 0x8]\n 74141: a2 = a3 + a1\n 74144: a3 = a2 <u a3\n 74147: a3 = a1 if a1 == 0\n 74150: a1 = u64 [sp + 0x10]\n 74153: a3 = a3 + a1\n 74156: a1 = a3 <u a1\n 74159: a4 = u64 [sp + 0x18]\n 74162: a1 = a1 + a4\n 74165: a4 = u64 [sp + 0x20]\n 74168: u64 [a4] = a0\n 74170: u64 [a4 + 0x8] = a2\n 74173: u64 [a4 + 0x10] = a3\n 74176: u64 [a4 + 0x18] = a1\n 74179: ra = u64 [sp + 0x58]\n 74182: s0 = u64 [sp + 0x50]\n 74185: s1 = u64 [sp + 0x48]\n 74188: sp = sp + 0x60\n 74191: ret\n      : @1123 (gas: 1)\n 74193: trap\n      : @1124 (gas: 20)\n 74194: a0 = u64 [sp + 0xf8]\n 74198: t0 = u64 [sp + 0xe0]\n 74202: a2 = u64 [sp + 0xf0]\n 74206: a3 = u64 [sp + 0xe8]\n 74210: a4 = a0 ^ s1\n 74213: u64 [sp + 0x38] = s1\n 74216: a1 = s1 <u a0\n 74219: a0 = u64 [sp + 0x58]\n 74222: a5 = a0 <u a2\n 74225: a5 = a1 if a4 != 0\n 74228: a1 = u64 [sp + 0x50]\n 74231: t1 = a3 ^ a1\n 74234: a3 = a1 <u a3\n 74237: a1 = u64 [sp + 0x48]\n 74240: a1 = a1 <u t0\n 74243: a1 = a3 if t1 != 0\n 74246: a0 = a0 ^ a2\n 74249: a0 = a0 | a4\n 74252: a1 = a5 if a0 != 0\n 74255: jump @1128 if a1 == 0\n      : @1125 (gas: 3)\n 74259: a1 = 0x20\n 74262: a0 = 0\n 74264: ra = 928, jump @0\n      : @1126 [@dyn 464] (gas: 71)\n 74271: a1 = u64 [sp + 0x18]\n 74274: a1 = reverse a1\n 74276: a2 = u64 [sp + 0x20]\n 74279: a2 = reverse a2\n 74281: a3 = u64 [sp + 0x28]\n 74284: a3 = reverse a3\n 74286: a4 = u64 [sp + 0x30]\n 74289: a4 = reverse a4\n 74291: a5 = a4 >> 0x38\n 74294: u8 [a0 + 0x1f] = a5\n 74297: a5 = a4 >> 0x30\n 74300: u8 [a0 + 0x1e] = a5\n 74303: a5 = a4 >> 0x28\n 74306: u8 [a0 + 0x1d] = a5\n 74309: a5 = a4 >> 0x20\n 74312: u8 [a0 + 0x1c] = a5\n 74315: a5 = a4 >> 0x18\n 74318: u8 [a0 + 0x1b] = a5\n 74321: a5 = a4 >> 0x10\n 74324: u8 [a0 + 0x1a] = a5\n 74327: a5 = a4 >> 0x8\n 74330: u8 [a0 + 0x19] = a5\n 74333: u8 [a0 + 0x18] = a4\n 74336: u8 [a0 + 0x10] = a3\n 74339: a4 = a3 >> 0x38\n 74342: u8 [a0 + 0x17] = a4\n 74345: a4 = a3 >> 0x30\n 74348: u8 [a0 + 0x16] = a4\n 74351: a4 = a3 >> 0x28\n 74354: u8 [a0 + 0x15] = a4\n 74357: a4 = a3 >> 0x20\n 74360: u8 [a0 + 0x14] = a4\n 74363: a4 = a3 >> 0x18\n 74366: u8 [a0 + 0x13] = a4\n 74369: a4 = a3 >> 0x10\n 74372: u8 [a0 + 0x12] = a4\n 74375: a3 = a3 >> 0x8\n 74378: u8 [a0 + 0x11] = a3\n 74381: u8 [a0 + 0x8] = a2\n 74384: a3 = a2 >> 0x38\n 74387: u8 [a0 + 0xf] = a3\n 74390: a3 = a2 >> 0x30\n 74393: u8 [a0 + 0xe] = a3\n 74396: a3 = a2 >> 0x28\n 74399: u8 [a0 + 0xd] = a3\n 74402: a3 = a2 >> 0x20\n 74405: u8 [a0 + 0xc] = a3\n 74408: a3 = a2 >> 0x18\n 74411: u8 [a0 + 0xb] = a3\n 74414: a3 = a2 >> 0x10\n 74417: u8 [a0 + 0xa] = a3\n 74420: a2 = a2 >> 0x8\n 74423: u8 [a0 + 0x9] = a2\n 74426: u8 [a0] = a1\n 74428: a2 = a1 >> 0x38\n 74431: u8 [a0 + 0x7] = a2\n 74434: a2 = a1 >> 0x30\n 74437: u8 [a0 + 0x6] = a2\n 74440: a2 = a1 >> 0x28\n 74443: u8 [a0 + 0x5] = a2\n 74446: a2 = a1 >> 0x20\n 74449: u8 [a0 + 0x4] = a2\n 74452: a2 = a1 >> 0x18\n 74455: u8 [a0 + 0x3] = a2\n 74458: a2 = a1 >> 0x10\n 74461: u8 [a0 + 0x2] = a2\n 74464: a1 = a1 >> 0x8\n 74467: u8 [a0 + 0x1] = a1\n 74470: a1 = 0x20\n 74473: a0 = 0\n 74475: ra = 930, jump @0\n      : @1127 [@dyn 465] (gas: 45)\n 74482: i32 a0 = a0 + 0\n 74484: i32 a2 = sp + 0xe0\n 74488: a1 = 0x20\n 74491: ecalli 4 // 'hash_keccak_256'\n 74493: a0 = u64 [sp + 0xe0]\n 74497: a1 = u64 [sp + 0xe8]\n 74501: a2 = u64 [sp + 0xf8]\n 74505: a3 = u64 [sp + 0xf0]\n 74509: t0 = reverse a0\n 74511: a1 = reverse a1\n 74513: a2 = reverse a2\n 74515: a3 = reverse a3\n 74517: a4 = u64 [sp + 0x50]\n 74520: a4 = a4 + a3\n 74523: a5 = u64 [sp + 0x48]\n 74526: a5 = a5 + a2\n 74529: a2 = a5 <u a2\n 74532: a4 = a4 + a2\n 74535: s1 = a4 ^ a3\n 74538: a3 = a4 <u a3\n 74541: a3 = a2 if s1 == 0\n 74544: a2 = u64 [sp + 0x58]\n 74547: a2 = a2 + a1\n 74550: a3 = a3 + a2\n 74553: s1 = a3 <u a2\n 74556: a0 = u64 [sp + 0x38]\n 74559: a0 = a0 + t0\n 74562: a1 = a2 <u a1\n 74565: a0 = a0 + a1\n 74568: a0 = a0 + s1\n 74571: a1 = u64 [sp + 0x40]\n 74574: u64 [a1 + 56] = 0\n 74577: u64 [a1 + 48] = 0\n 74580: u64 [a1 + 40] = 0\n 74583: u64 [a1 + 32] = 0\n 74586: u64 [a1] = a5\n 74588: u64 [a1 + 0x8] = a4\n 74591: u64 [a1 + 0x10] = a3\n 74594: u64 [a1 + 0x18] = a0\n 74597: sp = s0 + 0xfffffffffffffee0\n 74601: ra = u64 [sp + 0x118]\n 74605: s0 = u64 [sp + 0x110]\n 74609: s1 = u64 [sp + 0x108]\n 74613: sp = sp + 0x120\n 74617: ret\n      : @1128 (gas: 8)\n 74619: u64 [sp + 144] = 0\n 74623: u64 [sp + 136] = 0\n 74627: u64 [sp + 128] = 0\n 74631: a0 = 0x4e487b7100000000\n 74641: a1 = sp + 0x80\n 74645: u64 [sp + 0x98] = a0\n 74649: a0 = 0\n 74651: ra = 932, jump @23\n      : @1129 [@dyn 466] (gas: 7)\n 74658: u64 [sp + 120] = 0\n 74661: u64 [sp + 112] = 0\n 74664: u64 [sp + 96] = 0x32\n 74668: a0 = 0x4\n 74671: a1 = sp + 0x60\n 74674: u64 [sp + 104] = 0\n 74677: ra = 934, jump @23\n      : @1130 [@dyn 467] (gas: 3)\n 74684: a1 = 0x24\n 74687: a0 = 0\n 74689: ra = 936, jump @0\n      : @1131 [@dyn 468] (gas: 6)\n 74696: i32 a1 = a0 + 0\n 74698: a0 = 0x1\n 74701: a2 = 0x24\n 74704: ra = 0x3aa\n 74708: ecalli 6 // 'seal_return'\n 74710: fallthrough\n      : @1132 [@dyn 469] (gas: 9)\n 74711: a2 = u64 [a1 + 0x18]\n 74714: a3 = u64 [a1 + 0x10]\n 74717: a4 = u64 [a1 + 0x8]\n 74720: a1 = u64 [a1]\n 74722: u64 [a0 + 0x18] = a2\n 74725: u64 [a0 + 0x10] = a3\n 74728: u64 [a0 + 0x8] = a4\n 74731: u64 [a0] = a1\n 74733: ret\n      : @1133 (gas: 39)\n 74735: sp = sp + 0xfffffffffffffea0\n 74739: u64 [sp + 0x158] = ra\n 74743: u64 [sp + 0x150] = s0\n 74747: u64 [sp + 0x148] = s1\n 74751: s0 = sp + 0x160\n 74755: sp = sp & 0xffffffffffffffe0\n 74758: u64 [sp + 0x8] = a0\n 74761: a0 = u64 [a2 + 0x18]\n 74764: u64 [sp + 0x60] = a0\n 74767: a0 = u64 [a2 + 0x10]\n 74770: u64 [sp + 0x58] = a0\n 74773: a0 = u64 [a2 + 0x8]\n 74776: u64 [sp + 0x50] = a0\n 74779: a0 = u64 [a2]\n 74781: u64 [sp + 0x48] = a0\n 74784: a4 = u64 [a1 + 0x18]\n 74787: a3 = u64 [a1 + 0x10]\n 74790: a2 = u64 [a1 + 0x8]\n 74793: a0 = u64 [a1]\n 74795: u64 [sp + 0x88] = a4\n 74799: u64 [sp + 0x118] = a4\n 74803: u64 [sp + 0x90] = a3\n 74807: u64 [sp + 0x110] = a3\n 74811: u64 [sp + 0x98] = a2\n 74815: u64 [sp + 0x108] = a2\n 74819: u64 [sp + 0xa0] = a0\n 74823: u64 [sp + 0x100] = a0\n 74827: u64 [sp + 312] = 0\n 74831: u64 [sp + 304] = 0\n 74835: u64 [sp + 296] = 0\n 74839: u64 [sp + 288] = 0\n 74843: u32 [sp + 320] = 0x20\n 74848: i32 a1 = sp + 0x100\n 74852: i32 a3 = sp + 0x120\n 74856: i32 a4 = sp + 0x140\n 74860: a2 = 0xffffffffffffffff\n 74863: a0 = 0\n 74865: ecalli 3 // 'get_storage'\n 74867: fallthrough\n      : @1134 (gas: 31)\n 74868: t0 = u64 [sp + 0x130]\n 74872: t1 = u64 [sp + 0x128]\n 74876: t2 = u64 [sp + 0x138]\n 74880: ra = u64 [sp + 0x120]\n 74884: a0 = t0 << 0x3f\n 74887: a1 = t1 >> 0x1\n 74890: s1 = a1 | a0\n 74893: a0 = t2 << 0x3f\n 74896: a2 = t0 >> 0x1\n 74899: a2 = a2 | a0\n 74902: a0 = t1 << 0x3f\n 74905: a3 = ra >> 0x1\n 74908: a3 = a3 | a0\n 74911: a4 = t2 >> 0x1\n 74914: a0 = ra & 0x1\n 74917: a5 = -a0\n 74919: a1 = a3 & 0x7f\n 74922: a2 = a2 & a5\n 74925: s1 = s1 & a5\n 74928: a1 = a3 if a0 != 0\n 74931: a4 = a4 & a5\n 74934: u64 [sp + 0x28] = a1\n 74937: a1 = a1 <u 0x20\n 74940: u64 [sp + 0x30] = s1\n 74943: a1 = 0 if s1 != 0\n 74945: u64 [sp + 0x40] = a2\n 74948: u64 [sp + 0x38] = a4\n 74951: a2 = a2 | a4\n 74954: a1 = 0 if a2 != 0\n 74956: a2 = a0 <u 0x1\n 74959: jump @1150 if a2 != a1\n      : @1135 (gas: 4)\n 74963: u64 [sp + 0xb8] = t0\n 74967: u64 [sp + 0xb0] = t1\n 74971: u64 [sp + 0xa8] = t2\n 74975: jump @1139 if a0 != 0\n      : @1136 (gas: 12)\n 74979: a2 = u64 [sp + 0x58]\n 74982: a4 = u64 [sp + 0x48]\n 74985: a0 = a4 | a2\n 74988: a1 = u64 [sp + 0x60]\n 74991: a3 = u64 [sp + 0x50]\n 74994: a1 = a1 | a3\n 74997: a0 = a0 | a1\n 75000: a0 = a0 >> 0x20\n 75003: a1 = a1 | a2\n 75006: a1 = a1 << 0x20\n 75009: a0 = a0 | a1\n 75012: jump @1149 if a0 != 0\n      : @1137 (gas: 4)\n 75016: s1 = ra & 0xffffffffffffff00\n 75020: i32 a0 = a4 + 0\n 75022: a1 = 0x20\n 75025: ra = 940, jump @0\n      : @1138 [@dyn 470] (gas: 67)\n 75032: a1 = u64 [sp + 0xa8]\n 75036: a1 = reverse a1\n 75038: a2 = u64 [sp + 0xb8]\n 75042: a2 = reverse a2\n 75044: a3 = u64 [sp + 0xb0]\n 75048: a3 = reverse a3\n 75050: a4 = reverse s1\n 75052: u8 [a0 + 31] = 0\n 75055: u8 [a0 + 0x18] = a4\n 75058: u8 [a0 + 0x10] = a3\n 75061: a5 = a4 >> 0x30\n 75064: u8 [a0 + 0x1e] = a5\n 75067: a5 = a4 >> 0x28\n 75070: u8 [a0 + 0x1d] = a5\n 75073: a5 = a4 >> 0x20\n 75076: u8 [a0 + 0x1c] = a5\n 75079: a5 = a4 >> 0x18\n 75082: u8 [a0 + 0x1b] = a5\n 75085: a5 = a4 >> 0x10\n 75088: u8 [a0 + 0x1a] = a5\n 75091: a4 = a4 >> 0x8\n 75094: u8 [a0 + 0x19] = a4\n 75097: a4 = a3 >> 0x38\n 75100: u8 [a0 + 0x17] = a4\n 75103: a4 = a3 >> 0x30\n 75106: u8 [a0 + 0x16] = a4\n 75109: a4 = a3 >> 0x28\n 75112: u8 [a0 + 0x15] = a4\n 75115: a4 = a3 >> 0x20\n 75118: u8 [a0 + 0x14] = a4\n 75121: a4 = a3 >> 0x18\n 75124: u8 [a0 + 0x13] = a4\n 75127: a4 = a3 >> 0x10\n 75130: u8 [a0 + 0x12] = a4\n 75133: a3 = a3 >> 0x8\n 75136: u8 [a0 + 0x11] = a3\n 75139: u8 [a0 + 0x8] = a2\n 75142: a3 = a2 >> 0x38\n 75145: u8 [a0 + 0xf] = a3\n 75148: a3 = a2 >> 0x30\n 75151: u8 [a0 + 0xe] = a3\n 75154: a3 = a2 >> 0x28\n 75157: u8 [a0 + 0xd] = a3\n 75160: a3 = a2 >> 0x20\n 75163: u8 [a0 + 0xc] = a3\n 75166: a3 = a2 >> 0x18\n 75169: u8 [a0 + 0xb] = a3\n 75172: a3 = a2 >> 0x10\n 75175: u8 [a0 + 0xa] = a3\n 75178: a2 = a2 >> 0x8\n 75181: u8 [a0 + 0x9] = a2\n 75184: u8 [a0] = a1\n 75186: a2 = a1 >> 0x38\n 75189: u8 [a0 + 0x7] = a2\n 75192: a2 = a1 >> 0x30\n 75195: u8 [a0 + 0x6] = a2\n 75198: a2 = a1 >> 0x28\n 75201: u8 [a0 + 0x5] = a2\n 75204: a2 = a1 >> 0x20\n 75207: u8 [a0 + 0x4] = a2\n 75210: a2 = a1 >> 0x18\n 75213: u8 [a0 + 0x3] = a2\n 75216: a2 = a1 >> 0x10\n 75219: u8 [a0 + 0x2] = a2\n 75222: a1 = a1 >> 0x8\n 75225: u8 [a0 + 0x1] = a1\n 75228: jump @1148\n      : @1139 (gas: 4)\n 75231: a1 = 0x20\n 75234: a0 = 0\n 75236: s1 = ra\n 75238: ra = 942, jump @0\n      : @1140 [@dyn 471] (gas: 71)\n 75245: a1 = u64 [sp + 0x88]\n 75249: a1 = reverse a1\n 75251: a2 = u64 [sp + 0x90]\n 75255: a2 = reverse a2\n 75257: a3 = u64 [sp + 0x98]\n 75261: a3 = reverse a3\n 75263: a4 = u64 [sp + 0xa0]\n 75267: a4 = reverse a4\n 75269: a5 = a4 >> 0x38\n 75272: u8 [a0 + 0x1f] = a5\n 75275: a5 = a4 >> 0x30\n 75278: u8 [a0 + 0x1e] = a5\n 75281: a5 = a4 >> 0x28\n 75284: u8 [a0 + 0x1d] = a5\n 75287: a5 = a4 >> 0x20\n 75290: u8 [a0 + 0x1c] = a5\n 75293: a5 = a4 >> 0x18\n 75296: u8 [a0 + 0x1b] = a5\n 75299: a5 = a4 >> 0x10\n 75302: u8 [a0 + 0x1a] = a5\n 75305: a5 = a4 >> 0x8\n 75308: u8 [a0 + 0x19] = a5\n 75311: u8 [a0 + 0x18] = a4\n 75314: u8 [a0 + 0x10] = a3\n 75317: a4 = a3 >> 0x38\n 75320: u8 [a0 + 0x17] = a4\n 75323: a4 = a3 >> 0x30\n 75326: u8 [a0 + 0x16] = a4\n 75329: a4 = a3 >> 0x28\n 75332: u8 [a0 + 0x15] = a4\n 75335: a4 = a3 >> 0x20\n 75338: u8 [a0 + 0x14] = a4\n 75341: a4 = a3 >> 0x18\n 75344: u8 [a0 + 0x13] = a4\n 75347: a4 = a3 >> 0x10\n 75350: u8 [a0 + 0x12] = a4\n 75353: a3 = a3 >> 0x8\n 75356: u8 [a0 + 0x11] = a3\n 75359: u8 [a0 + 0x8] = a2\n 75362: a3 = a2 >> 0x38\n 75365: u8 [a0 + 0xf] = a3\n 75368: a3 = a2 >> 0x30\n 75371: u8 [a0 + 0xe] = a3\n 75374: a3 = a2 >> 0x28\n 75377: u8 [a0 + 0xd] = a3\n 75380: a3 = a2 >> 0x20\n 75383: u8 [a0 + 0xc] = a3\n 75386: a3 = a2 >> 0x18\n 75389: u8 [a0 + 0xb] = a3\n 75392: a3 = a2 >> 0x10\n 75395: u8 [a0 + 0xa] = a3\n 75398: a2 = a2 >> 0x8\n 75401: u8 [a0 + 0x9] = a2\n 75404: u8 [a0] = a1\n 75406: a2 = a1 >> 0x38\n 75409: u8 [a0 + 0x7] = a2\n 75412: a2 = a1 >> 0x30\n 75415: u8 [a0 + 0x6] = a2\n 75418: a2 = a1 >> 0x28\n 75421: u8 [a0 + 0x5] = a2\n 75424: a2 = a1 >> 0x20\n 75427: u8 [a0 + 0x4] = a2\n 75430: a2 = a1 >> 0x18\n 75433: u8 [a0 + 0x3] = a2\n 75436: a2 = a1 >> 0x10\n 75439: u8 [a0 + 0x2] = a2\n 75442: a1 = a1 >> 0x8\n 75445: u8 [a0 + 0x1] = a1\n 75448: a1 = 0x20\n 75451: a0 = 0\n 75453: ra = 944, jump @0\n      : @1141 [@dyn 472] (gas: 5)\n 75460: i32 a0 = a0 + 0\n 75462: i32 a2 = sp + 0x120\n 75466: a1 = 0x20\n 75469: ecalli 4 // 'hash_keccak_256'\n 75471: fallthrough\n      : @1142 (gas: 8)\n 75472: a0 = s1 <u 0x2\n 75475: a1 = u64 [sp + 0xb0]\n 75479: a0 = 0 if a1 != 0\n 75481: a1 = u64 [sp + 0xb8]\n 75485: a2 = u64 [sp + 0xa8]\n 75489: a1 = a1 | a2\n 75492: a0 = 0 if a1 != 0\n 75494: jump @1148 if a0 != 0\n      : @1143 (gas: 19)\n 75498: u64 [sp + 168] = 0\n 75502: u64 [sp + 160] = 0\n 75506: u64 [sp + 176] = 0\n 75510: u64 [sp + 184] = 0\n 75514: a0 = u64 [sp + 0x120]\n 75518: a1 = u64 [sp + 0x128]\n 75522: a2 = u64 [sp + 0x130]\n 75526: a3 = u64 [sp + 0x138]\n 75530: a0 = reverse a0\n 75532: a4 = reverse a1\n 75534: s1 = reverse a2\n 75536: a1 = reverse a3\n 75538: i32 a2 = sp + 0x100\n 75542: u64 [sp + 0x20] = a2\n 75545: i32 a2 = sp + 0x120\n 75549: u64 [sp + 0x18] = a2\n 75552: i32 a2 = sp + 0x140\n 75556: u64 [sp + 0x10] = a2\n 75559: fallthrough\n      : @1144 (gas: 20)\n 75560: u64 [sp + 0x80] = a4\n 75564: u64 [sp + 0x110] = a4\n 75568: u64 [sp + 0x90] = s1\n 75572: u64 [sp + 0x108] = s1\n 75576: u64 [sp + 0x88] = a1\n 75580: u64 [sp + 0x100] = a1\n 75584: u64 [sp + 0x98] = a0\n 75588: u64 [sp + 0x118] = a0\n 75592: u64 [sp + 312] = 0\n 75596: u64 [sp + 304] = 0\n 75600: u64 [sp + 296] = 0\n 75604: u64 [sp + 288] = 0\n 75608: u32 [sp + 320] = 0x20\n 75613: a2 = 0xffffffffffffffff\n 75616: a0 = 0\n 75618: a1 = u64 [sp + 0x20]\n 75621: a3 = u64 [sp + 0x18]\n 75624: a4 = u64 [sp + 0x10]\n 75627: ecalli 3 // 'get_storage'\n 75629: fallthrough\n      : @1145 (gas: 30)\n 75630: a0 = u64 [sp + 0x48]\n 75633: a1 = u64 [sp + 0xa8]\n 75637: a0 = a0 + a1\n 75640: a1 = a0 <u a1\n 75643: a2 = u64 [sp + 0x50]\n 75646: a4 = u64 [sp + 0xa0]\n 75650: a2 = a2 + a4\n 75653: a2 = a2 + a1\n 75656: a3 = a2 ^ a4\n 75659: a4 = a2 <u a4\n 75662: a4 = a1 if a3 == 0\n 75665: a1 = u64 [sp + 0x58]\n 75668: a3 = u64 [sp + 0xb0]\n 75672: a1 = a1 + a3\n 75675: a3 = a1 <u a3\n 75678: a5 = u64 [sp + 0x60]\n 75681: s1 = u64 [sp + 0xb8]\n 75685: a5 = a5 + s1\n 75688: a3 = a3 + a5\n 75691: a4 = a4 + a1\n 75694: a1 = a4 <u a1\n 75697: a1 = a1 + a3\n 75700: a1 = a1 | a2\n 75703: a2 = a0 | a4\n 75706: a2 = a2 | a1\n 75709: a1 = a1 | a4\n 75712: a2 = a2 >> 0x20\n 75715: a1 = a1 << 0x20\n 75718: a1 = a1 | a2\n 75721: jump @1149 if a1 != 0\n      : @1146 (gas: 10)\n 75725: a1 = u64 [sp + 0x138]\n 75729: u64 [sp + 0x70] = a1\n 75732: a1 = u64 [sp + 0x130]\n 75736: u64 [sp + 0x78] = a1\n 75739: a1 = u64 [sp + 0x128]\n 75743: u64 [sp + 0x68] = a1\n 75746: s1 = u64 [sp + 0x120]\n 75750: i32 a0 = a0 + 0\n 75752: a1 = 0x20\n 75755: ra = 946, jump @0\n      : @1147 [@dyn 473] (gas: 111)\n 75762: a1 = reverse s1\n 75764: a2 = a1 >> 0x38\n 75767: u8 [a0 + 0x1f] = a2\n 75770: a2 = a1 >> 0x30\n 75773: u8 [a0 + 0x1e] = a2\n 75776: a2 = a1 >> 0x28\n 75779: u8 [a0 + 0x1d] = a2\n 75782: a2 = a1 >> 0x20\n 75785: u8 [a0 + 0x1c] = a2\n 75788: a2 = a1 >> 0x18\n 75791: u8 [a0 + 0x1b] = a2\n 75794: a2 = a1 >> 0x10\n 75797: u8 [a0 + 0x1a] = a2\n 75800: a2 = a1 >> 0x8\n 75803: u8 [a0 + 0x19] = a2\n 75806: a2 = u64 [sp + 0x68]\n 75809: a2 = reverse a2\n 75811: u8 [a0 + 0x18] = a1\n 75814: a1 = a2 >> 0x38\n 75817: u8 [a0 + 0x17] = a1\n 75820: a1 = a2 >> 0x30\n 75823: u8 [a0 + 0x16] = a1\n 75826: a1 = a2 >> 0x28\n 75829: u8 [a0 + 0x15] = a1\n 75832: a1 = a2 >> 0x20\n 75835: u8 [a0 + 0x14] = a1\n 75838: a1 = a2 >> 0x18\n 75841: u8 [a0 + 0x13] = a1\n 75844: a1 = a2 >> 0x10\n 75847: u8 [a0 + 0x12] = a1\n 75850: a1 = u64 [sp + 0x70]\n 75853: a1 = reverse a1\n 75855: a3 = u64 [sp + 0x78]\n 75858: a3 = reverse a3\n 75860: u8 [a0 + 0x10] = a2\n 75863: a2 = a2 >> 0x8\n 75866: u8 [a0 + 0x11] = a2\n 75869: u8 [a0 + 0x8] = a3\n 75872: a2 = a3 >> 0x38\n 75875: u8 [a0 + 0xf] = a2\n 75878: a2 = a3 >> 0x30\n 75881: u8 [a0 + 0xe] = a2\n 75884: a2 = a3 >> 0x28\n 75887: u8 [a0 + 0xd] = a2\n 75890: a2 = a3 >> 0x20\n 75893: u8 [a0 + 0xc] = a2\n 75896: a2 = a3 >> 0x18\n 75899: u8 [a0 + 0xb] = a2\n 75902: a2 = a3 >> 0x10\n 75905: u8 [a0 + 0xa] = a2\n 75908: a3 = a3 >> 0x8\n 75911: u8 [a0 + 0x9] = a3\n 75914: u8 [a0] = a1\n 75916: a2 = a1 >> 0x38\n 75919: u8 [a0 + 0x7] = a2\n 75922: a2 = a1 >> 0x30\n 75925: u8 [a0 + 0x6] = a2\n 75928: a2 = a1 >> 0x28\n 75931: u8 [a0 + 0x5] = a2\n 75934: a2 = a1 >> 0x20\n 75937: u8 [a0 + 0x4] = a2\n 75940: a2 = a1 >> 0x18\n 75943: u8 [a0 + 0x3] = a2\n 75946: a2 = a1 >> 0x10\n 75949: u8 [a0 + 0x2] = a2\n 75952: a1 = a1 >> 0x8\n 75955: u8 [a0 + 0x1] = a1\n 75958: a0 = u64 [sp + 0xa8]\n 75962: t1 = a0 + 0x20\n 75965: a2 = t1 <u a0\n 75968: a0 = u64 [sp + 0xa0]\n 75972: t2 = a0 + a2\n 75975: a3 = t2 <u a0\n 75978: a3 = a2 if a2 == 0\n 75981: a0 = u64 [sp + 0xb0]\n 75985: a2 = a0 + a3\n 75988: a3 = a2 <u a0\n 75991: a5 = u64 [sp + 0xb8]\n 75995: a5 = a5 + a3\n 75998: a4 = u64 [sp + 0x40]\n 76001: t0 = a2 <u a4\n 76004: a3 = u64 [sp + 0x28]\n 76007: a0 = t1 <u a3\n 76010: a3 = u64 [sp + 0x30]\n 76013: s1 = t2 ^ a3\n 76016: a3 = t2 <u a3\n 76019: a3 = a0 if s1 == 0\n 76022: s1 = u64 [sp + 0x38]\n 76025: a0 = a5 ^ s1\n 76028: u64 [sp + 0xb8] = a5\n 76032: s1 = a5 <u s1\n 76035: s1 = t0 if a0 == 0\n 76038: a4 = a4 ^ a2\n 76041: a4 = a4 | a0\n 76044: a3 = s1 if a4 != 0\n 76047: a1 = u64 [sp + 0x88]\n 76051: a1 = a1 + 0x1\n 76054: a4 = a1 <u 0x1\n 76057: s1 = u64 [sp + 0x90]\n 76061: s1 = s1 + a4\n 76064: a4 = a1 | s1\n 76067: a4 = a4 <u 0x1\n 76070: a0 = u64 [sp + 0x80]\n 76074: a4 = a4 + a0\n 76077: a5 = a4 <u a0\n 76080: a0 = u64 [sp + 0x98]\n 76084: a0 = a0 + a5\n 76087: u64 [sp + 0xa8] = t1\n 76091: u64 [sp + 0xa0] = t2\n 76095: u64 [sp + 0xb0] = a2\n 76099: jump @1144 if a3 != 0\n      : @1148 (gas: 33)\n 76103: a0 = u64 [sp + 0x48]\n 76106: a1 = u64 [sp + 0x28]\n 76109: a0 = a0 + a1\n 76112: a1 = a0 <u a1\n 76115: a2 = u64 [sp + 0x50]\n 76118: a4 = u64 [sp + 0x30]\n 76121: a2 = a2 + a4\n 76124: a2 = a2 + a1\n 76127: a3 = a2 ^ a4\n 76130: a4 = a2 <u a4\n 76133: a4 = a1 if a3 == 0\n 76136: a1 = u64 [sp + 0x58]\n 76139: a5 = u64 [sp + 0x40]\n 76142: a1 = a1 + a5\n 76145: a4 = a4 + a1\n 76148: a3 = a4 <u a1\n 76151: a1 = a1 <u a5\n 76154: a5 = u64 [sp + 0x60]\n 76157: s1 = u64 [sp + 0x38]\n 76160: a5 = a5 + s1\n 76163: a1 = a1 + a5\n 76166: a1 = a1 + a3\n 76169: a3 = u64 [sp + 0x8]\n 76172: u64 [a3] = a0\n 76174: u64 [a3 + 0x8] = a2\n 76177: u64 [a3 + 0x10] = a4\n 76180: u64 [a3 + 0x18] = a1\n 76183: sp = s0 + 0xfffffffffffffea0\n 76187: ra = u64 [sp + 0x158]\n 76191: s0 = u64 [sp + 0x150]\n 76195: s1 = u64 [sp + 0x148]\n 76199: sp = sp + 0x160\n 76203: ret\n      : @1149 (gas: 1)\n 76205: trap\n      : @1150 (gas: 8)\n 76206: u64 [sp + 240] = 0\n 76210: u64 [sp + 232] = 0\n 76214: u64 [sp + 224] = 0\n 76218: a0 = 0x4e487b7100000000\n 76228: a1 = sp + 0xe0\n 76232: u64 [sp + 0xf8] = a0\n 76236: a0 = 0\n 76238: ra = 948, jump @23\n      : @1151 [@dyn 474] (gas: 7)\n 76245: u64 [sp + 216] = 0\n 76249: u64 [sp + 208] = 0\n 76253: u64 [sp + 192] = 0x22\n 76258: a0 = 0x4\n 76261: a1 = sp + 0xc0\n 76265: u64 [sp + 200] = 0\n 76269: ra = 950, jump @23\n      : @1152 [@dyn 475] (gas: 3)\n 76276: a1 = 0x24\n 76279: a0 = 0\n 76281: ra = 952, jump @0\n      : @1153 [@dyn 476] (gas: 6)\n 76288: i32 a1 = a0 + 0\n 76290: a0 = 0x1\n 76293: a2 = 0x24\n 76296: ra = 0x3ba\n 76300: ecalli 6 // 'seal_return'\n 76302: fallthrough\n      : @1154 [@dyn 477] (gas: 12)\n 76303: a1 = u64 [a0 + 0x10]\n 76306: a2 = u64 [a0 + 0x18]\n 76309: a3 = u64 [a0 + 0x8]\n 76312: a0 = u64 [a0]\n 76314: a2 = a2 | a3\n 76317: a3 = a0 | a1\n 76320: a3 = a3 | a2\n 76323: a3 = a3 >> 0x20\n 76326: a1 = a1 | a2\n 76329: a1 = a1 << 0x20\n 76332: a1 = a1 | a3\n 76335: jump @1157 if a1 != 0\n      : @1155 (gas: 7)\n 76339: sp = sp + 0xfffffffffffffff0\n 76342: u64 [sp + 0x8] = ra\n 76345: u64 [sp] = s0\n 76347: i32 a0 = a0 + 0\n 76349: a1 = 0x20\n 76352: s0 = 0x20\n 76355: ra = 956, jump @0\n      : @1156 [@dyn 478] (gas: 37)\n 76362: u8 [a0 + 31] = 0\n 76365: u8 [a0 + 30] = 0\n 76368: u8 [a0 + 29] = 0\n 76371: u8 [a0 + 28] = 0\n 76374: u8 [a0 + 27] = 0\n 76377: u8 [a0 + 26] = 0\n 76380: u8 [a0 + 25] = 0\n 76383: u8 [a0 + 24] = 0\n 76386: u8 [a0 + 23] = 0\n 76389: u8 [a0 + 22] = 0\n 76392: u8 [a0 + 21] = 0\n 76395: u8 [a0 + 20] = 0\n 76398: u8 [a0 + 19] = 0\n 76401: u8 [a0 + 18] = 0\n 76404: u8 [a0 + 17] = 0\n 76407: u8 [a0 + 16] = 0\n 76410: u8 [a0 + 15] = 0\n 76413: u8 [a0 + 14] = 0\n 76416: u8 [a0 + 13] = 0\n 76419: u8 [a0 + 12] = 0\n 76422: u8 [a0 + 11] = 0\n 76425: u8 [a0 + 10] = 0\n 76428: u8 [a0 + 9] = 0\n 76431: u8 [a0 + 8] = 0\n 76434: u8 [a0 + 7] = 0\n 76437: u8 [a0 + 6] = 0\n 76440: u8 [a0 + 5] = 0\n 76443: u8 [a0 + 4] = 0\n 76446: u8 [a0 + 0x3] = s0\n 76449: u8 [a0 + 2] = 0x73\n 76453: a1 = 0x69\n 76456: u8 [a0 + 0x1] = a1\n 76459: u8 [a0] = s0\n 76461: ra = u64 [sp + 0x8]\n 76464: s0 = u64 [sp]\n 76466: sp = sp + 0x10\n 76469: ret\n      : @1157 (gas: 1)\n 76471: trap\n      : @1158 [@dyn 479] (gas: 8)\n 76472: a0 = u64 [s1 + 0x430]\n 76476: a1 = u64 [s1 + 0x438]\n 76480: a2 = u64 [s1 + 0x428]\n 76484: a3 = u64 [s1 + 0x420]\n 76488: a1 = a1 | a2\n 76491: a0 = a0 | a3\n 76494: a0 = a0 | a1\n 76497: jump @1160 if a0 != 0\n      : @1159 (gas: 1)\n 76500: jump @1200\n      : @1160 (gas: 13)\n 76503: i32 a0 = s1 + 0x440\n 76507: ecalli 5 // 'now'\n 76509: a0 = u64 [s1 + 0x458]\n 76513: u64 [s1 + 0x138] = a0\n 76517: a0 = u64 [s1 + 0x450]\n 76521: u64 [s1 + 0x140] = a0\n 76525: a0 = u64 [s1 + 0x448]\n 76529: u64 [s1 + 0x148] = a0\n 76533: a0 = u64 [s1 + 0x440]\n 76537: u64 [s1 + 0x150] = a0\n 76541: a0 = 0x40\n 76544: a1 = 0x20\n 76547: ra = 960, jump @0\n      : @1161 [@dyn 480] (gas: 115)\n 76554: a1 = u8 [a0 + 0x19]\n 76557: a2 = u8 [a0 + 0x18]\n 76560: a3 = u8 [a0 + 0x1a]\n 76563: a4 = u8 [a0 + 0x1b]\n 76566: a1 = a1 << 0x8\n 76569: a1 = a1 | a2\n 76572: a3 = a3 << 0x10\n 76575: a4 = a4 << 0x18\n 76578: a3 = a3 | a4\n 76581: a1 = a1 | a3\n 76584: a2 = u8 [a0 + 0x1d]\n 76587: a3 = u8 [a0 + 0x1c]\n 76590: a4 = u8 [a0 + 0x1e]\n 76593: a5 = u8 [a0 + 0x1f]\n 76596: a2 = a2 << 0x8\n 76599: a2 = a2 | a3\n 76602: a4 = a4 << 0x10\n 76605: a5 = a5 << 0x18\n 76608: a4 = a4 | a5\n 76611: a2 = a2 | a4\n 76614: a2 = a2 << 0x20\n 76617: t0 = a2 | a1\n 76620: a2 = u8 [a0 + 0x11]\n 76623: a3 = u8 [a0 + 0x10]\n 76626: a4 = u8 [a0 + 0x12]\n 76629: a5 = u8 [a0 + 0x13]\n 76632: a2 = a2 << 0x8\n 76635: a2 = a2 | a3\n 76638: a4 = a4 << 0x10\n 76641: a5 = a5 << 0x18\n 76644: a4 = a4 | a5\n 76647: a2 = a2 | a4\n 76650: a3 = u8 [a0 + 0x15]\n 76653: a4 = u8 [a0 + 0x14]\n 76656: a5 = u8 [a0 + 0x16]\n 76659: a1 = u8 [a0 + 0x17]\n 76662: a3 = a3 << 0x8\n 76665: a3 = a3 | a4\n 76668: a5 = a5 << 0x10\n 76671: a1 = a1 << 0x18\n 76674: a1 = a1 | a5\n 76677: a1 = a1 | a3\n 76680: a1 = a1 << 0x20\n 76683: t1 = a1 | a2\n 76686: a1 = u8 [a0 + 0x9]\n 76689: a3 = u8 [a0 + 0x8]\n 76692: a4 = u8 [a0 + 0xa]\n 76695: a5 = u8 [a0 + 0xb]\n 76698: a1 = a1 << 0x8\n 76701: a1 = a1 | a3\n 76704: a4 = a4 << 0x10\n 76707: a5 = a5 << 0x18\n 76710: a4 = a4 | a5\n 76713: a1 = a1 | a4\n 76716: a3 = u8 [a0 + 0xd]\n 76719: a4 = u8 [a0 + 0xc]\n 76722: a5 = u8 [a0 + 0xe]\n 76725: a2 = u8 [a0 + 0xf]\n 76728: a3 = a3 << 0x8\n 76731: a3 = a3 | a4\n 76734: a5 = a5 << 0x10\n 76737: a2 = a2 << 0x18\n 76740: a2 = a2 | a5\n 76743: a2 = a2 | a3\n 76746: a2 = a2 << 0x20\n 76749: a3 = a2 | a1\n 76752: a1 = u8 [a0 + 0x1]\n 76755: a2 = u8 [a0]\n 76757: a4 = u8 [a0 + 0x2]\n 76760: a5 = u8 [a0 + 0x3]\n 76763: a1 = a1 << 0x8\n 76766: a1 = a1 | a2\n 76769: a4 = a4 << 0x10\n 76772: a5 = a5 << 0x18\n 76775: a4 = a4 | a5\n 76778: a1 = a1 | a4\n 76781: a2 = u8 [a0 + 0x5]\n 76784: a4 = u8 [a0 + 0x4]\n 76787: a5 = u8 [a0 + 0x6]\n 76790: a0 = u8 [a0 + 0x7]\n 76793: a2 = a2 << 0x8\n 76796: a2 = a2 | a4\n 76799: a5 = a5 << 0x10\n 76802: a0 = a0 << 0x18\n 76805: a0 = a0 | a5\n 76808: a0 = a0 | a2\n 76811: a0 = a0 << 0x20\n 76814: a0 = a0 | a1\n 76817: a2 = reverse a0\n 76819: a3 = reverse a3\n 76821: a1 = reverse t1\n 76823: a0 = reverse t0\n 76825: a4 = a0 + 0x20\n 76828: u64 [s1 + 0x160] = a0\n 76832: a0 = a4 <u a0\n 76835: a5 = a1 + a0\n 76838: u64 [s1 + 0x168] = a1\n 76842: a1 = a5 <u a1\n 76845: a1 = a0 if a0 == 0\n 76848: a1 = a1 + a3\n 76851: u64 [s1 + 0x170] = a3\n 76855: a0 = a1 <u a3\n 76858: u64 [s1 + 0x178] = a2\n 76862: a2 = a2 + a0\n 76865: a0 = a4 | a1\n 76868: u64 [s1 + 0x130] = a5\n 76872: u64 [s1 + 0x120] = a2\n 76876: a2 = a2 | a5\n 76879: a0 = a0 | a2\n 76882: a0 = a0 >> 0x20\n 76885: u64 [s1 + 0x128] = a1\n 76889: a1 = a1 | a2\n 76892: a1 = a1 << 0x20\n 76895: a0 = a0 | a1\n 76898: jump @1163 if a0 == 0\n      : @1162 (gas: 1)\n 76901: jump @1205\n      : @1163 (gas: 5)\n 76904: i32 a0 = a4 + 0\n 76906: a1 = 0x20\n 76909: u64 [s1 + 0x158] = a0\n 76913: u64 [s1 + 0x118] = a4\n 76917: ra = 962, jump @0\n      : @1164 [@dyn 481] (gas: 78)\n 76924: a1 = u64 [s1 + 0x138]\n 76928: a1 = reverse a1\n 76930: a2 = u64 [s1 + 0x140]\n 76934: a2 = reverse a2\n 76936: a3 = u64 [s1 + 0x148]\n 76940: a3 = reverse a3\n 76942: a4 = u64 [s1 + 0x150]\n 76946: a4 = reverse a4\n 76948: a5 = a4 >> 0x38\n 76951: u8 [a0 + 0x1f] = a5\n 76954: a5 = a4 >> 0x30\n 76957: u8 [a0 + 0x1e] = a5\n 76960: a5 = a4 >> 0x28\n 76963: u8 [a0 + 0x1d] = a5\n 76966: a5 = a4 >> 0x20\n 76969: u8 [a0 + 0x1c] = a5\n 76972: a5 = a4 >> 0x18\n 76975: u8 [a0 + 0x1b] = a5\n 76978: a5 = a4 >> 0x10\n 76981: u8 [a0 + 0x1a] = a5\n 76984: a5 = a4 >> 0x8\n 76987: u8 [a0 + 0x19] = a5\n 76990: u8 [a0 + 0x18] = a4\n 76993: u8 [a0 + 0x10] = a3\n 76996: a4 = a3 >> 0x38\n 76999: u8 [a0 + 0x17] = a4\n 77002: a4 = a3 >> 0x30\n 77005: u8 [a0 + 0x16] = a4\n 77008: a4 = a3 >> 0x28\n 77011: u8 [a0 + 0x15] = a4\n 77014: a4 = a3 >> 0x20\n 77017: u8 [a0 + 0x14] = a4\n 77020: a4 = a3 >> 0x18\n 77023: u8 [a0 + 0x13] = a4\n 77026: a4 = a3 >> 0x10\n 77029: u8 [a0 + 0x12] = a4\n 77032: a3 = a3 >> 0x8\n 77035: u8 [a0 + 0x11] = a3\n 77038: u8 [a0 + 0x8] = a2\n 77041: a3 = a2 >> 0x38\n 77044: u8 [a0 + 0xf] = a3\n 77047: a3 = a2 >> 0x30\n 77050: u8 [a0 + 0xe] = a3\n 77053: a3 = a2 >> 0x28\n 77056: u8 [a0 + 0xd] = a3\n 77059: a3 = a2 >> 0x20\n 77062: u8 [a0 + 0xc] = a3\n 77065: a3 = a2 >> 0x18\n 77068: u8 [a0 + 0xb] = a3\n 77071: a3 = a2 >> 0x10\n 77074: u8 [a0 + 0xa] = a3\n 77077: a2 = a2 >> 0x8\n 77080: u8 [a0 + 0x9] = a2\n 77083: u8 [a0] = a1\n 77085: a2 = a1 >> 0x38\n 77088: u8 [a0 + 0x7] = a2\n 77091: a2 = a1 >> 0x30\n 77094: u8 [a0 + 0x6] = a2\n 77097: a2 = a1 >> 0x28\n 77100: u8 [a0 + 0x5] = a2\n 77103: a2 = a1 >> 0x20\n 77106: u8 [a0 + 0x4] = a2\n 77109: a2 = a1 >> 0x18\n 77112: u8 [a0 + 0x3] = a2\n 77115: a2 = a1 >> 0x10\n 77118: u8 [a0 + 0x2] = a2\n 77121: a1 = a1 >> 0x8\n 77124: a2 = u64 [s1 + 0x128]\n 77128: a3 = u64 [s1 + 0x120]\n 77132: a2 = a2 | a3\n 77135: a3 = 0xffffffe0\n 77145: a4 = u64 [s1 + 0x118]\n 77149: a3 = a4 <u a3\n 77152: a4 = u64 [s1 + 0x130]\n 77156: a3 = 0 if a4 != 0\n 77158: a3 = 0 if a2 != 0\n 77160: u8 [a0 + 0x1] = a1\n 77163: jump @1166 if a3 != 0\n      : @1165 (gas: 1)\n 77166: jump @1205\n      : @1166 (gas: 4)\n 77169: a0 = u64 [s1 + 0x158]\n 77173: i32 a0 = a0 + 0x20\n 77176: a1 = 0x20\n 77179: ra = 964, jump @0\n      : @1167 [@dyn 482] (gas: 44)\n 77186: u8 [a0 + 31] = 0\n 77189: u8 [a0 + 29] = 0xf0\n 77194: u8 [a0 + 28] = 0x9b\n 77199: u8 [a0 + 27] = 0xbc\n 77204: u8 [a0 + 26] = 0xe1\n 77209: u8 [a0 + 25] = 0x8\n 77213: a4 = u64 [s1 + 0x170]\n 77217: a3 = u64 [s1 + 0x160]\n 77221: a1 = a3 | a4\n 77224: a2 = u64 [s1 + 0x178]\n 77228: a5 = u64 [s1 + 0x168]\n 77232: a2 = a2 | a5\n 77235: a1 = a1 | a2\n 77238: a1 = a1 >> 0x20\n 77241: a2 = a2 | a4\n 77244: a2 = a2 << 0x20\n 77247: a1 = a1 | a2\n 77250: u8 [a0 + 30] = 0x40\n 77254: u8 [a0 + 24] = 0\n 77257: u8 [a0 + 23] = 0\n 77260: u8 [a0 + 22] = 0\n 77263: u8 [a0 + 21] = 0\n 77266: u8 [a0 + 20] = 0\n 77269: u8 [a0 + 19] = 0\n 77272: u8 [a0 + 18] = 0\n 77275: u8 [a0 + 17] = 0\n 77278: u8 [a0 + 16] = 0\n 77281: u8 [a0 + 15] = 0\n 77284: u8 [a0 + 14] = 0\n 77287: u8 [a0 + 13] = 0\n 77290: u8 [a0 + 12] = 0\n 77293: u8 [a0 + 11] = 0\n 77296: u8 [a0 + 10] = 0\n 77299: u8 [a0 + 9] = 0\n 77302: u8 [a0 + 8] = 0\n 77305: u8 [a0 + 7] = 0\n 77308: u8 [a0 + 6] = 0\n 77311: u8 [a0 + 5] = 0\n 77314: u8 [a0 + 4] = 0\n 77317: u8 [a0 + 3] = 0\n 77320: u8 [a0 + 2] = 0\n 77323: u8 [a0 + 1] = 0\n 77326: u8 [a0 + 0] = 0\n 77328: jump @1169 if a1 == 0\n      : @1168 (gas: 1)\n 77331: jump @1205\n      : @1169 (gas: 4)\n 77334: i32 a0 = a3 + 0\n 77336: u64 [s1 + 0x150] = a0\n 77340: a1 = 0x20\n 77343: ra = 966, jump @0\n      : @1170 [@dyn 483] (gas: 51)\n 77350: u8 [a0 + 31] = 0x40\n 77354: u8 [a0 + 30] = 0\n 77357: u8 [a0 + 29] = 0\n 77360: u8 [a0 + 28] = 0\n 77363: u8 [a0 + 27] = 0\n 77366: u8 [a0 + 26] = 0\n 77369: u8 [a0 + 25] = 0\n 77372: u8 [a0 + 24] = 0\n 77375: u8 [a0 + 23] = 0\n 77378: u8 [a0 + 22] = 0\n 77381: u8 [a0 + 21] = 0\n 77384: u8 [a0 + 20] = 0\n 77387: u8 [a0 + 19] = 0\n 77390: u8 [a0 + 18] = 0\n 77393: u8 [a0 + 17] = 0\n 77396: u8 [a0 + 16] = 0\n 77399: u8 [a0 + 15] = 0\n 77402: u8 [a0 + 14] = 0\n 77405: u8 [a0 + 13] = 0\n 77408: u8 [a0 + 12] = 0\n 77411: u8 [a0 + 11] = 0\n 77414: u8 [a0 + 10] = 0\n 77417: u8 [a0 + 9] = 0\n 77420: u8 [a0 + 8] = 0\n 77423: u8 [a0 + 7] = 0\n 77426: u8 [a0 + 6] = 0\n 77429: u8 [a0 + 5] = 0\n 77432: u8 [a0 + 4] = 0\n 77435: u8 [a0 + 3] = 0\n 77438: u8 [a0 + 2] = 0\n 77441: u8 [a0 + 1] = 0\n 77444: u8 [a0 + 0] = 0\n 77446: a0 = u64 [s1 + 0x160]\n 77450: a1 = a0 + 0x60\n 77453: u64 [s1 + 0x148] = a1\n 77457: a0 = a1 <u a0\n 77460: a1 = u64 [s1 + 0x168]\n 77464: a2 = a1 + a0\n 77467: u64 [s1 + 0x160] = a2\n 77471: a1 = a2 <u a1\n 77474: a1 = a0 if a0 == 0\n 77477: a0 = u64 [s1 + 0x170]\n 77481: a1 = a1 + a0\n 77484: u64 [s1 + 0x168] = a1\n 77488: a0 = a1 <u a0\n 77491: a1 = u64 [s1 + 0x178]\n 77495: a0 = a0 + a1\n 77498: u64 [s1 + 0x178] = a0\n 77502: a0 = 0x40\n 77505: a1 = 0x20\n 77508: ra = 968, jump @0\n      : @1171 [@dyn 484] (gas: 71)\n 77515: a1 = u64 [s1 + 0x178]\n 77519: a1 = reverse a1\n 77521: a2 = u64 [s1 + 0x168]\n 77525: a2 = reverse a2\n 77527: a3 = u64 [s1 + 0x160]\n 77531: a3 = reverse a3\n 77533: a4 = u64 [s1 + 0x148]\n 77537: a4 = reverse a4\n 77539: a5 = a4 >> 0x38\n 77542: u8 [a0 + 0x1f] = a5\n 77545: a5 = a4 >> 0x30\n 77548: u8 [a0 + 0x1e] = a5\n 77551: a5 = a4 >> 0x28\n 77554: u8 [a0 + 0x1d] = a5\n 77557: a5 = a4 >> 0x20\n 77560: u8 [a0 + 0x1c] = a5\n 77563: a5 = a4 >> 0x18\n 77566: u8 [a0 + 0x1b] = a5\n 77569: a5 = a4 >> 0x10\n 77572: u8 [a0 + 0x1a] = a5\n 77575: a5 = a4 >> 0x8\n 77578: u8 [a0 + 0x19] = a5\n 77581: u8 [a0 + 0x18] = a4\n 77584: a4 = a3 >> 0x38\n 77587: u8 [a0 + 0x17] = a4\n 77590: a4 = a3 >> 0x30\n 77593: u8 [a0 + 0x16] = a4\n 77596: a4 = a3 >> 0x28\n 77599: u8 [a0 + 0x15] = a4\n 77602: a4 = a3 >> 0x20\n 77605: u8 [a0 + 0x14] = a4\n 77608: a4 = a3 >> 0x18\n 77611: u8 [a0 + 0x13] = a4\n 77614: a4 = a3 >> 0x10\n 77617: u8 [a0 + 0x12] = a4\n 77620: a4 = a3 >> 0x8\n 77623: u8 [a0 + 0x11] = a4\n 77626: u8 [a0 + 0x10] = a3\n 77629: u8 [a0 + 0x8] = a2\n 77632: a3 = a2 >> 0x38\n 77635: u8 [a0 + 0xf] = a3\n 77638: a3 = a2 >> 0x30\n 77641: u8 [a0 + 0xe] = a3\n 77644: a3 = a2 >> 0x28\n 77647: u8 [a0 + 0xd] = a3\n 77650: a3 = a2 >> 0x20\n 77653: u8 [a0 + 0xc] = a3\n 77656: a3 = a2 >> 0x18\n 77659: u8 [a0 + 0xb] = a3\n 77662: a3 = a2 >> 0x10\n 77665: u8 [a0 + 0xa] = a3\n 77668: a2 = a2 >> 0x8\n 77671: u8 [a0 + 0x9] = a2\n 77674: u8 [a0] = a1\n 77676: a2 = a1 >> 0x38\n 77679: u8 [a0 + 0x7] = a2\n 77682: a2 = a1 >> 0x30\n 77685: u8 [a0 + 0x6] = a2\n 77688: a2 = a1 >> 0x28\n 77691: u8 [a0 + 0x5] = a2\n 77694: a2 = a1 >> 0x20\n 77697: u8 [a0 + 0x4] = a2\n 77700: a2 = a1 >> 0x18\n 77703: u8 [a0 + 0x3] = a2\n 77706: a2 = a1 >> 0x10\n 77709: u8 [a0 + 0x2] = a2\n 77712: a1 = a1 >> 0x8\n 77715: u8 [a0 + 0x1] = a1\n 77718: a1 = 0x20\n 77721: a0 = u64 [s1 + 0x150]\n 77725: ra = 970, jump @0\n      : @1172 [@dyn 485] (gas: 100)\n 77732: a1 = u8 [a0 + 0x11]\n 77735: a2 = u8 [a0 + 0x10]\n 77738: a3 = u8 [a0 + 0x12]\n 77741: a4 = u8 [a0 + 0x13]\n 77744: a1 = a1 << 0x8\n 77747: a1 = a1 | a2\n 77750: a3 = a3 << 0x10\n 77753: a4 = a4 << 0x18\n 77756: a3 = a3 | a4\n 77759: a1 = a1 | a3\n 77762: a2 = u8 [a0 + 0x15]\n 77765: a3 = u8 [a0 + 0x14]\n 77768: a4 = u8 [a0 + 0x16]\n 77771: a5 = u8 [a0 + 0x17]\n 77774: a2 = a2 << 0x8\n 77777: a2 = a2 | a3\n 77780: a4 = a4 << 0x10\n 77783: a5 = a5 << 0x18\n 77786: a4 = a4 | a5\n 77789: a2 = a2 | a4\n 77792: a2 = a2 << 0x20\n 77795: t0 = a2 | a1\n 77798: a2 = u8 [a0 + 0x1]\n 77801: a3 = u8 [a0]\n 77803: a4 = u8 [a0 + 0x2]\n 77806: a5 = u8 [a0 + 0x3]\n 77809: a2 = a2 << 0x8\n 77812: a2 = a2 | a3\n 77815: a4 = a4 << 0x10\n 77818: a5 = a5 << 0x18\n 77821: a4 = a4 | a5\n 77824: a2 = a2 | a4\n 77827: a3 = u8 [a0 + 0x5]\n 77830: a4 = u8 [a0 + 0x4]\n 77833: a5 = u8 [a0 + 0x6]\n 77836: a1 = u8 [a0 + 0x7]\n 77839: a3 = a3 << 0x8\n 77842: a3 = a3 | a4\n 77845: a5 = a5 << 0x10\n 77848: a1 = a1 << 0x18\n 77851: a1 = a1 | a5\n 77854: a1 = a1 | a3\n 77857: a1 = a1 << 0x20\n 77860: t1 = a1 | a2\n 77863: a1 = u8 [a0 + 0x19]\n 77866: a3 = u8 [a0 + 0x18]\n 77869: a4 = u8 [a0 + 0x1a]\n 77872: a5 = u8 [a0 + 0x1b]\n 77875: a1 = a1 << 0x8\n 77878: a1 = a1 | a3\n 77881: a4 = a4 << 0x10\n 77884: a5 = a5 << 0x18\n 77887: a4 = a4 | a5\n 77890: a1 = a1 | a4\n 77893: a3 = u8 [a0 + 0x1d]\n 77896: a4 = u8 [a0 + 0x1c]\n 77899: a5 = u8 [a0 + 0x1e]\n 77902: a2 = u8 [a0 + 0x1f]\n 77905: a3 = a3 << 0x8\n 77908: a3 = a3 | a4\n 77911: a5 = a5 << 0x10\n 77914: a2 = a2 << 0x18\n 77917: a2 = a2 | a5\n 77920: a2 = a2 | a3\n 77923: a2 = a2 << 0x20\n 77926: a3 = a2 | a1\n 77929: a1 = u8 [a0 + 0x9]\n 77932: a2 = u8 [a0 + 0x8]\n 77935: a4 = u8 [a0 + 0xa]\n 77938: a5 = u8 [a0 + 0xb]\n 77941: a1 = a1 << 0x8\n 77944: a1 = a1 | a2\n 77947: a4 = a4 << 0x10\n 77950: a5 = a5 << 0x18\n 77953: a4 = a4 | a5\n 77956: a1 = a1 | a4\n 77959: a2 = u8 [a0 + 0xd]\n 77962: a4 = u8 [a0 + 0xc]\n 77965: a5 = u8 [a0 + 0xe]\n 77968: a0 = u8 [a0 + 0xf]\n 77971: a2 = a2 << 0x8\n 77974: a2 = a2 | a4\n 77977: a5 = a5 << 0x10\n 77980: a0 = a0 << 0x18\n 77983: a0 = a0 | a5\n 77986: a0 = a0 | a2\n 77989: a0 = a0 << 0x20\n 77992: a0 = a0 | a1\n 77995: a1 = reverse a0\n 77997: a0 = reverse a3\n 77999: a2 = reverse t1\n 78001: a3 = reverse t0\n 78003: a2 = a2 | a3\n 78006: a3 = a0 | a1\n 78009: a3 = a3 | a2\n 78012: a3 = a3 >> 0x20\n 78015: a1 = a1 | a2\n 78018: a1 = a1 << 0x20\n 78021: a1 = a1 | a3\n 78024: jump @1174 if a1 == 0\n      : @1173 (gas: 1)\n 78027: jump @1205\n      : @1174 (gas: 4)\n 78030: i32 a1 = a0 + 0\n 78032: u64 [s1 + 0x178] = a1\n 78036: a0 = u64 [s1 + 0x158]\n 78040: ra = 972, jump @0\n      : @1175 [@dyn 486] (gas: 33)\n 78047: a1 = sp + 0xffffffffffffffe0\n 78050: a1 = a1 & 0xffffffffffffffe0\n 78053: u64 [s1 + 0x160] = a1\n 78057: sp = a1\n 78059: i32 a0 = a0 + 0\n 78061: i32 a2 = a1 + 0\n 78063: a1 = u64 [s1 + 0x178]\n 78067: ecalli 4 // 'hash_keccak_256'\n 78069: a1 = u64 [s1 + 0x160]\n 78073: a0 = u64 [a1 + 0x18]\n 78076: u64 [s1 + 0x168] = a0\n 78080: a0 = u64 [a1 + 0x10]\n 78083: u64 [s1 + 0x170] = a0\n 78087: a0 = u64 [a1 + 0x8]\n 78090: u64 [s1 + 0x158] = a0\n 78094: a0 = u64 [a1]\n 78096: u64 [s1 + 0x160] = a0\n 78100: u64 [s1 + 1144] = 0\n 78104: u64 [s1 + 1136] = 0\n 78108: u64 [s1 + 1128] = 0\n 78112: u64 [s1 + 1120] = 0x1\n 78117: u64 [s1 + 1176] = 0\n 78121: u64 [s1 + 1168] = 0\n 78125: u64 [s1 + 1160] = 0\n 78129: u64 [s1 + 1152] = 0\n 78133: u32 [s1 + 1184] = 0x20\n 78138: i32 a1 = s1 + 0x460\n 78142: i32 a3 = s1 + 0x480\n 78146: i32 a4 = s1 + 0x4a0\n 78150: a2 = 0xffffffffffffffff\n 78153: a0 = 0\n 78155: ecalli 3 // 'get_storage'\n 78157: fallthrough\n      : @1176 (gas: 9)\n 78158: a4 = u64 [s1 + 0x498]\n 78162: a5 = u64 [s1 + 0x490]\n 78166: a3 = u64 [s1 + 0x488]\n 78170: a2 = u64 [s1 + 0x480]\n 78174: a0 = a3 | a4\n 78177: a1 = a2 | a5\n 78180: a0 = a0 | a1\n 78183: u64 [s1 + 0x178] = a0\n 78187: jump @1178 if a0 != 0\n      : @1177 (gas: 1)\n 78190: jump @1208\n      : @1178 (gas: 80)\n 78193: a0 = u64 [s1 + 0x158]\n 78197: t1 = reverse a0\n 78199: a0 = u64 [s1 + 0x168]\n 78203: t0 = reverse a0\n 78205: u64 [s1 + 0xd0] = t0\n 78209: a0 = u64 [s1 + 0x160]\n 78213: ra = reverse a0\n 78215: a0 = u64 [s1 + 0x170]\n 78219: t2 = reverse a0\n 78221: u64 [s1 + 0x118] = a2\n 78225: a0 = clz a2\n 78227: a0 = a0 + 0x40\n 78230: a2 = clz a3\n 78232: u64 [s1 + 0x100] = a3\n 78236: a2 = a0 if a3 == 0\n 78239: a3 = a2 + 0x80\n 78243: a0 = a3 <u a2\n 78246: a1 = a5 | a4\n 78249: a0 = 0 if a1 != 0\n 78251: u64 [s1 + 0x110] = a5\n 78255: a2 = clz a5\n 78257: a5 = a2 + 0x40\n 78260: a2 = clz a4\n 78262: u64 [s1 + 0x108] = a4\n 78266: a2 = a5 if a4 == 0\n 78269: a2 = a3 if a1 == 0\n 78272: u64 [s1 + 0xc8] = t2\n 78276: a3 = clz t2\n 78278: a4 = clz t0\n 78280: a4 = a4 + 0x40\n 78283: a4 = a3 if t2 != 0\n 78286: a3 = clz ra\n 78288: a5 = clz t1\n 78290: a5 = a5 + 0x40\n 78293: a5 = a3 if ra != 0\n 78296: a3 = a4 + 0x80\n 78300: a4 = a3 <u a4\n 78303: a1 = t1 | ra\n 78306: a5 = a3 if a1 == 0\n 78309: a4 = 0 if a1 != 0\n 78311: a1 = a2 <u a5\n 78314: t0 = a0 ^ a4\n 78317: a3 = a0 <u a4\n 78320: a3 = a1 if t0 == 0\n 78323: a0 = a0 - a4\n 78326: t2 = a0 - a1\n 78329: a0 = a3 <u 0x1\n 78332: t0 = a0 + 0xffffffffffffffff\n 78335: a0 = a2 - a5\n 78338: a1 = -a3\n 78340: u64 [s1 + 0x170] = a1\n 78344: a1 = a1 >u 0\n 78346: a2 = t0 >u 0\n 78348: a2 = a1 if t0 == 0\n 78351: a1 = a0 <u 0x100\n 78355: a1 = a1 ^ 0x1\n 78358: a5 = t2 >u 0\n 78360: a1 = a5 if t2 != 0\n 78363: a1 = a2 if a3 != 0\n 78366: a4 = u64 [s1 + 0xc8]\n 78370: a2 = a4 | ra\n 78373: a5 = u64 [s1 + 0xd0]\n 78377: a3 = a5 | t1\n 78380: a2 = a2 | a3\n 78383: a3 = u64 [s1 + 0x178]\n 78387: a3 = a3 <u 0x1\n 78390: a2 = a2 <u 0x1\n 78393: a2 = a2 | a3\n 78396: a1 = a1 | a2\n 78399: u64 [s1 + 0xb8] = ra\n 78403: a2 = ra\n 78405: a2 = 0 if a1 != 0\n 78407: u64 [s1 + 0xc0] = t1\n 78411: ra = t1\n 78413: ra = 0 if a1 != 0\n 78415: a3 = a4\n 78417: a3 = 0 if a1 != 0\n 78419: t1 = a5\n 78421: t1 = 0 if a1 != 0\n 78423: jump @1186 if a1 != 0\n      : @1179 (gas: 7)\n 78427: a5 = a0\n 78429: a1 = a0 ^ 0xff\n 78433: a4 = u64 [s1 + 0x170]\n 78437: a1 = a1 | a4\n 78440: a0 = t2 | t0\n 78443: a0 = a0 | a1\n 78446: jump @1186 if a0 == 0\n      : @1180 (gas: 257)\n 78450: a1 = a5 + 0x1\n 78453: u64 [s1 + 0x178] = a1\n 78457: a0 = a1 <u 0x1\n 78460: a0 = a0 + t2\n 78463: u64 [s1 + 0x150] = a0\n 78467: a0 = a0 | a1\n 78470: a0 = a0 <u 0x1\n 78473: a0 = a0 + a4\n 78476: u64 [s1 + 0x140] = a0\n 78480: a0 = a0 <u a4\n 78483: a0 = a0 + t0\n 78486: u64 [s1 + 0x148] = a0\n 78490: a2 = u64 [s1 + 0xd0]\n 78494: u8 [s1 + 0x3e0] = a2\n 78498: u8 [s1 + 991] = 0\n 78502: u8 [s1 + 990] = 0\n 78506: u8 [s1 + 989] = 0\n 78510: u8 [s1 + 988] = 0\n 78514: u8 [s1 + 987] = 0\n 78518: u8 [s1 + 986] = 0\n 78522: u8 [s1 + 985] = 0\n 78526: u8 [s1 + 984] = 0\n 78530: u8 [s1 + 983] = 0\n 78534: u8 [s1 + 982] = 0\n 78538: u8 [s1 + 981] = 0\n 78542: u8 [s1 + 980] = 0\n 78546: u8 [s1 + 979] = 0\n 78550: u8 [s1 + 978] = 0\n 78554: u8 [s1 + 977] = 0\n 78558: u8 [s1 + 976] = 0\n 78562: u8 [s1 + 975] = 0\n 78566: u8 [s1 + 974] = 0\n 78570: u8 [s1 + 973] = 0\n 78574: u8 [s1 + 972] = 0\n 78578: u8 [s1 + 971] = 0\n 78582: u8 [s1 + 970] = 0\n 78586: u8 [s1 + 969] = 0\n 78590: u8 [s1 + 968] = 0\n 78594: u8 [s1 + 967] = 0\n 78598: u8 [s1 + 966] = 0\n 78602: u8 [s1 + 965] = 0\n 78606: u8 [s1 + 964] = 0\n 78610: u8 [s1 + 963] = 0\n 78614: u8 [s1 + 962] = 0\n 78618: u8 [s1 + 961] = 0\n 78622: u8 [s1 + 960] = 0\n 78626: a3 = u64 [s1 + 0xc8]\n 78630: u8 [s1 + 0x3e8] = a3\n 78634: a0 = a2 >> 0x38\n 78637: u64 [s1 + 0x128] = a0\n 78641: u8 [s1 + 0x3e7] = a0\n 78645: a0 = a2 >> 0x30\n 78648: u64 [s1 + 0x120] = a0\n 78652: u8 [s1 + 0x3e6] = a0\n 78656: a0 = a2 >> 0x28\n 78659: u64 [s1 + 0xf8] = a0\n 78663: u8 [s1 + 0x3e5] = a0\n 78667: i32 t0 = 0xff - a5\n 78671: a0 = t0 << 0x38\n 78674: a0 = a0 >> 0x3b\n 78677: a1 = s1 + 0x3e0\n 78681: a0 = a1 - a0\n 78684: a1 = a2 >> 0x20\n 78687: u64 [s1 + 0x88] = a1\n 78691: u8 [s1 + 0x3e4] = a1\n 78695: a1 = a2 >> 0x18\n 78698: u64 [s1 + 0x80] = a1\n 78702: u8 [s1 + 0x3e3] = a1\n 78706: a1 = a2 >> 0x10\n 78709: u64 [s1 + 0x78] = a1\n 78712: u8 [s1 + 0x3e2] = a1\n 78716: a2 = a2 >> 0x8\n 78719: u64 [s1 + 0x70] = a2\n 78722: u8 [s1 + 0x3e1] = a2\n 78726: a1 = u64 [s1 + 0xc0]\n 78730: u8 [s1 + 0x3f0] = a1\n 78734: a2 = a3 >> 0x38\n 78737: u64 [s1 + 0x68] = a2\n 78740: u8 [s1 + 0x3ef] = a2\n 78744: a2 = a3 >> 0x30\n 78747: u64 [s1 + 0x60] = a2\n 78750: u8 [s1 + 0x3ee] = a2\n 78754: a2 = a3 >> 0x28\n 78757: u64 [s1 + 0x58] = a2\n 78760: u8 [s1 + 0x3ed] = a2\n 78764: a2 = a3 >> 0x20\n 78767: u64 [s1 + 0x50] = a2\n 78770: u8 [s1 + 0x3ec] = a2\n 78774: a2 = a3 >> 0x18\n 78777: u64 [s1 + 0x48] = a2\n 78780: u8 [s1 + 0x3eb] = a2\n 78784: a2 = a3 >> 0x10\n 78787: u64 [s1 + 0x40] = a2\n 78790: u8 [s1 + 0x3ea] = a2\n 78794: a3 = a3 >> 0x8\n 78797: u64 [s1 + 0x38] = a3\n 78800: u8 [s1 + 0x3e9] = a3\n 78804: ra = u64 [s1 + 0xb8]\n 78808: u8 [s1 + 0x3f8] = ra\n 78812: a2 = a1 >> 0x38\n 78815: u64 [s1 + 0x30] = a2\n 78818: u8 [s1 + 0x3f7] = a2\n 78822: a2 = a1 >> 0x30\n 78825: u64 [s1 + 0x28] = a2\n 78828: u8 [s1 + 0x3f6] = a2\n 78832: a2 = a1 >> 0x28\n 78835: u64 [s1 + 0x20] = a2\n 78838: u8 [s1 + 0x3f5] = a2\n 78842: a2 = a1 >> 0x20\n 78845: u64 [s1 + 0x18] = a2\n 78848: u8 [s1 + 0x3f4] = a2\n 78852: a2 = a1 >> 0x18\n 78855: u64 [s1 + 0x10] = a2\n 78858: u8 [s1 + 0x3f3] = a2\n 78862: a2 = a1 >> 0x10\n 78865: u64 [s1 + 0x8] = a2\n 78868: u8 [s1 + 0x3f2] = a2\n 78872: a1 = a1 >> 0x8\n 78875: u64 [s1 + 0xf0] = a1\n 78879: u8 [s1 + 0x3f1] = a1\n 78883: a1 = ra >> 0x38\n 78886: u64 [s1 + 0xe8] = a1\n 78890: u8 [s1 + 0x3ff] = a1\n 78894: a1 = ra >> 0x30\n 78897: u64 [s1 + 0xe0] = a1\n 78901: u8 [s1 + 0x3fe] = a1\n 78905: a1 = ra >> 0x28\n 78908: u64 [s1 + 0xd8] = a1\n 78912: u8 [s1 + 0x3fd] = a1\n 78916: a1 = ra >> 0x20\n 78919: u64 [s1 + 0xa8] = a1\n 78923: u8 [s1 + 0x3fc] = a1\n 78927: a1 = ra >> 0x18\n 78930: u64 [s1 + 0xa0] = a1\n 78934: u8 [s1 + 0x3fb] = a1\n 78938: a1 = ra >> 0x10\n 78941: u64 [s1 + 0x98] = a1\n 78945: u8 [s1 + 0x3fa] = a1\n 78949: a1 = ra >> 0x8\n 78952: u64 [s1 + 0x90] = a1\n 78956: u8 [s1 + 0x3f9] = a1\n 78960: a1 = u8 [a0 + 0x19]\n 78963: a3 = u8 [a0 + 0x18]\n 78966: a4 = u8 [a0 + 0x1a]\n 78969: a5 = u8 [a0 + 0x1b]\n 78972: a1 = a1 << 0x8\n 78975: a1 = a1 | a3\n 78978: a4 = a4 << 0x10\n 78981: a5 = a5 << 0x18\n 78984: a4 = a4 | a5\n 78987: a1 = a1 | a4\n 78990: a3 = u8 [a0 + 0x1d]\n 78993: a4 = u8 [a0 + 0x1c]\n 78996: a5 = u8 [a0 + 0x1e]\n 78999: a2 = u8 [a0 + 0x1f]\n 79002: a3 = a3 << 0x8\n 79005: a3 = a3 | a4\n 79008: a5 = a5 << 0x10\n 79011: a2 = a2 << 0x18\n 79014: a2 = a2 | a5\n 79017: a2 = a2 | a3\n 79020: a2 = a2 << 0x20\n 79023: t1 = a2 | a1\n 79026: a1 = u8 [a0 + 0x11]\n 79029: a2 = u8 [a0 + 0x10]\n 79032: a4 = u8 [a0 + 0x12]\n 79035: a5 = u8 [a0 + 0x13]\n 79038: a1 = a1 << 0x8\n 79041: a1 = a1 | a2\n 79044: a4 = a4 << 0x10\n 79047: a5 = a5 << 0x18\n 79050: a4 = a4 | a5\n 79053: a1 = a1 | a4\n 79056: a2 = u8 [a0 + 0x15]\n 79059: a4 = u8 [a0 + 0x14]\n 79062: a5 = u8 [a0 + 0x16]\n 79065: a3 = u8 [a0 + 0x17]\n 79068: a2 = a2 << 0x8\n 79071: a2 = a2 | a4\n 79074: a5 = a5 << 0x10\n 79077: a3 = a3 << 0x18\n 79080: a3 = a3 | a5\n 79083: a2 = a2 | a3\n 79086: a2 = a2 << 0x20\n 79089: t2 = a2 | a1\n 79092: a2 = t0 & 0x7\n 79095: a4 = t1 << a2\n 79098: a5 = t2 >> 0x1\n 79101: t0 = a2 ^ 0x3f\n 79104: a5 = a5 >> t0\n 79107: a4 = a4 | a5\n 79110: u64 [s1 + 0x170] = a4\n 79114: a4 = u8 [a0 + 0x9]\n 79117: a5 = u8 [a0 + 0x8]\n 79120: a3 = u8 [a0 + 0xa]\n 79123: a1 = u8 [a0 + 0xb]\n 79126: a4 = a4 << 0x8\n 79129: a4 = a4 | a5\n 79132: a3 = a3 << 0x10\n 79135: a1 = a1 << 0x18\n 79138: a1 = a1 | a3\n 79141: t1 = a1 | a4\n 79144: a3 = u8 [a0 + 0xd]\n 79147: a4 = u8 [a0 + 0xc]\n 79150: a5 = u8 [a0 + 0xe]\n 79153: a1 = u8 [a0 + 0xf]\n 79156: a3 = a3 << 0x8\n 79159: a3 = a3 | a4\n 79162: a5 = a5 << 0x10\n 79165: a1 = a1 << 0x18\n 79168: a1 = a1 | a5\n 79171: a1 = a1 | a3\n 79174: a1 = a1 << 0x20\n 79177: t1 = a1 | t1\n 79180: a1 = t1 >> 0x1\n 79183: a3 = a2 ^ 0xffffffffffffffff\n 79186: a1 = a1 >> a3\n 79189: a3 = t2 << a2\n 79192: a1 = a1 | a3\n 79195: u64 [s1 + 0x168] = a1\n 79199: a1 = u8 [a0 + 0x1]\n 79202: a3 = u8 [a0]\n 79204: a5 = u8 [a0 + 0x2]\n 79207: a4 = u8 [a0 + 0x3]\n 79210: a1 = a1 << 0x8\n 79213: a1 = a1 | a3\n 79216: a5 = a5 << 0x10\n 79219: a4 = a4 << 0x18\n 79222: a4 = a4 | a5\n 79225: a1 = a1 | a4\n 79228: a3 = u8 [a0 + 0x5]\n 79231: a4 = u8 [a0 + 0x4]\n 79234: a5 = u8 [a0 + 0x6]\n 79237: a0 = u8 [a0 + 0x7]\n 79240: a3 = a3 << 0x8\n 79243: a3 = a3 | a4\n 79246: a4 = u64 [s1 + 0x150]\n 79250: a5 = a5 << 0x10\n 79253: a0 = a0 << 0x18\n 79256: a0 = a0 | a5\n 79259: a5 = u64 [s1 + 0x140]\n 79263: a0 = a0 | a3\n 79266: a0 = a0 << 0x20\n 79269: a0 = a0 | a1\n 79272: a1 = a0 >> 0x1\n 79275: a1 = a1 >> t0\n 79278: t0 = u64 [s1 + 0x148]\n 79282: a3 = t1 << a2\n 79285: a1 = a1 | a3\n 79288: u64 [s1 + 0x158] = a1\n 79292: a1 = a4 | t0\n 79295: a3 = u64 [s1 + 0x178]\n 79299: a3 = a3 | a5\n 79302: a1 = a1 | a3\n 79305: a0 = a0 << a2\n 79308: u64 [s1 + 0x160] = a0\n 79312: jump @1184 if a1 == 0\n      : @1181 (gas: 226)\n 79316: u64 [s1 + 312] = 0\n 79320: u64 [s1 + 304] = 0\n 79324: a0 = u64 [s1 + 0x128]\n 79328: u8 [s1 + 0x387] = a0\n 79332: a0 = u64 [s1 + 0x120]\n 79336: u8 [s1 + 0x386] = a0\n 79340: a0 = u64 [s1 + 0xf8]\n 79344: u8 [s1 + 0x385] = a0\n 79348: a0 = u64 [s1 + 0x88]\n 79352: u8 [s1 + 0x384] = a0\n 79356: a0 = u64 [s1 + 0x80]\n 79360: u8 [s1 + 0x383] = a0\n 79364: a0 = u64 [s1 + 0x78]\n 79367: u8 [s1 + 0x382] = a0\n 79371: a0 = u64 [s1 + 0x70]\n 79374: u8 [s1 + 0x381] = a0\n 79378: a0 = u64 [s1 + 0x68]\n 79381: u8 [s1 + 0x38f] = a0\n 79385: a0 = u64 [s1 + 0x60]\n 79388: u8 [s1 + 0x38e] = a0\n 79392: a0 = u64 [s1 + 0x58]\n 79395: u8 [s1 + 0x38d] = a0\n 79399: a0 = u64 [s1 + 0x50]\n 79402: u8 [s1 + 0x38c] = a0\n 79406: a0 = u64 [s1 + 0x48]\n 79409: u8 [s1 + 0x38b] = a0\n 79413: a0 = u64 [s1 + 0x40]\n 79416: u8 [s1 + 0x38a] = a0\n 79420: a0 = u64 [s1 + 0x38]\n 79423: u8 [s1 + 0x389] = a0\n 79427: a0 = u64 [s1 + 0x30]\n 79430: u8 [s1 + 0x397] = a0\n 79434: a0 = u64 [s1 + 0x28]\n 79437: u8 [s1 + 0x396] = a0\n 79441: a0 = u64 [s1 + 0x20]\n 79444: u8 [s1 + 0x395] = a0\n 79448: a0 = u64 [s1 + 0x18]\n 79451: u8 [s1 + 0x394] = a0\n 79455: a0 = u64 [s1 + 0x10]\n 79458: u8 [s1 + 0x393] = a0\n 79462: a0 = u64 [s1 + 0x8]\n 79465: u8 [s1 + 0x392] = a0\n 79469: u8 [s1 + 959] = 0\n 79473: u8 [s1 + 958] = 0\n 79477: u8 [s1 + 957] = 0\n 79481: u8 [s1 + 956] = 0\n 79485: u8 [s1 + 955] = 0\n 79489: u8 [s1 + 954] = 0\n 79493: u8 [s1 + 953] = 0\n 79497: u8 [s1 + 952] = 0\n 79501: u8 [s1 + 951] = 0\n 79505: u8 [s1 + 950] = 0\n 79509: u8 [s1 + 949] = 0\n 79513: u8 [s1 + 948] = 0\n 79517: u8 [s1 + 947] = 0\n 79521: u8 [s1 + 946] = 0\n 79525: u8 [s1 + 945] = 0\n 79529: u8 [s1 + 944] = 0\n 79533: u8 [s1 + 943] = 0\n 79537: u8 [s1 + 942] = 0\n 79541: u8 [s1 + 941] = 0\n 79545: u8 [s1 + 940] = 0\n 79549: u8 [s1 + 939] = 0\n 79553: u8 [s1 + 938] = 0\n 79557: u8 [s1 + 937] = 0\n 79561: u8 [s1 + 936] = 0\n 79565: u8 [s1 + 935] = 0\n 79569: u8 [s1 + 934] = 0\n 79573: u8 [s1 + 933] = 0\n 79577: u8 [s1 + 932] = 0\n 79581: u8 [s1 + 931] = 0\n 79585: u8 [s1 + 930] = 0\n 79589: u8 [s1 + 929] = 0\n 79593: u8 [s1 + 928] = 0\n 79597: a0 = u64 [s1 + 0xd0]\n 79601: u8 [s1 + 0x380] = a0\n 79605: a0 = u64 [s1 + 0xc8]\n 79609: u8 [s1 + 0x388] = a0\n 79613: a0 = u64 [s1 + 0xc0]\n 79617: u8 [s1 + 0x390] = a0\n 79621: u8 [s1 + 0x398] = ra\n 79625: a0 = u64 [s1 + 0xf0]\n 79629: u8 [s1 + 0x391] = a0\n 79633: a0 = u64 [s1 + 0xe8]\n 79637: u8 [s1 + 0x39f] = a0\n 79641: a0 = u64 [s1 + 0xe0]\n 79645: u8 [s1 + 0x39e] = a0\n 79649: a0 = u64 [s1 + 0xd8]\n 79653: u8 [s1 + 0x39d] = a0\n 79657: a0 = u64 [s1 + 0xa8]\n 79661: u8 [s1 + 0x39c] = a0\n 79665: a0 = u64 [s1 + 0xa0]\n 79669: u8 [s1 + 0x39b] = a0\n 79673: a0 = u64 [s1 + 0x98]\n 79677: u8 [s1 + 0x39a] = a0\n 79681: a0 = u64 [s1 + 0x90]\n 79685: u8 [s1 + 0x399] = a0\n 79689: t1 = u64 [s1 + 0x178]\n 79693: a0 = t1 << 0x38\n 79696: a0 = a0 >> 0x3b\n 79699: a1 = s1 + 0x380\n 79703: a0 = a0 + a1\n 79706: a1 = u8 [a0 + 0x11]\n 79709: a2 = u8 [a0 + 0x10]\n 79712: a3 = u8 [a0 + 0x12]\n 79715: a4 = u8 [a0 + 0x13]\n 79718: a1 = a1 << 0x8\n 79721: a1 = a1 | a2\n 79724: a3 = a3 << 0x10\n 79727: a4 = a4 << 0x18\n 79730: a3 = a3 | a4\n 79733: a1 = a1 | a3\n 79736: a2 = u8 [a0 + 0x15]\n 79739: a3 = u8 [a0 + 0x14]\n 79742: a4 = u8 [a0 + 0x16]\n 79745: a5 = u8 [a0 + 0x17]\n 79748: a2 = a2 << 0x8\n 79751: a2 = a2 | a3\n 79754: a4 = a4 << 0x10\n 79757: a5 = a5 << 0x18\n 79760: a4 = a4 | a5\n 79763: a2 = a2 | a4\n 79766: a2 = a2 << 0x20\n 79769: t0 = a2 | a1\n 79772: t2 = t1 & 0x7\n 79775: a1 = u8 [a0 + 0x19]\n 79778: a2 = u8 [a0 + 0x18]\n 79781: a3 = u8 [a0 + 0x1a]\n 79784: a4 = u8 [a0 + 0x1b]\n 79787: a1 = a1 << 0x8\n 79790: a1 = a1 | a2\n 79793: a3 = a3 << 0x10\n 79796: a4 = a4 << 0x18\n 79799: a2 = u8 [a0 + 0x1d]\n 79802: a3 = a3 | a4\n 79805: a1 = a1 | a3\n 79808: a3 = u8 [a0 + 0x1c]\n 79811: a2 = a2 << 0x8\n 79814: a4 = u8 [a0 + 0x1e]\n 79817: a5 = u8 [a0 + 0x1f]\n 79820: a2 = a2 | a3\n 79823: a3 = t0 >> t2\n 79826: a4 = a4 << 0x10\n 79829: a5 = a5 << 0x18\n 79832: a4 = a4 | a5\n 79835: a2 = a2 | a4\n 79838: a2 = a2 << 0x20\n 79841: t1 = a2 | a1\n 79844: a2 = t1 << 0x1\n 79847: ra = t2 ^ 0x3f\n 79850: a2 = a2 << ra\n 79853: a2 = a2 | a3\n 79856: u64 [s1 + 0x128] = a2\n 79860: a2 = u8 [a0 + 0x9]\n 79863: a3 = u8 [a0 + 0x8]\n 79866: a5 = u8 [a0 + 0xa]\n 79869: a1 = u8 [a0 + 0xb]\n 79872: a2 = a2 << 0x8\n 79875: a2 = a2 | a3\n 79878: a5 = a5 << 0x10\n 79881: a1 = a1 << 0x18\n 79884: a1 = a1 | a5\n 79887: a1 = a1 | a2\n 79890: a2 = u8 [a0 + 0xd]\n 79893: a3 = u8 [a0 + 0xc]\n 79896: a5 = u8 [a0 + 0xe]\n 79899: a4 = u8 [a0 + 0xf]\n 79902: a2 = a2 << 0x8\n 79905: a2 = a2 | a3\n 79908: a5 = a5 << 0x10\n 79911: a4 = a4 << 0x18\n 79914: a4 = a4 | a5\n 79917: a2 = a2 | a4\n 79920: a2 = a2 << 0x20\n 79923: a5 = a2 | a1\n 79926: t0 = t0 << 0x1\n 79929: a1 = t2 ^ 0xffffffffffffffff\n 79932: a1 = t0 << a1\n 79935: a2 = a5 >> t2\n 79938: t0 = a2 | a1\n 79941: a1 = u8 [a0 + 0x1]\n 79944: a2 = u8 [a0]\n 79946: a3 = u8 [a0 + 0x2]\n 79949: a4 = u8 [a0 + 0x3]\n 79952: a1 = a1 << 0x8\n 79955: a1 = a1 | a2\n 79958: a3 = a3 << 0x10\n 79961: a4 = a4 << 0x18\n 79964: a3 = a3 | a4\n 79967: a1 = a1 | a3\n 79970: a2 = u8 [a0 + 0x5]\n 79973: a3 = u8 [a0 + 0x4]\n 79976: a4 = u8 [a0 + 0x6]\n 79979: a0 = u8 [a0 + 0x7]\n 79982: a2 = a2 << 0x8\n 79985: a2 = a2 | a3\n 79988: a4 = a4 << 0x10\n 79991: a0 = a0 << 0x18\n 79994: a0 = a0 | a4\n 79997: a0 = a0 | a2\n 80000: a0 = a0 << 0x20\n 80003: a0 = a0 | a1\n 80006: a0 = a0 >> t2\n 80009: a5 = a5 << 0x1\n 80012: a4 = a5 << ra\n 80015: ra = a0 | a4\n 80018: a0 = t1 >> t2\n 80021: u64 [s1 + 0x120] = a0\n 80025: a2 = t0\n 80027: a0 = u64 [s1 + 0x118]\n 80031: a1 = a0 <u 0x1\n 80034: a3 = u64 [s1 + 0x100]\n 80038: a1 = a3 - a1\n 80041: u64 [s1 + 0xf0] = a1\n 80045: a1 = a0 | a3\n 80048: a1 = a1 <u 0x1\n 80051: a3 = u64 [s1 + 0x110]\n 80055: a4 = a3 - a1\n 80058: u64 [s1 + 0xe8] = a4\n 80062: a1 = a3 <u a1\n 80065: a3 = u64 [s1 + 0x108]\n 80069: a3 = a3 - a1\n 80072: u64 [s1 + 0xe0] = a3\n 80076: a0 = a0 + 0xffffffffffffffff\n 80079: u64 [s1 + 0xd8] = a0\n 80083: fallthrough\n      : @1182 (gas: 107)\n 80084: u64 [s1 + 248] = 0\n 80088: a1 = ra >> 0x3f\n 80091: a5 = a2 << 0x1\n 80094: a3 = a2\n 80096: t2 = a5 | a1\n 80099: a4 = ra << 0x1\n 80102: a1 = u64 [s1 + 0x170]\n 80106: a5 = a1 >> 0x3f\n 80109: t1 = a4 | a5\n 80112: a0 = u64 [s1 + 0xf0]\n 80116: a5 = a0 ^ t2\n 80119: a2 = a0 <u t2\n 80122: a0 = u64 [s1 + 0xd8]\n 80126: ra = a0 <u t1\n 80129: ra = a2 if a5 != 0\n 80132: a0 = u64 [s1 + 0x120]\n 80136: a0 = a0 << 0x1\n 80139: a5 = u64 [s1 + 0x128]\n 80143: a2 = a5 >> 0x3f\n 80146: t0 = a0 | a2\n 80149: u64 [s1 + 0x120] = t0\n 80153: a2 = a3 >> 0x3f\n 80156: a5 = a5 << 0x1\n 80159: a5 = a5 | a2\n 80162: a2 = a1 << 0x1\n 80165: a0 = u64 [s1 + 0x168]\n 80169: a3 = a0 >> 0x3f\n 80172: a2 = a2 | a3\n 80175: a3 = a0 << 0x1\n 80178: a1 = u64 [s1 + 0x158]\n 80182: a0 = a1 >> 0x3f\n 80185: a0 = a0 | a3\n 80188: a3 = a1 << 0x1\n 80191: a1 = u64 [s1 + 0x160]\n 80195: a4 = a1 >> 0x3f\n 80198: a3 = a3 | a4\n 80201: a4 = a1 << 0x1\n 80204: a1 = u64 [s1 + 0x138]\n 80208: a1 = a1 | a4\n 80211: u64 [s1 + 0x160] = a1\n 80215: a1 = u64 [s1 + 0x130]\n 80219: a3 = a3 | a1\n 80222: u64 [s1 + 0x158] = a3\n 80226: a0 = a0 | a1\n 80229: u64 [s1 + 0x168] = a0\n 80233: a1 = a1 | a2\n 80236: u64 [s1 + 0x170] = a1\n 80240: a1 = u64 [s1 + 0xe8]\n 80244: a0 = a1 - a5\n 80247: a0 = a0 <u ra\n 80250: a2 = a1 <u a5\n 80253: a1 = u64 [s1 + 0xe0]\n 80257: a3 = a1 - t0\n 80260: a3 = a3 - a2\n 80263: a2 = a3 - a0\n 80266: t0 = a2 >>a 0x3f\n 80269: a0 = u64 [s1 + 0x118]\n 80273: a2 = t0 & a0\n 80276: u64 [s1 + 0x138] = a2\n 80280: a0 = u64 [s1 + 0x100]\n 80284: a4 = t0 & a0\n 80287: a1 = t2 ^ a4\n 80290: a0 = t2 <u a4\n 80293: ra = t1\n 80295: t1 = t1 <u a2\n 80298: a0 = t1 if a1 == 0\n 80301: a1 = u64 [s1 + 0x110]\n 80305: a3 = t0 & a1\n 80308: a2 = a5 - a3\n 80311: a1 = a2 - a0\n 80314: u64 [s1 + 0x128] = a1\n 80318: a0 = a2 <u a0\n 80321: a1 = a5 <u a3\n 80324: a2 = u64 [s1 + 0x108]\n 80328: a5 = t0 & a2\n 80331: a2 = u64 [s1 + 0x120]\n 80335: a5 = a2 - a5\n 80338: a5 = a5 - a1\n 80341: a5 = a5 - a0\n 80344: u64 [s1 + 0x120] = a5\n 80348: a1 = t2 - a4\n 80351: a2 = a1 - t1\n 80354: a0 = u64 [s1 + 0x138]\n 80358: ra = ra - a0\n 80361: a3 = u64 [s1 + 0x178]\n 80365: a4 = u64 [s1 + 0x150]\n 80369: a1 = a3 | a4\n 80372: a1 = a1 <u 0x1\n 80375: a5 = u64 [s1 + 0x140]\n 80379: a0 = a5 <u a1\n 80382: a5 = a5 - a1\n 80385: a1 = a3 <u 0x1\n 80388: a4 = a4 - a1\n 80391: a1 = u64 [s1 + 0x148]\n 80395: a1 = a1 - a0\n 80398: a3 = a3 + 0xffffffffffffffff\n 80401: u64 [s1 + 0x150] = a4\n 80405: u64 [s1 + 0x148] = a1\n 80409: a1 = a1 | a4\n 80412: u64 [s1 + 0x178] = a3\n 80416: a3 = a3 | a5\n 80419: a1 = a1 | a3\n 80422: a0 = t0 & 0x1\n 80425: u64 [s1 + 0x138] = a0\n 80429: u64 [s1 + 0x140] = a5\n 80433: u64 [s1 + 304] = 0\n 80437: jump @1182 if a1 != 0\n      : @1183 (gas: 1)\n 80441: jump @1185\n      : @1184 (gas: 3)\n 80443: u64 [s1 + 312] = 0\n 80447: u64 [s1 + 248] = 0\n 80451: fallthrough\n      : @1185 (gas: 21)\n 80452: a3 = u64 [s1 + 0x168]\n 80456: a0 = a3 >> 0x3f\n 80459: a1 = u64 [s1 + 0x170]\n 80463: a1 = a1 << 0x1\n 80466: a0 = a0 | a1\n 80469: a4 = u64 [s1 + 0x158]\n 80473: a1 = a4 >> 0x3f\n 80476: a3 = a3 << 0x1\n 80479: a1 = a1 | a3\n 80482: a5 = u64 [s1 + 0x160]\n 80486: a3 = a5 >> 0x3f\n 80489: a4 = a4 << 0x1\n 80492: a5 = a5 << 0x1\n 80495: a2 = u64 [s1 + 0x138]\n 80499: t1 = a2 | a5\n 80502: a2 = u64 [s1 + 0xf8]\n 80506: a3 = a3 | a2\n 80509: a3 = a3 | a4\n 80512: ra = a2 | a1\n 80515: a2 = a2 | a0\n 80518: fallthrough\n      : @1186 (gas: 115)\n 80519: a5 = u64 [s1 + 0x118]\n 80523: a0 = a5 mulhu t1\n 80526: t2 = a2\n 80528: a2 = u64 [s1 + 0x100]\n 80532: a1 = a2 * t1\n 80535: a0 = a0 + a1\n 80538: a1 = a0 <u a1\n 80541: a4 = a2 mulhu t1\n 80544: a1 = a1 + a4\n 80547: a4 = a5 * a3\n 80550: t0 = a4 + a0\n 80553: a4 = t0 <u a4\n 80556: a0 = a5 mulhu a3\n 80559: a0 = a0 + a4\n 80562: a0 = a0 + a1\n 80565: a1 = a0 <u a1\n 80568: a4 = a2 mulhu a3\n 80571: a1 = a1 + a4\n 80574: a4 = a2 * a3\n 80577: a0 = a0 + a4\n 80580: a4 = a0 <u a4\n 80583: a1 = a1 + a4\n 80586: u64 [s1 + 0x178] = a1\n 80590: a4 = ra * a2\n 80593: a1 = ra mulhu a5\n 80596: a1 = a1 + a4\n 80599: a4 = t2 * a5\n 80602: t2 = a1 + a4\n 80605: a1 = u64 [s1 + 0x108]\n 80609: a4 = t1 * a1\n 80612: a2 = u64 [s1 + 0x110]\n 80616: a1 = t1 mulhu a2\n 80619: a1 = a1 + a4\n 80622: a3 = a3 * a2\n 80625: a1 = a1 + a3\n 80628: a1 = a1 + t2\n 80631: a3 = t1 * a2\n 80634: a2 = ra * a5\n 80637: a3 = a3 + a2\n 80640: a2 = a3 <u a2\n 80643: a1 = a1 + a2\n 80646: a2 = u64 [s1 + 0x178]\n 80650: a1 = a1 + a2\n 80653: a3 = a3 + a0\n 80656: a0 = a3 <u a0\n 80659: ra = a5 * t1\n 80662: a2 = u64 [s1 + 0xb8]\n 80666: a0 = a2 - a0\n 80669: t1 = a0 - a1\n 80672: a2 = u64 [s1 + 0xc8]\n 80676: a0 = a2 ^ t0\n 80679: a4 = a2 <u t0\n 80682: a1 = u64 [s1 + 0xd0]\n 80686: a5 = a1 <u ra\n 80689: a4 = a5 if a0 == 0\n 80692: a0 = u64 [s1 + 0xc0]\n 80696: t2 = a0 <u a3\n 80699: a3 = a0 - a3\n 80702: a0 = a3 <u a4\n 80705: a0 = a0 + t2\n 80708: t1 = t1 - a0\n 80711: a3 = a3 - a4\n 80714: a0 = a2 - a5\n 80717: a0 = a0 - t0\n 80720: a1 = a1 - ra\n 80723: u64 [s1 + 824] = 0\n 80727: u64 [s1 + 816] = 0\n 80731: u64 [s1 + 808] = 0\n 80735: u64 [s1 + 800] = 0x1\n 80740: u64 [s1 + 0x300] = a1\n 80744: u64 [s1 + 0x308] = a0\n 80748: u64 [s1 + 0x310] = a3\n 80752: a0 = s1 + 0x340\n 80756: a1 = s1 + 0x320\n 80760: a2 = s1 + 0x300\n 80764: u64 [s1 + 0x318] = t1\n 80768: ra = 0x3ce\n 80772: sp = sp + 0xfffffffffffffee0\n 80776: u64 [sp + 0x118] = ra\n 80780: u64 [sp + 0x110] = s0\n 80784: u64 [sp + 0x108] = s1\n 80788: s0 = sp + 0x120\n 80792: sp = sp & 0xffffffffffffffe0\n 80795: u64 [sp + 0x40] = a0\n 80798: a0 = u64 [a2]\n 80800: u64 [sp + 0x48] = a0\n 80803: a0 = u64 [a2 + 0x8]\n 80806: u64 [sp + 0x50] = a0\n 80809: a0 = u64 [a2 + 0x10]\n 80812: u64 [sp + 0x58] = a0\n 80815: s1 = u64 [a2 + 0x18]\n 80818: a4 = u64 [a1 + 0x18]\n 80821: a3 = u64 [a1 + 0x10]\n 80824: a2 = u64 [a1 + 0x8]\n 80827: a0 = u64 [a1]\n 80829: u64 [sp + 0x18] = a4\n 80832: u64 [sp + 0xb8] = a4\n 80836: u64 [sp + 0x20] = a3\n 80839: u64 [sp + 0xb0] = a3\n 80843: u64 [sp + 0x28] = a2\n 80846: u64 [sp + 0xa8] = a2\n 80850: u64 [sp + 0x30] = a0\n 80853: u64 [sp + 0xa0] = a0\n 80857: u64 [sp + 248] = 0\n 80861: u64 [sp + 240] = 0\n 80865: u64 [sp + 232] = 0\n 80869: u64 [sp + 224] = 0\n 80873: u32 [sp + 192] = 0x20\n 80878: i32 a1 = sp + 0xa0\n 80882: i32 a3 = sp + 0xe0\n 80886: i32 a4 = sp + 0xc0\n 80890: a2 = 0xffffffffffffffff\n 80893: a0 = 0\n 80895: ecalli 3 // 'get_storage'\n 80897: jump @1124\n      : @1187 [@dyn 487] (gas: 11)\n 80900: a0 = u64 [s1 + 0x358]\n 80904: u64 [s1 + 0x140] = a0\n 80908: a0 = u64 [s1 + 0x350]\n 80912: u64 [s1 + 0x148] = a0\n 80916: a0 = u64 [s1 + 0x348]\n 80920: u64 [s1 + 0x150] = a0\n 80924: a0 = u64 [s1 + 0x340]\n 80928: u64 [s1 + 0x158] = a0\n 80932: a0 = 0x40\n 80935: a1 = 0x20\n 80938: ra = 976, jump @0\n      : @1188 [@dyn 488] (gas: 120)\n 80945: a1 = u8 [a0 + 0x19]\n 80948: a2 = u8 [a0 + 0x18]\n 80951: a3 = u8 [a0 + 0x1a]\n 80954: a4 = u8 [a0 + 0x1b]\n 80957: a1 = a1 << 0x8\n 80960: a1 = a1 | a2\n 80963: a3 = a3 << 0x10\n 80966: a4 = a4 << 0x18\n 80969: a3 = a3 | a4\n 80972: a1 = a1 | a3\n 80975: a2 = u8 [a0 + 0x1d]\n 80978: a3 = u8 [a0 + 0x1c]\n 80981: a4 = u8 [a0 + 0x1e]\n 80984: a5 = u8 [a0 + 0x1f]\n 80987: a2 = a2 << 0x8\n 80990: a2 = a2 | a3\n 80993: a4 = a4 << 0x10\n 80996: a5 = a5 << 0x18\n 80999: a4 = a4 | a5\n 81002: a2 = a2 | a4\n 81005: a2 = a2 << 0x20\n 81008: t0 = a2 | a1\n 81011: a2 = u8 [a0 + 0x11]\n 81014: a3 = u8 [a0 + 0x10]\n 81017: a4 = u8 [a0 + 0x12]\n 81020: a5 = u8 [a0 + 0x13]\n 81023: a2 = a2 << 0x8\n 81026: a2 = a2 | a3\n 81029: a4 = a4 << 0x10\n 81032: a5 = a5 << 0x18\n 81035: a4 = a4 | a5\n 81038: a2 = a2 | a4\n 81041: a3 = u8 [a0 + 0x15]\n 81044: a4 = u8 [a0 + 0x14]\n 81047: a5 = u8 [a0 + 0x16]\n 81050: a1 = u8 [a0 + 0x17]\n 81053: a3 = a3 << 0x8\n 81056: a3 = a3 | a4\n 81059: a5 = a5 << 0x10\n 81062: a1 = a1 << 0x18\n 81065: a1 = a1 | a5\n 81068: a1 = a1 | a3\n 81071: a1 = a1 << 0x20\n 81074: t1 = a1 | a2\n 81077: a1 = u8 [a0 + 0x9]\n 81080: a3 = u8 [a0 + 0x8]\n 81083: a4 = u8 [a0 + 0xa]\n 81086: a5 = u8 [a0 + 0xb]\n 81089: a1 = a1 << 0x8\n 81092: a1 = a1 | a3\n 81095: a4 = a4 << 0x10\n 81098: a5 = a5 << 0x18\n 81101: a4 = a4 | a5\n 81104: a1 = a1 | a4\n 81107: a3 = u8 [a0 + 0xd]\n 81110: a4 = u8 [a0 + 0xc]\n 81113: a5 = u8 [a0 + 0xe]\n 81116: a2 = u8 [a0 + 0xf]\n 81119: a3 = a3 << 0x8\n 81122: a3 = a3 | a4\n 81125: a5 = a5 << 0x10\n 81128: a2 = a2 << 0x18\n 81131: a2 = a2 | a5\n 81134: a2 = a2 | a3\n 81137: a2 = a2 << 0x20\n 81140: a3 = a2 | a1\n 81143: a1 = u8 [a0 + 0x1]\n 81146: a2 = u8 [a0]\n 81148: a4 = u8 [a0 + 0x2]\n 81151: a5 = u8 [a0 + 0x3]\n 81154: a1 = a1 << 0x8\n 81157: a1 = a1 | a2\n 81160: a4 = a4 << 0x10\n 81163: a5 = a5 << 0x18\n 81166: a4 = a4 | a5\n 81169: a1 = a1 | a4\n 81172: a2 = u8 [a0 + 0x5]\n 81175: a4 = u8 [a0 + 0x4]\n 81178: a5 = u8 [a0 + 0x6]\n 81181: a0 = u8 [a0 + 0x7]\n 81184: a2 = a2 << 0x8\n 81187: a2 = a2 | a4\n 81190: a5 = a5 << 0x10\n 81193: a0 = a0 << 0x18\n 81196: a0 = a0 | a5\n 81199: a0 = a0 | a2\n 81202: a0 = a0 << 0x20\n 81205: a0 = a0 | a1\n 81208: a4 = reverse a0\n 81210: a2 = reverse a3\n 81212: a1 = reverse t1\n 81214: a0 = reverse t0\n 81216: a3 = a0 + 0x20\n 81219: u64 [s1 + 0x168] = a0\n 81223: a0 = a3 <u a0\n 81226: a5 = a1 + a0\n 81229: u64 [s1 + 0x170] = a1\n 81233: a1 = a5 <u a1\n 81236: a1 = a0 if a0 == 0\n 81239: a1 = a1 + a2\n 81242: u64 [s1 + 0x160] = a2\n 81246: a0 = a1 <u a2\n 81249: u64 [s1 + 0x178] = a4\n 81253: a4 = a4 + a0\n 81256: u64 [s1 + 728] = 0\n 81260: u64 [s1 + 720] = 0\n 81264: u64 [s1 + 712] = 0\n 81268: u64 [s1 + 704] = 0\n 81272: u64 [s1 + 0x108] = a3\n 81276: u64 [s1 + 0x2a0] = a3\n 81280: u64 [s1 + 0x100] = a5\n 81284: u64 [s1 + 0x2a8] = a5\n 81288: u64 [s1 + 0x110] = a1\n 81292: u64 [s1 + 0x2b0] = a1\n 81296: a0 = s1 + 0x2e0\n 81300: a1 = s1 + 0x2c0\n 81304: a2 = s1 + 0x2a0\n 81308: u64 [s1 + 0x118] = a4\n 81312: u64 [s1 + 0x2b8] = a4\n 81316: ra = 978, jump @1133\n      : @1189 [@dyn 489] (gas: 15)\n 81322: a0 = u64 [s1 + 0x2f8]\n 81326: a2 = u64 [s1 + 0x2f0]\n 81330: a1 = u64 [s1 + 0x2e8]\n 81334: a3 = u64 [s1 + 0x2e0]\n 81338: u64 [s1 + 0x138] = a0\n 81342: u64 [s1 + 0x128] = a1\n 81346: a0 = a0 | a1\n 81349: a1 = a3 | a2\n 81352: a1 = a1 | a0\n 81355: a1 = a1 >> 0x20\n 81358: u64 [s1 + 0x130] = a2\n 81362: a0 = a0 | a2\n 81365: a0 = a0 << 0x20\n 81368: a0 = a0 | a1\n 81371: jump @1205 if a0 != 0\n      : @1190 (gas: 4)\n 81375: i32 a0 = a3 + 0\n 81377: a1 = 0x20\n 81380: u64 [s1 + 0x120] = a3\n 81384: ra = 980, jump @0\n      : @1191 [@dyn 490] (gas: 60)\n 81391: u8 [a0 + 31] = 0\n 81394: u8 [a0 + 30] = 0\n 81397: u8 [a0 + 29] = 0\n 81400: u8 [a0 + 28] = 0\n 81403: u8 [a0 + 27] = 0\n 81406: u8 [a0 + 26] = 0\n 81409: u8 [a0 + 25] = 0\n 81412: u8 [a0 + 24] = 0\n 81415: u8 [a0 + 23] = 0\n 81418: u8 [a0 + 22] = 0\n 81421: u8 [a0 + 21] = 0\n 81424: u8 [a0 + 20] = 0\n 81427: u8 [a0 + 19] = 0\n 81430: u8 [a0 + 18] = 0\n 81433: u8 [a0 + 17] = 0\n 81436: u8 [a0 + 16] = 0\n 81439: u8 [a0 + 15] = 0\n 81442: u8 [a0 + 14] = 0\n 81445: u8 [a0 + 13] = 0\n 81448: u8 [a0 + 12] = 0\n 81451: u8 [a0 + 11] = 0\n 81454: u8 [a0 + 10] = 0\n 81457: u8 [a0 + 9] = 0\n 81460: u8 [a0 + 8] = 0\n 81463: u8 [a0 + 7] = 0\n 81466: u8 [a0 + 6] = 0\n 81469: u8 [a0 + 5] = 0\n 81472: u8 [a0 + 4] = 0\n 81475: u8 [a0 + 3] = 0x20\n 81479: u8 [a0 + 2] = 0x73\n 81483: u8 [a0 + 1] = 0x69\n 81487: u8 [a0 + 0] = 0x20\n 81490: a1 = u64 [s1 + 0x120]\n 81494: a0 = a1 + 0x4\n 81497: a1 = a0 <u a1\n 81500: a3 = u64 [s1 + 0x128]\n 81504: a2 = a3 + a1\n 81507: a3 = a2 <u a3\n 81510: a3 = a1 if a1 == 0\n 81513: a1 = u64 [s1 + 0x130]\n 81517: a3 = a3 + a1\n 81520: a1 = a3 <u a1\n 81523: a4 = u64 [s1 + 0x138]\n 81527: a4 = a4 + a1\n 81530: u64 [s1 + 0x248] = a2\n 81534: u64 [s1 + 0x240] = a0\n 81538: a0 = u64 [s1 + 0x140]\n 81542: u64 [s1 + 0x278] = a0\n 81546: a0 = u64 [s1 + 0x148]\n 81550: u64 [s1 + 0x270] = a0\n 81554: a0 = u64 [s1 + 0x150]\n 81558: u64 [s1 + 0x268] = a0\n 81562: a0 = u64 [s1 + 0x158]\n 81566: u64 [s1 + 0x260] = a0\n 81570: u64 [s1 + 0x250] = a3\n 81574: a0 = s1 + 0x280\n 81578: a1 = s1 + 0x260\n 81582: a2 = s1 + 0x240\n 81586: u64 [s1 + 0x258] = a4\n 81590: ra = 982, jump @1133\n      : @1192 [@dyn 491] (gas: 15)\n 81596: a0 = u64 [s1 + 0x298]\n 81600: a2 = u64 [s1 + 0x290]\n 81604: a1 = u64 [s1 + 0x288]\n 81608: a3 = u64 [s1 + 0x280]\n 81612: u64 [s1 + 0x150] = a0\n 81616: u64 [s1 + 0x148] = a1\n 81620: a0 = a0 | a1\n 81623: a1 = a3 | a2\n 81626: a1 = a1 | a0\n 81629: a1 = a1 >> 0x20\n 81632: u64 [s1 + 0x158] = a2\n 81636: a0 = a0 | a2\n 81639: a0 = a0 << 0x20\n 81642: a0 = a0 | a1\n 81645: jump @1205 if a0 != 0\n      : @1193 (gas: 4)\n 81649: u64 [s1 + 0x140] = a3\n 81653: i32 a0 = a3 + 0\n 81655: a1 = 0x20\n 81658: ra = 984, jump @0\n      : @1194 [@dyn 492] (gas: 44)\n 81665: u8 [a0 + 0] = 0x21\n 81668: a3 = u64 [s1 + 0x160]\n 81672: t0 = u64 [s1 + 0x168]\n 81676: a1 = t0 | a3\n 81679: a2 = u64 [s1 + 0x170]\n 81683: a5 = u64 [s1 + 0x178]\n 81687: a2 = a2 | a5\n 81690: a1 = a1 | a2\n 81693: a1 = a1 >> 0x20\n 81696: a2 = a2 | a3\n 81699: a2 = a2 << 0x20\n 81702: a1 = a1 | a2\n 81705: u8 [a0 + 31] = 0\n 81708: u8 [a0 + 30] = 0\n 81711: u8 [a0 + 29] = 0\n 81714: u8 [a0 + 28] = 0\n 81717: u8 [a0 + 27] = 0\n 81720: u8 [a0 + 26] = 0\n 81723: u8 [a0 + 25] = 0\n 81726: u8 [a0 + 24] = 0\n 81729: u8 [a0 + 23] = 0\n 81732: u8 [a0 + 22] = 0\n 81735: u8 [a0 + 21] = 0\n 81738: u8 [a0 + 20] = 0\n 81741: u8 [a0 + 19] = 0\n 81744: u8 [a0 + 18] = 0\n 81747: u8 [a0 + 17] = 0\n 81750: u8 [a0 + 16] = 0\n 81753: u8 [a0 + 15] = 0\n 81756: u8 [a0 + 14] = 0\n 81759: u8 [a0 + 13] = 0\n 81762: u8 [a0 + 12] = 0\n 81765: u8 [a0 + 11] = 0\n 81768: u8 [a0 + 10] = 0\n 81771: u8 [a0 + 9] = 0\n 81774: u8 [a0 + 8] = 0\n 81777: u8 [a0 + 7] = 0\n 81780: u8 [a0 + 6] = 0\n 81783: u8 [a0 + 5] = 0\n 81786: u8 [a0 + 4] = 0\n 81789: u8 [a0 + 3] = 0\n 81792: u8 [a0 + 2] = 0\n 81795: u8 [a0 + 1] = 0\n 81798: jump @1205 if a1 != 0\n      : @1195 (gas: 37)\n 81802: ra = u64 [s1 + 0x108]\n 81806: a5 = u64 [s1 + 0x140]\n 81810: a0 = a5 <u ra\n 81813: a3 = u64 [s1 + 0x100]\n 81817: a4 = u64 [s1 + 0x148]\n 81821: a1 = a4 ^ a3\n 81824: a2 = a4 <u a3\n 81827: a2 = a0 if a1 == 0\n 81830: a1 = u64 [s1 + 0x158]\n 81834: t1 = u64 [s1 + 0x110]\n 81838: t2 = a1 - t1\n 81841: a3 = a4 - a3\n 81844: a3 = a3 - a0\n 81847: a0 = a5 - ra\n 81850: a4 = a0 + 0x1\n 81853: a0 = a4 <u 0x1\n 81856: u64 [s1 + 0x120] = a4\n 81860: a3 = a3 + a0\n 81863: u64 [s1 + 0x128] = a3\n 81867: a0 = t2 - a2\n 81870: a5 = t2 <u a2\n 81873: a2 = a1 <u t1\n 81876: a1 = a2 + a5\n 81879: a2 = u64 [s1 + 0x118]\n 81883: a5 = u64 [s1 + 0x150]\n 81887: a2 = a5 - a2\n 81890: a2 = a2 - a1\n 81893: a1 = a4 | a3\n 81896: a1 = a1 <u 0x1\n 81899: a1 = a1 + a0\n 81902: u64 [s1 + 0x130] = a1\n 81906: a0 = a1 <u a0\n 81909: a0 = a0 + a2\n 81912: u64 [s1 + 0x138] = a0\n 81916: i32 a0 = t0 + 0\n 81918: a1 = 0x20\n 81921: ra = 986, jump @0\n      : @1196 [@dyn 493] (gas: 128)\n 81928: ra = u64 [s1 + 0x168]\n 81932: a5 = u64 [s1 + 0x140]\n 81936: a2 = a5 <u ra\n 81939: a3 = u64 [s1 + 0x170]\n 81943: a4 = u64 [s1 + 0x148]\n 81947: t0 = a4 ^ a3\n 81950: a1 = a4 <u a3\n 81953: t1 = a3\n 81955: a1 = a2 if t0 == 0\n 81958: a3 = a4 - a3\n 81961: a4 = a3 - a2\n 81964: a2 = a5 - ra\n 81967: a3 = a2 & 0xffffffffffffffe0\n 81970: ra = ra + a3\n 81973: a5 = ra <u a3\n 81976: a3 = a4 + t1\n 81979: a3 = a3 + a5\n 81982: t0 = a3 ^ a4\n 81985: a4 = a3 <u a4\n 81988: a4 = a5 if t0 == 0\n 81991: a2 = u64 [s1 + 0x178]\n 81995: a5 = u64 [s1 + 0x150]\n 81999: t0 = a5 - a2\n 82002: t2 = u64 [s1 + 0x160]\n 82006: t1 = u64 [s1 + 0x158]\n 82010: a5 = t1 <u t2\n 82013: t0 = t0 - a5\n 82016: a5 = t1 - t2\n 82019: t1 = a5 <u a1\n 82022: a1 = a5 - a1\n 82025: t0 = t0 + a2\n 82028: t0 = t0 - t1\n 82031: t1 = u64 [s1 + 0x168]\n 82035: a5 = a1 + t2\n 82038: a1 = a5 <u a1\n 82041: a1 = a1 + t0\n 82044: a4 = a4 + a5\n 82047: a5 = a4 <u a5\n 82050: t0 = a1 + a5\n 82053: a1 = ra + 0x20\n 82056: u64 [s1 + 0x140] = a1\n 82060: a2 = a1 <u ra\n 82063: a1 = a3 + a2\n 82066: a3 = a1 <u a3\n 82069: a3 = a2 if a2 == 0\n 82072: a5 = a4 + a3\n 82075: a2 = a5 <u a4\n 82078: a3 = t0 + a2\n 82081: a4 = a3 >u 0\n 82083: a2 = a5 >u 0\n 82085: a2 = a4 if a3 != 0\n 82088: u64 [s1 + 0x158] = a3\n 82092: u64 [s1 + 0x150] = a5\n 82096: a3 = a3 | a5\n 82099: u64 [s1 + 0x148] = a1\n 82103: a1 = a1 >u 0\n 82105: a1 = a2 if a3 != 0\n 82108: a2 = u64 [s1 + 0x120]\n 82112: a2 = reverse a2\n 82114: a3 = a2 >> 0x38\n 82117: u8 [a0 + 0x1f] = a3\n 82120: a3 = a2 >> 0x30\n 82123: u8 [a0 + 0x1e] = a3\n 82126: a3 = a2 >> 0x28\n 82129: u8 [a0 + 0x1d] = a3\n 82132: a3 = a2 >> 0x20\n 82135: u8 [a0 + 0x1c] = a3\n 82138: a3 = a2 >> 0x18\n 82141: u8 [a0 + 0x1b] = a3\n 82144: a3 = a2 >> 0x10\n 82147: u8 [a0 + 0x1a] = a3\n 82150: a3 = u64 [s1 + 0x128]\n 82154: a3 = reverse a3\n 82156: u8 [a0 + 0x18] = a2\n 82159: a2 = a2 >> 0x8\n 82162: u8 [a0 + 0x19] = a2\n 82165: a2 = a3 >> 0x38\n 82168: u8 [a0 + 0x17] = a2\n 82171: a2 = a3 >> 0x30\n 82174: u8 [a0 + 0x16] = a2\n 82177: a2 = a3 >> 0x28\n 82180: u8 [a0 + 0x15] = a2\n 82183: a2 = a3 >> 0x20\n 82186: u8 [a0 + 0x14] = a2\n 82189: a2 = a3 >> 0x18\n 82192: u8 [a0 + 0x13] = a2\n 82195: a2 = a3 >> 0x10\n 82198: u8 [a0 + 0x12] = a2\n 82201: a2 = u64 [s1 + 0x130]\n 82205: a2 = reverse a2\n 82207: u8 [a0 + 0x10] = a3\n 82210: a3 = a3 >> 0x8\n 82213: u8 [a0 + 0x11] = a3\n 82216: a3 = a2 >> 0x38\n 82219: u8 [a0 + 0xf] = a3\n 82222: a3 = a2 >> 0x30\n 82225: u8 [a0 + 0xe] = a3\n 82228: a3 = a2 >> 0x28\n 82231: u8 [a0 + 0xd] = a3\n 82234: a3 = a2 >> 0x20\n 82237: u8 [a0 + 0xc] = a3\n 82240: a3 = a2 >> 0x18\n 82243: u8 [a0 + 0xb] = a3\n 82246: a3 = a2 >> 0x10\n 82249: u8 [a0 + 0xa] = a3\n 82252: a3 = u64 [s1 + 0x138]\n 82256: a3 = reverse a3\n 82258: u8 [a0 + 0x8] = a2\n 82261: a2 = a2 >> 0x8\n 82264: u8 [a0 + 0x9] = a2\n 82267: a2 = a3 >> 0x38\n 82270: u8 [a0 + 0x7] = a2\n 82273: a2 = a3 >> 0x30\n 82276: u8 [a0 + 0x6] = a2\n 82279: a2 = a3 >> 0x28\n 82282: u8 [a0 + 0x5] = a2\n 82285: a2 = a3 >> 0x20\n 82288: u8 [a0 + 0x4] = a2\n 82291: a2 = a3 >> 0x18\n 82294: u8 [a0 + 0x3] = a2\n 82297: a2 = a3 >> 0x10\n 82300: u8 [a0 + 0x2] = a2\n 82303: u8 [a0] = a3\n 82305: a3 = a3 >> 0x8\n 82308: u8 [a0 + 0x1] = a3\n 82311: a5 = u64 [s1 + 0x178]\n 82315: t0 = u64 [s1 + 0x170]\n 82319: jump @1206 if a1 != 0\n      : @1197 (gas: 17)\n 82323: a4 = t2\n 82325: a0 = u64 [s1 + 0x140]\n 82329: a0 = a0 <u t1\n 82332: a2 = u64 [s1 + 0x148]\n 82336: a1 = a2 ^ t0\n 82339: a2 = a2 <u t0\n 82342: a2 = a0 if a1 == 0\n 82345: a0 = u64 [s1 + 0x150]\n 82349: t2 = a0 <u t2\n 82352: a3 = u64 [s1 + 0x158]\n 82356: a1 = a3 ^ a5\n 82359: a3 = a3 <u a5\n 82362: a3 = t2 if a1 == 0\n 82365: a0 = a0 ^ a4\n 82368: a0 = a0 | a1\n 82371: a3 = a2 if a0 == 0\n 82374: jump @1206 if a3 != 0\n      : @1198 (gas: 3)\n 82378: a0 = 0x40\n 82381: a1 = 0x20\n 82384: ra = 988, jump @0\n      : @1199 [@dyn 494] (gas: 83)\n 82391: a1 = u64 [s1 + 0x140]\n 82395: a1 = reverse a1\n 82397: a2 = a1 >> 0x38\n 82400: u8 [a0 + 0x1f] = a2\n 82403: a2 = a1 >> 0x30\n 82406: u8 [a0 + 0x1e] = a2\n 82409: a2 = a1 >> 0x28\n 82412: u8 [a0 + 0x1d] = a2\n 82415: a2 = a1 >> 0x20\n 82418: u8 [a0 + 0x1c] = a2\n 82421: a2 = a1 >> 0x18\n 82424: u8 [a0 + 0x1b] = a2\n 82427: a2 = a1 >> 0x10\n 82430: u8 [a0 + 0x1a] = a2\n 82433: a2 = u64 [s1 + 0x148]\n 82437: a2 = reverse a2\n 82439: u8 [a0 + 0x18] = a1\n 82442: a1 = a1 >> 0x8\n 82445: u8 [a0 + 0x19] = a1\n 82448: a1 = a2 >> 0x38\n 82451: u8 [a0 + 0x17] = a1\n 82454: a1 = a2 >> 0x30\n 82457: u8 [a0 + 0x16] = a1\n 82460: a1 = a2 >> 0x28\n 82463: u8 [a0 + 0x15] = a1\n 82466: a1 = a2 >> 0x20\n 82469: u8 [a0 + 0x14] = a1\n 82472: a1 = a2 >> 0x18\n 82475: u8 [a0 + 0x13] = a1\n 82478: a1 = a2 >> 0x10\n 82481: u8 [a0 + 0x12] = a1\n 82484: a1 = u64 [s1 + 0x150]\n 82488: a1 = reverse a1\n 82490: u8 [a0 + 0x10] = a2\n 82493: a2 = a2 >> 0x8\n 82496: u8 [a0 + 0x11] = a2\n 82499: a2 = a1 >> 0x38\n 82502: u8 [a0 + 0xf] = a2\n 82505: a2 = a1 >> 0x30\n 82508: u8 [a0 + 0xe] = a2\n 82511: a2 = a1 >> 0x28\n 82514: u8 [a0 + 0xd] = a2\n 82517: a2 = a1 >> 0x20\n 82520: u8 [a0 + 0xc] = a2\n 82523: a2 = a1 >> 0x18\n 82526: u8 [a0 + 0xb] = a2\n 82529: a2 = a1 >> 0x10\n 82532: u8 [a0 + 0xa] = a2\n 82535: a2 = u64 [s1 + 0x158]\n 82539: a2 = reverse a2\n 82541: u8 [a0 + 0x8] = a1\n 82544: a1 = a1 >> 0x8\n 82547: u8 [a0 + 0x9] = a1\n 82550: a1 = a2 >> 0x38\n 82553: u8 [a0 + 0x7] = a1\n 82556: a1 = a2 >> 0x30\n 82559: u8 [a0 + 0x6] = a1\n 82562: a1 = a2 >> 0x28\n 82565: u8 [a0 + 0x5] = a1\n 82568: a1 = a2 >> 0x20\n 82571: u8 [a0 + 0x4] = a1\n 82574: a1 = a2 >> 0x18\n 82577: u8 [a0 + 0x3] = a1\n 82580: a1 = a2 >> 0x10\n 82583: u8 [a0 + 0x2] = a1\n 82586: u8 [a0] = a2\n 82588: a2 = a2 >> 0x8\n 82591: u8 [a0 + 0x1] = a2\n 82594: a0 = u64 [s1 + 0xb0]\n 82598: a1 = u64 [s1 + 0x168]\n 82602: u64 [a0] = a1\n 82604: a1 = u64 [s1 + 0x178]\n 82608: u64 [a0 + 0x18] = a1\n 82611: a1 = u64 [s1 + 0x170]\n 82615: u64 [a0 + 0x8] = a1\n 82618: a1 = u64 [s1 + 0x160]\n 82622: u64 [a0 + 0x10] = a1\n 82625: sp = s0 + 0xfffffffffffffb40\n 82629: ra = u64 [sp + 0x4b8]\n 82633: s0 = u64 [sp + 0x4b0]\n 82637: s1 = u64 [sp + 0x4a8]\n 82641: sp = sp + 0x4c0\n 82645: ret\n      : @1200 (gas: 3)\n 82647: a0 = 0x40\n 82650: a1 = 0x20\n 82653: ra = 990, jump @0\n      : @1201 [@dyn 495] (gas: 104)\n 82660: a1 = u8 [a0 + 0x11]\n 82663: a2 = u8 [a0 + 0x10]\n 82666: a3 = u8 [a0 + 0x12]\n 82669: a4 = u8 [a0 + 0x13]\n 82672: a1 = a1 << 0x8\n 82675: a1 = a1 | a2\n 82678: a3 = a3 << 0x10\n 82681: a4 = a4 << 0x18\n 82684: a3 = a3 | a4\n 82687: a1 = a1 | a3\n 82690: a2 = u8 [a0 + 0x15]\n 82693: a3 = u8 [a0 + 0x14]\n 82696: a4 = u8 [a0 + 0x16]\n 82699: a5 = u8 [a0 + 0x17]\n 82702: a2 = a2 << 0x8\n 82705: a2 = a2 | a3\n 82708: a4 = a4 << 0x10\n 82711: a5 = a5 << 0x18\n 82714: a4 = a4 | a5\n 82717: a2 = a2 | a4\n 82720: a2 = a2 << 0x20\n 82723: t0 = a2 | a1\n 82726: a2 = u8 [a0 + 0x1]\n 82729: a3 = u8 [a0]\n 82731: a4 = u8 [a0 + 0x2]\n 82734: a5 = u8 [a0 + 0x3]\n 82737: a2 = a2 << 0x8\n 82740: a2 = a2 | a3\n 82743: a4 = a4 << 0x10\n 82746: a5 = a5 << 0x18\n 82749: a4 = a4 | a5\n 82752: a2 = a2 | a4\n 82755: a3 = u8 [a0 + 0x5]\n 82758: a4 = u8 [a0 + 0x4]\n 82761: a5 = u8 [a0 + 0x6]\n 82764: a1 = u8 [a0 + 0x7]\n 82767: a3 = a3 << 0x8\n 82770: a3 = a3 | a4\n 82773: a5 = a5 << 0x10\n 82776: a1 = a1 << 0x18\n 82779: a1 = a1 | a5\n 82782: a1 = a1 | a3\n 82785: a1 = a1 << 0x20\n 82788: t1 = a1 | a2\n 82791: a1 = u8 [a0 + 0x19]\n 82794: a3 = u8 [a0 + 0x18]\n 82797: a4 = u8 [a0 + 0x1a]\n 82800: a5 = u8 [a0 + 0x1b]\n 82803: a1 = a1 << 0x8\n 82806: a1 = a1 | a3\n 82809: a4 = a4 << 0x10\n 82812: a5 = a5 << 0x18\n 82815: a4 = a4 | a5\n 82818: a1 = a1 | a4\n 82821: a3 = u8 [a0 + 0x1d]\n 82824: a4 = u8 [a0 + 0x1c]\n 82827: a5 = u8 [a0 + 0x1e]\n 82830: a2 = u8 [a0 + 0x1f]\n 82833: a3 = a3 << 0x8\n 82836: a3 = a3 | a4\n 82839: a5 = a5 << 0x10\n 82842: a2 = a2 << 0x18\n 82845: a2 = a2 | a5\n 82848: a2 = a2 | a3\n 82851: a2 = a2 << 0x20\n 82854: a3 = a2 | a1\n 82857: a1 = u8 [a0 + 0x9]\n 82860: a2 = u8 [a0 + 0x8]\n 82863: a4 = u8 [a0 + 0xa]\n 82866: a5 = u8 [a0 + 0xb]\n 82869: a1 = a1 << 0x8\n 82872: a1 = a1 | a2\n 82875: a4 = a4 << 0x10\n 82878: a5 = a5 << 0x18\n 82881: a4 = a4 | a5\n 82884: a1 = a1 | a4\n 82887: a2 = u8 [a0 + 0xd]\n 82890: a4 = u8 [a0 + 0xc]\n 82893: a5 = u8 [a0 + 0xe]\n 82896: a0 = u8 [a0 + 0xf]\n 82899: a2 = a2 << 0x8\n 82902: a2 = a2 | a4\n 82905: a5 = a5 << 0x10\n 82908: a0 = a0 << 0x18\n 82911: a0 = a0 | a5\n 82914: a0 = a0 | a2\n 82917: a0 = a0 << 0x20\n 82920: a0 = a0 | a1\n 82923: a4 = reverse a0\n 82925: a1 = reverse a3\n 82927: a2 = reverse t1\n 82929: a0 = reverse t0\n 82931: u64 [s1 + 0x178] = a0\n 82935: u64 [s1 + 0x168] = a2\n 82939: a0 = a0 | a2\n 82942: a2 = a1\n 82944: a1 = a1 | a4\n 82947: a1 = a1 | a0\n 82950: a1 = a1 >> 0x20\n 82953: u64 [s1 + 0x170] = a4\n 82957: a0 = a0 | a4\n 82960: a0 = a0 << 0x20\n 82963: a0 = a0 | a1\n 82966: jump @1205 if a0 != 0\n      : @1202 (gas: 5)\n 82970: u64 [s1 + 0x160] = a2\n 82974: i32 a0 = a2 + 0\n 82976: a1 = 0x20\n 82979: u64 [s1 + 0x158] = a0\n 82983: ra = 992, jump @0\n      : @1203 [@dyn 496] (gas: 51)\n 82990: u8 [a0 + 31] = 0\n 82993: u8 [a0 + 30] = 0\n 82996: u8 [a0 + 29] = 0\n 82999: u8 [a0 + 28] = 0\n 83002: u8 [a0 + 27] = 0\n 83005: u8 [a0 + 26] = 0\n 83008: u8 [a0 + 25] = 0\n 83011: u8 [a0 + 24] = 0\n 83014: u8 [a0 + 23] = 0\n 83017: u8 [a0 + 22] = 0\n 83020: u8 [a0 + 21] = 0\n 83023: u8 [a0 + 20] = 0\n 83026: u8 [a0 + 19] = 0\n 83029: u8 [a0 + 18] = 0\n 83032: u8 [a0 + 17] = 0\n 83035: u8 [a0 + 16] = 0\n 83038: u8 [a0 + 15] = 0\n 83041: u8 [a0 + 14] = 0\n 83044: u8 [a0 + 13] = 0\n 83047: u8 [a0 + 12] = 0\n 83050: u8 [a0 + 11] = 0\n 83053: u8 [a0 + 10] = 0\n 83056: u8 [a0 + 9] = 0\n 83059: u8 [a0 + 8] = 0\n 83062: u8 [a0 + 7] = 0\n 83065: u8 [a0 + 6] = 0\n 83068: u8 [a0 + 5] = 0\n 83071: u8 [a0 + 4] = 0\n 83074: u8 [a0 + 3] = 0xa0\n 83079: u8 [a0 + 2] = 0x79\n 83083: u8 [a0 + 1] = 0xc3\n 83088: u8 [a0 + 0] = 0x8\n 83091: a1 = u64 [s1 + 0x160]\n 83095: a0 = a1 + 0x4\n 83098: a1 = a0 <u a1\n 83101: a3 = u64 [s1 + 0x178]\n 83105: a2 = a3 + a1\n 83108: a3 = a2 <u a3\n 83111: a3 = a1 if a1 == 0\n 83114: a1 = u64 [s1 + 0x170]\n 83118: a3 = a3 + a1\n 83121: a1 = a3 <u a1\n 83124: a4 = u64 [s1 + 0x168]\n 83128: a4 = a4 + a1\n 83131: u64 [s1 + 0x188] = a2\n 83135: u64 [s1 + 0x180] = a0\n 83139: u64 [s1 + 0x190] = a3\n 83143: a0 = s1 + 0x1a0\n 83147: a1 = s1 + 0x180\n 83151: u64 [s1 + 0x198] = a4\n 83155: ra = 994, jump @1114\n      : @1204 [@dyn 497] (gas: 31)\n 83161: a0 = u64 [s1 + 0x1a8]\n 83165: t0 = u64 [s1 + 0x1b8]\n 83169: t1 = u64 [s1 + 0x1a0]\n 83173: a3 = u64 [s1 + 0x1b0]\n 83177: a1 = u64 [s1 + 0x178]\n 83181: a4 = a0 ^ a1\n 83184: a5 = a0 <u a1\n 83187: ra = a1\n 83189: t2 = u64 [s1 + 0x160]\n 83193: a1 = t1 <u t2\n 83196: a5 = a1 if a4 == 0\n 83199: a2 = u64 [s1 + 0x170]\n 83203: a4 = a3 - a2\n 83206: a3 = a3 <u a2\n 83209: a2 = u64 [s1 + 0x168]\n 83213: a2 = t0 - a2\n 83216: a2 = a2 - a3\n 83219: a3 = a4 <u a5\n 83222: a2 = a2 - a3\n 83225: a4 = a4 - a5\n 83228: a0 = a0 - ra\n 83231: a1 = a0 - a1\n 83234: a0 = t1 - t2\n 83237: a1 = a1 | a2\n 83240: a2 = a0 | a4\n 83243: a2 = a2 | a1\n 83246: a1 = a1 | a4\n 83249: a2 = a2 >> 0x20\n 83252: a1 = a1 << 0x20\n 83255: a1 = a1 | a2\n 83258: jump @1212 if a1 == 0\n      : @1205 (gas: 1)\n 83262: trap\n      : @1206 (gas: 8)\n 83263: u64 [s1 + 560] = 0\n 83267: u64 [s1 + 552] = 0\n 83271: u64 [s1 + 544] = 0\n 83275: a0 = 0x4e487b7100000000\n 83285: a1 = s1 + 0x220\n 83289: u64 [s1 + 0x238] = a0\n 83293: a0 = 0\n 83295: ra = 996, jump @23\n      : @1207 [@dyn 498] (gas: 8)\n 83302: u64 [s1 + 536] = 0\n 83306: u64 [s1 + 528] = 0\n 83310: u64 [s1 + 512] = 0x41\n 83315: a0 = 0x4\n 83318: a1 = s1 + 0x200\n 83322: u64 [s1 + 520] = 0\n 83326: ra = 0x3e8\n 83330: jump @23\n      : @1208 (gas: 8)\n 83334: u64 [s1 + 496] = 0\n 83338: u64 [s1 + 488] = 0\n 83342: u64 [s1 + 480] = 0\n 83346: a0 = 0x4e487b7100000000\n 83356: a1 = s1 + 0x1e0\n 83360: u64 [s1 + 0x1f8] = a0\n 83364: a0 = 0\n 83366: ra = 998, jump @23\n      : @1209 [@dyn 499] (gas: 7)\n 83373: u64 [s1 + 472] = 0\n 83377: u64 [s1 + 464] = 0\n 83381: u64 [s1 + 448] = 0x12\n 83386: a0 = 0x4\n 83389: a1 = s1 + 0x1c0\n 83393: u64 [s1 + 456] = 0\n 83397: ra = 1000, jump @23\n      : @1210 [@dyn 500] (gas: 3)\n 83404: a1 = 0x24\n 83407: a0 = 0\n 83409: ra = 1002, jump @0\n      : @1211 [@dyn 501] (gas: 5)\n 83416: i32 a1 = a0 + 0\n 83418: a0 = 0x1\n 83421: a2 = 0x24\n 83424: ecalli 6 // 'seal_return'\n 83426: fallthrough\n      : @1212 (gas: 4)\n 83427: i32 a1 = a0 + 0\n 83429: u64 [s1 + 0x178] = a1\n 83433: a0 = u64 [s1 + 0x158]\n 83437: ra = 1004, jump @0\n      : @1213 [@dyn 502] (gas: 6)\n 83444: i32 a1 = a0 + 0\n 83446: a0 = 0x1\n 83449: a2 = u64 [s1 + 0x178]\n 83453: ra = 0x3ee\n 83457: ecalli 6 // 'seal_return'\n 83459: fallthrough\n      : @1214 [@dyn 503] (gas: 9)\n 83460: a2 = u64 [a1 + 0x18]\n 83463: a3 = u64 [a1 + 0x10]\n 83466: a4 = u64 [a1 + 0x8]\n 83469: a1 = u64 [a1]\n 83471: u64 [a0 + 0x18] = a2\n 83474: u64 [a0 + 0x10] = a3\n 83477: u64 [a0 + 0x8] = a4\n 83480: u64 [a0] = a1\n 83482: ret\n      : @1215 [export #0: 'call'] (gas: 2)\n 83484: a0 = 0\n 83486: ra = 1008, jump @25\n      : @1216 [@dyn 504] [export #1: 'deploy'] (gas: 2)\n 83493: a0 = 0x1\n 83496: ra = 1010, jump @25\n      : @1217 [@dyn 505] (gas: 27)\n 83503: sp = sp + 0xffffffffffffff80\n 83506: u64 [sp + 0x78] = ra\n 83509: u64 [sp + 0x70] = s0\n 83512: u64 [sp + 0x68] = s1\n 83515: s0 = sp + 0x80\n 83519: sp = sp & 0xfffffffffffffff0\n 83522: t0 = u64 [a1]\n 83524: t1 = u64 [a1 + 0x8]\n 83527: t2 = u64 [a1 + 0x10]\n 83530: a1 = u64 [a1 + 0x18]\n 83533: a3 = u64 [a2]\n 83535: a4 = u64 [a2 + 0x8]\n 83538: a5 = u64 [a2 + 0x10]\n 83541: a2 = u64 [a2 + 0x18]\n 83544: s1 = a0\n 83546: u64 [sp + 0x18] = a2\n 83549: u64 [sp + 0x10] = a5\n 83552: u64 [sp + 0x8] = a4\n 83555: u64 [sp] = a3\n 83557: u64 [sp + 0x38] = a1\n 83560: u64 [sp + 0x30] = t2\n 83563: u64 [sp + 0x28] = t1\n 83566: a0 = sp + 0x40\n 83569: a1 = sp + 0x20\n 83572: a2 = sp\n 83574: u64 [sp + 0x20] = t0\n 83577: ra = 1012, jump @1065\n      : @1218 [@dyn 506] (gas: 14)\n 83583: a0 = u64 [sp + 0x50]\n 83586: a1 = u64 [sp + 0x58]\n 83589: a2 = u64 [sp + 0x40]\n 83592: a3 = u64 [sp + 0x48]\n 83595: u64 [s1 + 0x10] = a0\n 83598: u64 [s1 + 0x18] = a1\n 83601: u64 [s1] = a2\n 83603: u64 [s1 + 0x8] = a3\n 83606: sp = s0 + 0xffffffffffffff80\n 83609: ra = u64 [sp + 0x78]\n 83612: s0 = u64 [sp + 0x70]\n 83615: s1 = u64 [sp + 0x68]\n 83618: sp = sp + 0x80\n 83622: ret\n",
						"bytecode": {
							"object": ""
						},
						"deployedBytecode": {
							"object": ""
						},
						"methodIdentifiers": {
							"getCurrentMagicWord()": "68a0c969",
							"inputMagicWord(string)": "bf462267",
							"makeMagicBaby()": "84ac83cc"
						}
					},
					"irOptimized": "/// @use-src 0:\"contracts/MagicWord.sol\"\nobject \"MagicWord_157\" {\n    code {\n        {\n            /// @src 0:214:2067  \"contract MagicWord {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue()\n            {\n                revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n            }\n            constructor_MagicWord()\n            let _1 := allocate_unbounded()\n            codecopy(_1, dataoffset(\"MagicWord_157_deployed\"), datasize(\"MagicWord_157_deployed\"))\n            return(_1, datasize(\"MagicWord_157_deployed\"))\n        }\n        function allocate_unbounded() -> memPtr\n        { memPtr := mload(64) }\n        function revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n        { revert(0, 0) }\n        function round_up_to_mul_of(value) -> result\n        {\n            result := and(add(value, 31), not(31))\n        }\n        function panic_error_0x41()\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        function finalize_allocation(memPtr, size)\n        {\n            let newFreePtr := add(memPtr, round_up_to_mul_of(size))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n            mstore(64, newFreePtr)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := allocate_unbounded()\n            finalize_allocation(memPtr, size)\n        }\n        function array_allocation_size_array_string(length) -> size\n        {\n            if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            size := mul(length, 0x20)\n        }\n        function allocate_memory_array_array_string(length) -> memPtr\n        {\n            let allocSize := array_allocation_size_array_string(length)\n            memPtr := allocate_memory(allocSize)\n        }\n        function array_allocation_size_string(length) -> size\n        {\n            if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            size := round_up_to_mul_of(length)\n            size := add(size, 0x20)\n        }\n        function allocate_memory_array_string(length) -> memPtr\n        {\n            let allocSize := array_allocation_size_string(length)\n            memPtr := allocate_memory(allocSize)\n            mstore(memPtr, length)\n        }\n        function store_literal_in_memory_f8539fc696bd04f73891493700ec2d170b088f79c2a2e9e7f76261960fe40929(memPtr)\n        {\n            mstore(add(memPtr, 0), \"amazing\")\n        }\n        function copy_literal_to_memory_f8539fc696bd04f73891493700ec2d170b088f79c2a2e9e7f76261960fe40929() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(7)\n            store_literal_in_memory_f8539fc696bd04f73891493700ec2d170b088f79c2a2e9e7f76261960fe40929(add(memPtr, 32))\n        }\n        function convert_stringliteral_f853_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_f8539fc696bd04f73891493700ec2d170b088f79c2a2e9e7f76261960fe40929()\n        }\n        function write_to_memory_string(memPtr, value)\n        { mstore(memPtr, value) }\n        function store_literal_in_memory_d17d1d80d5d7a434b56ee59bc2ed8f0fd2a890dfba40fc63344b9c3654c935ee(memPtr)\n        {\n            mstore(add(memPtr, 0), \"awesome\")\n        }\n        function copy_literal_to_memory_d17d1d80d5d7a434b56ee59bc2ed8f0fd2a890dfba40fc63344b9c3654c935ee() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(7)\n            store_literal_in_memory_d17d1d80d5d7a434b56ee59bc2ed8f0fd2a890dfba40fc63344b9c3654c935ee(add(memPtr, 32))\n        }\n        function convert_stringliteral_d17d_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_d17d1d80d5d7a434b56ee59bc2ed8f0fd2a890dfba40fc63344b9c3654c935ee()\n        }\n        function store_literal_in_memory_a3fd1d08b6a60a7b87db8fab8c204c18f4f5c424b2adce1ac22549fbd176b2ef(memPtr)\n        {\n            mstore(add(memPtr, 0), \"brilliant\")\n        }\n        function copy_literal_to_memory_a3fd1d08b6a60a7b87db8fab8c204c18f4f5c424b2adce1ac22549fbd176b2ef() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(9)\n            store_literal_in_memory_a3fd1d08b6a60a7b87db8fab8c204c18f4f5c424b2adce1ac22549fbd176b2ef(add(memPtr, 32))\n        }\n        function convert_stringliteral_a3fd_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_a3fd1d08b6a60a7b87db8fab8c204c18f4f5c424b2adce1ac22549fbd176b2ef()\n        }\n        function store_literal_in_memory_8ba2c0afb7b1f61861859c622e5f304cadb3d405571f1ad8f0cc54d6814a4c89(memPtr)\n        {\n            mstore(add(memPtr, 0), \"beautiful\")\n        }\n        function copy_literal_to_memory_8ba2c0afb7b1f61861859c622e5f304cadb3d405571f1ad8f0cc54d6814a4c89() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(9)\n            store_literal_in_memory_8ba2c0afb7b1f61861859c622e5f304cadb3d405571f1ad8f0cc54d6814a4c89(add(memPtr, 32))\n        }\n        function convert_stringliteral_8ba2_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_8ba2c0afb7b1f61861859c622e5f304cadb3d405571f1ad8f0cc54d6814a4c89()\n        }\n        function store_literal_in_memory_e3e90daa6a58ae029a7000d6cc00698775d4b20492e71d5126fada73256f0f26(memPtr)\n        {\n            mstore(add(memPtr, 0), \"brave\")\n        }\n        function copy_literal_to_memory_e3e90daa6a58ae029a7000d6cc00698775d4b20492e71d5126fada73256f0f26() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(5)\n            store_literal_in_memory_e3e90daa6a58ae029a7000d6cc00698775d4b20492e71d5126fada73256f0f26(add(memPtr, 32))\n        }\n        function convert_stringliteral_e3e9_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_e3e90daa6a58ae029a7000d6cc00698775d4b20492e71d5126fada73256f0f26()\n        }\n        function store_literal_in_memory_1dda021d0a424dcb3ec1956b8a8242f8517d0e52c486bd98f6f2494e0b453723(memPtr)\n        {\n            mstore(add(memPtr, 0), \"bold\")\n        }\n        function copy_literal_to_memory_1dda021d0a424dcb3ec1956b8a8242f8517d0e52c486bd98f6f2494e0b453723() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(4)\n            store_literal_in_memory_1dda021d0a424dcb3ec1956b8a8242f8517d0e52c486bd98f6f2494e0b453723(add(memPtr, 32))\n        }\n        function convert_stringliteral_1dda_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_1dda021d0a424dcb3ec1956b8a8242f8517d0e52c486bd98f6f2494e0b453723()\n        }\n        function store_literal_in_memory_b8cafa17a973c2782862a1d8d21def2351c001583aebec26db163cccdbb5b7a9(memPtr)\n        {\n            mstore(add(memPtr, 0), \"bright\")\n        }\n        function copy_literal_to_memory_b8cafa17a973c2782862a1d8d21def2351c001583aebec26db163cccdbb5b7a9() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(6)\n            store_literal_in_memory_b8cafa17a973c2782862a1d8d21def2351c001583aebec26db163cccdbb5b7a9(add(memPtr, 32))\n        }\n        function convert_stringliteral_b8ca_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_b8cafa17a973c2782862a1d8d21def2351c001583aebec26db163cccdbb5b7a9()\n        }\n        function store_literal_in_memory_d97fa8a7daee87d313c29ec9b478b3b4bc3118051c7625d0f2fc2ee7acc76406(memPtr)\n        {\n            mstore(add(memPtr, 0), \"calm\")\n        }\n        function copy_literal_to_memory_d97fa8a7daee87d313c29ec9b478b3b4bc3118051c7625d0f2fc2ee7acc76406() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(4)\n            store_literal_in_memory_d97fa8a7daee87d313c29ec9b478b3b4bc3118051c7625d0f2fc2ee7acc76406(add(memPtr, 32))\n        }\n        function convert_stringliteral_d97f_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_d97fa8a7daee87d313c29ec9b478b3b4bc3118051c7625d0f2fc2ee7acc76406()\n        }\n        function store_literal_in_memory_4fbdd45f5c4c780ffb76ed071e1ce5d54c26bf7566871213f1d327e78a08fb7a(memPtr)\n        {\n            mstore(add(memPtr, 0), \"charming\")\n        }\n        function copy_literal_to_memory_4fbdd45f5c4c780ffb76ed071e1ce5d54c26bf7566871213f1d327e78a08fb7a() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(8)\n            store_literal_in_memory_4fbdd45f5c4c780ffb76ed071e1ce5d54c26bf7566871213f1d327e78a08fb7a(add(memPtr, 32))\n        }\n        function convert_stringliteral_4fbd_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_4fbdd45f5c4c780ffb76ed071e1ce5d54c26bf7566871213f1d327e78a08fb7a()\n        }\n        function store_literal_in_memory_90ef6ec615b551598056285df783f91a63cea34aadf77653161fcef13dd34e69(memPtr)\n        {\n            mstore(add(memPtr, 0), \"cheerful\")\n        }\n        function copy_literal_to_memory_90ef6ec615b551598056285df783f91a63cea34aadf77653161fcef13dd34e69() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(8)\n            store_literal_in_memory_90ef6ec615b551598056285df783f91a63cea34aadf77653161fcef13dd34e69(add(memPtr, 32))\n        }\n        function convert_stringliteral_90ef_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_90ef6ec615b551598056285df783f91a63cea34aadf77653161fcef13dd34e69()\n        }\n        function store_literal_in_memory_2ea4ed0ce53f131af414c418adc10a49b97c1e5ac17b578e486542a24939d749(memPtr)\n        {\n            mstore(add(memPtr, 0), \"clever\")\n        }\n        function copy_literal_to_memory_2ea4ed0ce53f131af414c418adc10a49b97c1e5ac17b578e486542a24939d749() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(6)\n            store_literal_in_memory_2ea4ed0ce53f131af414c418adc10a49b97c1e5ac17b578e486542a24939d749(add(memPtr, 32))\n        }\n        function convert_stringliteral_2ea4_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_2ea4ed0ce53f131af414c418adc10a49b97c1e5ac17b578e486542a24939d749()\n        }\n        function store_literal_in_memory_ca187a0a5c09dd0c4093639a372e92eaff2f1a12252fff1411f153c440c5084e(memPtr)\n        {\n            mstore(add(memPtr, 0), \"colorful\")\n        }\n        function copy_literal_to_memory_ca187a0a5c09dd0c4093639a372e92eaff2f1a12252fff1411f153c440c5084e() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(8)\n            store_literal_in_memory_ca187a0a5c09dd0c4093639a372e92eaff2f1a12252fff1411f153c440c5084e(add(memPtr, 32))\n        }\n        function convert_stringliteral_ca18_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_ca187a0a5c09dd0c4093639a372e92eaff2f1a12252fff1411f153c440c5084e()\n        }\n        function store_literal_in_memory_49cda4a3dbd12d6fb5336bb26bdcc463622acf8098818055aba4d7cc2e5f65b0(memPtr)\n        {\n            mstore(add(memPtr, 0), \"comfortable\")\n        }\n        function copy_literal_to_memory_49cda4a3dbd12d6fb5336bb26bdcc463622acf8098818055aba4d7cc2e5f65b0() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(11)\n            store_literal_in_memory_49cda4a3dbd12d6fb5336bb26bdcc463622acf8098818055aba4d7cc2e5f65b0(add(memPtr, 32))\n        }\n        function convert_stringliteral_49cd_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_49cda4a3dbd12d6fb5336bb26bdcc463622acf8098818055aba4d7cc2e5f65b0()\n        }\n        function store_literal_in_memory_89edccfc23d8808df57bf67342ee932f75d02d5c1c2b0cda1bb5676c2331ca8c(memPtr)\n        {\n            mstore(add(memPtr, 0), \"confident\")\n        }\n        function copy_literal_to_memory_89edccfc23d8808df57bf67342ee932f75d02d5c1c2b0cda1bb5676c2331ca8c() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(9)\n            store_literal_in_memory_89edccfc23d8808df57bf67342ee932f75d02d5c1c2b0cda1bb5676c2331ca8c(add(memPtr, 32))\n        }\n        function convert_stringliteral_89ed_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_89edccfc23d8808df57bf67342ee932f75d02d5c1c2b0cda1bb5676c2331ca8c()\n        }\n        function store_literal_in_memory_8d266ff1e2ad150484992fb7b8ab7a55aad186c72d4f02d5f16b0d02f505904e(memPtr)\n        {\n            mstore(add(memPtr, 0), \"considerate\")\n        }\n        function copy_literal_to_memory_8d266ff1e2ad150484992fb7b8ab7a55aad186c72d4f02d5f16b0d02f505904e() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(11)\n            store_literal_in_memory_8d266ff1e2ad150484992fb7b8ab7a55aad186c72d4f02d5f16b0d02f505904e(add(memPtr, 32))\n        }\n        function convert_stringliteral_8d26_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_8d266ff1e2ad150484992fb7b8ab7a55aad186c72d4f02d5f16b0d02f505904e()\n        }\n        function store_literal_in_memory_678c189fde5058554d934d6af17e41750fa2a94b61371c5ea958a7595e146324(memPtr)\n        {\n            mstore(add(memPtr, 0), \"cool\")\n        }\n        function copy_literal_to_memory_678c189fde5058554d934d6af17e41750fa2a94b61371c5ea958a7595e146324() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(4)\n            store_literal_in_memory_678c189fde5058554d934d6af17e41750fa2a94b61371c5ea958a7595e146324(add(memPtr, 32))\n        }\n        function convert_stringliteral_678c_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_678c189fde5058554d934d6af17e41750fa2a94b61371c5ea958a7595e146324()\n        }\n        function store_literal_in_memory_67f94db9ff3a85d6e55122058e8ddc74619775d114f31e78e411c9ea5b264886(memPtr)\n        {\n            mstore(add(memPtr, 0), \"courageous\")\n        }\n        function copy_literal_to_memory_67f94db9ff3a85d6e55122058e8ddc74619775d114f31e78e411c9ea5b264886() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(10)\n            store_literal_in_memory_67f94db9ff3a85d6e55122058e8ddc74619775d114f31e78e411c9ea5b264886(add(memPtr, 32))\n        }\n        function convert_stringliteral_67f9_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_67f94db9ff3a85d6e55122058e8ddc74619775d114f31e78e411c9ea5b264886()\n        }\n        function store_literal_in_memory_d08ac36f519ee359a2a193611e1643e0d2c9d4ad9631f683fccd3b4a13a5b717(memPtr)\n        {\n            mstore(add(memPtr, 0), \"creative\")\n        }\n        function copy_literal_to_memory_d08ac36f519ee359a2a193611e1643e0d2c9d4ad9631f683fccd3b4a13a5b717() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(8)\n            store_literal_in_memory_d08ac36f519ee359a2a193611e1643e0d2c9d4ad9631f683fccd3b4a13a5b717(add(memPtr, 32))\n        }\n        function convert_stringliteral_d08a_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_d08ac36f519ee359a2a193611e1643e0d2c9d4ad9631f683fccd3b4a13a5b717()\n        }\n        function store_literal_in_memory_e9c4fceab5083dfebe07d8696a1281dcece88f36770ecc5e10300ebe6b4c46a1(memPtr)\n        {\n            mstore(add(memPtr, 0), \"curious\")\n        }\n        function copy_literal_to_memory_e9c4fceab5083dfebe07d8696a1281dcece88f36770ecc5e10300ebe6b4c46a1() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(7)\n            store_literal_in_memory_e9c4fceab5083dfebe07d8696a1281dcece88f36770ecc5e10300ebe6b4c46a1(add(memPtr, 32))\n        }\n        function convert_stringliteral_e9c4_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_e9c4fceab5083dfebe07d8696a1281dcece88f36770ecc5e10300ebe6b4c46a1()\n        }\n        function store_literal_in_memory_4825842dc9b28fa3667c9ae8fc1ab0085990e0ec28564abf43236904483b92a4(memPtr)\n        {\n            mstore(add(memPtr, 0), \"daring\")\n        }\n        function copy_literal_to_memory_4825842dc9b28fa3667c9ae8fc1ab0085990e0ec28564abf43236904483b92a4() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(6)\n            store_literal_in_memory_4825842dc9b28fa3667c9ae8fc1ab0085990e0ec28564abf43236904483b92a4(add(memPtr, 32))\n        }\n        function convert_stringliteral_4825_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_4825842dc9b28fa3667c9ae8fc1ab0085990e0ec28564abf43236904483b92a4()\n        }\n        function store_literal_in_memory_45f58f1b8249771cda53daeee63ca67300dd8092dfe0a7fc709cdfcfb4cc1172(memPtr)\n        {\n            mstore(add(memPtr, 0), \"dazzling\")\n        }\n        function copy_literal_to_memory_45f58f1b8249771cda53daeee63ca67300dd8092dfe0a7fc709cdfcfb4cc1172() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(8)\n            store_literal_in_memory_45f58f1b8249771cda53daeee63ca67300dd8092dfe0a7fc709cdfcfb4cc1172(add(memPtr, 32))\n        }\n        function convert_stringliteral_45f5_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_45f58f1b8249771cda53daeee63ca67300dd8092dfe0a7fc709cdfcfb4cc1172()\n        }\n        function store_literal_in_memory_e5bd8e18fa682c814a6117f0308defadda65df120d272f2f40913a6137f15bfa(memPtr)\n        {\n            mstore(add(memPtr, 0), \"delightful\")\n        }\n        function copy_literal_to_memory_e5bd8e18fa682c814a6117f0308defadda65df120d272f2f40913a6137f15bfa() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(10)\n            store_literal_in_memory_e5bd8e18fa682c814a6117f0308defadda65df120d272f2f40913a6137f15bfa(add(memPtr, 32))\n        }\n        function convert_stringliteral_e5bd_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_e5bd8e18fa682c814a6117f0308defadda65df120d272f2f40913a6137f15bfa()\n        }\n        function store_literal_in_memory_1758b5795aee2fffe4ad961402d0eb005f1bd7e678a879f6533a09c5ea1422fe(memPtr)\n        {\n            mstore(add(memPtr, 0), \"determined\")\n        }\n        function copy_literal_to_memory_1758b5795aee2fffe4ad961402d0eb005f1bd7e678a879f6533a09c5ea1422fe() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(10)\n            store_literal_in_memory_1758b5795aee2fffe4ad961402d0eb005f1bd7e678a879f6533a09c5ea1422fe(add(memPtr, 32))\n        }\n        function convert_stringliteral_1758_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_1758b5795aee2fffe4ad961402d0eb005f1bd7e678a879f6533a09c5ea1422fe()\n        }\n        function store_literal_in_memory_604e9638708be1d29143adc17fde6da35d723f550eec6d2340b7efb6343ba7e4(memPtr)\n        {\n            mstore(add(memPtr, 0), \"diligent\")\n        }\n        function copy_literal_to_memory_604e9638708be1d29143adc17fde6da35d723f550eec6d2340b7efb6343ba7e4() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(8)\n            store_literal_in_memory_604e9638708be1d29143adc17fde6da35d723f550eec6d2340b7efb6343ba7e4(add(memPtr, 32))\n        }\n        function convert_stringliteral_604e_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_604e9638708be1d29143adc17fde6da35d723f550eec6d2340b7efb6343ba7e4()\n        }\n        function store_literal_in_memory_47a6130681d8220ba3d4c0a50de139d22039c5629024c598d023ccca8470c25c(memPtr)\n        {\n            mstore(add(memPtr, 0), \"dynamic\")\n        }\n        function copy_literal_to_memory_47a6130681d8220ba3d4c0a50de139d22039c5629024c598d023ccca8470c25c() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(7)\n            store_literal_in_memory_47a6130681d8220ba3d4c0a50de139d22039c5629024c598d023ccca8470c25c(add(memPtr, 32))\n        }\n        function convert_stringliteral_47a6_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_47a6130681d8220ba3d4c0a50de139d22039c5629024c598d023ccca8470c25c()\n        }\n        function store_literal_in_memory_5d742ddfa6e33cb44b9bb8e00b4b780a62f4d58ac6c8ba7fe64e7b6abd095653(memPtr)\n        {\n            mstore(add(memPtr, 0), \"eager\")\n        }\n        function copy_literal_to_memory_5d742ddfa6e33cb44b9bb8e00b4b780a62f4d58ac6c8ba7fe64e7b6abd095653() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(5)\n            store_literal_in_memory_5d742ddfa6e33cb44b9bb8e00b4b780a62f4d58ac6c8ba7fe64e7b6abd095653(add(memPtr, 32))\n        }\n        function convert_stringliteral_5d74_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_5d742ddfa6e33cb44b9bb8e00b4b780a62f4d58ac6c8ba7fe64e7b6abd095653()\n        }\n        function store_literal_in_memory_8250c8534ce6b389ce6914b940b123a7cd0a561078463ff8213be6637a9f2a16(memPtr)\n        {\n            mstore(add(memPtr, 0), \"elegant\")\n        }\n        function copy_literal_to_memory_8250c8534ce6b389ce6914b940b123a7cd0a561078463ff8213be6637a9f2a16() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(7)\n            store_literal_in_memory_8250c8534ce6b389ce6914b940b123a7cd0a561078463ff8213be6637a9f2a16(add(memPtr, 32))\n        }\n        function convert_stringliteral_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_8250c8534ce6b389ce6914b940b123a7cd0a561078463ff8213be6637a9f2a16()\n        }\n        function store_literal_in_memory_b26ef7ac450e4259ffec847b7042895abd043d1fa2f0e5d9a3c9aa15a0a317fb(memPtr)\n        {\n            mstore(add(memPtr, 0), \"enchanting\")\n        }\n        function copy_literal_to_memory_b26ef7ac450e4259ffec847b7042895abd043d1fa2f0e5d9a3c9aa15a0a317fb() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(10)\n            store_literal_in_memory_b26ef7ac450e4259ffec847b7042895abd043d1fa2f0e5d9a3c9aa15a0a317fb(add(memPtr, 32))\n        }\n        function convert_stringliteral_b26e_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_b26ef7ac450e4259ffec847b7042895abd043d1fa2f0e5d9a3c9aa15a0a317fb()\n        }\n        function store_literal_in_memory_340775973e4af5fbebf2b05186e56c29c379dc08a9c5ac7038026a379ea1d163(memPtr)\n        {\n            mstore(add(memPtr, 0), \"energetic\")\n        }\n        function copy_literal_to_memory_340775973e4af5fbebf2b05186e56c29c379dc08a9c5ac7038026a379ea1d163() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(9)\n            store_literal_in_memory_340775973e4af5fbebf2b05186e56c29c379dc08a9c5ac7038026a379ea1d163(add(memPtr, 32))\n        }\n        function convert_stringliteral_3407_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_340775973e4af5fbebf2b05186e56c29c379dc08a9c5ac7038026a379ea1d163()\n        }\n        function store_literal_in_memory_443834da146663a6bf65d561cca72e7ab9b290fc95aacea468f7b53b61beab94(memPtr)\n        {\n            mstore(add(memPtr, 0), \"enthusiastic\")\n        }\n        function copy_literal_to_memory_443834da146663a6bf65d561cca72e7ab9b290fc95aacea468f7b53b61beab94() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(12)\n            store_literal_in_memory_443834da146663a6bf65d561cca72e7ab9b290fc95aacea468f7b53b61beab94(add(memPtr, 32))\n        }\n        function convert_stringliteral_4438_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_443834da146663a6bf65d561cca72e7ab9b290fc95aacea468f7b53b61beab94()\n        }\n        function store_literal_in_memory_3a5055d32a4e4f382c7c816b495364f339a6ce52c2a1e6e65de50a184ca87d86(memPtr)\n        {\n            mstore(add(memPtr, 0), \"excellent\")\n        }\n        function copy_literal_to_memory_3a5055d32a4e4f382c7c816b495364f339a6ce52c2a1e6e65de50a184ca87d86() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(9)\n            store_literal_in_memory_3a5055d32a4e4f382c7c816b495364f339a6ce52c2a1e6e65de50a184ca87d86(add(memPtr, 32))\n        }\n        function convert_stringliteral_3a50_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_3a5055d32a4e4f382c7c816b495364f339a6ce52c2a1e6e65de50a184ca87d86()\n        }\n        function store_literal_in_memory_fb02a533aee926472ee042877cd8b1ac8e3dd371d9c35171c3cdbe98d8cfb87b(memPtr)\n        {\n            mstore(add(memPtr, 0), \"exceptional\")\n        }\n        function copy_literal_to_memory_fb02a533aee926472ee042877cd8b1ac8e3dd371d9c35171c3cdbe98d8cfb87b() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(11)\n            store_literal_in_memory_fb02a533aee926472ee042877cd8b1ac8e3dd371d9c35171c3cdbe98d8cfb87b(add(memPtr, 32))\n        }\n        function convert_stringliteral_fb02_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_fb02a533aee926472ee042877cd8b1ac8e3dd371d9c35171c3cdbe98d8cfb87b()\n        }\n        function store_literal_in_memory_60e423ce90b2ef223caa101fba3f62b44e53e70d63c5cc78bfaa977d1fe57d89(memPtr)\n        {\n            mstore(add(memPtr, 0), \"exciting\")\n        }\n        function copy_literal_to_memory_60e423ce90b2ef223caa101fba3f62b44e53e70d63c5cc78bfaa977d1fe57d89() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(8)\n            store_literal_in_memory_60e423ce90b2ef223caa101fba3f62b44e53e70d63c5cc78bfaa977d1fe57d89(add(memPtr, 32))\n        }\n        function convert_stringliteral_60e4_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_60e423ce90b2ef223caa101fba3f62b44e53e70d63c5cc78bfaa977d1fe57d89()\n        }\n        function store_literal_in_memory_741b6b90a80de8a19916f28da33b3c27f83876709a762e05a0e8fcd4d83fb471(memPtr)\n        {\n            mstore(add(memPtr, 0), \"extraordinary\")\n        }\n        function copy_literal_to_memory_741b6b90a80de8a19916f28da33b3c27f83876709a762e05a0e8fcd4d83fb471() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(13)\n            store_literal_in_memory_741b6b90a80de8a19916f28da33b3c27f83876709a762e05a0e8fcd4d83fb471(add(memPtr, 32))\n        }\n        function convert_stringliteral_741b_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_741b6b90a80de8a19916f28da33b3c27f83876709a762e05a0e8fcd4d83fb471()\n        }\n        function store_literal_in_memory_cfb86409eb5056307c135768e4d03aed35b019fac66747080b855446b0cc23ba(memPtr)\n        {\n            mstore(add(memPtr, 0), \"fabulous\")\n        }\n        function copy_literal_to_memory_cfb86409eb5056307c135768e4d03aed35b019fac66747080b855446b0cc23ba() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(8)\n            store_literal_in_memory_cfb86409eb5056307c135768e4d03aed35b019fac66747080b855446b0cc23ba(add(memPtr, 32))\n        }\n        function convert_stringliteral_cfb8_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_cfb86409eb5056307c135768e4d03aed35b019fac66747080b855446b0cc23ba()\n        }\n        function store_literal_in_memory_6ca5eba18837ac3249c4d6af5b60a3d95993b2c169b323cee40b88525cb3a4f3(memPtr)\n        {\n            mstore(add(memPtr, 0), \"fantastic\")\n        }\n        function copy_literal_to_memory_6ca5eba18837ac3249c4d6af5b60a3d95993b2c169b323cee40b88525cb3a4f3() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(9)\n            store_literal_in_memory_6ca5eba18837ac3249c4d6af5b60a3d95993b2c169b323cee40b88525cb3a4f3(add(memPtr, 32))\n        }\n        function convert_stringliteral_6ca5_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_6ca5eba18837ac3249c4d6af5b60a3d95993b2c169b323cee40b88525cb3a4f3()\n        }\n        function store_literal_in_memory_359756020d82d6521114c28e3ef96ae1bc00d6f6183f1e8445dab691814d6f1e(memPtr)\n        {\n            mstore(add(memPtr, 0), \"fearless\")\n        }\n        function copy_literal_to_memory_359756020d82d6521114c28e3ef96ae1bc00d6f6183f1e8445dab691814d6f1e() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(8)\n            store_literal_in_memory_359756020d82d6521114c28e3ef96ae1bc00d6f6183f1e8445dab691814d6f1e(add(memPtr, 32))\n        }\n        function convert_stringliteral_3597_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_359756020d82d6521114c28e3ef96ae1bc00d6f6183f1e8445dab691814d6f1e()\n        }\n        function store_literal_in_memory_0f56f8148484f4b851a82f19103d8d86e0af627c6fe1ddc8ed1d5f73c6bf97d9(memPtr)\n        {\n            mstore(add(memPtr, 0), \"friendly\")\n        }\n        function copy_literal_to_memory_0f56f8148484f4b851a82f19103d8d86e0af627c6fe1ddc8ed1d5f73c6bf97d9() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(8)\n            store_literal_in_memory_0f56f8148484f4b851a82f19103d8d86e0af627c6fe1ddc8ed1d5f73c6bf97d9(add(memPtr, 32))\n        }\n        function convert_stringliteral_0f56_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_0f56f8148484f4b851a82f19103d8d86e0af627c6fe1ddc8ed1d5f73c6bf97d9()\n        }\n        function store_literal_in_memory_4fbce0d2ce0771a07dea6fae20df3b3e04115f10ae5c4f6c8735d3941568a146(memPtr)\n        { mstore(add(memPtr, 0), \"fun\") }\n        function copy_literal_to_memory_4fbce0d2ce0771a07dea6fae20df3b3e04115f10ae5c4f6c8735d3941568a146() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(3)\n            store_literal_in_memory_4fbce0d2ce0771a07dea6fae20df3b3e04115f10ae5c4f6c8735d3941568a146(add(memPtr, 32))\n        }\n        function convert_stringliteral_4fbc_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_4fbce0d2ce0771a07dea6fae20df3b3e04115f10ae5c4f6c8735d3941568a146()\n        }\n        function store_literal_in_memory_54ef6a7164821545c481efa280eb15da756f348426bba625692a485daae58a48(memPtr)\n        {\n            mstore(add(memPtr, 0), \"funny\")\n        }\n        function copy_literal_to_memory_54ef6a7164821545c481efa280eb15da756f348426bba625692a485daae58a48() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(5)\n            store_literal_in_memory_54ef6a7164821545c481efa280eb15da756f348426bba625692a485daae58a48(add(memPtr, 32))\n        }\n        function convert_stringliteral_54ef_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_54ef6a7164821545c481efa280eb15da756f348426bba625692a485daae58a48()\n        }\n        function store_literal_in_memory_229411fc5dd07eb6f9dcbd12ff2f9c026c544f8179401f6e1b22ba7522b17d87(memPtr)\n        {\n            mstore(add(memPtr, 0), \"generous\")\n        }\n        function copy_literal_to_memory_229411fc5dd07eb6f9dcbd12ff2f9c026c544f8179401f6e1b22ba7522b17d87() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(8)\n            store_literal_in_memory_229411fc5dd07eb6f9dcbd12ff2f9c026c544f8179401f6e1b22ba7522b17d87(add(memPtr, 32))\n        }\n        function convert_stringliteral_2294_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_229411fc5dd07eb6f9dcbd12ff2f9c026c544f8179401f6e1b22ba7522b17d87()\n        }\n        function store_literal_in_memory_fb3b406c243f6006ec8c5237fc9da52e17e9cd109f1bc906c90d3391b78d6793(memPtr)\n        {\n            mstore(add(memPtr, 0), \"gentle\")\n        }\n        function copy_literal_to_memory_fb3b406c243f6006ec8c5237fc9da52e17e9cd109f1bc906c90d3391b78d6793() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(6)\n            store_literal_in_memory_fb3b406c243f6006ec8c5237fc9da52e17e9cd109f1bc906c90d3391b78d6793(add(memPtr, 32))\n        }\n        function convert_stringliteral_fb3b_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_fb3b406c243f6006ec8c5237fc9da52e17e9cd109f1bc906c90d3391b78d6793()\n        }\n        function store_literal_in_memory_dfe600352e0793e9e57aa032c4df6f3b4835fd9c16b11a63d687bec5e95d8c9e(memPtr)\n        {\n            mstore(add(memPtr, 0), \"glorious\")\n        }\n        function copy_literal_to_memory_dfe600352e0793e9e57aa032c4df6f3b4835fd9c16b11a63d687bec5e95d8c9e() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(8)\n            store_literal_in_memory_dfe600352e0793e9e57aa032c4df6f3b4835fd9c16b11a63d687bec5e95d8c9e(add(memPtr, 32))\n        }\n        function convert_stringliteral_dfe6_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_dfe600352e0793e9e57aa032c4df6f3b4835fd9c16b11a63d687bec5e95d8c9e()\n        }\n        function store_literal_in_memory_36a6e212ba33011567af160e4533b46661b3b9cf6ae6d98a38004bb91bf4525d(memPtr)\n        {\n            mstore(add(memPtr, 0), \"good\")\n        }\n        function copy_literal_to_memory_36a6e212ba33011567af160e4533b46661b3b9cf6ae6d98a38004bb91bf4525d() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(4)\n            store_literal_in_memory_36a6e212ba33011567af160e4533b46661b3b9cf6ae6d98a38004bb91bf4525d(add(memPtr, 32))\n        }\n        function convert_stringliteral_36a6_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_36a6e212ba33011567af160e4533b46661b3b9cf6ae6d98a38004bb91bf4525d()\n        }\n        function store_literal_in_memory_05039ae8bce6104ea07745d54158d1f4de08f0bef2923ff48869648245a4c895(memPtr)\n        {\n            mstore(add(memPtr, 0), \"gorgeous\")\n        }\n        function copy_literal_to_memory_05039ae8bce6104ea07745d54158d1f4de08f0bef2923ff48869648245a4c895() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(8)\n            store_literal_in_memory_05039ae8bce6104ea07745d54158d1f4de08f0bef2923ff48869648245a4c895(add(memPtr, 32))\n        }\n        function convert_stringliteral_0503_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_05039ae8bce6104ea07745d54158d1f4de08f0bef2923ff48869648245a4c895()\n        }\n        function store_literal_in_memory_ec6282f05924f0cd8b1907fa280d4c2f1bd95f161aff0750879038cc02e3c351(memPtr)\n        {\n            mstore(add(memPtr, 0), \"graceful\")\n        }\n        function copy_literal_to_memory_ec6282f05924f0cd8b1907fa280d4c2f1bd95f161aff0750879038cc02e3c351() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(8)\n            store_literal_in_memory_ec6282f05924f0cd8b1907fa280d4c2f1bd95f161aff0750879038cc02e3c351(add(memPtr, 32))\n        }\n        function convert_stringliteral_ec62_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_ec6282f05924f0cd8b1907fa280d4c2f1bd95f161aff0750879038cc02e3c351()\n        }\n        function store_literal_in_memory_9e0d771b061a47b78282674a30d48ff21ebee607f498cb1bf644c69f8c43cc09(memPtr)\n        {\n            mstore(add(memPtr, 0), \"great\")\n        }\n        function copy_literal_to_memory_9e0d771b061a47b78282674a30d48ff21ebee607f498cb1bf644c69f8c43cc09() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(5)\n            store_literal_in_memory_9e0d771b061a47b78282674a30d48ff21ebee607f498cb1bf644c69f8c43cc09(add(memPtr, 32))\n        }\n        function convert_stringliteral_9e0d_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_9e0d771b061a47b78282674a30d48ff21ebee607f498cb1bf644c69f8c43cc09()\n        }\n        function store_literal_in_memory_73972c90697232c4dedc5c98e01645d84378e838a42e730ab95623a361262eff(memPtr)\n        {\n            mstore(add(memPtr, 0), \"happy\")\n        }\n        function copy_literal_to_memory_73972c90697232c4dedc5c98e01645d84378e838a42e730ab95623a361262eff() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(5)\n            store_literal_in_memory_73972c90697232c4dedc5c98e01645d84378e838a42e730ab95623a361262eff(add(memPtr, 32))\n        }\n        function convert_stringliteral_7397_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_73972c90697232c4dedc5c98e01645d84378e838a42e730ab95623a361262eff()\n        }\n        function store_literal_in_memory_ebe0c4c551cbcb5e20ae7dd0780f3a8e389f469b714f3cae36da94907eada7e6(memPtr)\n        {\n            mstore(add(memPtr, 0), \"harmonious\")\n        }\n        function copy_literal_to_memory_ebe0c4c551cbcb5e20ae7dd0780f3a8e389f469b714f3cae36da94907eada7e6() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(10)\n            store_literal_in_memory_ebe0c4c551cbcb5e20ae7dd0780f3a8e389f469b714f3cae36da94907eada7e6(add(memPtr, 32))\n        }\n        function convert_stringliteral_ebe0_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_ebe0c4c551cbcb5e20ae7dd0780f3a8e389f469b714f3cae36da94907eada7e6()\n        }\n        function store_literal_in_memory_0c64da3764320ce6d9d2191635f418a025b0d4357e8329a8d9baf5bf3ff05d5b(memPtr)\n        {\n            mstore(add(memPtr, 0), \"helpful\")\n        }\n        function copy_literal_to_memory_0c64da3764320ce6d9d2191635f418a025b0d4357e8329a8d9baf5bf3ff05d5b() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(7)\n            store_literal_in_memory_0c64da3764320ce6d9d2191635f418a025b0d4357e8329a8d9baf5bf3ff05d5b(add(memPtr, 32))\n        }\n        function convert_stringliteral_0c64_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_0c64da3764320ce6d9d2191635f418a025b0d4357e8329a8d9baf5bf3ff05d5b()\n        }\n        function store_literal_in_memory_a3d2e66837c314a50a6517b97373e84cc0b80e4823fd25e48fc87dbc2448d43c(memPtr)\n        {\n            mstore(add(memPtr, 0), \"honest\")\n        }\n        function copy_literal_to_memory_a3d2e66837c314a50a6517b97373e84cc0b80e4823fd25e48fc87dbc2448d43c() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(6)\n            store_literal_in_memory_a3d2e66837c314a50a6517b97373e84cc0b80e4823fd25e48fc87dbc2448d43c(add(memPtr, 32))\n        }\n        function convert_stringliteral_a3d2_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_a3d2e66837c314a50a6517b97373e84cc0b80e4823fd25e48fc87dbc2448d43c()\n        }\n        function store_literal_in_memory_aa1458e417d5dc08695c4ddb2a89d5603a1143796d156147e11f5652f9ccc695(memPtr)\n        {\n            mstore(add(memPtr, 0), \"honorable\")\n        }\n        function copy_literal_to_memory_aa1458e417d5dc08695c4ddb2a89d5603a1143796d156147e11f5652f9ccc695() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(9)\n            store_literal_in_memory_aa1458e417d5dc08695c4ddb2a89d5603a1143796d156147e11f5652f9ccc695(add(memPtr, 32))\n        }\n        function convert_stringliteral_aa14_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_aa1458e417d5dc08695c4ddb2a89d5603a1143796d156147e11f5652f9ccc695()\n        }\n        function store_literal_in_memory_bfa1d529f50b58be841623a054c16436ab3e699549f0127cf5300b117c1ec861(memPtr)\n        {\n            mstore(add(memPtr, 0), \"humorous\")\n        }\n        function copy_literal_to_memory_bfa1d529f50b58be841623a054c16436ab3e699549f0127cf5300b117c1ec861() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(8)\n            store_literal_in_memory_bfa1d529f50b58be841623a054c16436ab3e699549f0127cf5300b117c1ec861(add(memPtr, 32))\n        }\n        function convert_stringliteral_bfa1_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_bfa1d529f50b58be841623a054c16436ab3e699549f0127cf5300b117c1ec861()\n        }\n        function store_literal_in_memory_507741418687545d6ad6f09b81bdf932ec031df53ffa602e5138c45ce413e3a0(memPtr)\n        {\n            mstore(add(memPtr, 0), \"imaginative\")\n        }\n        function copy_literal_to_memory_507741418687545d6ad6f09b81bdf932ec031df53ffa602e5138c45ce413e3a0() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(11)\n            store_literal_in_memory_507741418687545d6ad6f09b81bdf932ec031df53ffa602e5138c45ce413e3a0(add(memPtr, 32))\n        }\n        function convert_stringliteral_5077_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_507741418687545d6ad6f09b81bdf932ec031df53ffa602e5138c45ce413e3a0()\n        }\n        function store_literal_in_memory_eda3667290cd825d071e1db7ac257822b014803f79530e6121a30fd916ac6daf(memPtr)\n        {\n            mstore(add(memPtr, 0), \"impressive\")\n        }\n        function copy_literal_to_memory_eda3667290cd825d071e1db7ac257822b014803f79530e6121a30fd916ac6daf() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(10)\n            store_literal_in_memory_eda3667290cd825d071e1db7ac257822b014803f79530e6121a30fd916ac6daf(add(memPtr, 32))\n        }\n        function convert_stringliteral_eda3_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_eda3667290cd825d071e1db7ac257822b014803f79530e6121a30fd916ac6daf()\n        }\n        function store_literal_in_memory_1db8469d38c3b563715d782169131487fb0b3feeefd9e2496cb34a83c62b6875(memPtr)\n        {\n            mstore(add(memPtr, 0), \"independent\")\n        }\n        function copy_literal_to_memory_1db8469d38c3b563715d782169131487fb0b3feeefd9e2496cb34a83c62b6875() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(11)\n            store_literal_in_memory_1db8469d38c3b563715d782169131487fb0b3feeefd9e2496cb34a83c62b6875(add(memPtr, 32))\n        }\n        function convert_stringliteral_1db8_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_1db8469d38c3b563715d782169131487fb0b3feeefd9e2496cb34a83c62b6875()\n        }\n        function store_literal_in_memory_d95ad6ec74b993d119302fb06dfe942c201bf5e3794b8cc36e5b8006ff52617b(memPtr)\n        {\n            mstore(add(memPtr, 0), \"innovative\")\n        }\n        function copy_literal_to_memory_d95ad6ec74b993d119302fb06dfe942c201bf5e3794b8cc36e5b8006ff52617b() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(10)\n            store_literal_in_memory_d95ad6ec74b993d119302fb06dfe942c201bf5e3794b8cc36e5b8006ff52617b(add(memPtr, 32))\n        }\n        function convert_stringliteral_d95a_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_d95ad6ec74b993d119302fb06dfe942c201bf5e3794b8cc36e5b8006ff52617b()\n        }\n        function store_literal_in_memory_f4c0a54006aa5dbaf5702b65a1fd76dce8ae5cd53329a812f270ef4d8705ecff(memPtr)\n        {\n            mstore(add(memPtr, 0), \"intelligent\")\n        }\n        function copy_literal_to_memory_f4c0a54006aa5dbaf5702b65a1fd76dce8ae5cd53329a812f270ef4d8705ecff() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(11)\n            store_literal_in_memory_f4c0a54006aa5dbaf5702b65a1fd76dce8ae5cd53329a812f270ef4d8705ecff(add(memPtr, 32))\n        }\n        function convert_stringliteral_f4c0_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_f4c0a54006aa5dbaf5702b65a1fd76dce8ae5cd53329a812f270ef4d8705ecff()\n        }\n        function store_literal_in_memory_4920577c79c3da44c0b764bd662c118d8c08e36828035d5784a89942c45b154d(memPtr)\n        {\n            mstore(add(memPtr, 0), \"interesting\")\n        }\n        function copy_literal_to_memory_4920577c79c3da44c0b764bd662c118d8c08e36828035d5784a89942c45b154d() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(11)\n            store_literal_in_memory_4920577c79c3da44c0b764bd662c118d8c08e36828035d5784a89942c45b154d(add(memPtr, 32))\n        }\n        function convert_stringliteral_4920_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_4920577c79c3da44c0b764bd662c118d8c08e36828035d5784a89942c45b154d()\n        }\n        function store_literal_in_memory_79413bb1f6f3f22a4de6714dff289b999da9ddf3ca0d6a1024822a73b4afa806(memPtr)\n        {\n            mstore(add(memPtr, 0), \"joyful\")\n        }\n        function copy_literal_to_memory_79413bb1f6f3f22a4de6714dff289b999da9ddf3ca0d6a1024822a73b4afa806() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(6)\n            store_literal_in_memory_79413bb1f6f3f22a4de6714dff289b999da9ddf3ca0d6a1024822a73b4afa806(add(memPtr, 32))\n        }\n        function convert_stringliteral_7941_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_79413bb1f6f3f22a4de6714dff289b999da9ddf3ca0d6a1024822a73b4afa806()\n        }\n        function store_literal_in_memory_9d21e95f75d8246fa345807f5858f6826688cb57e7d2dca067d081bfb485436d(memPtr)\n        {\n            mstore(add(memPtr, 0), \"kind\")\n        }\n        function copy_literal_to_memory_9d21e95f75d8246fa345807f5858f6826688cb57e7d2dca067d081bfb485436d() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(4)\n            store_literal_in_memory_9d21e95f75d8246fa345807f5858f6826688cb57e7d2dca067d081bfb485436d(add(memPtr, 32))\n        }\n        function convert_stringliteral_9d21_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_9d21e95f75d8246fa345807f5858f6826688cb57e7d2dca067d081bfb485436d()\n        }\n        function store_literal_in_memory_c5bcb123821ba0b351288b17ebe947acc02ca98a2b92da9ba0908595cc7c53ae(memPtr)\n        {\n            mstore(add(memPtr, 0), \"knowledgeable\")\n        }\n        function copy_literal_to_memory_c5bcb123821ba0b351288b17ebe947acc02ca98a2b92da9ba0908595cc7c53ae() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(13)\n            store_literal_in_memory_c5bcb123821ba0b351288b17ebe947acc02ca98a2b92da9ba0908595cc7c53ae(add(memPtr, 32))\n        }\n        function convert_stringliteral_c5bc_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_c5bcb123821ba0b351288b17ebe947acc02ca98a2b92da9ba0908595cc7c53ae()\n        }\n        function store_literal_in_memory_bbb1765e2c0c982d797b8b8b5c229d7e001225ee01e364b4f74dd7b5cf9a0aa6(memPtr)\n        {\n            mstore(add(memPtr, 0), \"lively\")\n        }\n        function copy_literal_to_memory_bbb1765e2c0c982d797b8b8b5c229d7e001225ee01e364b4f74dd7b5cf9a0aa6() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(6)\n            store_literal_in_memory_bbb1765e2c0c982d797b8b8b5c229d7e001225ee01e364b4f74dd7b5cf9a0aa6(add(memPtr, 32))\n        }\n        function convert_stringliteral_bbb1_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_bbb1765e2c0c982d797b8b8b5c229d7e001225ee01e364b4f74dd7b5cf9a0aa6()\n        }\n        function store_literal_in_memory_c66d55636c700a95b913ec36cb07f84544ff066839f7bf739c989b21fb5fe7e8(memPtr)\n        {\n            mstore(add(memPtr, 0), \"lovely\")\n        }\n        function copy_literal_to_memory_c66d55636c700a95b913ec36cb07f84544ff066839f7bf739c989b21fb5fe7e8() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(6)\n            store_literal_in_memory_c66d55636c700a95b913ec36cb07f84544ff066839f7bf739c989b21fb5fe7e8(add(memPtr, 32))\n        }\n        function convert_stringliteral_c66d_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_c66d55636c700a95b913ec36cb07f84544ff066839f7bf739c989b21fb5fe7e8()\n        }\n        function store_literal_in_memory_beb3bb479d917d323f2cd58fa6e3cadfccbf1814af72664206c4653d80d68927(memPtr)\n        {\n            mstore(add(memPtr, 0), \"loyal\")\n        }\n        function copy_literal_to_memory_beb3bb479d917d323f2cd58fa6e3cadfccbf1814af72664206c4653d80d68927() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(5)\n            store_literal_in_memory_beb3bb479d917d323f2cd58fa6e3cadfccbf1814af72664206c4653d80d68927(add(memPtr, 32))\n        }\n        function convert_stringliteral_beb3_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_beb3bb479d917d323f2cd58fa6e3cadfccbf1814af72664206c4653d80d68927()\n        }\n        function store_literal_in_memory_cb3bb2448a55cc8bac9408a42952c598f82c312a96fd62d056539f496cc1b315(memPtr)\n        {\n            mstore(add(memPtr, 0), \"lucky\")\n        }\n        function copy_literal_to_memory_cb3bb2448a55cc8bac9408a42952c598f82c312a96fd62d056539f496cc1b315() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(5)\n            store_literal_in_memory_cb3bb2448a55cc8bac9408a42952c598f82c312a96fd62d056539f496cc1b315(add(memPtr, 32))\n        }\n        function convert_stringliteral_cb3b_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_cb3bb2448a55cc8bac9408a42952c598f82c312a96fd62d056539f496cc1b315()\n        }\n        function store_literal_in_memory_b733387926e34773ce0792b11688f4b41772e2e5c1de7c342aaa05c3c48abf76(memPtr)\n        {\n            mstore(add(memPtr, 0), \"magnificent\")\n        }\n        function copy_literal_to_memory_b733387926e34773ce0792b11688f4b41772e2e5c1de7c342aaa05c3c48abf76() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(11)\n            store_literal_in_memory_b733387926e34773ce0792b11688f4b41772e2e5c1de7c342aaa05c3c48abf76(add(memPtr, 32))\n        }\n        function convert_stringliteral_b733_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_b733387926e34773ce0792b11688f4b41772e2e5c1de7c342aaa05c3c48abf76()\n        }\n        function store_literal_in_memory_528cb3e929b0371e225dcc039025f3590cae2768c5f059242dcf2328b6197b65(memPtr)\n        {\n            mstore(add(memPtr, 0), \"marvelous\")\n        }\n        function copy_literal_to_memory_528cb3e929b0371e225dcc039025f3590cae2768c5f059242dcf2328b6197b65() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(9)\n            store_literal_in_memory_528cb3e929b0371e225dcc039025f3590cae2768c5f059242dcf2328b6197b65(add(memPtr, 32))\n        }\n        function convert_stringliteral_528c_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_528cb3e929b0371e225dcc039025f3590cae2768c5f059242dcf2328b6197b65()\n        }\n        function store_literal_in_memory_077a2c6891c562d92dcfda00b4f01a12c616d93dc198f92a6f81161f31872b76(memPtr)\n        {\n            mstore(add(memPtr, 0), \"mighty\")\n        }\n        function copy_literal_to_memory_077a2c6891c562d92dcfda00b4f01a12c616d93dc198f92a6f81161f31872b76() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(6)\n            store_literal_in_memory_077a2c6891c562d92dcfda00b4f01a12c616d93dc198f92a6f81161f31872b76(add(memPtr, 32))\n        }\n        function convert_stringliteral_077a_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_077a2c6891c562d92dcfda00b4f01a12c616d93dc198f92a6f81161f31872b76()\n        }\n        function store_literal_in_memory_0a05f5e137cf2e66d152a203c7c8d8cfb1da44a554e6dccea6dea8e58adfa3df(memPtr)\n        {\n            mstore(add(memPtr, 0), \"mysterious\")\n        }\n        function copy_literal_to_memory_0a05f5e137cf2e66d152a203c7c8d8cfb1da44a554e6dccea6dea8e58adfa3df() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(10)\n            store_literal_in_memory_0a05f5e137cf2e66d152a203c7c8d8cfb1da44a554e6dccea6dea8e58adfa3df(add(memPtr, 32))\n        }\n        function convert_stringliteral_0a05_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_0a05f5e137cf2e66d152a203c7c8d8cfb1da44a554e6dccea6dea8e58adfa3df()\n        }\n        function store_literal_in_memory_1280a9a25ec8be698522de1ed3132d0f5f6a5bcc5bbee77d6b79247ef90f6996(memPtr)\n        {\n            mstore(add(memPtr, 0), \"nice\")\n        }\n        function copy_literal_to_memory_1280a9a25ec8be698522de1ed3132d0f5f6a5bcc5bbee77d6b79247ef90f6996() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(4)\n            store_literal_in_memory_1280a9a25ec8be698522de1ed3132d0f5f6a5bcc5bbee77d6b79247ef90f6996(add(memPtr, 32))\n        }\n        function convert_stringliteral_1280_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_1280a9a25ec8be698522de1ed3132d0f5f6a5bcc5bbee77d6b79247ef90f6996()\n        }\n        function store_literal_in_memory_27bdac11d27737d363759b4a9efb3465e5cfaab97eeee8edc45ee5265240e9d0(memPtr)\n        {\n            mstore(add(memPtr, 0), \"outstanding\")\n        }\n        function copy_literal_to_memory_27bdac11d27737d363759b4a9efb3465e5cfaab97eeee8edc45ee5265240e9d0() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(11)\n            store_literal_in_memory_27bdac11d27737d363759b4a9efb3465e5cfaab97eeee8edc45ee5265240e9d0(add(memPtr, 32))\n        }\n        function convert_stringliteral_27bd_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_27bdac11d27737d363759b4a9efb3465e5cfaab97eeee8edc45ee5265240e9d0()\n        }\n        function store_literal_in_memory_6425ad54ec29be4fbcd447c1c620190499803b3d823ed94da93c689e9a317754(memPtr)\n        {\n            mstore(add(memPtr, 0), \"passionate\")\n        }\n        function copy_literal_to_memory_6425ad54ec29be4fbcd447c1c620190499803b3d823ed94da93c689e9a317754() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(10)\n            store_literal_in_memory_6425ad54ec29be4fbcd447c1c620190499803b3d823ed94da93c689e9a317754(add(memPtr, 32))\n        }\n        function convert_stringliteral_6425_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_6425ad54ec29be4fbcd447c1c620190499803b3d823ed94da93c689e9a317754()\n        }\n        function store_literal_in_memory_a56c97397ce590720eec13ecface208eb95f1821bc23d59b09e79984d47f66fd(memPtr)\n        {\n            mstore(add(memPtr, 0), \"peaceful\")\n        }\n        function copy_literal_to_memory_a56c97397ce590720eec13ecface208eb95f1821bc23d59b09e79984d47f66fd() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(8)\n            store_literal_in_memory_a56c97397ce590720eec13ecface208eb95f1821bc23d59b09e79984d47f66fd(add(memPtr, 32))\n        }\n        function convert_stringliteral_a56c_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_a56c97397ce590720eec13ecface208eb95f1821bc23d59b09e79984d47f66fd()\n        }\n        function store_literal_in_memory_0f3ab803626f3a3f20eade33123aaa20977f2e627974c577d21c04f561ec4e21(memPtr)\n        {\n            mstore(add(memPtr, 0), \"perfect\")\n        }\n        function copy_literal_to_memory_0f3ab803626f3a3f20eade33123aaa20977f2e627974c577d21c04f561ec4e21() -> memPtr\n        {\n            memPtr := allocate_memory_array_string(7)\n            store_literal_in_memory_0f3ab803626f3a3f20eade33123aaa20977f2e627974c577d21c04f561ec4e21(add(memPtr, 32))\n        }\n        function convert_stringliteral_0f3a_to_string() -> converted\n        {\n            converted := copy_literal_to_memory_0f3ab803626f3a3f20eade33123aaa20977f2e627974c577d21c04f561ec4e21()\n        }\n        function panic_error_0x00()\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x00)\n            revert(0, 0x24)\n        }\n        function array_dataslot_array_string(ptr) -> data\n        { data := ptr }\n        function array_length_array_string_storage_dyn(value) -> length\n        { length := sload(value) }\n        function cleanup_uint256(value) -> cleaned\n        { cleaned := value }\n        function array_convert_length_to_size_array_string_storage_dyn(length) -> size\n        {\n            size := length\n            size := div(add(length, sub(1, 1)), 1)\n        }\n        function array_dataslot_array_string_storage_dyn(ptr) -> data\n        {\n            data := ptr\n            mstore(0, ptr)\n            data := keccak256(0, 0x20)\n        }\n        function panic_error_0x22()\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n        function extract_byte_array_length(data) -> length\n        {\n            length := div(data, 2)\n            let outOfPlaceEncoding := and(data, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32)) { panic_error_0x22() }\n        }\n        function array_dataslot_string_storage(ptr) -> data\n        {\n            data := ptr\n            mstore(0, ptr)\n            data := keccak256(0, 0x20)\n        }\n        function shift_right_unsigned_dynamic(bits, value) -> newValue\n        { newValue := shr(bits, value) }\n        function partial_clear_storage_slot(slot, offset)\n        {\n            let mask := shift_right_unsigned_dynamic(mul(8, sub(32, offset)), not(0))\n            sstore(slot, and(mask, sload(slot)))\n        }\n        function shift_left_dynamic(bits, value) -> newValue\n        { newValue := shl(bits, value) }\n        function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result\n        {\n            let shiftBits := mul(shiftBytes, 8)\n            let mask := shift_left_dynamic(shiftBits, not(0))\n            toInsert := shift_left_dynamic(shiftBits, toInsert)\n            value := and(value, not(mask))\n            result := or(value, and(toInsert, mask))\n        }\n        function identity(value) -> ret\n        { ret := value }\n        function convert_uint256_to_uint256(value) -> converted\n        {\n            converted := cleanup_uint256(identity(cleanup_uint256(value)))\n        }\n        function prepare_store_uint256(value) -> ret\n        { ret := value }\n        function update_storage_value_uint256_to_uint256(slot, offset, value)\n        {\n            let convertedValue := convert_uint256_to_uint256(value)\n            sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_uint256(convertedValue)))\n        }\n        function zero_value_for_split_uint256() -> ret\n        { ret := 0 }\n        function storage_set_to_zero_uint256(slot, offset)\n        {\n            let zero := zero_value_for_split_uint256()\n            update_storage_value_uint256_to_uint256(slot, offset, zero)\n        }\n        function clear_storage_range_bytes1(start, end)\n        {\n            for { } lt(start, end) { start := add(start, 1) }\n            {\n                storage_set_to_zero_uint256(start, 0)\n            }\n        }\n        function mask_bytes_dynamic(data, bytes) -> result\n        {\n            let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n            result := and(data, mask)\n        }\n        function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n        {\n            data := mask_bytes_dynamic(data, len)\n            used := or(data, mul(2, len))\n        }\n        function transit_byte_array_long_to_short_string_storage(array, len)\n        {\n            let dataPos := array_dataslot_string_storage(array)\n            let data := extract_used_part_and_set_length_of_short_byte_array(sload(dataPos), len)\n            sstore(array, data)\n            sstore(dataPos, 0)\n        }\n        function divide_by_ceil(value) -> result\n        {\n            result := div(add(value, 31), 32)\n        }\n        function byte_array_decrease_size_string_storage(array, data, oldLen, newLen)\n        {\n            switch lt(newLen, 32)\n            case 0 {\n                let arrayDataStart := array_dataslot_string_storage(array)\n                let deleteStart := add(arrayDataStart, divide_by_ceil(newLen))\n                let offset := and(newLen, 0x1f)\n                if offset\n                {\n                    partial_clear_storage_slot(sub(deleteStart, 1), offset)\n                }\n                clear_storage_range_bytes1(deleteStart, add(arrayDataStart, divide_by_ceil(oldLen)))\n                sstore(array, or(mul(2, newLen), 1))\n            }\n            default {\n                switch gt(oldLen, 31)\n                case 1 {\n                    let arrayDataStart_1 := array_dataslot_string_storage(array)\n                    clear_storage_range_bytes1(add(arrayDataStart_1, 1), add(arrayDataStart_1, divide_by_ceil(oldLen)))\n                    transit_byte_array_long_to_short_string_storage(array, newLen)\n                }\n                default {\n                    sstore(array, extract_used_part_and_set_length_of_short_byte_array(data, newLen))\n                }\n            }\n        }\n        function byte_array_increase_size_string_storage(array, data, oldLen, newLen)\n        {\n            if gt(newLen, 18446744073709551616) { panic_error_0x41() }\n            switch lt(oldLen, 32)\n            case 0 {\n                sstore(array, add(mul(2, newLen), 1))\n            }\n            default {\n                switch lt(newLen, 32)\n                case 0 {\n                    data := and(not(0xff), data)\n                    sstore(array_dataslot_string_storage(array), data)\n                    sstore(array, add(mul(2, newLen), 1))\n                }\n                default {\n                    sstore(array, extract_used_part_and_set_length_of_short_byte_array(data, newLen))\n                }\n            }\n        }\n        function resize_array_string_storage(array, newLen)\n        {\n            let data := sload(array)\n            let oldLen := extract_byte_array_length(data)\n            if gt(newLen, oldLen)\n            {\n                byte_array_increase_size_string_storage(array, data, oldLen, newLen)\n            }\n            if lt(newLen, oldLen)\n            {\n                byte_array_decrease_size_string_storage(array, data, oldLen, newLen)\n            }\n        }\n        function clear_storage_array_string(slot)\n        {\n            resize_array_string_storage(slot, 0)\n        }\n        function storage_set_to_zero_string(slot, offset)\n        {\n            if iszero(eq(offset, 0)) { panic_error_0x00() }\n            clear_storage_array_string(slot)\n        }\n        function clear_storage_range_string(start, end)\n        {\n            for { } lt(start, end) { start := add(start, 1) }\n            {\n                storage_set_to_zero_string(start, 0)\n            }\n        }\n        function cleanup_storage_array_end_array_string__dyn(array, len, startIndex)\n        {\n            if lt(startIndex, len)\n            {\n                let oldSlotCount := array_convert_length_to_size_array_string_storage_dyn(len)\n                let newSlotCount := array_convert_length_to_size_array_string_storage_dyn(startIndex)\n                let arrayDataStart := array_dataslot_array_string_storage_dyn(array)\n                let deleteStart := add(arrayDataStart, newSlotCount)\n                let deleteEnd := add(arrayDataStart, oldSlotCount)\n                clear_storage_range_string(deleteStart, deleteEnd)\n            }\n        }\n        function resize_array_array_string_storage_dyn(array, newLen)\n        {\n            if gt(newLen, 18446744073709551616) { panic_error_0x41() }\n            let oldLen := array_length_array_string_storage_dyn(array)\n            sstore(array, newLen)\n            cleanup_storage_array_end_array_string__dyn(array, oldLen, newLen)\n        }\n        function array_length_array_string(value) -> length\n        { length := 0x4b }\n        function read_from_memoryt_string(memPtr) -> value\n        { value := mload(memPtr) }\n        function array_length_string(value) -> length\n        { length := mload(value) }\n        function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                let dataArea := array_dataslot_string_storage(array)\n                let deleteStart := add(dataArea, divide_by_ceil(startIndex))\n                if lt(startIndex, 32) { deleteStart := dataArea }\n                clear_storage_range_bytes1(deleteStart, add(dataArea, divide_by_ceil(len)))\n            }\n        }\n        function copy_byte_array_to_storage_from_string_to_string(slot, src)\n        {\n            let newLen := array_length_string(src)\n            if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            let oldLen := extract_byte_array_length(sload(slot))\n            clean_up_bytearray_end_slots_string_storage(slot, oldLen, newLen)\n            let srcOffset := 0\n            srcOffset := 0x20\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(0x1f))\n                let dstPtr := array_dataslot_string_storage(slot)\n                let i := 0\n                for { } lt(i, loopEnd) { i := add(i, 0x20) }\n                {\n                    sstore(dstPtr, mload(add(src, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, 32)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(src, srcOffset))\n                    sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n                }\n                sstore(slot, add(mul(newLen, 2), 1))\n            }\n            default {\n                let value := 0\n                if newLen\n                {\n                    value := mload(add(src, srcOffset))\n                }\n                sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n        }\n        function update_storage_value_offset_string_to_string(slot, value)\n        {\n            copy_byte_array_to_storage_from_string_to_string(slot, value)\n        }\n        function copy_array_to_storage_from_array_string_to_array_string__dyn(slot, value)\n        {\n            let length := array_length_array_string(value)\n            resize_array_array_string_storage_dyn(slot, length)\n            let srcPtr := array_dataslot_array_string(value)\n            let elementSlot := array_dataslot_array_string_storage_dyn(slot)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 1) }\n            {\n                let stackItem := read_from_memoryt_string(srcPtr)\n                update_storage_value_offset_string_to_string(elementSlot, stackItem)\n                srcPtr := add(srcPtr, 32)\n                elementSlot := add(elementSlot, 1)\n            }\n        }\n        function update_storage_value_offset_array_string_to_array_string__dyn(slot, value)\n        {\n            copy_array_to_storage_from_array_string_to_array_string__dyn(slot, value)\n        }\n        /// @ast-id 90 @src 0:308:1495  \"constructor() {...\"\n        function constructor_MagicWord()\n        {\n            /// @src 0:392:1488  \"[...\"\n            let expr_mpos := allocate_memory_array_array_string(75)\n            let _2_mpos := convert_stringliteral_f853_to_string()\n            write_to_memory_string(add(expr_mpos, 0), _2_mpos)\n            let _3_mpos := convert_stringliteral_d17d_to_string()\n            write_to_memory_string(add(expr_mpos, 32), _3_mpos)\n            let _4_mpos := convert_stringliteral_a3fd_to_string()\n            write_to_memory_string(add(expr_mpos, 64), _4_mpos)\n            let _5_mpos := convert_stringliteral_8ba2_to_string()\n            write_to_memory_string(add(expr_mpos, 96), _5_mpos)\n            let _6_mpos := convert_stringliteral_e3e9_to_string()\n            write_to_memory_string(add(expr_mpos, 128), _6_mpos)\n            let _mpos := convert_stringliteral_1dda_to_string()\n            write_to_memory_string(add(expr_mpos, 160), _mpos)\n            let _8_mpos := convert_stringliteral_b8ca_to_string()\n            write_to_memory_string(add(expr_mpos, 192), _8_mpos)\n            let _9_mpos := convert_stringliteral_d97f_to_string()\n            write_to_memory_string(add(expr_mpos, 224), _9_mpos)\n            let _10_mpos := convert_stringliteral_4fbd_to_string()\n            write_to_memory_string(add(expr_mpos, 256), _10_mpos)\n            let _11_mpos := convert_stringliteral_90ef_to_string()\n            write_to_memory_string(add(expr_mpos, 288), _11_mpos)\n            let _12_mpos := convert_stringliteral_2ea4_to_string()\n            write_to_memory_string(add(expr_mpos, 320), _12_mpos)\n            let _13_mpos := convert_stringliteral_ca18_to_string()\n            write_to_memory_string(add(expr_mpos, 352), _13_mpos)\n            let _14_mpos := convert_stringliteral_49cd_to_string()\n            write_to_memory_string(add(expr_mpos, 384), _14_mpos)\n            let _15_mpos := convert_stringliteral_89ed_to_string()\n            write_to_memory_string(add(expr_mpos, 416), _15_mpos)\n            let _16_mpos := convert_stringliteral_8d26_to_string()\n            write_to_memory_string(add(expr_mpos, 448), _16_mpos)\n            let _17_mpos := convert_stringliteral_678c_to_string()\n            write_to_memory_string(add(expr_mpos, 480), _17_mpos)\n            let _18_mpos := convert_stringliteral_67f9_to_string()\n            write_to_memory_string(add(expr_mpos, 512), _18_mpos)\n            let _19_mpos := convert_stringliteral_d08a_to_string()\n            write_to_memory_string(add(expr_mpos, 544), _19_mpos)\n            let _20_mpos := convert_stringliteral_e9c4_to_string()\n            write_to_memory_string(add(expr_mpos, 576), _20_mpos)\n            let _21_mpos := convert_stringliteral_4825_to_string()\n            write_to_memory_string(add(expr_mpos, 608), _21_mpos)\n            let _22_mpos := convert_stringliteral_45f5_to_string()\n            write_to_memory_string(add(expr_mpos, 640), _22_mpos)\n            let _23_mpos := convert_stringliteral_e5bd_to_string()\n            write_to_memory_string(add(expr_mpos, 672), _23_mpos)\n            let _24_mpos := convert_stringliteral_1758_to_string()\n            write_to_memory_string(add(expr_mpos, 704), _24_mpos)\n            let _25_mpos := convert_stringliteral_604e_to_string()\n            write_to_memory_string(add(expr_mpos, 736), _25_mpos)\n            let _26_mpos := convert_stringliteral_47a6_to_string()\n            write_to_memory_string(add(expr_mpos, 768), _26_mpos)\n            let _27_mpos := convert_stringliteral_5d74_to_string()\n            write_to_memory_string(add(expr_mpos, 800), _27_mpos)\n            let _28_mpos := convert_stringliteral_to_string()\n            write_to_memory_string(add(expr_mpos, 832), _28_mpos)\n            let _29_mpos := convert_stringliteral_b26e_to_string()\n            write_to_memory_string(add(expr_mpos, 864), _29_mpos)\n            let _30_mpos := convert_stringliteral_3407_to_string()\n            write_to_memory_string(add(expr_mpos, 896), _30_mpos)\n            let _31_mpos := convert_stringliteral_4438_to_string()\n            write_to_memory_string(add(expr_mpos, 928), _31_mpos)\n            let _32_mpos := convert_stringliteral_3a50_to_string()\n            write_to_memory_string(add(expr_mpos, 960), _32_mpos)\n            let _33_mpos := convert_stringliteral_fb02_to_string()\n            write_to_memory_string(add(expr_mpos, 992), _33_mpos)\n            let _34_mpos := convert_stringliteral_60e4_to_string()\n            write_to_memory_string(add(expr_mpos, 1024), _34_mpos)\n            let _35_mpos := convert_stringliteral_741b_to_string()\n            write_to_memory_string(add(expr_mpos, 1056), _35_mpos)\n            let _36_mpos := convert_stringliteral_cfb8_to_string()\n            write_to_memory_string(add(expr_mpos, 1088), _36_mpos)\n            let _37_mpos := convert_stringliteral_6ca5_to_string()\n            write_to_memory_string(add(expr_mpos, 1120), _37_mpos)\n            let _38_mpos := convert_stringliteral_3597_to_string()\n            write_to_memory_string(add(expr_mpos, 1152), _38_mpos)\n            let _39_mpos := convert_stringliteral_0f56_to_string()\n            write_to_memory_string(add(expr_mpos, 1184), _39_mpos)\n            let _40_mpos := convert_stringliteral_4fbc_to_string()\n            write_to_memory_string(add(expr_mpos, 1216), _40_mpos)\n            let _41_mpos := convert_stringliteral_54ef_to_string()\n            write_to_memory_string(add(expr_mpos, 1248), _41_mpos)\n            let _42_mpos := convert_stringliteral_2294_to_string()\n            write_to_memory_string(add(expr_mpos, 1280), _42_mpos)\n            let _43_mpos := convert_stringliteral_fb3b_to_string()\n            write_to_memory_string(add(expr_mpos, 1312), _43_mpos)\n            let _44_mpos := convert_stringliteral_dfe6_to_string()\n            write_to_memory_string(add(expr_mpos, 1344), _44_mpos)\n            let _45_mpos := convert_stringliteral_36a6_to_string()\n            write_to_memory_string(add(expr_mpos, 1376), _45_mpos)\n            let _46_mpos := convert_stringliteral_0503_to_string()\n            write_to_memory_string(add(expr_mpos, 1408), _46_mpos)\n            let _47_mpos := convert_stringliteral_ec62_to_string()\n            write_to_memory_string(add(expr_mpos, 1440), _47_mpos)\n            let _48_mpos := convert_stringliteral_9e0d_to_string()\n            write_to_memory_string(add(expr_mpos, 1472), _48_mpos)\n            let _49_mpos := convert_stringliteral_7397_to_string()\n            write_to_memory_string(add(expr_mpos, 1504), _49_mpos)\n            let _50_mpos := convert_stringliteral_ebe0_to_string()\n            write_to_memory_string(add(expr_mpos, 1536), _50_mpos)\n            let _51_mpos := convert_stringliteral_0c64_to_string()\n            write_to_memory_string(add(expr_mpos, 1568), _51_mpos)\n            let _52_mpos := convert_stringliteral_a3d2_to_string()\n            write_to_memory_string(add(expr_mpos, 1600), _52_mpos)\n            let _53_mpos := convert_stringliteral_aa14_to_string()\n            write_to_memory_string(add(expr_mpos, 1632), _53_mpos)\n            let _54_mpos := convert_stringliteral_bfa1_to_string()\n            write_to_memory_string(add(expr_mpos, 1664), _54_mpos)\n            let _55_mpos := convert_stringliteral_5077_to_string()\n            write_to_memory_string(add(expr_mpos, 1696), _55_mpos)\n            let _56_mpos := convert_stringliteral_eda3_to_string()\n            write_to_memory_string(add(expr_mpos, 1728), _56_mpos)\n            let _57_mpos := convert_stringliteral_1db8_to_string()\n            write_to_memory_string(add(expr_mpos, 1760), _57_mpos)\n            let _58_mpos := convert_stringliteral_d95a_to_string()\n            write_to_memory_string(add(expr_mpos, 1792), _58_mpos)\n            let _59_mpos := convert_stringliteral_f4c0_to_string()\n            write_to_memory_string(add(expr_mpos, 1824), _59_mpos)\n            let _60_mpos := convert_stringliteral_4920_to_string()\n            write_to_memory_string(add(expr_mpos, 1856), _60_mpos)\n            let _61_mpos := convert_stringliteral_7941_to_string()\n            write_to_memory_string(add(expr_mpos, 1888), _61_mpos)\n            let _62_mpos := convert_stringliteral_9d21_to_string()\n            write_to_memory_string(add(expr_mpos, 1920), _62_mpos)\n            let _63_mpos := convert_stringliteral_c5bc_to_string()\n            write_to_memory_string(add(expr_mpos, 1952), _63_mpos)\n            let _64_mpos := convert_stringliteral_bbb1_to_string()\n            write_to_memory_string(add(expr_mpos, 1984), _64_mpos)\n            let _65_mpos := convert_stringliteral_c66d_to_string()\n            write_to_memory_string(add(expr_mpos, 2016), _65_mpos)\n            let _66_mpos := convert_stringliteral_beb3_to_string()\n            write_to_memory_string(add(expr_mpos, 2048), _66_mpos)\n            let _67_mpos := convert_stringliteral_cb3b_to_string()\n            write_to_memory_string(add(expr_mpos, 2080), _67_mpos)\n            let _68_mpos := convert_stringliteral_b733_to_string()\n            write_to_memory_string(add(expr_mpos, 2112), _68_mpos)\n            let _69_mpos := convert_stringliteral_528c_to_string()\n            write_to_memory_string(add(expr_mpos, 2144), _69_mpos)\n            let _70_mpos := convert_stringliteral_077a_to_string()\n            write_to_memory_string(add(expr_mpos, 2176), _70_mpos)\n            let _71_mpos := convert_stringliteral_0a05_to_string()\n            write_to_memory_string(add(expr_mpos, 2208), _71_mpos)\n            let _72_mpos := convert_stringliteral_1280_to_string()\n            write_to_memory_string(add(expr_mpos, 2240), _72_mpos)\n            let _73_mpos := convert_stringliteral_27bd_to_string()\n            write_to_memory_string(add(expr_mpos, 2272), _73_mpos)\n            let _74_mpos := convert_stringliteral_6425_to_string()\n            write_to_memory_string(add(expr_mpos, 2304), _74_mpos)\n            let _75_mpos := convert_stringliteral_a56c_to_string()\n            write_to_memory_string(add(expr_mpos, 2336), _75_mpos)\n            let _76_mpos := convert_stringliteral_0f3a_to_string()\n            write_to_memory_string(add(expr_mpos, 2368), _76_mpos)\n            /// @src 0:379:1488  \"adjectives = [...\"\n            update_storage_value_offset_array_string_to_array_string__dyn(0x01, expr_mpos)\n        }\n    }\n    /// @use-src 0:\"contracts/MagicWord.sol\"\n    object \"MagicWord_157_deployed\" {\n        code {\n            {\n                /// @src 0:214:2067  \"contract MagicWord {...\"\n                mstore(64, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let selector := shift_right_unsigned(calldataload(0))\n                    switch selector\n                    case 0x68a0c969 {\n                        external_fun_getCurrentMagicWord()\n                    }\n                    case 0x84ac83cc { external_fun_makeMagicBaby() }\n                    case 0xbf462267 { external_fun_inputMagicWord() }\n                    default { }\n                }\n                revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74()\n            }\n            function shift_right_unsigned(value) -> newValue\n            { newValue := shr(224, value) }\n            function allocate_unbounded() -> memPtr\n            { memPtr := mload(64) }\n            function revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n            { revert(0, 0) }\n            function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n            { revert(0, 0) }\n            function abi_decode(headStart, dataEnd)\n            {\n                if slt(sub(dataEnd, headStart), 0)\n                {\n                    revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n                }\n            }\n            function array_length_string(value) -> length\n            { length := mload(value) }\n            function array_storeLengthForEncoding_string_fromStack(pos, length) -> updated_pos\n            {\n                mstore(pos, length)\n                updated_pos := add(pos, 0x20)\n            }\n            function copy_memory_to_memory_with_cleanup(src, dst, length)\n            {\n                mcopy(dst, src, length)\n                mstore(add(dst, length), 0)\n            }\n            function round_up_to_mul_of(value) -> result\n            {\n                result := and(add(value, 31), not(31))\n            }\n            function abi_encode_string_memory_ptr(value, pos) -> end\n            {\n                let length := array_length_string(value)\n                pos := array_storeLengthForEncoding_string_fromStack(pos, length)\n                copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n                end := add(pos, round_up_to_mul_of(length))\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(add(headStart, 0), sub(tail, headStart))\n                tail := abi_encode_string_memory_ptr(value0, tail)\n            }\n            function external_fun_getCurrentMagicWord()\n            {\n                if callvalue()\n                {\n                    revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n                }\n                abi_decode(4, calldatasize())\n                let ret := fun_getCurrentMagicWord()\n                let memPos := allocate_unbounded()\n                let memEnd := abi_encode_string(memPos, ret)\n                return(memPos, sub(memEnd, memPos))\n            }\n            function external_fun_makeMagicBaby()\n            {\n                if callvalue()\n                {\n                    revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n                }\n                abi_decode(4, calldatasize())\n                let ret := fun_makeMagicBaby()\n                let memPos := allocate_unbounded()\n                let memEnd := abi_encode_string(memPos, ret)\n                return(memPos, sub(memEnd, memPos))\n            }\n            function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db()\n            { revert(0, 0) }\n            function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d()\n            { revert(0, 0) }\n            function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae()\n            { revert(0, 0) }\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, round_up_to_mul_of(size))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function allocate_memory(size) -> memPtr\n            {\n                memPtr := allocate_unbounded()\n                finalize_allocation(memPtr, size)\n            }\n            function array_allocation_size_string(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                size := round_up_to_mul_of(length)\n                size := add(size, 0x20)\n            }\n            function copy_calldata_to_memory_with_cleanup(src, dst, length)\n            {\n                calldatacopy(dst, src, length)\n                mstore(add(dst, length), 0)\n            }\n            function abi_decode_available_length_string(src, length, end) -> array\n            {\n                array := allocate_memory(array_allocation_size_string(length))\n                mstore(array, length)\n                let dst := add(array, 0x20)\n                if gt(add(src, length), end)\n                {\n                    revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae()\n                }\n                copy_calldata_to_memory_with_cleanup(src, dst, length)\n            }\n            function abi_decode_string_memory_ptr(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end))\n                {\n                    revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d()\n                }\n                let length := calldataload(offset)\n                array := abi_decode_available_length_string(add(offset, 0x20), length, end)\n            }\n            function abi_decode_string(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32)\n                {\n                    revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b()\n                }\n                let offset := calldataload(add(headStart, 0))\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db()\n                }\n                value0 := abi_decode_string_memory_ptr(add(headStart, offset), dataEnd)\n            }\n            function abi_encode_tuple(headStart) -> tail\n            { tail := add(headStart, 0) }\n            function external_fun_inputMagicWord()\n            {\n                if callvalue()\n                {\n                    revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb()\n                }\n                let param := abi_decode_string(4, calldatasize())\n                fun_inputMagicWord(param)\n                let memPos := allocate_unbounded()\n                let memEnd := abi_encode_tuple(memPos)\n                return(memPos, sub(memEnd, memPos))\n            }\n            function revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74()\n            { revert(0, 0) }\n            function zero_value_for_split_string() -> ret\n            { ret := 96 }\n            function panic_error_0x22()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(0, 0x24)\n            }\n            function extract_byte_array_length(data) -> length\n            {\n                length := div(data, 2)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32)) { panic_error_0x22() }\n            }\n            function array_storeLengthForEncoding_string(pos, length) -> updated_pos\n            {\n                mstore(pos, length)\n                updated_pos := add(pos, 0x20)\n            }\n            function array_dataslot_string_storage(ptr) -> data\n            {\n                data := ptr\n                mstore(0, ptr)\n                data := keccak256(0, 0x20)\n            }\n            function abi_encode_string_storage(value, pos) -> ret\n            {\n                let slotValue := sload(value)\n                let length := extract_byte_array_length(slotValue)\n                pos := array_storeLengthForEncoding_string(pos, length)\n                switch and(slotValue, 1)\n                case 0 {\n                    mstore(pos, and(slotValue, not(0xff)))\n                    ret := add(pos, mul(0x20, iszero(iszero(length))))\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage(value)\n                    let i := 0\n                    for { } lt(i, length) { i := add(i, 0x20) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, 1)\n                    }\n                    ret := add(pos, i)\n                }\n            }\n            function abi_encodeUpdatedPos_string_storage(value0, pos) -> updatedPos\n            {\n                updatedPos := abi_encode_string_storage(value0, pos)\n            }\n            function copy_array_from_storage_to_memory_string(slot) -> memPtr\n            {\n                memPtr := allocate_unbounded()\n                let end := abi_encodeUpdatedPos_string_storage(slot, memPtr)\n                finalize_allocation(memPtr, sub(end, memPtr))\n            }\n            function convert_array_string_storage_to_string(value) -> converted\n            {\n                converted := copy_array_from_storage_to_memory_string(value)\n            }\n            /// @ast-id 156 @src 0:1965:2065  \"function getCurrentMagicWord() public view returns (string memory) {...\"\n            function fun_getCurrentMagicWord() -> var_mpos\n            {\n                /// @src 0:2017:2030  \"string memory\"\n                let zero_string_mpos := zero_value_for_split_string()\n                var_mpos := zero_string_mpos\n                /// @src 0:2049:2058  \"magicWord\"\n                let _2_slot := 0x00\n                let expr_slot := _2_slot\n                /// @src 0:2042:2058  \"return magicWord\"\n                var_mpos := convert_array_string_storage_to_string(expr_slot)\n                leave\n            }\n            /// @src 0:214:2067  \"contract MagicWord {...\"\n            function convert_array_string_storage_to_bytes_ptr(value) -> converted\n            { converted := value }\n            function array_length_bytes_storage_ptr(value) -> length\n            {\n                length := sload(value)\n                length := extract_byte_array_length(length)\n            }\n            function cleanup_uint256(value) -> cleaned\n            { cleaned := value }\n            function cleanup_rational_by(value) -> cleaned\n            { cleaned := value }\n            function identity(value) -> ret\n            { ret := value }\n            function convert_rational_by_to_uint256(value) -> converted\n            {\n                converted := cleanup_uint256(identity(cleanup_rational_by(value)))\n            }\n            function store_literal_in_memory_89230867f4b3b162518336e1784c21848da09a0d13eff480a998ac92f7e2abde(memPtr)\n            {\n                mstore(add(memPtr, 0), \"No magic word has been stored ye\")\n                mstore(add(memPtr, 32), \"t\")\n            }\n            function abi_encode_stringliteral_8923(pos) -> end\n            {\n                pos := array_storeLengthForEncoding_string_fromStack(pos, 33)\n                store_literal_in_memory_89230867f4b3b162518336e1784c21848da09a0d13eff480a998ac92f7e2abde(pos)\n                end := add(pos, 64)\n            }\n            function abi_encode_stringliteral(headStart) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(add(headStart, 0), sub(tail, headStart))\n                tail := abi_encode_stringliteral_8923(tail)\n            }\n            function require_helper_stringliteral(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := allocate_unbounded()\n                    mstore(memPtr, shl(229, 4594637))\n                    let end := abi_encode_stringliteral(add(memPtr, 4))\n                    revert(memPtr, sub(end, memPtr))\n                }\n            }\n            function leftAlign_uint256(value) -> aligned\n            { aligned := value }\n            function abi_encode_uint256(value, pos)\n            {\n                mstore(pos, leftAlign_uint256(cleanup_uint256(value)))\n            }\n            function abi_encode_packed_uint256_uint256(pos, value0, value1) -> end\n            {\n                abi_encode_uint256(value0, pos)\n                pos := add(pos, 32)\n                abi_encode_uint256(value1, pos)\n                pos := add(pos, 32)\n                end := pos\n            }\n            function array_dataslot_bytes(ptr) -> data\n            {\n                data := ptr\n                data := add(ptr, 0x20)\n            }\n            function array_length_bytes(value) -> length\n            { length := mload(value) }\n            function shift_right_0_unsigned(value) -> newValue\n            { newValue := shr(0, value) }\n            function convert_uint256_to_uint256(value) -> converted\n            {\n                converted := cleanup_uint256(identity(cleanup_uint256(value)))\n            }\n            function convert_bytes32_to_uint256(value) -> converted\n            {\n                converted := convert_uint256_to_uint256(shift_right_0_unsigned(value))\n            }\n            function array_length_array_string_storage_dyn(value) -> length\n            { length := sload(value) }\n            function panic_error_0x12()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x12)\n                revert(0, 0x24)\n            }\n            function mod_uint256(x, y) -> r\n            {\n                x := cleanup_uint256(x)\n                y := cleanup_uint256(y)\n                if iszero(y) { panic_error_0x12() }\n                r := mod(x, y)\n            }\n            function panic_error_0x32()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x32)\n                revert(0, 0x24)\n            }\n            function array_dataslot_array_string_storage_dyn(ptr) -> data\n            {\n                data := ptr\n                mstore(0, ptr)\n                data := keccak256(0, 0x20)\n            }\n            function storage_array_index_access_string__dyn(array, index) -> slot, offset\n            {\n                let arrayLength := array_length_array_string_storage_dyn(array)\n                if iszero(lt(index, arrayLength)) { panic_error_0x32() }\n                let dataArea := array_dataslot_array_string_storage_dyn(array)\n                slot := add(dataArea, mul(index, 1))\n                offset := 0\n            }\n            function array_storeLengthForEncoding_string_nonPadded_inplace(pos, length) -> updated_pos\n            { updated_pos := pos }\n            function abi_encode_string_storage_to_string_nonPadded_inplace(value, pos) -> ret\n            {\n                let slotValue := sload(value)\n                let length := extract_byte_array_length(slotValue)\n                pos := array_storeLengthForEncoding_string_nonPadded_inplace(pos, length)\n                switch and(slotValue, 1)\n                case 0 {\n                    mstore(pos, and(slotValue, not(0xff)))\n                    ret := add(pos, mul(length, iszero(iszero(length))))\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage(value)\n                    let i := 0\n                    for { } lt(i, length) { i := add(i, 0x20) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, 1)\n                    }\n                    ret := add(pos, length)\n                }\n            }\n            function store_literal_in_memory_d639b3d9a5b324c23c8db5eab991fa931cd6d5bfb6cd156a388f5ec87ff08094(memPtr)\n            {\n                mstore(add(memPtr, 0), \" is \")\n            }\n            function abi_encode_stringliteral_d639(pos) -> end\n            {\n                pos := array_storeLengthForEncoding_string_nonPadded_inplace(pos, 4)\n                store_literal_in_memory_d639b3d9a5b324c23c8db5eab991fa931cd6d5bfb6cd156a388f5ec87ff08094(pos)\n                end := add(pos, 4)\n            }\n            function store_literal_in_memory_3275a893b2c93461554cf2a4dd7f413d56decdd6f3fdf0589dbb8bc4fd742386(memPtr)\n            { mstore(add(memPtr, 0), \"!\") }\n            function abi_encode_stringliteral_3275(pos) -> end\n            {\n                pos := array_storeLengthForEncoding_string_nonPadded_inplace(pos, 1)\n                store_literal_in_memory_3275a893b2c93461554cf2a4dd7f413d56decdd6f3fdf0589dbb8bc4fd742386(pos)\n                end := add(pos, 1)\n            }\n            function abi_encode_packed_string_storage_stringliteral_d639_string_stringliteral(pos, value0, value1) -> end\n            {\n                pos := abi_encode_string_storage_to_string_nonPadded_inplace(value0, pos)\n                pos := abi_encode_stringliteral_d639(pos)\n                pos := abi_encode_string_storage_to_string_nonPadded_inplace(value1, pos)\n                pos := abi_encode_stringliteral_3275(pos)\n                end := pos\n            }\n            function convert_array_bytes_to_string(value) -> converted\n            { converted := value }\n            /// @ast-id 148 @src 0:1591:1955  \"function makeMagicBaby() public view returns (string memory) {...\"\n            function fun_makeMagicBaby() -> var__mpos\n            {\n                /// @src 0:1637:1650  \"string memory\"\n                let zero_string_memory_ptr_mpos := zero_value_for_split_string()\n                var__mpos := zero_string_memory_ptr_mpos\n                /// @src 0:1676:1685  \"magicWord\"\n                let _slot := 0x00\n                let expr_108_slot := _slot\n                /// @src 0:1670:1686  \"bytes(magicWord)\"\n                let expr_109_slot := convert_array_string_storage_to_bytes_ptr(expr_108_slot)\n                /// @src 0:1670:1693  \"bytes(magicWord).length\"\n                let expr := array_length_bytes_storage_ptr(expr_109_slot)\n                /// @src 0:1696:1697  \"0\"\n                let expr_1 := 0x00\n                /// @src 0:1670:1697  \"bytes(magicWord).length > 0\"\n                let expr_2 := gt(cleanup_uint256(expr), convert_rational_by_to_uint256(expr_1))\n                /// @src 0:1662:1735  \"require(bytes(magicWord).length > 0, \\\"No magic word has been stored yet\\\")\"\n                require_helper_stringliteral(expr_2)\n                /// @src 0:1802:1817  \"block.timestamp\"\n                let expr_3 := timestamp()\n                /// @src 0:1819:1835  \"block.prevrandao\"\n                let expr_4 := prevrandao()\n                /// @src 0:1785:1836  \"abi.encodePacked(block.timestamp, block.prevrandao)\"\n                let expr_127_mpos := allocate_unbounded()\n                let _1 := add(expr_127_mpos, 0x20)\n                let _2 := abi_encode_packed_uint256_uint256(_1, expr_3, expr_4)\n                mstore(expr_127_mpos, sub(_2, add(expr_127_mpos, 0x20)))\n                finalize_allocation(expr_127_mpos, sub(_2, expr_127_mpos))\n                /// @src 0:1775:1837  \"keccak256(abi.encodePacked(block.timestamp, block.prevrandao))\"\n                let expr_5 := keccak256(array_dataslot_bytes(expr_127_mpos), array_length_bytes(expr_127_mpos))\n                /// @src 0:1767:1838  \"uint256(keccak256(abi.encodePacked(block.timestamp, block.prevrandao)))\"\n                let expr_6 := convert_bytes32_to_uint256(expr_5)\n                /// @src 0:1841:1851  \"adjectives\"\n                let _7_slot := 0x01\n                let expr_130_slot := _7_slot\n                /// @src 0:1841:1858  \"adjectives.length\"\n                let expr_7 := array_length_array_string_storage_dyn(expr_130_slot)\n                /// @src 0:1767:1858  \"uint256(keccak256(abi.encodePacked(block.timestamp, block.prevrandao))) % adjectives.length\"\n                let expr_8 := mod_uint256(expr_6, expr_7)\n                /// @src 0:1745:1858  \"uint256 randomIndex = uint256(keccak256(abi.encodePacked(block.timestamp, block.prevrandao))) % adjectives.length\"\n                let var_randomIndex := expr_8\n                /// @src 0:1899:1908  \"magicWord\"\n                let _8_slot := 0x00\n                let expr_138_slot := _8_slot\n                /// @src 0:1918:1928  \"adjectives\"\n                let _9_slot := 0x01\n                let expr_140_slot := _9_slot\n                /// @src 0:1929:1940  \"randomIndex\"\n                let _3 := var_randomIndex\n                let expr_9 := _3\n                /// @src 0:1918:1941  \"adjectives[randomIndex]\"\n                let _4, _5 := storage_array_index_access_string__dyn(expr_140_slot, expr_9)\n                let _13_slot := _4\n                let expr_142_slot := _13_slot\n                /// @src 0:1882:1947  \"abi.encodePacked(magicWord, \\\" is \\\", adjectives[randomIndex], \\\"!\\\")\"\n                let expr_144_mpos := allocate_unbounded()\n                let _6 := add(expr_144_mpos, 0x20)\n                let _7 := abi_encode_packed_string_storage_stringliteral_d639_string_stringliteral(_6, expr_138_slot, expr_142_slot)\n                mstore(expr_144_mpos, sub(_7, add(expr_144_mpos, 0x20)))\n                finalize_allocation(expr_144_mpos, sub(_7, expr_144_mpos))\n                /// @src 0:1875:1948  \"string(abi.encodePacked(magicWord, \\\" is \\\", adjectives[randomIndex], \\\"!\\\"))\"\n                let expr_mpos := convert_array_bytes_to_string(expr_144_mpos)\n                /// @src 0:1868:1948  \"return string(abi.encodePacked(magicWord, \\\" is \\\", adjectives[randomIndex], \\\"!\\\"))\"\n                var__mpos := expr_mpos\n                leave\n            }\n            /// @src 0:214:2067  \"contract MagicWord {...\"\n            function divide_by_ceil(value) -> result\n            {\n                result := div(add(value, 31), 32)\n            }\n            function shift_left_dynamic(bits, value) -> newValue\n            { newValue := shl(bits, value) }\n            function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result\n            {\n                let shiftBits := mul(shiftBytes, 8)\n                let mask := shift_left_dynamic(shiftBits, not(0))\n                toInsert := shift_left_dynamic(shiftBits, toInsert)\n                value := and(value, not(mask))\n                result := or(value, and(toInsert, mask))\n            }\n            function prepare_store_uint256(value) -> ret\n            { ret := value }\n            function update_storage_value_uint256_to_uint256(slot, offset, value)\n            {\n                let convertedValue := convert_uint256_to_uint256(value)\n                sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_uint256(convertedValue)))\n            }\n            function zero_value_for_split_uint256() -> ret\n            { ret := 0 }\n            function storage_set_to_zero_uint256(slot, offset)\n            {\n                let zero := zero_value_for_split_uint256()\n                update_storage_value_uint256_to_uint256(slot, offset, zero)\n            }\n            function clear_storage_range_bytes1(start, end)\n            {\n                for { } lt(start, end) { start := add(start, 1) }\n                {\n                    storage_set_to_zero_uint256(start, 0)\n                }\n            }\n            function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n            {\n                if gt(len, 31)\n                {\n                    let dataArea := array_dataslot_string_storage(array)\n                    let deleteStart := add(dataArea, divide_by_ceil(startIndex))\n                    if lt(startIndex, 32) { deleteStart := dataArea }\n                    clear_storage_range_bytes1(deleteStart, add(dataArea, divide_by_ceil(len)))\n                }\n            }\n            function shift_right_unsigned_dynamic(bits, value) -> newValue\n            { newValue := shr(bits, value) }\n            function mask_bytes_dynamic(data, bytes) -> result\n            {\n                let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n                result := and(data, mask)\n            }\n            function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n            {\n                data := mask_bytes_dynamic(data, len)\n                used := or(data, mul(2, len))\n            }\n            function copy_byte_array_to_storage_from_string_to_string(slot, src)\n            {\n                let newLen := array_length_string(src)\n                if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n                let oldLen := extract_byte_array_length(sload(slot))\n                clean_up_bytearray_end_slots_string_storage(slot, oldLen, newLen)\n                let srcOffset := 0\n                srcOffset := 0x20\n                switch gt(newLen, 31)\n                case 1 {\n                    let loopEnd := and(newLen, not(0x1f))\n                    let dstPtr := array_dataslot_string_storage(slot)\n                    let i := 0\n                    for { } lt(i, loopEnd) { i := add(i, 0x20) }\n                    {\n                        sstore(dstPtr, mload(add(src, srcOffset)))\n                        dstPtr := add(dstPtr, 1)\n                        srcOffset := add(srcOffset, 32)\n                    }\n                    if lt(loopEnd, newLen)\n                    {\n                        let lastValue := mload(add(src, srcOffset))\n                        sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n                    }\n                    sstore(slot, add(mul(newLen, 2), 1))\n                }\n                default {\n                    let value := 0\n                    if newLen\n                    {\n                        value := mload(add(src, srcOffset))\n                    }\n                    sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n                }\n            }\n            function update_storage_value_offset_string_to_string(slot, value)\n            {\n                copy_byte_array_to_storage_from_string_to_string(slot, value)\n            }\n            /// @ast-id 100 @src 0:1501:1585  \"function inputMagicWord(string memory word) public {...\"\n            function fun_inputMagicWord(var_word_mpos)\n            {\n                /// @src 0:1574:1578  \"word\"\n                let _mpos := var_word_mpos\n                let expr_96_mpos := _mpos\n                /// @src 0:1562:1578  \"magicWord = word\"\n                update_storage_value_offset_string_to_string(0x00, expr_96_mpos)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212200e0965d6a4d3485bcab6e0d10e48095298c33ba1001e875842d0c8e251cc863464736f6c634300081c0033\"\n    }\n}\n",
					"hash": "c9a630a352fe9904ac0d7a71ccd5c87e3e0a7c15a2d69f180039618b0c89d620",
					"factoryDependencies": {}
				}
			}
		},
		"sources": {
			"contracts/MagicWord.sol": {
				"id": 0,
				"ast": {
					"absolutePath": "contracts/MagicWord.sol",
					"exportedSymbols": {
						"MagicWord": [
							157
						]
					},
					"id": 158,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".2",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MagicWord",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "70:143:0",
								"text": " @title MagicWord\n @dev store zah magic word get back zah magic sentence!\n @custom:dev-run-script ./scripts/deploy_with_ethers.ts"
							},
							"fullyImplemented": true,
							"id": 157,
							"linearizedBaseContracts": [
								157
							],
							"name": "MagicWord",
							"nameLocation": "223:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "magicWord",
									"nameLocation": "255:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 157,
									"src": "240:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 3,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "240:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "adjectives",
									"nameLocation": "287:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 157,
									"src": "270:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
										"typeString": "string[]"
									},
									"typeName": {
										"baseType": {
											"id": 5,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "270:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"id": 6,
										"nodeType": "ArrayTypeName",
										"src": "270:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
											"typeString": "string[]"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "322:1173:0",
										"statements": [
											{
												"expression": {
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 10,
														"name": "adjectives",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "379:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
															"typeString": "string storage ref[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"hexValue": "616d617a696e67",
																"id": 11,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "406:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_f8539fc696bd04f73891493700ec2d170b088f79c2a2e9e7f76261960fe40929",
																	"typeString": "literal_string \"amazing\""
																},
																"value": "amazing"
															},
															{
																"hexValue": "617765736f6d65",
																"id": 12,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "417:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d17d1d80d5d7a434b56ee59bc2ed8f0fd2a890dfba40fc63344b9c3654c935ee",
																	"typeString": "literal_string \"awesome\""
																},
																"value": "awesome"
															},
															{
																"hexValue": "6272696c6c69616e74",
																"id": 13,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "428:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a3fd1d08b6a60a7b87db8fab8c204c18f4f5c424b2adce1ac22549fbd176b2ef",
																	"typeString": "literal_string \"brilliant\""
																},
																"value": "brilliant"
															},
															{
																"hexValue": "62656175746966756c",
																"id": 14,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "441:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_8ba2c0afb7b1f61861859c622e5f304cadb3d405571f1ad8f0cc54d6814a4c89",
																	"typeString": "literal_string \"beautiful\""
																},
																"value": "beautiful"
															},
															{
																"hexValue": "6272617665",
																"id": 15,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "454:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_e3e90daa6a58ae029a7000d6cc00698775d4b20492e71d5126fada73256f0f26",
																	"typeString": "literal_string \"brave\""
																},
																"value": "brave"
															},
															{
																"hexValue": "626f6c64",
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "476:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_1dda021d0a424dcb3ec1956b8a8242f8517d0e52c486bd98f6f2494e0b453723",
																	"typeString": "literal_string \"bold\""
																},
																"value": "bold"
															},
															{
																"hexValue": "627269676874",
																"id": 17,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "484:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_b8cafa17a973c2782862a1d8d21def2351c001583aebec26db163cccdbb5b7a9",
																	"typeString": "literal_string \"bright\""
																},
																"value": "bright"
															},
															{
																"hexValue": "63616c6d",
																"id": 18,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "494:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d97fa8a7daee87d313c29ec9b478b3b4bc3118051c7625d0f2fc2ee7acc76406",
																	"typeString": "literal_string \"calm\""
																},
																"value": "calm"
															},
															{
																"hexValue": "636861726d696e67",
																"id": 19,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "502:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4fbdd45f5c4c780ffb76ed071e1ce5d54c26bf7566871213f1d327e78a08fb7a",
																	"typeString": "literal_string \"charming\""
																},
																"value": "charming"
															},
															{
																"hexValue": "636865657266756c",
																"id": 20,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "514:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_90ef6ec615b551598056285df783f91a63cea34aadf77653161fcef13dd34e69",
																	"typeString": "literal_string \"cheerful\""
																},
																"value": "cheerful"
															},
															{
																"hexValue": "636c65766572",
																"id": 21,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "539:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_2ea4ed0ce53f131af414c418adc10a49b97c1e5ac17b578e486542a24939d749",
																	"typeString": "literal_string \"clever\""
																},
																"value": "clever"
															},
															{
																"hexValue": "636f6c6f7266756c",
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "549:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_ca187a0a5c09dd0c4093639a372e92eaff2f1a12252fff1411f153c440c5084e",
																	"typeString": "literal_string \"colorful\""
																},
																"value": "colorful"
															},
															{
																"hexValue": "636f6d666f727461626c65",
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "561:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_49cda4a3dbd12d6fb5336bb26bdcc463622acf8098818055aba4d7cc2e5f65b0",
																	"typeString": "literal_string \"comfortable\""
																},
																"value": "comfortable"
															},
															{
																"hexValue": "636f6e666964656e74",
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "576:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_89edccfc23d8808df57bf67342ee932f75d02d5c1c2b0cda1bb5676c2331ca8c",
																	"typeString": "literal_string \"confident\""
																},
																"value": "confident"
															},
															{
																"hexValue": "636f6e7369646572617465",
																"id": 25,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "589:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_8d266ff1e2ad150484992fb7b8ab7a55aad186c72d4f02d5f16b0d02f505904e",
																	"typeString": "literal_string \"considerate\""
																},
																"value": "considerate"
															},
															{
																"hexValue": "636f6f6c",
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "617:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_678c189fde5058554d934d6af17e41750fa2a94b61371c5ea958a7595e146324",
																	"typeString": "literal_string \"cool\""
																},
																"value": "cool"
															},
															{
																"hexValue": "636f75726167656f7573",
																"id": 27,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "625:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_67f94db9ff3a85d6e55122058e8ddc74619775d114f31e78e411c9ea5b264886",
																	"typeString": "literal_string \"courageous\""
																},
																"value": "courageous"
															},
															{
																"hexValue": "6372656174697665",
																"id": 28,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "639:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d08ac36f519ee359a2a193611e1643e0d2c9d4ad9631f683fccd3b4a13a5b717",
																	"typeString": "literal_string \"creative\""
																},
																"value": "creative"
															},
															{
																"hexValue": "637572696f7573",
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "651:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_e9c4fceab5083dfebe07d8696a1281dcece88f36770ecc5e10300ebe6b4c46a1",
																	"typeString": "literal_string \"curious\""
																},
																"value": "curious"
															},
															{
																"hexValue": "646172696e67",
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "662:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4825842dc9b28fa3667c9ae8fc1ab0085990e0ec28564abf43236904483b92a4",
																	"typeString": "literal_string \"daring\""
																},
																"value": "daring"
															},
															{
																"hexValue": "64617a7a6c696e67",
																"id": 31,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "685:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_45f58f1b8249771cda53daeee63ca67300dd8092dfe0a7fc709cdfcfb4cc1172",
																	"typeString": "literal_string \"dazzling\""
																},
																"value": "dazzling"
															},
															{
																"hexValue": "64656c6967687466756c",
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "697:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_e5bd8e18fa682c814a6117f0308defadda65df120d272f2f40913a6137f15bfa",
																	"typeString": "literal_string \"delightful\""
																},
																"value": "delightful"
															},
															{
																"hexValue": "64657465726d696e6564",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "711:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_1758b5795aee2fffe4ad961402d0eb005f1bd7e678a879f6533a09c5ea1422fe",
																	"typeString": "literal_string \"determined\""
																},
																"value": "determined"
															},
															{
																"hexValue": "64696c6967656e74",
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "725:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_604e9638708be1d29143adc17fde6da35d723f550eec6d2340b7efb6343ba7e4",
																	"typeString": "literal_string \"diligent\""
																},
																"value": "diligent"
															},
															{
																"hexValue": "64796e616d6963",
																"id": 35,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "737:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_47a6130681d8220ba3d4c0a50de139d22039c5629024c598d023ccca8470c25c",
																	"typeString": "literal_string \"dynamic\""
																},
																"value": "dynamic"
															},
															{
																"hexValue": "6561676572",
																"id": 36,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "761:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_5d742ddfa6e33cb44b9bb8e00b4b780a62f4d58ac6c8ba7fe64e7b6abd095653",
																	"typeString": "literal_string \"eager\""
																},
																"value": "eager"
															},
															{
																"hexValue": "656c6567616e74",
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "770:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_8250c8534ce6b389ce6914b940b123a7cd0a561078463ff8213be6637a9f2a16",
																	"typeString": "literal_string \"elegant\""
																},
																"value": "elegant"
															},
															{
																"hexValue": "656e6368616e74696e67",
																"id": 38,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "781:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_b26ef7ac450e4259ffec847b7042895abd043d1fa2f0e5d9a3c9aa15a0a317fb",
																	"typeString": "literal_string \"enchanting\""
																},
																"value": "enchanting"
															},
															{
																"hexValue": "656e65726765746963",
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "795:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_340775973e4af5fbebf2b05186e56c29c379dc08a9c5ac7038026a379ea1d163",
																	"typeString": "literal_string \"energetic\""
																},
																"value": "energetic"
															},
															{
																"hexValue": "656e74687573696173746963",
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "808:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_443834da146663a6bf65d561cca72e7ab9b290fc95aacea468f7b53b61beab94",
																	"typeString": "literal_string \"enthusiastic\""
																},
																"value": "enthusiastic"
															},
															{
																"hexValue": "657863656c6c656e74",
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "837:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_3a5055d32a4e4f382c7c816b495364f339a6ce52c2a1e6e65de50a184ca87d86",
																	"typeString": "literal_string \"excellent\""
																},
																"value": "excellent"
															},
															{
																"hexValue": "657863657074696f6e616c",
																"id": 42,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "850:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_fb02a533aee926472ee042877cd8b1ac8e3dd371d9c35171c3cdbe98d8cfb87b",
																	"typeString": "literal_string \"exceptional\""
																},
																"value": "exceptional"
															},
															{
																"hexValue": "6578636974696e67",
																"id": 43,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "865:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_60e423ce90b2ef223caa101fba3f62b44e53e70d63c5cc78bfaa977d1fe57d89",
																	"typeString": "literal_string \"exciting\""
																},
																"value": "exciting"
															},
															{
																"hexValue": "65787472616f7264696e617279",
																"id": 44,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "877:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_741b6b90a80de8a19916f28da33b3c27f83876709a762e05a0e8fcd4d83fb471",
																	"typeString": "literal_string \"extraordinary\""
																},
																"value": "extraordinary"
															},
															{
																"hexValue": "666162756c6f7573",
																"id": 45,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "894:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_cfb86409eb5056307c135768e4d03aed35b019fac66747080b855446b0cc23ba",
																	"typeString": "literal_string \"fabulous\""
																},
																"value": "fabulous"
															},
															{
																"hexValue": "66616e746173746963",
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "919:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_6ca5eba18837ac3249c4d6af5b60a3d95993b2c169b323cee40b88525cb3a4f3",
																	"typeString": "literal_string \"fantastic\""
																},
																"value": "fantastic"
															},
															{
																"hexValue": "666561726c657373",
																"id": 47,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "932:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_359756020d82d6521114c28e3ef96ae1bc00d6f6183f1e8445dab691814d6f1e",
																	"typeString": "literal_string \"fearless\""
																},
																"value": "fearless"
															},
															{
																"hexValue": "667269656e646c79",
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "944:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_0f56f8148484f4b851a82f19103d8d86e0af627c6fe1ddc8ed1d5f73c6bf97d9",
																	"typeString": "literal_string \"friendly\""
																},
																"value": "friendly"
															},
															{
																"hexValue": "66756e",
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "956:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4fbce0d2ce0771a07dea6fae20df3b3e04115f10ae5c4f6c8735d3941568a146",
																	"typeString": "literal_string \"fun\""
																},
																"value": "fun"
															},
															{
																"hexValue": "66756e6e79",
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "963:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_54ef6a7164821545c481efa280eb15da756f348426bba625692a485daae58a48",
																	"typeString": "literal_string \"funny\""
																},
																"value": "funny"
															},
															{
																"hexValue": "67656e65726f7573",
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "985:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_229411fc5dd07eb6f9dcbd12ff2f9c026c544f8179401f6e1b22ba7522b17d87",
																	"typeString": "literal_string \"generous\""
																},
																"value": "generous"
															},
															{
																"hexValue": "67656e746c65",
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "997:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_fb3b406c243f6006ec8c5237fc9da52e17e9cd109f1bc906c90d3391b78d6793",
																	"typeString": "literal_string \"gentle\""
																},
																"value": "gentle"
															},
															{
																"hexValue": "676c6f72696f7573",
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1007:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_dfe600352e0793e9e57aa032c4df6f3b4835fd9c16b11a63d687bec5e95d8c9e",
																	"typeString": "literal_string \"glorious\""
																},
																"value": "glorious"
															},
															{
																"hexValue": "676f6f64",
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1019:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_36a6e212ba33011567af160e4533b46661b3b9cf6ae6d98a38004bb91bf4525d",
																	"typeString": "literal_string \"good\""
																},
																"value": "good"
															},
															{
																"hexValue": "676f7267656f7573",
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1027:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_05039ae8bce6104ea07745d54158d1f4de08f0bef2923ff48869648245a4c895",
																	"typeString": "literal_string \"gorgeous\""
																},
																"value": "gorgeous"
															},
															{
																"hexValue": "677261636566756c",
																"id": 56,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1052:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_ec6282f05924f0cd8b1907fa280d4c2f1bd95f161aff0750879038cc02e3c351",
																	"typeString": "literal_string \"graceful\""
																},
																"value": "graceful"
															},
															{
																"hexValue": "6772656174",
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1064:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_9e0d771b061a47b78282674a30d48ff21ebee607f498cb1bf644c69f8c43cc09",
																	"typeString": "literal_string \"great\""
																},
																"value": "great"
															},
															{
																"hexValue": "6861707079",
																"id": 58,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1073:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_73972c90697232c4dedc5c98e01645d84378e838a42e730ab95623a361262eff",
																	"typeString": "literal_string \"happy\""
																},
																"value": "happy"
															},
															{
																"hexValue": "6861726d6f6e696f7573",
																"id": 59,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1082:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_ebe0c4c551cbcb5e20ae7dd0780f3a8e389f469b714f3cae36da94907eada7e6",
																	"typeString": "literal_string \"harmonious\""
																},
																"value": "harmonious"
															},
															{
																"hexValue": "68656c7066756c",
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1096:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_0c64da3764320ce6d9d2191635f418a025b0d4357e8329a8d9baf5bf3ff05d5b",
																	"typeString": "literal_string \"helpful\""
																},
																"value": "helpful"
															},
															{
																"hexValue": "686f6e657374",
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1120:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a3d2e66837c314a50a6517b97373e84cc0b80e4823fd25e48fc87dbc2448d43c",
																	"typeString": "literal_string \"honest\""
																},
																"value": "honest"
															},
															{
																"hexValue": "686f6e6f7261626c65",
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1130:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_aa1458e417d5dc08695c4ddb2a89d5603a1143796d156147e11f5652f9ccc695",
																	"typeString": "literal_string \"honorable\""
																},
																"value": "honorable"
															},
															{
																"hexValue": "68756d6f726f7573",
																"id": 63,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1143:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_bfa1d529f50b58be841623a054c16436ab3e699549f0127cf5300b117c1ec861",
																	"typeString": "literal_string \"humorous\""
																},
																"value": "humorous"
															},
															{
																"hexValue": "696d6167696e6174697665",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1155:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_507741418687545d6ad6f09b81bdf932ec031df53ffa602e5138c45ce413e3a0",
																	"typeString": "literal_string \"imaginative\""
																},
																"value": "imaginative"
															},
															{
																"hexValue": "696d7072657373697665",
																"id": 65,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1170:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_eda3667290cd825d071e1db7ac257822b014803f79530e6121a30fd916ac6daf",
																	"typeString": "literal_string \"impressive\""
																},
																"value": "impressive"
															},
															{
																"hexValue": "696e646570656e64656e74",
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1197:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_1db8469d38c3b563715d782169131487fb0b3feeefd9e2496cb34a83c62b6875",
																	"typeString": "literal_string \"independent\""
																},
																"value": "independent"
															},
															{
																"hexValue": "696e6e6f766174697665",
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1212:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d95ad6ec74b993d119302fb06dfe942c201bf5e3794b8cc36e5b8006ff52617b",
																	"typeString": "literal_string \"innovative\""
																},
																"value": "innovative"
															},
															{
																"hexValue": "696e74656c6c6967656e74",
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1226:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_f4c0a54006aa5dbaf5702b65a1fd76dce8ae5cd53329a812f270ef4d8705ecff",
																	"typeString": "literal_string \"intelligent\""
																},
																"value": "intelligent"
															},
															{
																"hexValue": "696e746572657374696e67",
																"id": 69,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1241:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4920577c79c3da44c0b764bd662c118d8c08e36828035d5784a89942c45b154d",
																	"typeString": "literal_string \"interesting\""
																},
																"value": "interesting"
															},
															{
																"hexValue": "6a6f7966756c",
																"id": 70,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1256:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_79413bb1f6f3f22a4de6714dff289b999da9ddf3ca0d6a1024822a73b4afa806",
																	"typeString": "literal_string \"joyful\""
																},
																"value": "joyful"
															},
															{
																"hexValue": "6b696e64",
																"id": 71,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1279:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_9d21e95f75d8246fa345807f5858f6826688cb57e7d2dca067d081bfb485436d",
																	"typeString": "literal_string \"kind\""
																},
																"value": "kind"
															},
															{
																"hexValue": "6b6e6f776c6564676561626c65",
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1287:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5bcb123821ba0b351288b17ebe947acc02ca98a2b92da9ba0908595cc7c53ae",
																	"typeString": "literal_string \"knowledgeable\""
																},
																"value": "knowledgeable"
															},
															{
																"hexValue": "6c6976656c79",
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1304:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_bbb1765e2c0c982d797b8b8b5c229d7e001225ee01e364b4f74dd7b5cf9a0aa6",
																	"typeString": "literal_string \"lively\""
																},
																"value": "lively"
															},
															{
																"hexValue": "6c6f76656c79",
																"id": 74,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1314:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c66d55636c700a95b913ec36cb07f84544ff066839f7bf739c989b21fb5fe7e8",
																	"typeString": "literal_string \"lovely\""
																},
																"value": "lovely"
															},
															{
																"hexValue": "6c6f79616c",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1324:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_beb3bb479d917d323f2cd58fa6e3cadfccbf1814af72664206c4653d80d68927",
																	"typeString": "literal_string \"loyal\""
																},
																"value": "loyal"
															},
															{
																"hexValue": "6c75636b79",
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1346:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_cb3bb2448a55cc8bac9408a42952c598f82c312a96fd62d056539f496cc1b315",
																	"typeString": "literal_string \"lucky\""
																},
																"value": "lucky"
															},
															{
																"hexValue": "6d61676e69666963656e74",
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1355:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_b733387926e34773ce0792b11688f4b41772e2e5c1de7c342aaa05c3c48abf76",
																	"typeString": "literal_string \"magnificent\""
																},
																"value": "magnificent"
															},
															{
																"hexValue": "6d617276656c6f7573",
																"id": 78,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1370:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_528cb3e929b0371e225dcc039025f3590cae2768c5f059242dcf2328b6197b65",
																	"typeString": "literal_string \"marvelous\""
																},
																"value": "marvelous"
															},
															{
																"hexValue": "6d6967687479",
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1383:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_077a2c6891c562d92dcfda00b4f01a12c616d93dc198f92a6f81161f31872b76",
																	"typeString": "literal_string \"mighty\""
																},
																"value": "mighty"
															},
															{
																"hexValue": "6d7973746572696f7573",
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1393:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_0a05f5e137cf2e66d152a203c7c8d8cfb1da44a554e6dccea6dea8e58adfa3df",
																	"typeString": "literal_string \"mysterious\""
																},
																"value": "mysterious"
															},
															{
																"hexValue": "6e696365",
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1420:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_1280a9a25ec8be698522de1ed3132d0f5f6a5bcc5bbee77d6b79247ef90f6996",
																	"typeString": "literal_string \"nice\""
																},
																"value": "nice"
															},
															{
																"hexValue": "6f75747374616e64696e67",
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1428:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27bdac11d27737d363759b4a9efb3465e5cfaab97eeee8edc45ee5265240e9d0",
																	"typeString": "literal_string \"outstanding\""
																},
																"value": "outstanding"
															},
															{
																"hexValue": "70617373696f6e617465",
																"id": 83,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1443:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_6425ad54ec29be4fbcd447c1c620190499803b3d823ed94da93c689e9a317754",
																	"typeString": "literal_string \"passionate\""
																},
																"value": "passionate"
															},
															{
																"hexValue": "706561636566756c",
																"id": 84,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1457:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a56c97397ce590720eec13ecface208eb95f1821bc23d59b09e79984d47f66fd",
																	"typeString": "literal_string \"peaceful\""
																},
																"value": "peaceful"
															},
															{
																"hexValue": "70657266656374",
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1469:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_0f3ab803626f3a3f20eade33123aaa20977f2e627974c577d21c04f561ec4e21",
																	"typeString": "literal_string \"perfect\""
																},
																"value": "perfect"
															}
														],
														"id": 86,
														"isConstant": false,
														"isInlineArray": true,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "392:1096:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_string_memory_ptr_$75_memory_ptr",
															"typeString": "string memory[75] memory"
														}
													},
													"src": "379:1109:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
														"typeString": "string storage ref[] storage ref"
													}
												},
												"id": 88,
												"nodeType": "ExpressionStatement",
												"src": "379:1109:0"
											}
										]
									},
									"id": 90,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "319:2:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "322:0:0"
									},
									"scope": 157,
									"src": "308:1187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "1552:33:0",
										"statements": [
											{
												"expression": {
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 95,
														"name": "magicWord",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "1562:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 96,
														"name": "word",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "1574:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1562:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "1562:16:0"
											}
										]
									},
									"functionSelector": "bf462267",
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "inputMagicWord",
									"nameLocation": "1510:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "word",
												"nameLocation": "1539:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "1525:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 91,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1524:20:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1552:0:0"
									},
									"scope": 157,
									"src": "1501:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "1652:303:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 108,
																			"name": "magicWord",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4,
																			"src": "1676:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage",
																				"typeString": "string storage ref"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_storage",
																				"typeString": "string storage ref"
																			}
																		],
																		"id": 107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1670:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 106,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "1670:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1670:16:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes storage pointer"
																	}
																},
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1687:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1670:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1696:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1670:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f206d6167696320776f726420686173206265656e2073746f72656420796574",
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1699:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_89230867f4b3b162518336e1784c21848da09a0d13eff480a998ac92f7e2abde",
																"typeString": "literal_string \"No magic word has been stored yet\""
															},
															"value": "No magic word has been stored yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_89230867f4b3b162518336e1784c21848da09a0d13eff480a998ac92f7e2abde",
																"typeString": "literal_string \"No magic word has been stored yet\""
															}
														],
														"id": 105,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1662:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1662:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "1662:73:0"
											},
											{
												"assignments": [
													117
												],
												"declarations": [
													{
														"constant": false,
														"id": 117,
														"mutability": "mutable",
														"name": "randomIndex",
														"nameLocation": "1753:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 147,
														"src": "1745:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 116,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1745:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 133,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 123,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "1802:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 124,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1808:9:0",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "1802:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"expression": {
																					"id": 125,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "1819:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 126,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1825:10:0",
																				"memberName": "prevrandao",
																				"nodeType": "MemberAccess",
																				"src": "1819:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 121,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "1785:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 122,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "1789:12:0",
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "1785:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1785:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 120,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "1775:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1775:62:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1767:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 118,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1767:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1767:71:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"expression": {
															"id": 130,
															"name": "adjectives",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "1841:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
																"typeString": "string storage ref[] storage ref"
															}
														},
														"id": 131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1852:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1841:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1767:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1745:113:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 138,
																	"name": "magicWord",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4,
																	"src": "1899:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																{
																	"hexValue": "20697320",
																	"id": 139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1910:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d639b3d9a5b324c23c8db5eab991fa931cd6d5bfb6cd156a388f5ec87ff08094",
																		"typeString": "literal_string \" is \""
																	},
																	"value": " is "
																},
																{
																	"baseExpression": {
																		"id": 140,
																		"name": "adjectives",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 7,
																		"src": "1918:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
																			"typeString": "string storage ref[] storage ref"
																		}
																	},
																	"id": 142,
																	"indexExpression": {
																		"id": 141,
																		"name": "randomIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 117,
																		"src": "1929:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1918:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																{
																	"hexValue": "21",
																	"id": 143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1943:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_3275a893b2c93461554cf2a4dd7f413d56decdd6f3fdf0589dbb8bc4fd742386",
																		"typeString": "literal_string \"!\""
																	},
																	"value": "!"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d639b3d9a5b324c23c8db5eab991fa931cd6d5bfb6cd156a388f5ec87ff08094",
																		"typeString": "literal_string \" is \""
																	},
																	{
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_3275a893b2c93461554cf2a4dd7f413d56decdd6f3fdf0589dbb8bc4fd742386",
																		"typeString": "literal_string \"!\""
																	}
																],
																"expression": {
																	"id": 136,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1882:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 137,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1886:12:0",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1882:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1882:65:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1875:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 134,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1875:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1875:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 104,
												"id": 146,
												"nodeType": "Return",
												"src": "1868:80:0"
											}
										]
									},
									"functionSelector": "84ac83cc",
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "makeMagicBaby",
									"nameLocation": "1600:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1613:2:0"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "1637:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 102,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1637:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1636:15:0"
									},
									"scope": 157,
									"src": "1591:364:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 155,
										"nodeType": "Block",
										"src": "2032:33:0",
										"statements": [
											{
												"expression": {
													"id": 153,
													"name": "magicWord",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4,
													"src": "2049:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 152,
												"id": 154,
												"nodeType": "Return",
												"src": "2042:16:0"
											}
										]
									},
									"functionSelector": "68a0c969",
									"id": 156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentMagicWord",
									"nameLocation": "1974:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:2:0"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "2017:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 150,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2017:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2016:15:0"
									},
									"scope": 157,
									"src": "1965:100:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 158,
							"src": "214:1853:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:2030:0"
				}
			}
		},
		"errors": [],
		"version": "0.8.28",
		"long_version": "0.8.28+commit.7893614a.Emscripten.clang",
		"revive_version": "0.1.0-dev.12+commit.66f9a4d.llvm-18.1.8"
	}
}